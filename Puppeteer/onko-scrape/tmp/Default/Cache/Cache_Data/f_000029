{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/webapp/app/index.module.scss?5b31","webpack:///./src/main/webapp/app/components/citationListGroupItem.module.scss","webpack:///./node_modules/moment/locale sync \\b\\B","webpack:///./src/main/webapp/app/index.module.scss","webpack:///./src/main/webapp/app/components/downloadButton/DownloadButton.module.scss","webpack:///./src/main/webapp/app/components/userMessager/styles.module.scss","webpack:///./src/main/webapp/app/components/searchOption/SearchOption.module.scss","webpack:///./src/main/webapp/app/pages/userManagement/UserDetailsPage.module.scss?560d","webpack:///./src/main/webapp/app/components/oncokbSearch/index.module.scss","webpack:///./src/main/webapp/app/components/accountMessage/styles.module.scss","webpack:///./src/main/webapp/app/components/highlightLinkButton/HighlightLinkButton.module.scss","webpack:///./src/main/webapp/app/components/levelButton/LevelButton.module.scss","webpack:///./src/main/webapp/app/pages/alterationPage/AlterationPage.module.scss","webpack:///./src/main/webapp/app/pages/genePage/GenePage.module.scss","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/components/listGroupItem.module.scss","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/components/main.module.scss","webpack:///./src/main/webapp/app/pages/annotationPage/index.module.scss","webpack:///./src/main/webapp/app/components/dividerWithInfo/DividerWithInfo.module.scss","webpack:///./src/main/webapp/app/pages/userManagement/UserDetailsPage.module.scss","webpack:///./src/main/webapp/app/shared/list/styles.module.scss","webpack:///./src/main/webapp/app/pages/companyManagement/CompanyDetailsPage.module.scss","webpack:///./src/main/webapp/app/pages/newsPage/main.module.scss","webpack:///./src/main/webapp/app/components/licenseAgreement/licenseAgreement.module.scss","webpack:///./src/main/webapp/app/pages/yearEndSummaryPage/main.module.scss","webpack:///./src/main/webapp/app/components/loadingIndicator/LoadingIndicator.tsx","webpack:///./src/main/webapp/content/images/msk-logo-white.svg","webpack:///./src/main/webapp/content/images/msk-icon-white.svg","webpack:///./src/main/webapp/app/components/feedback/types.ts","webpack:///./src/main/webapp/app/config/theme.ts","webpack:///./src/main/webapp/app/shared/image/OptimizedImage.tsx","webpack:///./src/main/webapp/app/components/MskccLogo.tsx","webpack:///./src/main/webapp/app/config/constants.tsx","webpack:///./src/main/webapp/app/components/CitationText.tsx","webpack:///./src/main/webapp/app/shared/links/ContactLink.tsx","webpack:///./src/main/webapp/app/shared/links/Linkout.tsx","webpack:///./src/main/webapp/app/shared/icons/ExternalLinkIcon.tsx","webpack:///./src/main/webapp/app/shared/utils/ReactTableUtils.ts","webpack:///./src/main/webapp/app/components/LevelWithDescription.tsx","webpack:///./src/main/webapp/app/shared/utils/Utils.tsx","webpack:///./src/main/webapp/app/components/PmidItem.tsx","webpack:///./src/main/webapp/app/pages/LevelOfEvidencePage.tsx","webpack:///./src/main/webapp/app/components/ArticleAbstractItem.tsx","webpack:///./src/main/webapp/app/components/CitationTooltip.tsx","webpack:///./src/main/webapp/app/shared/icons/InfoIcon.tsx","webpack:///./src/main/webapp/app/components/downloadButton/DownloadButton.tsx","webpack:///./src/main/webapp/app/shared/links/LevelOfEvidencePageLink.tsx","webpack:///./src/main/webapp/app/shared/links/PMIDLink.tsx","webpack:///./src/main/webapp/app/shared/utils/UrlUtils.tsx","webpack:///./src/main/webapp/app/components/Footer.tsx","webpack:///./src/main/webapp/app/pages/menus/menu-item.tsx","webpack:///./src/main/webapp/app/pages/menus/account.tsx","webpack:///./src/main/webapp/app/components/userMessager/UserMessage.tsx","webpack:///./src/main/webapp/app/shared/utils/DevUtils.ts","webpack:///./src/main/webapp/app/shared/api/clientInstance.ts","webpack:///./src/main/webapp/app/shared/api/generated/API.ts","webpack:///./src/main/webapp/app/shared/utils/NotificationUtils.tsx","webpack:///./src/main/webapp/app/shared/utils/FormValidationUtils.tsx","webpack:///./src/main/webapp/app/components/feedback/FeedbackForm.tsx","webpack:///./src/main/webapp/app/components/searchOption/SearchOption.tsx","webpack:///./src/main/webapp/app/components/feedback/FeedbackIcon.tsx","webpack:///./src/main/webapp/app/appConfig.ts","webpack:///./src/main/webapp/app/shared/api/oncokbPrivateClientInstance.ts","webpack:///./src/main/webapp/app/shared/api/generated/OncoKbPrivateAPI.ts","webpack:///./src/main/webapp/app/components/SimpleTable.tsx","webpack:///./src/main/webapp/app/components/oncokbSearch/SearchInfoIcon.tsx","webpack:///./src/main/webapp/app/components/oncokbSearch/OncoKBSearch.tsx","webpack:///./src/main/webapp/app/indexUtils.tsx","webpack:///./src/main/webapp/app/shared/alert/ErrorAlertUtils.ts","webpack:///./src/main/webapp/app/store/AuthenticationStore.ts","webpack:///./src/main/webapp/app/components/accountMessage/AccountMessage.tsx","webpack:///./src/main/webapp/app/components/Header.tsx","webpack:///./src/main/webapp/app/shared/error/error-boundary.tsx","webpack:///./src/main/webapp/app/shared/error/error-boundary-route.tsx","webpack:///./src/main/webapp/app/components/SmallPageContainer.tsx","webpack:///./src/main/webapp/app/shared/button/LoadingButton.tsx","webpack:///./src/main/webapp/app/shared/api/errorMessages.ts","webpack:///./src/main/webapp/app/shared/recaptcha/recaptcha.ts","webpack:///./src/main/webapp/app/components/login/LoginPage.tsx","webpack:///./src/main/webapp/app/components/login/logout.tsx","webpack:///./src/main/webapp/app/shared/auth/AuthUtils.ts","webpack:///./src/main/webapp/app/shared/auth/private-route.tsx","webpack:///./src/main/webapp/app/components/highlightLinkButton/HighlightLinkButton.tsx","webpack:///./src/main/webapp/app/components/HomePageNumber.tsx","webpack:///./src/main/webapp/app/components/levelButton/LevelButton.tsx","webpack:///./src/main/webapp/app/pages/genePage/FdaUtils.tsx","webpack:///./src/main/webapp/app/pages/HomePage.tsx","webpack:///./src/main/webapp/app/components/oncokbTable/OncoKBTable.tsx","webpack:///./src/main/webapp/app/shared/api/oncokbClientInstance.ts","webpack:///./src/main/webapp/app/shared/api/generated/OncoKbAPI.ts","webpack:///./src/main/webapp/app/components/downloadButtonWithPromise/DownloadButtonWithPromise.tsx","webpack:///./src/main/webapp/app/shared/texts/GeneAliasesDescription.tsx","webpack:///./src/main/webapp/app/pages/CancerGenesPage.tsx","webpack:///./src/main/webapp/app/components/authDownloadButton/AuthDownloadButton.tsx","webpack:///./src/main/webapp/app/pages/actionableGenesPage/LevelSelectionRow.tsx","webpack:///./src/main/webapp/app/shared/dropdown/CancerTypeSelect.tsx","webpack:///./src/main/webapp/app/shared/texts/ShortenTextWithTooltip.tsx","webpack:///./src/main/webapp/app/pages/actionableGenesPage/ActionableGenesPage.tsx","webpack:///./src/main/webapp/app/components/oncokbMutationMapper/FilterUtils.ts","webpack:///./src/main/webapp/app/pages/genePage/GeneInfo.tsx","webpack:///./src/main/webapp/app/pages/annotationPage/Utils.ts","webpack:///./src/main/webapp/app/pages/annotationPage/AlterationInfo.tsx","webpack:///./src/main/webapp/app/shared/icons/ShowHideToggleIcon.tsx","webpack:///./src/main/webapp/app/shared/texts/ShowHideText.tsx","webpack:///./src/main/webapp/app/components/ReportIssue.tsx","webpack:///./src/main/webapp/app/pages/genePage/GenePageTable.tsx","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/lib/urls.ts","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/components/ArticleAbstractItem.tsx","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/components/PmidItem.tsx","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/lib/StringUtils.ts","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/components/ReferenceList.tsx","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/components/RefComponent.tsx","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/components/SummaryWithRefs.tsx","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/components/LongText.tsx","webpack:///./src/main/webapp/app/pages/annotationPage/TabDescriptor.tsx","webpack:///./src/main/webapp/app/pages/annotationPage/DescriptionTooltip.tsx","webpack:///./src/main/webapp/app/pages/annotationPage/AlterationTableTabs.tsx","webpack:///./src/main/webapp/app/shared/utils/TempAnnotationUtils.ts","webpack:///./src/main/webapp/app/pages/annotationPage/AlterationView.tsx","webpack:///./src/main/webapp/app/pages/annotationPage/ImplicationDescriptionCell.tsx","webpack:///./src/main/webapp/app/pages/annotationPage/CancerTypeViewTable.tsx","webpack:///./src/main/webapp/app/pages/annotationPage/AnnotationPage.tsx","webpack:///./src/main/webapp/app/pages/annotationPage/CancerTypeView.tsx","webpack:///./src/main/webapp/content/images/gn_logo.png","webpack:///./src/main/webapp/content/images/revue_logo.png","webpack:///./src/main/webapp/app/pages/annotationPage/PowerBySource.tsx","webpack:///./src/main/webapp/app/pages/annotationPage/AnnotationBreadcrumbs.tsx","webpack:///./src/main/webapp/app/shared/alert/UnknownGeneAlert.tsx","webpack:///./src/main/webapp/app/pages/annotationPage/MutationEffectDescription.tsx","webpack:///./src/main/webapp/app/store/AnnotationStore.ts","webpack:///./src/main/webapp/app/components/barChart/BarChartToolTip.tsx","webpack:///./src/main/webapp/app/components/barChart/BarChart.tsx","webpack:///./src/main/webapp/app/components/MskimpactLink.tsx","webpack:///./src/main/webapp/app/pages/genePage/GeneAdditionalInfoTable.tsx","webpack:///./src/main/webapp/app/components/oncokbMutationMapper/OncogenicityCheckboxes.tsx","webpack:///./src/main/webapp/app/components/oncokbMutationMapper/OncokbMutationMapper.tsx","webpack:///./src/main/webapp/app/pages/genePage/OncokbLollipopPlot.tsx","webpack:///./src/main/webapp/app/pages/genePage/GenePage.tsx","webpack:///./src/main/webapp/app/pages/alterationPage/AlterationPage.tsx","webpack:///./src/main/webapp/app/pages/account/AccountUtils.ts","webpack:///./src/main/webapp/app/components/dateSelector/DateSelector.tsx","webpack:///./src/main/webapp/app/components/dividerWithInfo/DividerWithInfo.tsx","webpack:///./src/main/webapp/app/pages/userManagement/UserDetailsPage.tsx","webpack:///./src/main/webapp/app/components/calendarButton/CalendarButton.tsx","webpack:///./src/main/webapp/app/shared/button/CopyButton.tsx","webpack:///./src/main/webapp/app/components/tokenInputGroups/TokenInputGroups.tsx","webpack:///./src/main/webapp/app/pages/AccountPage.tsx","webpack:///./src/main/webapp/app/shared/texts/MessageToContact.tsx","webpack:///./src/main/webapp/app/components/account/ActivateAccount.tsx","webpack:///./src/main/webapp/app/components/account/PasswordResetInit.tsx","webpack:///./src/main/webapp/app/shared/password/password-strength-bar.tsx","webpack:///./src/main/webapp/app/shared/alert/ErrorAlert.tsx","webpack:///./src/main/webapp/app/components/account/PasswordResetFinish.tsx","webpack:///./src/main/webapp/app/shared/error/page-not-found.tsx","webpack:///./src/main/webapp/app/components/account/AccountPassword.tsx","webpack:///./src/main/webapp/app/shared/modal/SimpleConfirmModal.tsx","webpack:///./src/main/webapp/app/shared/table/EmailTable.tsx","webpack:///./src/main/webapp/app/pages/sendEmails/SendEmailsPage.tsx","webpack:///./src/main/webapp/app/shared/modal/UserStatusModal.tsx","webpack:///./src/main/webapp/app/components/newAccountForm/NewAccountForm.tsx","webpack:///./src/main/webapp/app/shared/texts/LicenseExplanation.tsx","webpack:///./src/main/webapp/app/components/LicenseSelection.tsx","webpack:///./src/main/webapp/app/shared/links/LicenseInquireLink.tsx","webpack:///./src/main/webapp/app/shared/select/FormSelectWithLabelField.tsx","webpack:///./src/main/webapp/app/pages/CreateAccountPage.tsx","webpack:///./src/main/webapp/app/pages/usageAnalysisPage/UsageToggleGroup.tsx","webpack:///./src/main/webapp/app/components/oncokbTable/HeaderConstants.tsx","webpack:///./src/main/webapp/app/shared/texts/UsageText.tsx","webpack:///./src/main/webapp/app/pages/usageAnalysisPage/UsageAnalysisPage.tsx","webpack:///./src/main/webapp/app/pages/CreateCompanyPage.tsx","webpack:///./src/main/webapp/app/components/calendarButton/UsageAnalysisCalendarButton.tsx","webpack:///./src/main/webapp/app/pages/usageAnalysisPage/UserUsageDetailsTable.tsx","webpack:///./src/main/webapp/app/pages/usageAnalysisPage/UserUsageDetailsPage.tsx","webpack:///./src/main/webapp/app/pages/usageAnalysisPage/ResourceUsageDetailsTable.tsx","webpack:///./src/main/webapp/app/pages/usageAnalysisPage/ResourceUsageDetailsPage.tsx","webpack:///./src/main/webapp/app/shared/button/PillButton.tsx","webpack:///./src/main/webapp/app/shared/list/FormListField.tsx","webpack:///./src/main/webapp/app/shared/textarea/FormTextAreaField.tsx","webpack:///./src/main/webapp/app/shared/dropdown/AdditionalInfoSelect.tsx","webpack:///./src/main/webapp/app/components/newCompanyForm/NewCompanyForm.tsx","webpack:///./src/main/webapp/app/pages/userPage/QuickToolButton.tsx","webpack:///./src/main/webapp/app/pages/companyManagement/CompanyDetailsPage.tsx","webpack:///./src/main/webapp/app/shared/readonly/ReadOnlyPage.tsx","webpack:///./src/main/webapp/app/shared/readonly/ReadOnlyMode.tsx","webpack:///./src/main/webapp/app/routes/AdminRoutes.tsx","webpack:///./src/main/webapp/app/pages/newsPage/ChangedAnnotatonListItem.tsx","webpack:///./src/main/webapp/app/components/PageContainer.tsx","webpack:///./src/main/webapp/content/images/search_advanced_1.png","webpack:///./src/main/webapp/content/images/search_advanced_2.png","webpack:///./src/main/webapp/content/images/cbioportal-clinical.png","webpack:///./src/main/webapp/content/images/cbioportal-biological.png","webpack:///./src/main/webapp/content/images/ERBB.png","webpack:///./src/main/webapp/app/pages/newsPage/NewlyAddedGenesListItem.tsx","webpack:///./src/main/webapp/app/pages/newsPage/Links.tsx","webpack:///./src/main/webapp/app/shared/links/PMALink.tsx","webpack:///./src/main/webapp/app/pages/newsPage/Util.tsx","webpack:///./src/main/webapp/app/shared/utils/PromiseUtils.ts","webpack:///./src/main/webapp/app/pages/newsPage/NewsPageContent.tsx","webpack:///./src/main/webapp/app/pages/newsPage/UpdatedTxImplListItem.tsx","webpack:///./src/main/webapp/app/pages/newsPage/UpdatedTxImplOldFormatListItem.tsx","webpack:///./src/main/webapp/app/shared/links/HashLink.tsx","webpack:///./src/main/webapp/app/pages/newsPage/NewsList.tsx","webpack:///./src/main/webapp/content/images/loe-change.png","webpack:///./src/main/webapp/content/images/level_AAC.png","webpack:///./src/main/webapp/app/pages/newsPage/NewsPage.tsx","webpack:///./src/main/webapp/app/shared/auth/RecaptchaBoundaryRoute.tsx","webpack:///./src/main/webapp/app/pages/genomicPage/GenomicPage.tsx","webpack:///./src/main/webapp/app/pages/userPage/TrialAccountModal.tsx","webpack:///./src/main/webapp/app/pages/userPage/UserPage.tsx","webpack:///./src/main/webapp/app/shared/button/ButtonWithTooltip.tsx","webpack:///./src/main/webapp/app/pages/userPage/KeyInputGroups.tsx","webpack:///./src/main/webapp/app/pages/CreateCompanyUsersPage.tsx","webpack:///./src/main/webapp/app/components/licenseAgreement/trialAccount/v1/LicenseAgreement.tsx","webpack:///./src/main/webapp/app/components/licenseAgreement/trialAccount/v1/license_agreement.pdf","webpack:///./src/main/webapp/app/components/account/ActivateTrialFinish.tsx","webpack:///./src/main/webapp/app/shared/table/UserTable.tsx","webpack:///./src/main/webapp/app/pages/companyPage/CompanyPage.tsx","webpack:///./src/main/webapp/app/pages/AboutPage.tsx","webpack:///./src/main/webapp/content/images/process.png","webpack:///./src/main/webapp/app/pages/teamPage/TeamMember.tsx","webpack:///./src/main/webapp/app/pages/teamPage/COILinkout.tsx","webpack:///./src/main/webapp/app/pages/aboutGroup/AboutPageNavTab.tsx","webpack:///./src/main/webapp/app/pages/teamPage/TeamPage.tsx","webpack:///./src/main/webapp/app/pages/aboutGroup/FdaRecognitionPage.tsx","webpack:///./src/main/webapp/app/pages/yearEndSummaryPage/BiomarkerTable.tsx","webpack:///./src/main/webapp/app/pages/yearEndSummaryPage/BiomarkerTableData.tsx","webpack:///./src/main/webapp/app/pages/yearEndSummaryPage/YearEndSummaryPage.tsx","webpack:///./src/main/webapp/app/pages/apiAccessGroup/TermsPage.tsx","webpack:///./src/main/webapp/app/shared/links/SwaggerApiLink.tsx","webpack:///./src/main/webapp/app/pages/apiAccessGroup/APIAccessPage.tsx","webpack:///./src/main/webapp/app/shared/links/OncoKBLink.tsx","webpack:///./src/main/webapp/app/pages/RegisterPage.tsx","webpack:///./src/main/webapp/app/pages/apiAccessGroup/ApiAccessPageNavTab.tsx","webpack:///./src/main/webapp/app/pages/precisionOncologyTherapiesPage/precisionOncologyTherapiesPage.tsx","webpack:///./src/main/webapp/app/pages/FAQPage.tsx","webpack:///./src/main/webapp/content/files/precisionOncologyTherapies/precision_oncology_therapies.xlsx","webpack:///./src/main/webapp/app/routes/routes.tsx","webpack:///./src/main/webapp/app/components/feedback/FeedbackModal.tsx","webpack:///./src/main/webapp/app/components/fdaModal/FdaModal.tsx","webpack:///./src/main/webapp/app/Main.tsx","webpack:///./src/main/webapp/app/store/AppStore.ts","webpack:///./src/main/webapp/app/store/WindowStore.ts","webpack:///./src/main/webapp/app/App.tsx","webpack:///./src/main/webapp/app/index.tsx","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/components/listGroupItem.module.scss?e42b","webpack:///./src/main/webapp/app/components/searchOption/SearchOption.module.scss?eea7","webpack:///./src/main/webapp/app/pages/companyManagement/CompanyDetailsPage.module.scss?8a98","webpack:///./src/main/webapp/app/components/citationListGroupItem.module.scss?fd1b","webpack:///./src/main/webapp/app/pages/genePage/GenePage.module.scss?ef57","webpack:///./src/main/webapp/app/components/loadingIndicator/styles.module.scss?98f5","webpack:///./src/main/webapp/app/pages/newsPage/main.module.scss?0b76","webpack:///./src/main/webapp/app/components/levelButton/LevelButton.module.scss?f0ef","webpack:///./src/main/webapp/app/components/Footer.module.scss?13bb","webpack:///./src/main/webapp/app/components/highlightLinkButton/HighlightLinkButton.module.scss?8ced","webpack:///./src/main/webapp/app/components/dividerWithInfo/DividerWithInfo.module.scss?e5b8","webpack:///./src/main/webapp/app/pages/alterationPage/AlterationPage.module.scss?56e6","webpack:///./src/main/webapp/app/components/userMessager/styles.module.scss?8bc6","webpack:///./src/main/webapp/app/shared/list/styles.module.scss?70d3","webpack:///./src/main/webapp/app/components/accountMessage/styles.module.scss?7cd4","webpack:///./src/main/webapp/app/components/downloadButton/DownloadButton.module.scss?3308","webpack:///./src/main/webapp/app/components/oncokbSearch/index.module.scss?7550","webpack:///./src/main/webapp/app/oncokb-frontend-commons/src/components/main.module.scss?c58e","webpack:///./src/main/webapp/app/pages/annotationPage/index.module.scss?1fc8","webpack:///./src/main/webapp/app/components/licenseAgreement/licenseAgreement.module.scss?0003","webpack:///./src/main/webapp/app/pages/yearEndSummaryPage/main.module.scss?3562","webpack:///./src/main/webapp/app/components/loadingIndicator/styles.module.scss","webpack:///./src/main/webapp/app/components/Footer.module.scss"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","api","content","default","options","locals","___CSS_LOADER_API_IMPORT___","webpackEmptyContext","req","e","Error","code","keys","resolve","id","LoaderSize","FeedbackType","render","color","this","props","size","LARGE","spinnerStyles","extraSmall","EXTRA_SMALL","small","SMALL","big","parentStyles","centered","center","centerRelativeToContainer","count","children","condition","isLoading","className","style","fadeIn","defaultProps","progressiveLoading","ImgElement","rest","imageRendering","src","placeholder","loading","href","target","rel","display","alt","height","imageHeight","VIDEO_TYPES","AUTHORITIES","GRID_BREAKPOINTS","SOP_LINK","API_DOCUMENT_LINK","ONCOGENICITY","YOUTUBE_VIDEO_IDS","WEBINAR_INTRO","WEBINAR_API","INTRO","INTRO_LONG","BILIBILI_VIDEO_IDS","MUTATION_EFFECT","GENERAL_ONCOGENICITY","ONCOGENIC","LIKELY_ONCOGENIC","PREDICTED_ONCOGENIC","RESISTANCE","NEUTRAL","LIKELY_NEUTRAL","INCONCLUSIVE","UNKNOWN","LEVEL_TYPES","ANNOTATION_PAGE_TAB_KEYS","EVIDENCE_TYPE","LEVELS","LEVEL_TYPE_NAMES","TX","DX","PX","FDA","ACTIONABLE_GENES_LEVEL_TITLE","ANNOTATION_PAGE_TAB_NAMES","BIOLOGICAL","EVIDENCE_TYPES","FDA_LEVELS","Fda1","Fda2","Fda3","TX_LEVELS","Tx1","Tx2","Tx3","Tx3A","Tx3B","Tx4","R1","R2","DX_LEVELS","Dx1","Dx2","Dx3","PX_LEVELS","Px1","Px2","Px3","ONCOKB_LEVELS","concat","LEVEL_PRIORITY","LEVEL_PRIORITY_BY_TYPE","LEVEL_BUTTON_DESCRIPTION","LEVEL_CLASSIFICATION","ONCOGENICITY_CLASS_NAMES","PAGE_TITLE","PAGE_ROUTE","TABLE_COLUMN_KEY","TREATMENT_EVIDENCE_TYPES","STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY","STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE","INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY","INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE","COMPONENT_PADDING","FONT_FAMILY","DEFAULT_ONCOKB_INFO","dataVersion","date","version","appVersion","major","minor","patch","stable","suffixTokens","levels","ncitVersion","apiVersion","publicInstance","oncoTreeVersion","DEFAULT_MAIN_NUMBERS","gene","alteration","tumorType","drug","level","DEFAULT_GENE","grch37Isoform","grch37RefSeq","grch38Isoform","grch38RefSeq","entrezGeneId","geneAliases","genesets","hugoSymbol","oncogene","tsg","DEFAULT_GENE_NUMBER","highestSensitiveLevel","highestResistanceLevel","highestDiagnosticImplicationLevel","highestPrognosticImplicationLevel","highestFdaLevel","DEFAULT_ANNOTATION","alleleExist","background","diagnosticImplications","diagnosticSummary","geneExist","geneSummary","hotspot","lastUpdate","mutationEffect","citations","abstracts","pmids","description","knownEffect","oncogenic","otherSignificantResistanceLevels","otherSignificantSensitiveLevels","prognosticImplications","prognosticSummary","query","alterationType","consequence","hgvs","proteinEnd","proteinStart","referenceGenome","svType","type","treatments","tumorTypeSummary","tumorTypes","variantExist","variantSummary","vue","vus","SEARCH_QUERY_KEY","LicenseType","CompanyType","LICENSE_TITLES","ACADEMIC","RESEARCH_IN_COMMERCIAL","HOSPITAL","COMMERCIAL","LICENSE_TYPES","title","LicenseStatus","COMPANY_TYPE_TITLES","PARENT","BRANCH","LicenseModel","LICENSE_STATUS_TITLES","REGULAR","TRIAL","TRIAL_EXPIRED","EXPIRED","ACCOUNT_TITLES","API_CALL_STATUS","TERM_DEFINITION","LICENSE_MODEL_TITLES","FULL","LIMITED","LICENSE_MODEL_DESCRIPTIONS","USER_AUTHORITY","FDA_RECOGNITION_DISCLAIMER","enableLink","to","FDA_RECOGNITION","ONCOKB","AsteriskMark","FdaRecognitionDisclaimer","ACADEMIC_TERMS","IS_ACADEMIC_GROUP","ONLY_ACADEMIC_USAGE","NO_COMPANY_USAGE","OK_WITH_TERMS_OF_USE","TERMS","DATA_RELEASES","UNAUTHORIZED_ALLOWED_PATH","LOGIN","ACCOUNT_PASSWORD","ACCOUNT_PASSWORD_RESET_REQUEST","ACCOUNT_PASSWORD_RESET_FINISH","ACCOUNT_VERIFY","REGISTER","REGEXP","USER_AUTHORITIES","ROLE_ADMIN","ROLE_PREMIUM_USER","ROLE_DATA_DOWNLOAD","ROLE_USER","ROLE_PUBLIC_WEBSITE","NOT_CHANGEABLE_AUTHORITIES","REFERENCE_GENOME","REGEXP_LINK","PMID","NCTID","DEFAULT_REFERENCE_GENOME","GRCh37","DEFAULT_FEEDBACK_ANNOTATION","ANNOTATION","CitationText","highlightLinkout","boldLinkout","undefined","ContactLink","emailSubject","Linkout","updatedLink","link","addHttpsProtocol","test","sortByArrayIndexAsc","aIndex","bIndex","sortByLevelWithLevels","a","b","levelOfEvidence2Level","indexOf","sortByLevel","defaultSortMethod","Infinity","toLowerCase","defaultFdaImplicationSortMethod","compareScore","cancerTypes","alterations","sortNumber","isNumber","sortByAlteration","localeCompare","oncogenicityOrder","mutationEffectOrder","GAIN_OF_FUNCTION","LIKELY_GAIN_OF_FUNCTION","LOSS_OF_FUNCTION","LIKELY_LOSS_OF_FUNCTION","SWITCH_OF_FUNCTION","LIKELY_SWITCH_OF_FUNCTION","citationsSortMethod","oncogenicitySortMethod","mutationEffectSortMethod","LevelWithDescription","levelOfEvidence","level2LevelOfEvidence","overlay","match","find","appStore","appInfo","maxWidth","htmlDescription","getLevelDescription","Version","TabKey","pmid","listGroupItem","listGroupItemTitle","split","map","substr","index","texts","join","listGroupItemContent","author","source","abstract","citationContent","invoke","Promise","body","findContent","getPmidItems","isArray","authors","Date","pubdate","getFullYear","toString","uid","maxHeight","overflowY","isPending","CitationTooltip","Component","overlayClassName","placement","disabled","fontSize","getIcon","DownloadButton","download","buttonSizeClassName","aTag","V2","FDA_NGS","TAB_TITLES","V1","AAC","ALLOWED_VERSIONS","V2_RELATED_LEVELS","LEVEL_NAME","ONCOKB_TM","LEVEL_TITLE","LEVEL_SUBTITLE","LEVEL_FILE_NAME","VERSION_TO_PAGE","PAGE_TO_VERSION","pathname","location","reactions","redirectToNewPage","newPath","toUpperCase","routing","history","hash","includes","queryStrings","fireImmediately","newVersion","getVersionFromPathname","versionKey","toggleVersion","componentWillUnmount","forEach","componentReaction","getSubTitle","onClick","btnLinkText","tabs","Tab","eventKey","Row","Col","Form","Group","versionCheck","Check","label","onChange","checked","Button","width","marginRight","windowStore","isLargeScreen","getPageTitle","lg","Tabs","defaultActiveKey","activeKey","onSelect","k","LevelOfEvidencePage","Readonly","getLevelPageLink","levelType","levelLink","LevelOfEvidencePageLink","getDefaultLinkContent","shortenOncogenicity","oncogenicity","getCancerTypeNameFromOncoTreeType","oncoTreeType","subtype","mainType","getCancerTypesName","excludedCancerTypes","getCancerTypesNameFromOncoTreeType","cancerType","trimSubversion","replace","RegExp","trimLevelOfEvidenceSubversion","getAllAlterationsName","getAllTumorTypesName","sort","getDrugNameFromTreatment","drugName","getTreatmentNameFromEvidence","evidence","sortBy","treatment","drugs","getAnnotationOncogenicityClassName","OncoKBAnnotationIcon","sensitiveLevel","resistanceLevel","sensitiveLevelClassName","resistanceLevelClassName","OncoKBOncogenicityIcon","marginTop","marginLeft","isVus","OncoKBLevelIcon","withDescription","oncokbIcon","FdaLevelIcon","fdaIcon","lineHeight","margin","levelDescription","getDefaultColumnDefinition","columnKey","HUGO_SYMBOL","Header","accessor","minWidth","defaultSortDesc","sortMethod","Cell","GenePageLink","original","ALTERATION","AlterationPageLink","ALTERATIONS","whiteSpace","EVIDENCE_CANCER_TYPE","OncoTreeLink","DRUGS","LEVEL","FDA_LEVEL","CITATIONS","numOfReferences","drugAbstracts","drugPmids","trigger","DESCRIPTION","sortable","filterByKeyword","keyword","trim","getRouteFromPath","pathName","HOME","getRedirectLoginState","search","from","toAppTimestampFormat","utcTime","format","toAppLocalDateFormat","getMomentInstance","daysDiff","today","utc","diff","encodeSlash","decodeSlash","scrollWidthOffset","el","yCoordinate","getBoundingClientRect","top","pageYOffset","scrollTo","behavior","isPositionalAlteration","getYouTubeLink","videoId","getBilibiliLink","isCategoricalAlteration","filter","startsWith","getAlterationName","showNameDiff","isCategoricalAlt","hasExclusionArm","mainContent","withPostFix","convertObjectArrayToDelimitedString","array","delimiter","rows","values","PMIDLink","getGenePageLink","pageLink","GENE_HEADER","searchQueries","hashQueries","highlightContent","getAlterationPageLink","sq","refGenome","alterationRefGenomes","alterationName","showGene","getGenomicPageLocation","rootRoute","getGenomicPageLink","MSILink","CitationLink","regexps","contentWithLink","regexp","getActionableGenesPageLink","sections","hashes","ACTIONABLE_GENE","SopPageLink","defaultContent","TrialActivationPageLink","ACCOUNT_ACTIVE_TRIAL_FINISH","trialActivationKey","onRedirect","footerAList","NEWS","lastDataUpdate","footer","Container","externalLinks","md","internalLinks","icon","DropdownItem","as","AccountMenuItemsAuthenticated","ACCOUNT_SETTINGS","isAdmin","ADMIN_USER_DETAILS","ADMIN_SEND_EMAILS","ADMIN_CREATE_ACCOUNT","ADMIN_COMPANY_DETAILS","ADMIN_USAGE_ANALYSIS","LOGOUT","AccountMenuItems","Dropdown","NavItem","Toggle","NavLink","ACCOUNT","Menu","alignRight","isAuthenticated","AccountMenu","makeMessageKey","MESSAGE_DATA","hostname","dateEnd","textDecoration","PO_TX","backgroundColor","messages","showBeVisible","newVal","userMessageBannerEnabled","getMessages","reactionItem","localStorage","getItem","message","notYetShown","expired","now","markMessageDismissed","messageId","setItem","show","fluid","isXLscreen","messageContainer","close","UserMessage","getClientInstanceURL","url","DEV_URL","domain","errorHandlers","getDomain","addErrorHandler","handler","request","method","headers","queryParameters","form","reject","set","send","constructor","end","error","response","ok","getAccountUsingGETURL","parameters","$queryParameters","parameterName","parameter","encodeURIComponent","getAccountUsingGETWithHttpInfo","$domain","getAccountUsingGET","then","saveAccountUsingPOSTURL","saveAccountUsingPOSTWithHttpInfo","saveAccountUsingPOST","finishTrialAccountActivationUsingPOSTURL","finishTrialAccountActivationUsingPOSTWithHttpInfo","finishTrialAccountActivationUsingPOST","getTrialAccountActivationInfoUsingGETURL","getTrialAccountActivationInfoUsingGETWithHttpInfo","getTrialAccountActivationInfoUsingGET","initiateTrialAccountActivationUsingPOSTURL","initiateTrialAccountActivationUsingPOSTWithHttpInfo","initiateTrialAccountActivationUsingPOST","changePasswordUsingPOSTURL","changePasswordUsingPOSTWithHttpInfo","changePasswordUsingPOST","generateResetKeyUsingPOSTURL","generateResetKeyUsingPOSTWithHttpInfo","generateResetKeyUsingPOST","resendVerificationUsingPOSTURL","resendVerificationUsingPOSTWithHttpInfo","resendVerificationUsingPOST","finishPasswordResetUsingPOSTURL","finishPasswordResetUsingPOSTWithHttpInfo","finishPasswordResetUsingPOST","requestPasswordResetUsingPOSTURL","requestPasswordResetUsingPOSTWithHttpInfo","requestPasswordResetUsingPOST","getTokensUsingGETURL","getTokensUsingGETWithHttpInfo","getTokensUsingGET","createTokenUsingPOSTURL","createTokenUsingPOSTWithHttpInfo","createTokenUsingPOST","deleteTokenUsingDELETEURL","deleteTokenUsingDELETEWithHttpInfo","deleteTokenUsingDELETE","activateAccountUsingGETURL","activateAccountUsingGETWithHttpInfo","activateAccountUsingGET","isAuthenticatedUsingGETURL","isAuthenticatedUsingGETWithHttpInfo","isAuthenticatedUsingGET","authorizeUsingPOSTURL","authorizeUsingPOSTWithHttpInfo","authorizeUsingPOST","getAllCompaniesUsingGETURL","getAllCompaniesUsingGETWithHttpInfo","getAllCompaniesUsingGET","createCompanyUsingPOSTURL","createCompanyUsingPOSTWithHttpInfo","createCompanyUsingPOST","updateCompanyUsingPUTURL","updateCompanyUsingPUTWithHttpInfo","updateCompanyUsingPUT","getCompanyByNameUsingGETURL","getCompanyByNameUsingGETWithHttpInfo","getCompanyByNameUsingGET","verifyCompanyNameUsingPOSTURL","verifyCompanyNameUsingPOSTWithHttpInfo","verifyCompanyNameUsingPOST","getCompanyUsingGETURL","path","getCompanyUsingGETWithHttpInfo","getCompanyUsingGET","getCompanyUsersUsingGETURL","getCompanyUsersUsingGETWithHttpInfo","getCompanyUsersUsingGET","getAllCompanyDomainsUsingGETURL","getAllCompanyDomainsUsingGETWithHttpInfo","getAllCompanyDomainsUsingGET","createCompanyDomainUsingPOSTURL","createCompanyDomainUsingPOSTWithHttpInfo","createCompanyDomainUsingPOST","updateCompanyDomainUsingPUTURL","updateCompanyDomainUsingPUTWithHttpInfo","updateCompanyDomainUsingPUT","verifyCompanyDomainUsingPOSTURL","verifyCompanyDomainUsingPOSTWithHttpInfo","verifyCompanyDomainUsingPOST","getCompanyDomainUsingGETURL","getCompanyDomainUsingGETWithHttpInfo","getCompanyDomainUsingGET","deleteCompanyDomainUsingDELETEURL","deleteCompanyDomainUsingDELETEWithHttpInfo","deleteCompanyDomainUsingDELETE","checkExposedTokensUsingGETURL","checkExposedTokensUsingGETWithHttpInfo","checkExposedTokensUsingGET","checkTrialAccountsUsingGETURL","checkTrialAccountsUsingGETWithHttpInfo","checkTrialAccountsUsingGET","emailUnapprovedUsersListUsingGETURL","emailUnapprovedUsersListUsingGETWithHttpInfo","emailUnapprovedUsersListUsingGET","generateTokensUsingGETURL","generateTokensUsingGETWithHttpInfo","generateTokensUsingGET","moveTokenStatsToS3UsingGETURL","moveTokenStatsToS3UsingGETWithHttpInfo","moveTokenStatsToS3UsingGET","removeNotActivatedUsersUsingGETURL","removeNotActivatedUsersUsingGETWithHttpInfo","removeNotActivatedUsersUsingGET","removeOldAuditEventsUsingGETURL","removeOldAuditEventsUsingGETWithHttpInfo","removeOldAuditEventsUsingGET","tokensRenewCheckUsingGETURL","tokensRenewCheckUsingGETWithHttpInfo","tokensRenewCheckUsingGET","sendFeedbackMailsUsingPOSTURL","sendFeedbackMailsUsingPOSTWithHttpInfo","sendFeedbackMailsUsingPOST","getMailsFromUsingGETURL","getMailsFromUsingGETWithHttpInfo","getMailsFromUsingGET","getMailsTypesUsingGETURL","getMailsTypesUsingGETWithHttpInfo","getMailsTypesUsingGET","sendUserMailsUsingPOSTURL","sendUserMailsUsingPOSTWithHttpInfo","sendUserMailsUsingPOST","registerAccountUsingPOSTURL","registerAccountUsingPOSTWithHttpInfo","registerAccountUsingPOST","getAllTokensUsingGETURL","getAllTokensUsingGETWithHttpInfo","getAllTokensUsingGET","createTokenUsingPOST_1URL","createTokenUsingPOST_1WithHttpInfo","createTokenUsingPOST_1","updateTokenUsingPUTURL","updateTokenUsingPUTWithHttpInfo","updateTokenUsingPUT","getTokenUsingGETURL","getTokenUsingGETWithHttpInfo","getTokenUsingGET","resourceDetailGetUsingGETURL","resourceDetailGetUsingGETWithHttpInfo","resourceDetailGetUsingGET","resourceUsageGetUsingGETURL","resourceUsageGetUsingGETWithHttpInfo","resourceUsageGetUsingGET","userOverviewUsageGetUsingGETURL","userOverviewUsageGetUsingGETWithHttpInfo","userOverviewUsageGetUsingGET","userUsageGetUsingGETURL","userUsageGetUsingGETWithHttpInfo","userUsageGetUsingGET","getAllUserDetailsUsingGETURL","getAllUserDetailsUsingGETWithHttpInfo","getAllUserDetailsUsingGET","createUserDetailsUsingPOSTURL","createUserDetailsUsingPOSTWithHttpInfo","createUserDetailsUsingPOST","updateUserDetailsUsingPUTURL","updateUserDetailsUsingPUTWithHttpInfo","updateUserDetailsUsingPUT","getUserDetailsUsingGETURL","getUserDetailsUsingGETWithHttpInfo","getUserDetailsUsingGET","deleteUserDetailsUsingDELETEURL","deleteUserDetailsUsingDELETEWithHttpInfo","deleteUserDetailsUsingDELETE","getAllUserMailsUsingGETURL","getAllUserMailsUsingGETWithHttpInfo","getAllUserMailsUsingGET","getUsersUserMailsUsingGETURL","getUsersUserMailsUsingGETWithHttpInfo","getUsersUserMailsUsingGET","deleteUserMailsUsingDELETEURL","deleteUserMailsUsingDELETEWithHttpInfo","deleteUserMailsUsingDELETE","getAllUsersUsingGETURL","getAllUsersUsingGETWithHttpInfo","getAllUsersUsingGET","createUserUsingPOSTURL","createUserUsingPOSTWithHttpInfo","createUserUsingPOST","updateUserUsingPUTURL","updateUserUsingPUTWithHttpInfo","updateUserUsingPUT","getAuthoritiesUsingGETURL","getAuthoritiesUsingGETWithHttpInfo","getAuthoritiesUsingGET","getNonCompanyUserEmailsUsingGETURL","getNonCompanyUserEmailsUsingGETWithHttpInfo","getNonCompanyUserEmailsUsingGET","getAllRegisteredUsersUsingGETURL","getAllRegisteredUsersUsingGETWithHttpInfo","getAllRegisteredUsersUsingGET","getUsersTokensUsingPOSTURL","getUsersTokensUsingPOSTWithHttpInfo","getUsersTokensUsingPOST","getUserUsingGETURL","getUserUsingGETWithHttpInfo","getUserUsingGET","deleteUserUsingDELETEURL","deleteUserUsingDELETEWithHttpInfo","deleteUserUsingDELETE","getUserTokensUsingGETURL","getUserTokensUsingGETWithHttpInfo","getUserTokensUsingGET","getFormattedMessage","upperFirst","getErrorMessage","additionalInfo","item","notifySuccess","success","notifyError","LATIN_TEXT_PATTER","errorMessage","debouncedCompanyNameValidator","debounce","ctx","input","cb","companyId","info","verificationInfo","isValid","catch","textValidation","minLength","maxLength","validation","pattern","TEXT_VAL","SHORT_TEXT_VAL","EMAIL_VAL","required","fieldRequiredValidation","fieldName","getAnnotationString","annotation","SearchOptionType","FeedbackForm","defaultModel","email","onValidSubmit","event","onSubmit","model","validate","variant","FeedbackIcon","tooltipOverlay","feedback","GENERAL","showFeedbackFormModal","feedbackAnnotation","cursor","AppProfile","LevelString","GeneSearchOption","searchWords","textToHighlight","subTitle","separator","AlterationSearchOption","alterationsName","GenomicSearchOption","DrugSearchOption","variants","tumorTypesName","CancerTypeSearchOption","annotationByLevel","SearchOption","searchKeyword","GENE","VARIANT","DRUG","GENOMIC","CANCER_TYPE","TEXT","cacheGenomeNexusVariantInfoPostUsingPOSTURL","cacheGenomeNexusVariantInfoPostUsingPOSTWithHttpInfo","cacheGenomeNexusVariantInfoPostUsingPOST","fetchGenomeNexusVariantInfoByGenomicChangePostUsingPOSTURL","fetchGenomeNexusVariantInfoByGenomicChangePostUsingPOSTWithHttpInfo","fetchGenomeNexusVariantInfoByGenomicChangePostUsingPOST","fetchGenomeNexusVariantInfoByHGVSgPostUsingPOSTURL","fetchGenomeNexusVariantInfoByHGVSgPostUsingPOSTWithHttpInfo","fetchGenomeNexusVariantInfoByHGVSgPostUsingPOST","searchDrugGetUsingGETURL","searchDrugGetUsingGETWithHttpInfo","searchDrugGetUsingGET","searchTreatmentsGetUsingGETURL","searchTreatmentsGetUsingGETWithHttpInfo","searchTreatmentsGetUsingGET","searchTypeAheadGetUsingGETURL","searchTypeAheadGetUsingGETWithHttpInfo","searchTypeAheadGetUsingGET","searchVariantsBiologicalGetUsingGETURL","searchVariantsBiologicalGetUsingGETWithHttpInfo","searchVariantsBiologicalGetUsingGET","searchVariantsClinicalGetUsingGETURL","searchVariantsClinicalGetUsingGETWithHttpInfo","searchVariantsClinicalGetUsingGET","getTranscriptUsingGETURL","getTranscriptUsingGETWithHttpInfo","getTranscriptUsingGET","utilDataAvailabilityGetUsingGETURL","utilDataAvailabilityGetUsingGETWithHttpInfo","utilDataAvailabilityGetUsingGET","utilDataReadmeGetUsingGETURL","utilDataReadmeGetUsingGETWithHttpInfo","utilDataReadmeGetUsingGET","utilDataSqlDumpGetUsingGETURL","utilDataSqlDumpGetUsingGETWithHttpInfo","utilDataSqlDumpGetUsingGET","utilsEnsemblGenesGetUsingGETURL","utilsEnsemblGenesGetUsingGETWithHttpInfo","utilsEnsemblGenesGetUsingGET","utilsEvidencesByLevelsGetUsingGETURL","utilsEvidencesByLevelsGetUsingGETWithHttpInfo","utilsEvidencesByLevelsGetUsingGET","utilFilterGenomicChangeBasedOnCoveragePostUsingPOSTURL","utilFilterGenomicChangeBasedOnCoveragePostUsingPOSTWithHttpInfo","utilFilterGenomicChangeBasedOnCoveragePostUsingPOST","utilFilterHgvsgBasedOnCoveragePostUsingPOSTURL","utilFilterHgvsgBasedOnCoveragePostUsingPOSTWithHttpInfo","utilFilterHgvsgBasedOnCoveragePostUsingPOST","utilsHotspotMutationGetUsingGETURL","utilsHotspotMutationGetUsingGETWithHttpInfo","utilsHotspotMutationGetUsingGET","validateVariantExampleGetUsingGETURL","validateVariantExampleGetUsingGETWithHttpInfo","validateVariantExampleGetUsingGET","validateVariantExamplePostUsingPOSTURL","validateVariantExamplePostUsingPOSTWithHttpInfo","validateVariantExamplePostUsingPOST","utilMutationMapperDataGetUsingGETURL","utilMutationMapperDataGetUsingGETWithHttpInfo","utilMutationMapperDataGetUsingGET","utilsNumbersGeneGetUsingGETURL","utilsNumbersGeneGetUsingGETWithHttpInfo","utilsNumbersGeneGetUsingGET","utilsNumbersGenesGetUsingGETURL","utilsNumbersGenesGetUsingGETWithHttpInfo","utilsNumbersGenesGetUsingGET","utilsNumbersLevelsGetUsingGETURL","utilsNumbersLevelsGetUsingGETWithHttpInfo","utilsNumbersLevelsGetUsingGET","utilsNumbersMainGetUsingGETURL","utilsNumbersMainGetUsingGETWithHttpInfo","utilsNumbersMainGetUsingGET","utilPortalAlterationSampleCountGetUsingGETURL","utilPortalAlterationSampleCountGetUsingGETWithHttpInfo","utilPortalAlterationSampleCountGetUsingGET","utilRelevantAlterationsGetUsingGETURL","utilRelevantAlterationsGetUsingGETWithHttpInfo","utilRelevantAlterationsGetUsingGET","utilRelevantCancerTypesPostUsingPOSTURL","utilRelevantCancerTypesPostUsingPOSTWithHttpInfo","utilRelevantCancerTypesPostUsingPOST","utilRelevantTumorTypesGetUsingGETURL","utilRelevantTumorTypesGetUsingGETWithHttpInfo","utilRelevantTumorTypesGetUsingGET","utilsSuggestedVariantsGetUsingGETURL","utilsSuggestedVariantsGetUsingGETWithHttpInfo","utilsSuggestedVariantsGetUsingGET","utilsTumorTypesGetUsingGETURL","utilsTumorTypesGetUsingGETWithHttpInfo","utilsTumorTypesGetUsingGET","utilUpdateTranscriptGetUsingGETURL","utilUpdateTranscriptGetUsingGETWithHttpInfo","utilUpdateTranscriptGetUsingGET","utilValidateTranscriptUpdateGetUsingGETURL","utilValidateTranscriptUpdateGetUsingGETWithHttpInfo","utilValidateTranscriptUpdateGetUsingGET","validateTrialsUsingGETURL","validateTrialsUsingGETWithHttpInfo","validateTrialsUsingGET","utilVariantAnnotationGetUsingGETURL","utilVariantAnnotationGetUsingGETWithHttpInfo","utilVariantAnnotationGetUsingGET","SimpleTable","Table","tableClassName","columns","theadClassName","column","tbodyClassName","row","cell","getRow","getQueryLink","padding","onSelectQuery","getOverlay","simpleTable","fontStyle","marginBottom","reduce","limit","acc","errorOptions","errorContent","queryType","debouncedUpdate","searchTerm","selectInput","clearTimeout","timeout","setTimeout","components","Option","DropdownIndicator","IndicatorSeparator","NoOptionsMessage","styles","overflow","textOverflow","textAlign","defaultOptions","menuIsOpen","isClearable","selectedOption","closeMenuOnSelect","inputValue","onInputChange","filterOption","newQuery","OncoKBSearch","AppConfig","serverConfig","getPublicWebsiteToken","session","getStoredToken","local","setRecaptchaToken","recaptchaToken","ACCOUNT_STATUS","detail","loginSuccess","showModalLogin","redirectMessage","idToken","logoutUrl","tokens","userName","password","existedToken","getAccount","account","getAccountTokens","updateIdToken","generateIdToken","token","deleteToken","tokenItem","tokenValid","expiration","getDate","isTrialAccount","renewable","TRIAL_ABOUT_2_EXPIRED","ABOUT_2_EXPIRED","login","username","loginVm","rememberMe","loginSuccessCallback","loginErrorCallback","uuid","finally","loginError","newToken","clearAuthToken","remove","logout","destroy","bound","authStore","accountStatus","showAccountMessage","AccountMessage","subPages","matchedPaths","CANCER_GENES","API_ACCESS","ABOUT","TEAM","SOP","YEAR_END_SUMMARY","FAQ_ACCESS","isNavExpanded","searchBarIsHovered","toggleNav","closeNav","text","getLink","page","isActive","currentPage","checkIfNavLinkIsActive","updateSearchBarHover","status","searchBarIsHoveredTimeout","enterSearchBar","leaveSearchBar","Navbar","bg","expand","expanded","Brand","Collapse","Nav","onMouseEnter","onMouseLeave","onBlur","right","Item","paddingRight","enableAuth","isUserAuthenticated","state","errorInfo","componentDidCatch","setState","ErrorBoundaryRoute","component","createElement","LoadingButton","UNAUTHORIZED_NOT_ACTIVATED_ENDS_WITH","UNAUTHORIZED_EXPIRED","siteKey","script","recaptchaSiteKey","document","appendChild","console","log","getToken","grecaptcha","enterprise","execute","res","sentryProjectId","resendingVerification","recaptcha","resentEmail","savedCredential","resendVerificationMessage","handleLogin","errors","authenticationStore","some","str","endsWith","Alert","trialActivationLink","showResendInfo","autoFocus","LoginPage","redirect","toggleRedirect","componentDidMount","origin","Logout","isAuthorized","userAuthorities","hasAnyAuthorities","auth","PrivateRoute","authorities","userIsAuthorized","checkAuthorities","HighlightLinkButton","highlight","withHref","withoutHref","HomePageNumber","number","LevelButton","buttonDisabled","numOfGenes","disabledTooltip","active","FDA_L1_DISABLED_BTN_TOOLTIP","levelTypeSelected","levelGadgets","generateLevelGadgets","updateLocationHash","newSelectedType","levelNumbers","await","levelNumber","next","linkoutLevel","combinedLevels","getLevelGenes","uniq","genes","getLevelNumber","handleLevelTypeButton","levelTypeButtons","verticalAlign","xs","mainNumbers","isMDScreen","levelGadget","sm","minHeight","HomePage","filterableColumns","onFilter","filters","disableSearch","showPagination","fixedHeight","filteredData","searchIconClassName","OncoKBTable","annotateCopyNumberAlterationsGetUsingGETURL","annotateCopyNumberAlterationsGetUsingGETWithHttpInfo","annotateCopyNumberAlterationsGetUsingGET","annotateCopyNumberAlterationsPostUsingPOSTURL","annotateCopyNumberAlterationsPostUsingPOSTWithHttpInfo","annotateCopyNumberAlterationsPostUsingPOST","annotateMutationsByGenomicChangeGetUsingGETURL","annotateMutationsByGenomicChangeGetUsingGETWithHttpInfo","annotateMutationsByGenomicChangeGetUsingGET","annotateMutationsByGenomicChangePostUsingPOSTURL","annotateMutationsByGenomicChangePostUsingPOSTWithHttpInfo","annotateMutationsByGenomicChangePostUsingPOST","annotateMutationsByHGVSgGetUsingGETURL","annotateMutationsByHGVSgGetUsingGETWithHttpInfo","annotateMutationsByHGVSgGetUsingGET","annotateMutationsByHGVSgPostUsingPOSTURL","annotateMutationsByHGVSgPostUsingPOSTWithHttpInfo","annotateMutationsByHGVSgPostUsingPOST","annotateMutationsByProteinChangeGetUsingGETURL","annotateMutationsByProteinChangeGetUsingGETWithHttpInfo","annotateMutationsByProteinChangeGetUsingGET","annotateMutationsByProteinChangePostUsingPOSTURL","annotateMutationsByProteinChangePostUsingPOSTWithHttpInfo","annotateMutationsByProteinChangePostUsingPOST","annotateStructuralVariantsGetUsingGETURL","annotateStructuralVariantsGetUsingGETWithHttpInfo","annotateStructuralVariantsGetUsingGET","annotateStructuralVariantsPostUsingPOSTURL","annotateStructuralVariantsPostUsingPOSTWithHttpInfo","annotateStructuralVariantsPostUsingPOST","classificationVariantsGetUsingGETURL","classificationVariantsGetUsingGETWithHttpInfo","classificationVariantsGetUsingGET","drugsGetUsingGETURL","drugsGetUsingGETWithHttpInfo","drugsGetUsingGET","drugsLookupGetUsingGETURL","drugsLookupGetUsingGETWithHttpInfo","drugsLookupGetUsingGET","evidencesUUIDsGetUsingPOSTURL","evidencesUUIDsGetUsingPOSTWithHttpInfo","evidencesUUIDsGetUsingPOST","evidencesLookupGetUsingGETURL","evidencesLookupGetUsingGETWithHttpInfo","evidencesLookupGetUsingGET","evidencesLookupPostUsingPOSTURL","evidencesLookupPostUsingPOSTWithHttpInfo","evidencesLookupPostUsingPOST","evidencesUUIDGetUsingGETURL","evidencesUUIDGetUsingGETWithHttpInfo","evidencesUUIDGetUsingGET","genesGetUsingGETURL","genesGetUsingGETWithHttpInfo","genesGetUsingGET","genesLookupGetUsingGETURL","genesLookupGetUsingGETWithHttpInfo","genesLookupGetUsingGET","genesEntrezGeneIdGetUsingGETURL","genesEntrezGeneIdGetUsingGETWithHttpInfo","genesEntrezGeneIdGetUsingGET","genesEntrezGeneIdEvidencesGetUsingGETURL","genesEntrezGeneIdEvidencesGetUsingGETWithHttpInfo","genesEntrezGeneIdEvidencesGetUsingGET","genesEntrezGeneIdVariantsGetUsingGETURL","genesEntrezGeneIdVariantsGetUsingGETWithHttpInfo","genesEntrezGeneIdVariantsGetUsingGET","genesetsGetUsingGETURL","genesetsGetUsingGETWithHttpInfo","genesetsGetUsingGET","genesetsUuidGetUsingGETURL","genesetsUuidGetUsingGETWithHttpInfo","genesetsUuidGetUsingGET","infoGetUsingGETURL","infoGetUsingGETWithHttpInfo","infoGetUsingGET","levelsGetUsingGETURL","levelsGetUsingGETWithHttpInfo","levelsGetUsingGET","levelsDiagnosticGetUsingGETURL","levelsDiagnosticGetUsingGETWithHttpInfo","levelsDiagnosticGetUsingGET","levelsPrognosticGetUsingGETURL","levelsPrognosticGetUsingGETWithHttpInfo","levelsPrognosticGetUsingGET","levelsResistanceGetUsingGETURL","levelsResistanceGetUsingGETWithHttpInfo","levelsResistanceGetUsingGET","levelsSensitiveGetUsingGETURL","levelsSensitiveGetUsingGETWithHttpInfo","levelsSensitiveGetUsingGET","searchGetUsingGETURL","searchGetUsingGETWithHttpInfo","searchGetUsingGET","searchPostUsingPOSTURL","searchPostUsingPOSTWithHttpInfo","searchPostUsingPOST","trialsMatchingGetUsingGETURL","trialsMatchingGetUsingGETWithHttpInfo","trialsMatchingGetUsingGET","trialsGetByCancerTypesUsingPOSTURL","trialsGetByCancerTypesUsingPOSTWithHttpInfo","trialsGetByCancerTypesUsingPOST","utilsAllActionableVariantsGetUsingGETURL","utilsAllActionableVariantsGetUsingGETWithHttpInfo","utilsAllActionableVariantsGetUsingGET","utilsAllActionableVariantsTxtGetUsingGETURL","utilsAllActionableVariantsTxtGetUsingGETWithHttpInfo","utilsAllActionableVariantsTxtGetUsingGET","utilsAllAnnotatedVariantsGetUsingGETURL","utilsAllAnnotatedVariantsGetUsingGETWithHttpInfo","utilsAllAnnotatedVariantsGetUsingGET","utilsAllAnnotatedVariantsTxtGetUsingGETURL","utilsAllAnnotatedVariantsTxtGetUsingGETWithHttpInfo","utilsAllAnnotatedVariantsTxtGetUsingGET","utilsAllCuratedGenesGetUsingGETURL","utilsAllCuratedGenesGetUsingGETWithHttpInfo","utilsAllCuratedGenesGetUsingGET","utilsAllCuratedGenesTxtGetUsingGETURL","utilsAllCuratedGenesTxtGetUsingGETWithHttpInfo","utilsAllCuratedGenesTxtGetUsingGET","utilsCancerGeneListGetUsingGETURL","utilsCancerGeneListGetUsingGETWithHttpInfo","utilsCancerGeneListGetUsingGET","utilsCancerGeneListTxtGetUsingGETURL","utilsCancerGeneListTxtGetUsingGETWithHttpInfo","utilsCancerGeneListTxtGetUsingGET","variantsLookupGetUsingGETURL","variantsLookupGetUsingGETWithHttpInfo","variantsLookupGetUsingGET","variantsLookupPostUsingPOSTURL","variantsLookupPostUsingPOSTWithHttpInfo","variantsLookupPostUsingPOST","downloading","getDownloadData","fileName","mime","buttonText","DownloadButtonWithPromise","getGeneType","isOncogene","isTsg","getPanelGeneCount","cancerGene","fetchedDate","hugoInfo","annotated","oncokbAnnotated","geneType","mSKImpact","mSKHeme","foundation","foundationHeme","vogelstein","sangerCGC","numOfSources","cancerGenes","annotatedGenes","extendedCancerGene","cancerGenesAcc","numOfSourcesAcc","minRows","defaultPageSize","defaultSorted","desc","CancerGenesPage","AuthDownloadButton","levelSelections","levelSelected","updateLevelSelection","paddingLeft","border","boxShadow","flexDirection","alignItems","updateCollapseStatus","block","flexGrow","collapseStatus","in","LevelSelectionRow","allCancerTypes","matchedSubtype","allSubtypes","cancerTypesGroup","allMainTypes","ct","tumorTypeSelectValue","allTumorTypesOptions","formatGroupLabel","CancerTypeSelect","threshold","overlayStyle","opacity","destroyTooltipOnHide","relevantCancerTypeSearchKeyword","drugSearchKeyword","geneSearchKeyword","initLevelSelected","collapseInit","chain","evidencesByLevel","arrayFormat","section","newHash","parsedHashQueryString","newStatus","inFdaRecognizedContent","clearSelectedLevels","fdaLevel","showFdaModal","oncokbLevel","getTreatments","evidences","matchedAlterations","referenceGenomes","relevantCancerTypes","uniqueDrugs","queryString","selectedLevels","sectionStatus","visibleSection","fdaSectionIsOpen","allFdaTreatments","allOncokbTreatments","allTreatments","rct","intersection","secondLayerFilterEnabled","filteredTreatments","flatten","selected","clearFilters","downloadAssociation","header","drugRelatedLevelSelected","treatmentA","treatmentB","getAlterationCell","alterationPageHashQueries","tab","linkedAlts","toFdaRecognizedContent","shortenTextKey","commonColumns","datum","tableProps","getTdProps","justifyContent","Math","round","pageSize","getTable","oncokbTableKey","oncokbTableProps","evidencePostFix","filteredGenes","filteredTumorTypes","filteredLevels","levelSelectionSection","ACTIONABLE_GENES","geneSelectValue","drugSelectValue","filteredDrugs","filterResult","treatmentsAreFiltered","ActionableGenesPage","applyOncogenicityFilter","mutation","applyCancerTypeFilter","f","GENE_TYPE_DESC","SummaryKey","HighestLevelItem","isFdaLevel","levelText","getHighestLevelStrings","geneTypes","element","ONCOGENE","TUMOR_SUPPRESSOR","record","AlterationInfo","isUnknownOncogenicity","hasCitations","getUniqueFdaImplications","fdaImplications","uniqueData","groupBy","fdaImplication","getFdaImplicationKey","finalList","sortTherapeuticImplications","implications","SUMMARY_TITLE","GENE_SUMMARY","ALTERATION_SUMMARY","TUMOR_TYPE_SUMMARY","DIAGNOSTIC_SUMMARY","PROGNOSTIC_SUMMARY","getSummaries","orderedSummaries","onToggle","ReportIssue","GenePageTable","getNCBIlink","pathnameOrParams","params","protocol","host","elements","ReferenceList","pmidData","setPmidData","apiCalled","setApiCalled","pmidPending","pmidLoaded","post","err","JSON","parse","uids","pubMedRecords","getPmidData","list","pubmedData","articleContent","parts","prefix","abstractParts","isAbstract","abstractLink","ids","componentType","parseInt","regex","part","LongText","propText","cutoff","expandedText","setExpandedText","shortText","words","pop","shortenTextByCharacters","linkOutText","FdaTabDescription","DescriptionTooltip","defaultSelectedTab","selectedTab","getTabDescription","hasTxData","hasDxData","hasPxData","hasFdaData","defaultTabBasedOnData","getTabDefaultActiveKey","tx","dx","px","fda","onChangeTab","newTabKey","implication","drugDescription","zIndex","biological","getContent","tabDescriptionStyle","tabClassName","panelClassName","panel","descriptionColumn","txHasDescriptions","citationColumn","alterationsView","cancerTypesView","mutationEffectAbstracts","mutationEffectPmids","mutationEffectDescription","alterationView","cancerTypeView","biologicalTableColumns","therapeuticTableColumns","dxpxTableColumns","fdaTableColumns","selectedTabKey","tabDefaultActiveKey","items","transform","AlterationTableTabs","updateTumorTypeQuery","onChangeTumorType","lHugo","altNameIncludesGene","isOtherBiomarkers","biologicalAlterations","relevantAlterations","headerTumorTypeSelection","control","base","dropdownIndicator","clearIndicator","valueContainer","menu","tumorTypeSummaries","summary","matchedAlteration","relevantBiologicalVariants","therapeuticImplications","AlterationView","ImplicationDescriptionCell","userAuthenticated","getDrugAssociationCellText","CompactDrugCell","getRows","getTxRows","hasDescription","getCompactTxRows","getNonCompactTxRows","AnnotationType","CancerTypeViewTable","getColumns","cancerTypeSimpleTableHead","TxView","txStandardCares","txInvestigationalCares","DxPxView","FdaView","CancerTypeView","PowerBySource","logo","Icon","iconClassName","colorClassName","TextBreadcrumb","Breadcrumb","LinkBreadcrumb","linkAs","linkProps","InputBreadcrumb","editing","setEditing","setText","borderRadius","DropdownBreadcrumb","theme","colors","primary","baseStyles","option","paddingTop","paddingBottom","indicatorSeparator","defaultValue","AnnotationBreadcrumbs","breadcrumbs","breadcrumb","commonProps","GRCh38","UnknownGeneAlert","segments","varSegs","alterationStr","altRegex","matches","exec","alleleLines","allele","showMutationEffect","store","cancerTypeName","toggleMutationEffect","getImplications","articles","referenceGenomeQuery","article","getEvidenceByEvidenceTypes","evidenceTypes","uniqueEvidences","evidenceType","uniqBy","annotationData","mappedAlteration","term","ctNames","excludedCtNames","DIAGNOSTIC_IMPLICATION","PROGNOSTIC_IMPLICATION","annotationType","PROTEIN_CHANGE","isComplete","geneNumber","ensemblGenes","clinicalAlterations","alterationNameWithDiff","HGVSG","hgvsgQuery","GENOMIC_CHANGE","genomicChangeQuery","getAnnotationComponents","categoricalAlterationDescription","geneLink","getCategoricalAlterationDescription","flex","showGeneName","categoricalAltDescription","alterationSummaries","isError","navBreadcrumbs","pageShouldBeRendered","AnnotationPage","getCustomFilterAppliers","mutationMapperProps","mutationMapperData","tracks","OncoKB","CancerHotspots","PTM","oncogenicities","uniqOncogenicity","isoformOverrideSource","filterAppliersOverride","mutationMapperStore","annotationResultByHgvsg","hugoSymbolQuery","alterationQuery","geneBackground","GENE_BACKGROUND","clinicalVariant","mutationMapperDataExternal","hugoGeneSymbol","proteinChange","proteinPosEnd","proteinPosStart","referenceAllele","refResidues","variantAllele","variantResidues","mutationType","defaultAnnotationResult","annotationResult","tumorTypeQuery","hgvsg","annotationResultByGenomicChange","genomicChange","portalAlterationSampleCount","mutationMapperDataPortal","indexedByProteinChange","keyBy","proteinEndPosition","proteinStartPosition","hgsvgQuery","calculateOncogenicities","counts","dataStore","dataFilters","cancerTypeFilter","selectedPositions","barChartData","x","oncogenicityFilter","selectionFilters","POSITION","positionFilter","computeAlterationName","showDiff","isOncogenic","matchedCancerType","groupedCanerTypeCounts","cancerGroups","numUniqSampleCountsInCancerType","sampleId","y","oncogenicityFilters","selectedCancerTypes","filteredBarChartData","isFiltered","isMatch","filteredAlterationsByBarChart","reaction","totalBars","currentBarIndex","mousePosition","BarChartToolTip","toolTipModel","barPlotEvents","eventHandlers","onMouseMove","pageX","pageY","max","textHeight","FONT_SIZE","textWidth","cos","PI","lastThreeElements","takeRight","isDataBinSelected","dataBin","containerComponent","selectionDimension","onSelection","points","bounds","onUserSelection","point","dataPoint","xName","domainPadding","parent","left","rightPadding","bottom","bottomPadding","tickLabels","angle","verticalAnchor","textAnchor","fontFamily","ticks","fill","stroke","strokeWidth","dependentAxis","tickFormat","Number","isInteger","toFixed","axisLabel","barRatio","createPortal","windowWidth","ref","BarChart","MskimpactLink","EnsemblIdLinkout","lowKeyLinkout","ensemblId","getEnsemblText","grch37","grch38","RefSeqLinkout","refSeq","grch37ensemblGene","grch38ensemblGene","ensemblGeneId","chromosome","start","firstRowTdStyle","borderTop","inline","selectedOncogenicities","OncokbMutationMapper","hidePlotControls","mapperMaxWidth","showTrackSelector","showPlotLegendToggle","showPlotYMaxSlider","showPlotDownloadControls","windowWrapper","filteredBiologicalAlterations","xor","OncokbLollipopPlot","queryStringsHash","defaultShowGeneBackground","showGeneBackground","getAlterationsByLevelType","filteredClinicalAlterations","getClinicalImplications","clinicalVariants","cancerTypeNames","excludedCancerTypeNames","getFdaImplication","oncogenicBiologicalVariants","biologicalVariant","componentDidUpdate","prevProps","toggleGeneBackground","xl","findLast","genePanelClass","showPlotControlsOnHover","filteredTxAlterations","filteredDxAlterations","filteredPxAlterations","GenePage","newTumorType","tumorTypeSection","updateQuery","documentTitle","AlterationPage","getSectionClassName","theFirst","getAccountInfoTitle","license","EMAIL","COMPANY_SECTION_TITLE","COMPANY","ExtensionType","DividerWithInfo","container","USER_BUTTON_TYPE","DateSelector","selectedDay","extensionType","setExtensionType","baseDate","currentDate","toISOString","FROM_TODAY","defaultChecked","FROM_EXPIRATION","amount","unit","unitText","val","momentInstance","afterChangeDate","add","onDayChange","day","inputProps","formatDate","parseDate","CalendarButton","DropdownButton","InputGroup","Append","CopyButton","copied","setCopied","getTime","getDuration","expireInDays","expireInHours","sortedTokens","expirationDay","expirationHour","FormControl","contentEditable","Text","changeTokenExpirationDate","newDate","extendExpirationDate","deleteTokenAllowed","onDeleteToken","pointerEvents","TokenInputGroups","InfoRow","titleWidth","contentWidth","direction","copiedIdToken","addNewToken","licenseType","NAME","firstName","lastName","LICENSE_TYPE","licenseTitle","jobTitle","companyName","CITY","city","COUNTRY","country","API_TOKEN","generateTokenEnabled","AccountPage","emailTitle","activateAccount","activateKey","getSuccessfulMessage","getFailureMessage","defaultInfo","ActivateAccount","resetPassword","mail","resetStatus","SUCCESSFUL","FAILURE","PasswordResetInit","idx","force","flags","passedMatches","pts","col","getPoints","lowerLetters","upperLetters","numbers","symbols","isMatchedFlag","min","ErrorAlert","handleValidSubmit","keyAndPassword","newPassword","getResetForm","PasswordResetFinish","shouldBeRedirect","PageNotFound","currentPassword","handleSavePassword","passwordChangeDto","AccountPassword","SimpleConfirmModal","onCancel","preventDefault","Modal","onHide","closeButton","Title","Body","Footer","onConfirm","EmailTable","mailType","sentDate","sentFrom","sentBy","showConfirmModal","userMails","showUpdateStatusModal","showAddAuthorityModal","users","mailTypes","mailsFrom","selectedUserLogin","newUserLogin","getUserMails","selectedMailType","selectedMailFrom","selectedMailCc","sendEmail","canSendEmail","cc","by","user","first","sendingMail","UserManagementPage","activated","FormSection","AccountType","FormKey","loadedUsers","currentSelected","authority","currentSelectedButton","VERIFIED","currentSelectedFilter","emailVerified","licenseTypes","userButtons","ALL","tableHeader","createdDate","getStatus","confirmUpdatingUser","verifyUserEmail","getUsers","toggleFilter","button","cancelUpdateActiveStatus","updateActiveStatus","userToUpdate","updateUser","activationKey","updatedUser","oldUserIndex","findIndex","u","userDto","unlinkUser","userMatched","filterButton","filteredUser","UserDetailsPage","SelectionButton","selectedButton","onSelectLicense","LicenseTypeButtonOptions","ButtonSelections","LicenseInquireLink","FormSelectWithLabelField","boldLabel","labelText","RegisterStatus","ACCOUNT_TYPE_DEFAULT","selectedAccountType","companyOptions","defaultFormValue","accountType","tokenValidDays","defaultLicense","selectedLicense","getAllCompanies","newUser","tokenIsRenewable","company","selectedCompanyOption","constructAdditionalInfo","notifyUserOnTrialCreation","userCompany","COMPANY_SIZE","COMPANY_DESCRIPTION","ANTICIPATED_REPORTS","USE_CASE","BUS_CONTACT_EMAIL","BUS_CONTACT_PHONE","businessContact","phone","getLicenseAdditionalInfo","visibleSections","commonDescription","isCommercialLicense","updatePassword","byAdmin","companies","companyType","onSelectCompany","licenseStatus","emailDomain","substring","hasADomainMatch","companyDomains","LICENSE","autoComplete","FIRST_NAME","LAST_NAME","showEmailMismatchConfirmation","companyDescriptionPlaceholder","useCasePlaceholder","NewAccountForm","registerStatus","NA","newAccount","managedUserVm","successToRegistered","failedToRegistered","REGISTERED","registerError","NOT_SUCCESS","Partial","CreateAccountPage","UsageToggleGroup","ToggleButtons","toggleValues","ToggleButton","ToggleButtonGroup","handleToggle","filterDependentTimeHeader","timeTypeToggleValue","ToggleValue","RESULTS_IN_TOTAL","filterDependentResourceHeader","resourcesTypeToggleValue","PUBLIC_RESOURCES","getUsageTextClassName","usage","UsageType","toLocaleString","UsageTableColumnKey","ALLOWED_USAGETYPE","USER","RESOURCE","getUsageTableColumnDefinition","RESOURCES","USAGE","TIME","OPERATION","CreateCompanyStatus","topUsersToggleValue","ALL_USERS","userTabResourcesTypeToggleValue","resourceTabResourcesTypeToggleValue","dropdownList","dropdownValue","usageType","newType","usageDetail","resource","Map","yearSummary","year","yearUsage","resourceEntry","time","monthSummary","month","monthUsage","usageArray","handleTopUsersToggleChange","handleUserTabResourcesTypeToggleChange","handleResourceTabResourcesTypeToggleChange","toggleType","ALL_RESOURCES","totalUsage","userEmail","endpoint","noPrivateEndpoint","userId","ADMIN_USER_USAGE_DETAILS_LINK","TOP_USERS","calculateResourcesTabData","ADMIN_RESOURCE_DETAILS_LINK","monthDropdown","reverse","evt","UsageAnalysisPage","UsageAnalysisCalendarButton","open","isOpen","currentToggleState","currentFromDate","currentToDate","menuState","fromDate","filterToggled","toDate","dayPickerProps","initialMonth","defaultResourcesType","defaultTimeType","handleResourcesTypeToggleChange","handleTimeTypeToggleChange","RESULTS_BY_MONTH","RESULTS_BY_DAY","fromTime","toTime","CUMULATIVE_USAGE","has","resourceTimeRange","Array","calculateData","loadedData","currentMenuState","dropdownMenuOpen","filterActive","UserUsageDetailsTable","dayUsage","userFirstName","userLastName","UserUsageDetailsPage","ResourceUsageDetailsTable","resourceDetail","detailUsage","ResourceUsageDetailsPage","hasWarning","onDelete","list_container","main","conflictingItems","ListBox","isInputValid","inputText","showError","listLengthValidation","context","domainValidation","onEnterKey","which","addItem","customLength","onKeyPress","deleteItem","FormListField","FormTextAreaField","onTextAreaChange","AdditionalInfoSelect","COMPANY_FORM_OPTIONS","licenseModel","companyDescription","selectedCompanyType","selectedLicenseModel","selectedLicenseType","selectedLicenseStatus","conflictingDomains","updateCompanyDescription","optionSubset","verifyCompanyDomains","names","domainDTO","newCompany","legalContact","async","domainName","licenseStatusOptions","NewCompanyForm","createCompanyStatus","PENDING","companyDto","createCompanySuccess","createCompanyFailure","CREATE_ERROR","createCompanyError","CreateCompanyPage","QuickToolButton","onError","numberOfUsers","ADMIN_ADD_COMPANY","CompanyDetailsPage","ReadOnlyPage","ReadOnlyMode","showWarningOnly","readonly","AnnotationColumnHeaderType","exact","ADMIN_USER_USAGE_DETAILS","ADMIN_RESOURCE_DETAILS","SendEmailsPage","NewlyAddedGenesListItem","flexWrap","hugo","FdaApprovalLink","linkText","approval","FdaBreakthroughLink","AbstractLink","NccnLink","PMALink","pma","convertGeneInputToLinks","geneInput","itemLinks","linkableMutationName","mutationInput","excludedChars","geneInputHasExcludedChars","char","mutationInputHasExcludedChars","getColumnIndexByName","annotationColumnHeader","columnName","PromiseStatus","ChangedAnnotationListItem","longestRow","useOneLineRowClass","defaultTitle","columnHeaderType","CHANGED_ANNOTATION_DRUG_COLUMNS","ADDITIONAL_SAME_LEVEL_DRUG","CHANGED_ANNOTATION_ADDITIONAL_DRUG_SAME_LEVEL_COLUMNS","ADDITIONAL_DIFF_LEVEL_DRUG","CHANGED_ANNOTATION_ADDITIONAL_DRUG_DIFF_LEVEL_COLUMNS","CHANGED_ANNOTATION_LEVEL_COLUMNS","geneColumnIndex","mutationColumnIndex","MUTATION","oneRowHeader","NEWLY_ADDED_LEVEL_FOUR_COLUMNS","UPDATED_IMPLICATION_COLUMNS","UPDATED_IMPLICATION_OLD_FORMAT_COLUMNS","CDX_COLUMNS","NEWS_BY_DATE","changedAnnotations","newlyAddedGenes","news","rowSpan","priorityNews","updatedImplicationTitle","updatedImplication","subItem","subIndex","changedAnnotationTableHead","FAQ_LINK","numOfAssociationsInUpdatedImplication","updatedImplicationInOldFormat","newlyAddedGenesTypes","ERBB","UpdatedTxImplListItem","numOFAssociations","UpdatedTxImplOldFormatListItem","hide","scroll","getNewsTitle","getNews","getNewsList","newsItem","showAnchor","getNewlyAddGeneSection","newsData","componentProps","NewsList","getElementById","NewsPage","RecaptchaBoundaryRoute","lowerCasePathName","parsedSearchQueryString","GenomicPage","AccountStatus","EmailVerifiedStatus","TrialAccountModal","onClose","getInitiationLink","trialAccount","activation","baseUrl","initiationDate","initiatedBy","activationDate","licenseAgreement","acceptanceDate","tooltipProps","buttonProps","buttonContent","KeyInputGroups","keyVal","onCreate","infoOverlay","SimpleConfirmModalType","BoldAccountTitle","CreateUserMode","CreationStatus","userTokens","showTrialAccountModal","showSimpleConfirmModal","simpleConfirmModalType","userUsage","usersUserMails","defaultSelectedAccountType","newDefault","getUser","getUserTokens","disposer","UNVERIFIED","notifyOnSuccess","extendTrialAccess","all","updatedUserDTO","updatedTokenValidDays","getUserStatus","complete","setDate","updatedUserCompany","useCase","additionalInfoUserCase","updatedAdditionalInfo","ACTIVATED","resetDate","pending","generateResetKey","generateTrialActivationKey","onClickTrialAccountButton","trialInitiated","INITIATE_TRIAL","onConfirmSimpleConfirmModal","onConfirmInitiateTrialAccountButton","DELETE_ACCOUNT","onConfirmDeleteAccountButton","DELETE_ACTIVATION_KEY","DELETE_RESET_KEY","resetKey","GENERATE_RESET_KEY","deletedUser","generateActivationKeyInfoOverlay","generateResetKeyInfoOverlay","trialAccountButtonText","shortestToken","ID","defaultSelectedEmailVerifiedStatus","selectedEmailVerifiedStatus","lastModifiedBy","lastModifiedDate","Label","ADDITIONAL_INFO_USER_CASE","INACTIVATED","UserPage","LicenseAgreement","orderedList","listStyleType","loadingActivationInfo","keyAndTermsVm","readAndAgreeWithTheTerms","infoMessage","ActivateTrialFinish","showUserStatusModal","currentSelectedUser","getAccountStatus","onVerifyUserEmail","alignUserLicenseStatus","unlinkUserFromCompany","updateCallback","onRemoveUser","onUpdateUser","usersTokens","UserTable","LICENSE_STATUS_UPDATE_MESSAGES","getCompanyStatus","getCompanyUsersStatus","getDropdownUsersStatus","showLicenseChangeModal","confirmLicenseChangeModalText","companyUsers","companyUserTokens","dropDownUsers","selectedUsersOptions","getCompany","getDropdownUsers","getCompanyUserInfo","getCompanyUserTokens","logins","updateCompany","newCompanyUserEmails","selection","updatedCompany","formValues","companyUserEmails","companyVm","updatedCompanyDTO","selectRelatedUsers","removeUserFromCompany","userToRemove","updateCompanyUser","hideOptions","userData","profiles","Blob","trialTokens","companyHasTrialUsers","URL","createObjectURL","companyUserDownloadData","isMulti","hideSelectedOptions","selectedOptions","maxMenuHeight","licenseChangeModalBody","CompanyPage","VIDEO_TAB_EKY","emptyUserInfo","creationStatus","EDIT","needsMskRocReview","userInfos","createdUsers","createUserMode","SINGLE","usersInputText","createUserStatus","switchToBatch","BATCH","switchToSingle","onTabKey","selectionStart","selectionEnd","managedUserVMs","userInfo","SUCCESS","ERROR","promise","created","notCreated","prev","curr","userDetails","duplicateEmailValidation","parseUserInfoText","every","userInfoFields","getErrorMessages","failedUsers","getCreateUserModeTabs","onKeyDown","tabKey","CreateCompanyUsersPage","TITLE","INSTITUTION","MEMBER_TYPE","selectedVideoTabKey","getTabIframe","frameBorder","allow","allowFullScreen","getTutorialTabs","links","youTube","bilibili","getVideoTabs","DEMO","TUTORIALS","process","AboutPage","COILinkout","faculty","FACULTY_COI_WEBSITE_LINK","TeamMember","middleName","showCOI","institution","TeamPage","teamMembers","PHD","MSC","BSC","MPA","MD","cgac","FACP","MPH","member","eab","MDANDERSON","FRCPC","PRINCE","DFCI","JH","pastContributors","CURATOR","CGAC","CORE","BA","selectedPcType","setSelectedPcType","COLUMNS","TABLE_TITLE","BiomarkerTable","fontWeight","tableKey","DATA","YearEndSummaryPage","setShowAnchor","selectedYear","YEAR_END_SUMMARY_RANGE","newSelectedTab","getHistoryBySelectedTab","getYearEndSummaryEventKey","parseYearEndSummaryEventKey","unmountOnExit","Link","inYearEndSummarySection","Content","Pane","position","AboutPageNavTab","SwaggerApiLink","SWAGGER_UI","getDataTitle","DownloadButtonGroups","hasAllCuratedGenes","hasCancerGeneList","hasAllActionableVariants","dataAvailability","availableVersions","release","currentVersionData","hasAllAnnotatedVariants","onApplyForLicense","selectedVersion","selectedData","APIAccessPage","OncoKBLink","urlLicense","showStr","newSelection","redirectToAccountPage","READY_REDIRECT","getRegisteredMessage","RegisterPage","DRUG_CLASSIFICATION","ReadOnlyRegisterPage","tabKeys","getTabPane","ApiAccessPageNavTab","stores","FAQ","pubWebToken","sortAndUniqByValue","txs","separators","footnotes","naDetectionMethod","DefinitionTooltip","footnoteKey","showDefinition","setShowDefinition","hasFilter","setHasFilter","biomarkerSearch","setBiomarkerSearch","therapySearch","setTherapySearch","selectedDetectionMethods","setSelectedDetectionMethods","selectedDrugClassifications","setSelectedDrugClassifications","filteredPoTxs","setFilteredPoTxs","drugClassificationStats","setDrugClassificationStats","selectedDetectionMethod","biomarkerDetection","dc","drugClassification","biomarker","Input","FIRST_IN_CLASS","MECHANISTICALLY_DISTINCT","FOLLOW_ON","classification","LEGACY_ACTIONABLE_GENE","LEGACY_API_ACCESS","LEGACY_DATA_ACCESS","LEGACY_CANCER_GENES","HGVSG_WITH_QUERY","GENOMIC_CHANGE_WITH_QUERY","ALTERATION_TUMOR_TYPE","redirectPath","getOldLevelsRedirectRoute","ADMIN","CREATE_COMPANY_USERS","FeedbackModal","sendingFeedback","setSendingFeedback","sentFeedback","setSentFeedback","getFeedbackTitle","modalTitle","getFeedbackEmailBody","showModal","onHideModal","subject","FdaModal","confirmLeavingFdaTab","lastLocation","FOOTER_ROUTE_EXCLUSION","handleBlockedNavigation","nextLocation","afterConfirm","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ribbonEnv","isInProduction","isSwaggerEnabled","when","fdaRedirectLastLocation","showFooter","Main","inProduction","recaptchaVerified","handleWindowResize","setWindowSize","onClickEvents","windowObj","addEventListener","registerOnClickEvent","func","innerWidth","innerHeight","recaptchaRef","recaptchaRendered","executeRecaptcha","current","onRecaptchaVerify","getResponse","onRecaptchaRender","checkHash","browserHistory","googleAnalyticsProjectId","initialize","App","responseType","callback","statusCode","appProfile","PROD","STORAGE_KEY","WEBSITE_RELOAD_TIMES_KEY","getMonth","getDay","getHours","newIncrement","reload","dsn","integrations","environment","tracesSampleRate","replaysOnErrorSampleRate","ignoreErrors","denyUrls"],"mappings":"aACE,SAASA,qBAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,uBAER,SAASA,uBAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,oBAAoBA,oBAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,oBAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,qBAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,oBAAoBO,EAAInB,EAGxBY,oBAAoBQ,EAAIN,EAGxBF,oBAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,oBAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,oBAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,oBAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,oBAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,oBAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,oBAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,oBAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,oBAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,oBAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,oBAAoB8B,EAAI,GAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,qBAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,qBAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAI1B1C,EAAgBJ,KAAK,CAAC,KAAK,IAEpBM,uB,sBCvJT,IAAI0C,EAAM,EAAQ,IACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQd,WAAac,EAAQC,QAAUD,KAG/CA,EAAU,CAAC,CAAC/B,EAAO1B,EAAIyD,EAAS,MAG9C,IAAIE,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAEPH,EAAIC,EAASE,GAI1BjC,EAAOD,QAAUgC,EAAQG,QAAU,I,2CChBnCnC,EADkC,EAAQ,GAChCoC,EAA4B,IAE9BrD,KAAK,CAACkB,EAAO1B,EAAI,o3BAAq3B,KAE94ByB,EAAQmC,OAAS,CAChB,cAAiB,qDACjB,mBAAsB,0DACtB,qBAAwB,4DACxB,UAAa,kDAEdlC,EAAOD,QAAUA,G,mBCZjB,SAASqC,oBAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,oBAAoBK,KAAO,WAAa,MAAO,IAC/CL,oBAAoBM,QAAUN,oBAC9BpC,EAAOD,QAAUqC,oBACjBA,oBAAoBO,GAAK,M,sBCNzB5C,EADkC,EAAQ,GAChCoC,EAA4B,IAE9BrD,KAAK,CAACkB,EAAO1B,EAAI,kp3NAAqp3N,KAE9q3NyB,EAAQmC,OAAS,CAChB,GAAM,0BACN,GAAM,0BACN,GAAM,0BACN,GAAM,0BACN,GAAM,0BACN,GAAM,0BACN,KAAQ,4BACR,YAAa,iCACb,YAAa,iCACb,YAAa,iCACb,YAAa,iCACb,MAAS,6BACT,KAAQ,4BACR,gBAAiB,qCACjB,cAAe,mCACf,mBAAoB,wCACpB,WAAc,kCACd,WAAc,kCACd,oBAAqB,yCACrB,YAAa,iCACb,gBAAiB,qCACjB,OAAU,8BACV,aAAc,kCACd,iBAAkB,sCAClB,iBAAkB,sCAClB,UAAa,iCACb,kBAAmB,uCACnB,eAAgB,oCAChB,eAAgB,oCAChB,eAAgB,oCAChB,eAAgB,oCAChB,IAAO,2BACP,aAAc,kCACd,IAAO,2BACP,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,SAAU,8BACV,SAAU,8BACV,SAAU,8BACV,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,YAAa,iCACb,YAAa,iCACb,YAAa,iCACb,SAAU,8BACV,cAAe,mCACf,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,YAAa,iCACb,YAAa,iCACb,YAAa,iCACb,SAAU,8BACV,cAAe,mCACf,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,YAAa,iCACb,YAAa,iCACb,YAAa,iCACb,SAAU,8BACV,cAAe,mCACf,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,YAAa,iCACb,YAAa,iCACb,YAAa,iCACb,SAAU,8BACV,cAAe,mCACf,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,cAAe,mCACf,aAAc,kCACd,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,YAAa,iCACb,YAAa,iCACb,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,iBAAkB,sCAClB,gBAAiB,qCACjB,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,eAAgB,oCAChB,eAAgB,oCAChB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,iBAAkB,sCAClB,gBAAiB,qCACjB,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,eAAgB,oCAChB,eAAgB,oCAChB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,iBAAkB,sCAClB,gBAAiB,qCACjB,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,eAAgB,oCAChB,eAAgB,oCAChB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,gBAAiB,qCACjB,iBAAkB,sCAClB,gBAAiB,qCACjB,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,cAAe,mCACf,eAAgB,oCAChB,eAAgB,oCAChB,MAAS,6BACT,WAAY,gCACZ,iBAAkB,sCAClB,mBAAoB,wCACpB,gBAAiB,qCACjB,cAAe,mCACf,gBAAiB,qCACjB,kBAAmB,uCACnB,gBAAiB,qCACjB,aAAc,kCACd,gBAAiB,qCACjB,eAAgB,oCAChB,cAAe,mCACf,aAAc,kCACd,eAAgB,oCAChB,aAAc,kCACd,cAAe,mCACf,sBAAuB,2CACvB,sBAAuB,2CACvB,sBAAuB,2CACvB,sBAAuB,2CACvB,mBAAoB,wCACpB,eAAgB,oCAChB,oBAAqB,yCACrB,qBAAsB,0CACtB,iBAAkB,sCAClB,oBAAqB,yCACrB,oBAAqB,yCACrB,yBAA0B,8CAC1B,kBAAmB,uCACnB,kBAAmB,uCACnB,aAAc,kCACd,YAAa,iCACb,WAAY,gCACZ,aAAc,kCACd,mBAAoB,wCACpB,mBAAoB,wCACpB,oBAAqB,yCACrB,iBAAkB,sCAClB,gBAAiB,qCACjB,gBAAiB,qCACjB,WAAY,gCACZ,gBAAiB,qCACjB,uBAAwB,4CACxB,uBAAwB,4CACxB,oBAAqB,yCACrB,oBAAqB,yCACrB,mBAAoB,wCACpB,kBAAmB,uCACnB,aAAc,kCACd,cAAe,mCACf,cAAe,mCACf,iBAAkB,sCAClB,IAAO,2BACP,MAAS,6BACT,SAAY,gCACZ,cAAe,mCACf,OAAU,8BACV,KAAQ,4BACR,kBAAmB,uCACnB,gBAAiB,qCACjB,cAAe,mCACf,WAAY,gCACZ,cAAe,mCACf,aAAc,kCACd,YAAa,iCACb,WAAY,gCACZ,sBAAuB,2CACvB,wBAAyB,6CACzB,sBAAuB,2CACvB,mBAAoB,wCACpB,sBAAuB,2CACvB,qBAAsB,0CACtB,oBAAqB,yCACrB,mBAAoB,wCACpB,WAAY,gCACZ,YAAe,mCACf,SAAU,8BACV,eAAgB,oCAChB,SAAU,8BACV,eAAgB,oCAChB,YAAa,iCACb,KAAQ,4BACR,SAAY,gCACZ,WAAc,kCACd,OAAU,8BACV,UAAa,iCACb,SAAY,gCACZ,SAAY,gCACZ,gBAAiB,qCACjB,qBAAsB,0CACtB,sBAAuB,2CACvB,wBAAyB,6CACzB,yBAA0B,8CAC1B,wBAAyB,6CACzB,yBAA0B,8CAC1B,wBAAyB,6CACzB,yBAA0B,8CAC1B,wBAAyB,6CACzB,yBAA0B,8CAC1B,mBAAoB,wCACpB,gBAAiB,qCACjB,kBAAmB,uCACnB,qBAAsB,0CACtB,YAAa,iCACb,qBAAsB,0CACtB,cAAe,mCACf,wBAAyB,6CACzB,mBAAoB,wCACpB,cAAe,mCACf,sBAAuB,2CACvB,qBAAsB,0CACtB,mBAAoB,wCACpB,iBAAkB,sCAClB,iBAAkB,sCAClB,wBAAyB,6CACzB,kBAAmB,uCACnB,eAAgB,oCAChB,gBAAiB,qCACjB,mBAAoB,wCACpB,mBAAoB,wCACpB,eAAgB,oCAChB,IAAO,2BACP,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,YAAa,iCACb,WAAY,gCACZ,gBAAiB,qCACjB,cAAe,mCACf,WAAY,gCACZ,OAAU,8BACV,eAAgB,oCAChB,aAAc,kCACd,cAAe,mCACf,kBAAmB,uCACnB,iBAAkB,sCAClB,sBAAuB,2CACvB,mBAAoB,wCACpB,mBAAoB,wCACpB,mBAAoB,wCACpB,mBAAoB,wCACpB,gBAAiB,qCACjB,eAAgB,oCAChB,cAAe,mCACf,KAAQ,4BACR,aAAc,kCACd,kBAAmB,uCACnB,YAAa,iCACb,aAAc,kCACd,gBAAiB,qCACjB,YAAa,iCACb,YAAa,iCACb,cAAe,mCACf,cAAe,mCACf,mBAAoB,wCACpB,oBAAqB,yCACrB,mBAAoB,wCACpB,WAAY,gCACZ,eAAgB,oCAChB,kBAAmB,uCACnB,YAAa,iCACb,aAAc,kCACd,eAAgB,oCAChB,UAAa,iCACb,WAAc,kCACd,kBAAmB,uCACnB,WAAc,kCACd,YAAa,iCACb,YAAa,iCACb,gBAAiB,qCACjB,gBAAiB,qCACjB,MAAS,6BACT,aAAc,kCACd,gBAAiB,qCACjB,kBAAmB,uCACnB,gBAAiB,qCACjB,aAAc,kCACd,gBAAiB,qCACjB,eAAgB,oCAChB,cAAe,mCACf,aAAc,kCACd,UAAa,iCACb,kBAAmB,uCACnB,MAAS,6BACT,gBAAiB,qCACjB,aAAc,kCACd,oBAAqB,yCACrB,MAAS,6BACT,gBAAiB,qCACjB,kBAAmB,uCACnB,gBAAiB,qCACjB,aAAc,kCACd,gBAAiB,qCACjB,eAAgB,oCAChB,cAAe,mCACf,aAAc,kCACd,SAAY,gCACZ,eAAgB,oCAChB,uBAAwB,4CACxB,wBAAyB,6CACzB,uBAAwB,4CACxB,MAAS,6BACT,aAAc,kCACd,yBAA0B,8CAC1B,wBAAyB,6CACzB,2BAA4B,gDAC5B,2BAA4B,gDAC5B,2BAA4B,gDAC5B,2BAA4B,gDAC5B,mBAAoB,wCACpB,0BAA2B,+CAC3B,4BAA6B,iDAC7B,0BAA2B,+CAC3B,uBAAwB,4CACxB,0BAA2B,+CAC3B,yBAA0B,8CAC1B,wBAAyB,6CACzB,uBAAwB,4CACxB,MAAS,6BACT,QAAW,+BACX,KAAQ,4BACR,eAAgB,oCAChB,aAAc,kCACd,aAAc,kCACd,MAAS,6BACT,eAAgB,oCAChB,eAAgB,oCAChB,0BAA2B,+CAC3B,gBAAiB,qCACjB,eAAgB,oCAChB,eAAgB,oCAChB,aAAc,kCACd,wBAAyB,6CACzB,iBAAkB,sCAClB,cAAe,mCACf,0BAA2B,+CAC3B,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,QAAW,+BACX,MAAS,6BACT,iBAAkB,sCAClB,kBAAmB,uCACnB,mBAAoB,wCACpB,oBAAqB,yCACrB,kBAAmB,uCACnB,gBAAiB,qCACjB,QAAW,+BACX,iBAAkB,sCAClB,kBAAmB,uCACnB,mBAAoB,wCACpB,oBAAqB,yCACrB,iBAAkB,sCAClB,kBAAmB,uCACnB,eAAgB,oCAChB,SAAY,gCACZ,gBAAiB,qCACjB,iBAAkB,sCAClB,gBAAiB,qCACjB,qBAAsB,0CACtB,qBAAsB,0CACtB,qBAAsB,0CACtB,sBAAuB,2CACvB,gBAAiB,qCACjB,wBAAyB,6CACzB,wBAAyB,6CACzB,6BAA8B,kDAC9B,6BAA8B,kDAC9B,sBAAuB,2CACvB,mBAAoB,wCACpB,iBAAkB,sCAClB,oBAAqB,yCACrB,eAAgB,oCAChB,kBAAmB,uCACnB,iBAAkB,sCAClB,YAAa,iCACb,eAAgB,oCAChB,eAAgB,oCAChB,oBAAqB,yCACrB,iBAAkB,sCAClB,aAAc,kCACd,eAAgB,oCAChB,aAAc,kCACd,UAAW,+BACX,aAAc,kCACd,YAAa,iCACb,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,iBAAkB,sCAClB,OAAU,8BACV,aAAc,kCACd,eAAgB,oCAChB,gBAAiB,qCACjB,cAAe,mCACf,WAAY,gCACZ,eAAgB,oCAChB,iBAAkB,sCAClB,kBAAmB,uCACnB,gBAAiB,qCACjB,iBAAkB,sCAClB,mBAAoB,wCACpB,iBAAkB,sCAClB,cAAe,mCACf,iBAAkB,sCAClB,gBAAiB,qCACjB,eAAgB,oCAChB,cAAe,mCACf,eAAgB,oCAChB,aAAc,kCACd,QAAW,+BACX,cAAe,mCACf,gBAAiB,qCACjB,iBAAkB,sCAClB,eAAgB,oCAChB,aAAc,kCACd,iBAAkB,sCAClB,eAAgB,oCAChB,YAAa,iCACb,SAAY,gCACZ,SAAU,8BACV,WAAY,gCACZ,iBAAkB,sCAClB,UAAW,+BACX,UAAW,+BACX,cAAe,mCACf,eAAgB,oCAChB,SAAU,8BACV,gBAAiB,qCACjB,YAAa,iCACb,cAAe,mCACf,oBAAqB,yCACrB,aAAc,kCACd,aAAc,kCACd,iBAAkB,sCAClB,kBAAmB,uCACnB,YAAa,iCACb,mBAAoB,wCACpB,YAAa,iCACb,cAAe,mCACf,oBAAqB,yCACrB,aAAc,kCACd,aAAc,kCACd,iBAAkB,sCAClB,kBAAmB,uCACnB,YAAa,iCACb,mBAAoB,wCACpB,YAAa,iCACb,cAAe,mCACf,oBAAqB,yCACrB,aAAc,kCACd,aAAc,kCACd,iBAAkB,sCAClB,kBAAmB,uCACnB,YAAa,iCACb,mBAAoB,wCACpB,YAAa,iCACb,cAAe,mCACf,oBAAqB,yCACrB,aAAc,kCACd,aAAc,kCACd,iBAAkB,sCAClB,kBAAmB,uCACnB,YAAa,iCACb,mBAAoB,wCACpB,eAAgB,oCAChB,iBAAkB,sCAClB,uBAAwB,4CACxB,gBAAiB,qCACjB,gBAAiB,qCACjB,oBAAqB,yCACrB,qBAAsB,0CACtB,eAAgB,oCAChB,sBAAuB,2CACvB,mBAAoB,wCACpB,wBAAyB,6CACzB,yBAA0B,8CAC1B,yBAA0B,8CAC1B,wBAAyB,6CACzB,wBAAyB,6CACzB,WAAY,gCACZ,cAAe,mCACf,mBAAoB,wCACpB,sBAAuB,2CACvB,YAAa,iCACb,cAAe,mCACf,oBAAqB,yCACrB,YAAa,iCACb,cAAe,mCACf,cAAe,mCACf,gBAAiB,qCACjB,gBAAiB,qCACjB,wBAAyB,6CACzB,sBAAuB,2CACvB,yBAA0B,8CAC1B,0BAA2B,+CAC3B,yBAA0B,8CAC1B,oBAAqB,yCACrB,kBAAmB,uCACnB,qBAAsB,0CACtB,uBAAwB,4CACxB,sBAAuB,2CACvB,sBAAuB,2CACvB,oBAAqB,yCACrB,uBAAwB,4CACxB,wBAAyB,6CACzB,uBAAwB,4CACxB,wBAAyB,6CACzB,kBAAmB,uCACnB,mBAAoB,wCACpB,iBAAkB,sCAClB,oBAAqB,yCACrB,sBAAuB,2CACvB,qBAAsB,0CACtB,cAAe,mCACf,iBAAkB,sCAClB,sBAAuB,2CACvB,yBAA0B,8CAC1B,eAAgB,oCAChB,iBAAkB,sCAClB,uBAAwB,4CACxB,eAAgB,oCAChB,iBAAkB,sCAClB,iBAAkB,sCAClB,mBAAoB,wCACpB,mBAAoB,wCACpB,2BAA4B,gDAC5B,yBAA0B,8CAC1B,4BAA6B,iDAC7B,6BAA8B,kDAC9B,4BAA6B,iDAC7B,uBAAwB,4CACxB,qBAAsB,0CACtB,wBAAyB,6CACzB,0BAA2B,+CAC3B,yBAA0B,8CAC1B,yBAA0B,8CAC1B,uBAAwB,4CACxB,0BAA2B,+CAC3B,2BAA4B,gDAC5B,0BAA2B,+CAC3B,2BAA4B,gDAC5B,qBAAsB,0CACtB,sBAAuB,2CACvB,oBAAqB,yCACrB,uBAAwB,4CACxB,yBAA0B,8CAC1B,wBAAyB,6CACzB,cAAe,mCACf,iBAAkB,sCAClB,sBAAuB,2CACvB,yBAA0B,8CAC1B,eAAgB,oCAChB,iBAAkB,sCAClB,uBAAwB,4CACxB,eAAgB,oCAChB,iBAAkB,sCAClB,iBAAkB,sCAClB,mBAAoB,wCACpB,mBAAoB,wCACpB,2BAA4B,gDAC5B,yBAA0B,8CAC1B,4BAA6B,iDAC7B,6BAA8B,kDAC9B,4BAA6B,iDAC7B,uBAAwB,4CACxB,qBAAsB,0CACtB,wBAAyB,6CACzB,0BAA2B,+CAC3B,yBAA0B,8CAC1B,yBAA0B,8CAC1B,uBAAwB,4CACxB,0BAA2B,+CAC3B,2BAA4B,gDAC5B,0BAA2B,+CAC3B,2BAA4B,gDAC5B,qBAAsB,0CACtB,sBAAuB,2CACvB,oBAAqB,yCACrB,uBAAwB,4CACxB,yBAA0B,8CAC1B,wBAAyB,6CACzB,cAAe,mCACf,iBAAkB,sCAClB,sBAAuB,2CACvB,yBAA0B,8CAC1B,eAAgB,oCAChB,iBAAkB,sCAClB,uBAAwB,4CACxB,eAAgB,oCAChB,iBAAkB,sCAClB,iBAAkB,sCAClB,mBAAoB,wCACpB,mBAAoB,wCACpB,2BAA4B,gDAC5B,yBAA0B,8CAC1B,4BAA6B,iDAC7B,6BAA8B,kDAC9B,4BAA6B,iDAC7B,uBAAwB,4CACxB,qBAAsB,0CACtB,wBAAyB,6CACzB,0BAA2B,+CAC3B,yBAA0B,8CAC1B,yBAA0B,8CAC1B,uBAAwB,4CACxB,0BAA2B,+CAC3B,2BAA4B,gDAC5B,0BAA2B,+CAC3B,2BAA4B,gDAC5B,qBAAsB,0CACtB,sBAAuB,2CACvB,oBAAqB,yCACrB,uBAAwB,4CACxB,yBAA0B,8CAC1B,wBAAyB,6CACzB,cAAe,mCACf,iBAAkB,sCAClB,sBAAuB,2CACvB,yBAA0B,8CAC1B,eAAgB,oCAChB,iBAAkB,sCAClB,uBAAwB,4CACxB,eAAgB,oCAChB,iBAAkB,sCAClB,iBAAkB,sCAClB,mBAAoB,wCACpB,mBAAoB,wCACpB,2BAA4B,gDAC5B,yBAA0B,8CAC1B,4BAA6B,iDAC7B,6BAA8B,kDAC9B,4BAA6B,iDAC7B,uBAAwB,4CACxB,qBAAsB,0CACtB,wBAAyB,6CACzB,0BAA2B,+CAC3B,yBAA0B,8CAC1B,yBAA0B,8CAC1B,uBAAwB,4CACxB,0BAA2B,+CAC3B,2BAA4B,gDAC5B,0BAA2B,+CAC3B,2BAA4B,gDAC5B,qBAAsB,0CACtB,sBAAuB,2CACvB,oBAAqB,yCACrB,uBAAwB,4CACxB,yBAA0B,8CAC1B,wBAAyB,6CACzB,aAAc,kCACd,cAAe,mCACf,aAAc,kCACd,gBAAiB,qCACjB,iBAAkB,sCAClB,gBAAiB,qCACjB,gBAAiB,qCACjB,iBAAkB,sCAClB,gBAAiB,qCACjB,gBAAiB,qCACjB,iBAAkB,sCAClB,gBAAiB,qCACjB,gBAAiB,qCACjB,iBAAkB,sCAClB,gBAAiB,qCACjB,gBAAiB,qCACjB,kBAAmB,uCACnB,kBAAmB,uCACnB,oBAAqB,yCACrB,oBAAqB,yCACrB,iBAAkB,sCAClB,kBAAmB,uCACnB,YAAa,iCACb,eAAgB,oCAChB,aAAc,kCACd,UAAW,+BACX,oBAAqB,yCACrB,YAAa,iCACb,OAAU,8BACV,YAAa,iCACb,cAAe,mCACf,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,QAAS,6BACT,SAAU,8BACV,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,QAAS,6BACT,SAAU,8BACV,SAAU,8BACV,SAAU,8BACV,aAAc,kCACd,aAAc,kCACd,SAAU,8BACV,SAAU,8BACV,iBAAkB,sCAClB,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,MAAO,2BACP,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,OAAQ,4BACR,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,OAAQ,4BACR,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,OAAQ,4BACR,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,OAAQ,4BACR,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,QAAS,6BACT,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,YAAa,iCACb,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,YAAa,iCACb,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,aAAc,kCACd,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,SAAU,8BACV,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,gCACZ,UAAW,+BACX,WAAY,gCACZ,WAAY,gCACZ,WAA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KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,gBAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,gBAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,gBAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,QAC7B,CAAED,KAAM,WAAYC,QAAS,iBAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,iBAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,iBAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SAC7B,CAAED,KAAM,WAAYC,QAAS,SA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ACV3D,KACE,qEAKR,CACE,KACA,OACA,QACA,mBACA,UACA,kBAAC,KAAa,CAACuoB,UA/lCW,MAgmCxB,kBAACw8C,aAAY,CACXphE,SAAU,4CACV3D,KACE,mEAGJ,kBAAC+kE,aAAY,CACXphE,SAAU,2CACV3D,KACE,uHAKR,CACE,IACA,SACA,sBACA,mBACA,WACA,kBAAC+kE,aAAY,CACXphE,SAAU,4CACV3D,KACE,uEAIN,CACE,IACA,SACA,SACA,iDACA,WACA,kBAAC+kE,aAAY,CACXphE,SAAU,qDACV3D,KACE,yHAIN,CACE,IACA,QACA,gBACA,mBACA,mBACA,kBAAC,KAAa,CAACuoB,UA9oCW,MA+oCxB,kBAACw8C,aAAY,CACXphE,SAAU,yCACV3D,KACE,4EAGJ,kBAAC6Q,SAAQ,CAAC9W,MAAO,eAGrB,CACE,IACA,OACA,OACA,mBACA,WACA,kBAACgrE,aAAY,CACXphE,SAAU,0CACV3D,KACE,gIAKRonE,mBAAoB,CAClB,CACEhB,iBAAkBjC,GAA2BmC,2BAC7Cv3E,QAAS,CACP,CACE,QACA,UACA,qBACA,IACA,4BACA,oC,cAEE,6B,aAGF,kBAAC,KAAa,CAACw5B,UArrCO,MAsrCpB,kBAACo8C,gBAAe,CACd3kE,KACE,gIAEF6kE,SAAU,sCAEZ,kBAACE,aAAY,CACXphE,SAAU,yCACV3D,KACE,qEAKR,CACE,MACA,gBACA,6BACA,IACA,oCACA,oC,wBAEE,6B,cAGF,kBAAC+kE,aAAY,CACXphE,SAAU,2CACV3D,KACE,oEAIN,CACE,SACA,iFACA,gBACA,IACA,0BACA,oC,yBAEE,6B,aAGF,kBAAC+kE,aAAY,CACXphE,SAAU,4CACV3D,KACE,uEAIN,CACE,SACA,qHACA,gBACA,IACA,0BACA,oC,yBAEE,6B,aAGF,kBAAC+kE,aAAY,CACXphE,SAAU,4CACV3D,KACE,uEAIN,CACE,SACA,SACA,gBACA,IACA,0BACA,oC,yJAIE,6B,aAGF,kBAAC+kE,aAAY,CACXphE,SAAU,qDACV3D,KACE,4HAOZqnE,gBAAiB,CAAC,QAAS,OAAQ,QAAS,WAE9C,WAAY,CACVI,wBACE,8EACFC,mBAAoB,CAClB,CACE,IACA,OACA,QACA,iDACA,0BACA,kBAAC/C,gBAAe,CACdE,SAAU,0CACV7kE,KACE,wKAKRonE,mBAAoB,CAClB,CACEr4E,QAAS,CACP,CACE,OACA,QACA,iIACA,0BACA,IACA,IACA,kBAAC41E,gBAAe,CACdE,SAAU,0CACV7kE,KACE,uKAIN,CACE,QACA,sBACA,6BACA,yBACA,IACA,IACA,kBAAC2kE,gBAAe,CACdE,SAAU,uDACV7kE,KACE,oKAIN,CACE,QACA,UACA,sDACA,cACA,IACA,IACA,kBAAC2kE,gBAAe,CACdE,SAAU,4CACV7kE,KACE,qKAOZqnE,gBAAiB,CAAC,QAAS,OAAQ,QAAS,SAE9C,WAAY,CACVI,wBACE,8EACFC,mBAAoB,CAClB,CACE,KACA,QACA,UACA,4DACA,8BACA,kBAAC,KAAa,CAACn/C,UAj2CW,MAk2CxB,kBAAC1X,SAAQ,CAAC9W,MAAO,aACjB,kBAACgrE,aAAY,CACXphE,SAAU,wCACV3D,KACE,yHAKR,CACE,KACA,OACA,sBACA,yBACA,8BACA,kBAAC,KAAa,CAACuoB,UAj3CW,MAk3CxB,kBAAC1X,SAAQ,CAAC9W,MAAO,aACjB,kBAACgrE,aAAY,CACXphE,SAAU,wCACV3D,KACE,0HAMVonE,mBAAoB,CAClB,CACEr4E,QAAS,CACP,CACE,MACA,UACA,qCACA,aACA,IACA,IACA,kBAAC41E,gBAAe,CACdE,SAAU,mDACV7kE,KACE,8IAMV,CACEomE,iBAAkBjC,GAA2BmC,2BAC7Cv3E,QAAS,CACP,CACE,OACA,UACA,6BACA,KACA,gBACA,oC,eAEE,6B,cAGF,kBAACg2E,aAAY,CACXphE,SAAU,6CACV3D,KACE,uEAOZsnE,KAAM,CACJ,8B,gGAGE,kBAACx/D,EAAA,EAAG,CAAC5W,UAAW,iBACd,2BAAOA,UAAU,SACf,+BACE,4BACE,oCACA,wCACA,2CACA,yDACA,2DACA,wDACA,0CAGJ,+BACE,4BACE,4BACE,kBAAC2b,aAAY,CAACnU,WAAY,UAE5B,mDACA,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YACY,IACV,uBACEF,KAAK,sJACLC,OAAO,SACPC,IAAI,uBAAqB,gCAOjCq1E,mBAAoB,CAClB,CACEr4E,QAAS,CACP,CACE,sBACA,UACA,mBACA,cACA,KACA,IACA,uBACE8C,KAAK,4HACLC,OAAO,SACPC,IAAI,uBAAqB,gCAK7B,CACE,QACA,sBACA,QACA,4BACA,KACA,KACA,mFAEF,CACE,OACA,sBACA,qBACA,aACA,KACA,KACA,8B,YACY,IACV,uBACEF,KAAK,0PACLC,OAAO,SACPC,IAAI,uBAAqB,oDAM/B,CACE,SACA,sBACA,gBACA,YACA,KACA,OACA,6B,+CAC+C,IAC7C,uBACEF,KAAK,iHACLC,OAAO,SACPC,IAAI,uBAAqB,wEASrCu1E,KAAM,CACJ,iJAKFD,gBAAiB,CACf,OACA,MACA,QACA,UACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,SAGJ,WAAY,CACVA,gBAAiB,CACf,WACA,QACA,OACA,SACA,UACA,WAEFK,mBAAoB,CAClB,CACE,KACA,OACA,sBACA,sBACA,eACA,uBACE71E,KAAK,kKACLC,OAAO,SACPC,IAAI,uBAAqB,8DAOjC,WAAY,CACVs1E,gBAAiB,CAAC,QAAS,OAAQ,WAAY,YAC/CK,mBAAoB,CAClB,CACE,KACA,OACA,QACA,sBACA,cACA,8B,+CAEE,kBAAC72D,SAAQ,CAAC9W,MAAO,a,MAGrB,CACE,KACA,uCACA,sBACA,2CACA,cACA,kBAAC8W,SAAQ,CAAC9W,MAAO,eAGrBqtE,mBAAoB,CAClB,CACEr4E,QAAS,CACP,CACE,OACA,qDACA,mBACA,UACA,IACA,WACA,oCACE,kDACA,6BACE,kBAAC8hB,SAAQ,CAAC9W,MAAO,cAEnB,6BACA,oIAUZ,WAAY,CACVytE,aAAc,CACZ,iCACA,8B,6FAE0B,IACxB,uBACE31E,KAAK,mDACLC,OAAO,SACPC,IAAI,uBAAqB,mC,MAO/Bi2E,8BAA+B,CAC7B,EAAK,CACH,8B,6DAEE,kD,IAA2B,6B,gBACb,IACd,uBACEl2E,OAAO,SACPC,IAAI,sBACJF,KAAK,kHAAgH,qEAGlH,I,2HAKT,EAAK,CACH,8B,6EAEa,kD,KAEb,8B,4FAE0B,kD,QAKhC,WAAY,CACVy1E,KAAM,CACJ,8B,4CAC4C,IAC1C,uBACEx1E,OAAO,SACPC,IAAI,sBACJF,KAAK,yCAAuC,mBAMlD21E,aAAc,CACZ,8B,4DAEE,kBAAC1/D,EAAA,EAAG,CAAC5W,UAAW,iBACd,2BAAOA,UAAU,SACf,+BACE,4BACE,wBAAIA,UAAU,YAAU,SACxB,wBAAIA,UAAU,YAAU,QACxB,wBAAIA,UAAU,YAAU,YACxB,wBAAIA,UAAU,YAAU,eACxB,wBAAIA,UAAU,YAAU,UAG5B,+BACE,4BACE,wBAAIq2E,QAAS,GAAC,KACd,wBAAIA,QAAS,GACX,kBAAC16D,aAAY,CAACnU,WAAY,UAE5B,wBAAI6uE,QAAS,GAAC,mBACd,uEACA,0CAEF,4BACE,kEACA,0CAEF,4BACE,qCACA,wCACA,0CAEF,4BACE,wBAAIA,QAAS,GACX,kBAAC16D,aAAY,CAACnU,WAAY,UAE5B,kEACA,wBAAI6uE,QAAS,GAAC,gCACd,6CAEF,4BACE,mDACA,qEAEF,4BACE,kCACA,4BACE,kBAAC16D,aAAY,CAACnU,WAAY,UAE5B,qCACA,wCACA,0EAEF,4BACE,wBAAI6uE,QAAS,GAAC,MACd,wBAAIA,QAAS,GACX,kBAAC16D,aAAY,CAACnU,WAAY,UAE5B,+CACA,mCACA,qDAEF,4BACE,2GAIA,wBAAI6uE,QAAS,GAAC,YACd,0CAEF,4BACE,wEACA,0CAEF,4BACE,wEACA,0CAEF,4BACE,wBAAIA,QAAS,GAAC,MACd,wBAAIA,QAAS,GACX,kBAAC16D,aAAY,CAACnU,WAAY,UAE5B,+CACA,mCACA,0CAEF,4BACE,wEACA,wBAAI6uE,QAAS,GAAC,YACd,0CAEF,4BACE,wEACA,0CAEF,4BACE,4BACE,kBAAC16D,aAAY,CAACnU,WAAY,UAE5B,mCACA,mCACA,wDAEF,4BACE,wBAAI6uE,QAAS,GAAC,KACd,4BACE,kBAAC16D,aAAY,CAACnU,WAAY,WAE5B,wBAAI6uE,QAAS,GAAC,uBACd,wBAAIA,QAAS,GAAC,+EAId,wBAAIA,QAAS,GAAC,aAEhB,4BACE,4BACE,kBAAC16D,aAAY,CAACnU,WAAY,YAG9B,4BACE,4BACE,kBAACmU,aAAY,CAACnU,WAAY,YAG9B,4BACE,4BACE,kBAACmU,aAAY,CAACnU,WAAY,iBAQxC2uE,gBAAiB,CACf,OACA,QACA,QACA,QACA,OACA,UACA,QACA,QACA,OACA,MACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,MACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,OACA,SACA,OACA,MACA,SAEFY,qBAAsB,CAAC,OAAQ,UAC/BD,8BAA+B,CAC7B,EAAK,CACH,8B,kBACkB,IAChB,uBACEl2E,OAAO,SACPC,IAAI,sBACJF,KAAK,8IAA4I,gCAG9I,I,uRAOT,EAAK,CACH,8B,4CAC2C,8C,KAE3C,8B,qFAEc,8C,QAKpB,WAAY,CACVo2E,qBAAsB,CAAC,QACvBZ,gBAAiB,CACf,QACA,OACA,OACA,SACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,MACA,QACA,QAEFW,8BAA+B,CAC7B,EAAK,CACH,8B,oBACoB,IAClB,uBACEl2E,OAAO,SACPC,IAAI,sBACJF,KAAK,4EAA0E,+BAG5E,I,kRASb,SAAY,CACV21E,aAAc,CACZ,8B,gBACe,kBAAC36D,aAAY,CAACnU,WAAY,U,OAAgB,IACvD,kBAACmU,aAAY,CAACnU,WAAY,U,uDAI9B2uE,gBAAiB,CACf,OACA,MACA,MACA,OACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,UACA,SACA,SACA,OACA,QACA,OACA,OACA,QACA,QACA,UACA,OACA,OACA,OACA,QAEFY,qBAAsB,CAAC,QACvBD,8BAA+B,CAC7B,EAAK,CACH,8B,qBACqB,IACnB,uBACEl2E,OAAO,SACPC,IAAI,sBACJF,KAAK,4EAA0E,kCAG5E,I,+IAKT,EAAK,CACH,8B,gEAEE,8C,KAEF,8B,yDAEE,8C,MAGJ,EAAK,CACH,8B,6EAEa,8C,KAEb,8B,yFAE6B,8C,KAE7B,8B,mEAEE,8C,MAGJ,EAAK,CACH,8B,mEAEE,8C,QAKR,SAAY,CACVm2E,8BAA+B,CAC7B,EAAK,CACH,8B,0DAEE,uD,QAKR,SAAY,CACVV,KAAM,CACJ,8B,gCACgC,IAC9B,uBACEx1E,OAAO,SACPC,IAAI,sBACJF,KAAK,2DAAyD,cAG3D,I,aACM,IACX,uBACEC,OAAO,SACPC,IAAI,sBACJF,KAAK,2DAAyD,eAKlE,8BrKjuJsB0L,U,uDqKkuJ4C,IAChE,uBACEzL,OAAO,SACPC,IAAI,sBACJF,KAAK,gEAA8D,wBAGhE,I,0BAEL,wBAAIX,UAAU,SAASC,MAAO,CAAEsa,UAAW,aACzC,4B,eACe,IACb,uBACE3Z,OAAO,SACPC,IAAI,sBACJF,KAAK,kGAAgG,yLAU/G21E,aAAc,CACZ,8B,SACQ,kBAAC,OAAI,CAACnqE,GAAIjH,GAAWic,iBAAe,M,kBAA2B,IACrE,kBAACxF,aAAY,CAACnU,WAAY,Q,IAAU,kBAACmU,aAAY,CAACnU,WAAY,SAAW,IACzE,kBAACmU,aAAY,CAACnU,WAAY,Q,2BAAkC,IAC5D,kBAAC,OAAI,CAAC2E,GAAIjH,GAAWic,iBAAe,oB,UAGxCg1D,gBAAiB,CACf,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SAEFY,qBAAsB,CAAC,QACvBD,8BAA+B,CAC7B,EAAK,CACH,gHAIA,4FAIN,SAAY,CACVV,KAAM,CACJ,8BrK3xJsB/pE,U,uDqK4xJ4C,IAChE,uBACEzL,OAAO,SACPC,IAAI,sBACJF,KAAK,gEAA8D,wBAGhE,I,0BAEL,wBAAIX,UAAU,SAASC,MAAO,CAAEsa,UAAW,aACzC,4B,gBACgB,IACd,uBACE3Z,OAAO,SACPC,IAAI,sBACJF,KAAK,oGAAkG,wHASjHm2E,8BAA+B,CAC7B,EAAK,CACH,8B,oEAEE,uD,OAINX,gBAAiB,CACf,WACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,OACA,OACA,OACA,OACA,QACA,SACA,QACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,QAEFY,qBAAsB,CAAC,SAEzB,WAAY,CACVX,KAAM,CACJ,qHAIA,2EACA,8BrKl2JsB/pE,U,uDqKm2J4C,IAChE,uBACEzL,OAAO,SACPC,IAAI,sBACJF,KAAK,gEAA8D,wBAGhE,I,0BAEL,wBAAIX,UAAU,SAASC,MAAO,CAAEsa,UAAW,aACzC,4B,kBACkB,IAChB,uBACE3Z,OAAO,SACPC,IAAI,sBACJF,KAAK,sCAAoC,qEAK7C,4B,kBACkB,IAChB,uBACEC,OAAO,SACPC,IAAI,sBACJF,KAAK,sCAAoC,qDAK7C,4B,mBACmB,IACjB,uBACEC,OAAO,SACPC,IAAI,sBACJF,KAAK,sCAAoC,mGASnD21E,aAAc,CACZ,8BrKh5JsBjqE,U,mEqKq5JxB8pE,gBAAiB,CACf,QACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,WACA,QACA,QACA,SACA,SACA,MACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,MACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,WACA,YAEFY,qBAAsB,CAAC,QACvBD,8BAA+B,CAC7B,EAAK,CACH,8B,iBACiB,IACf,uBACEl2E,OAAO,SACPC,IAAI,sBACJF,KAAK,4EAA0E,+BAG5E,I,wJAQb,WAAY,CACVy1E,KAAM,CACJ,8B,4CAEE,kBAACx/D,EAAA,EAAG,CAAC5W,UAAW,iBACd,kBAAC4+B,YAAW,CACVG,QAAS82C,GACTp2D,KAn2J0B,CACpC,CAAC,MAAO,sBAAuB,kBAAmB,YAClD,CACE,OACA,gLACA,aACA,WAEF,CACE,SACA,sBACA,aACA,wCAEF,CAAC,OAAQ,sBAAuB,SAAU,aAC1C,CAAC,OAAQ,gBAAiB,SAAU,aACpC,CAAC,QAAS,oBAAqB,gBAAiB,SAChD,CACE,QACA,sBACA,aACA,2CAEF,CACE,QACA,sBACA,aACA,2CAEF,CACE,OACA,sBACA,aACA,gDAEF,CAAC,OAAQ,sBA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,eACA,0EAGJ,GAACf,GAAOgB,KAAM,CACZ,CACE,4BACA,kBACA,iCACA,8DAEF,CACE,4BACA,oBACA,YACA,8DAEF,CACE,8BACA,oBACA,YACA,8DAEF,CACE,0BACA,6BACA,eACA,yEAEF,CACE,eACA,6BACA,YACA,yEAEF,CACE,eACA,6BACA,aACA,yEAEF,CACE,oBACA,6BACA,aACA,yEAEF,CACE,oBACA,6BACA,YACA,yEAEF,CACE,cACA,sCACA,aACA,0EAGJ,GAAChB,GAAOiB,KAAM,CACZ,CACE,YACA,4BACA,YACA,8DAEF,CACE,YACA,oBACA,YACA,8DAEF,CACE,aACA,eACA,UACA,yCAEF,CACE,eACA,6BACA,eACA,yEAEF,CACE,eACA,6BACA,gBACA,yEAEF,CACE,oBACA,mBACA,gBACA,yEAEF,CACE,iEACA,6BACA,wBACA,yEAEF,CACE,0BACA,6BACA,UACA,yEAEF,CACE,4BACA,6BACA,uCACA,yEAEF,CACE,gBACA,4DACA,aACA,yCAEF,CACE,2BACA,yBACA,aACA,0CAGJ,GAACjB,GAAOoB,KAAM,CACZ,CACE,6BACA,yBAAK9D,MAAO,CAAEsb,SAAU,MAAK,oBAC7B,WACA,8DAEF,CACE,gBACA,mBACA,WACA,6DAEF,CACE,sBACA,mBACA,kBACA,yCAEF,CACE,YACA,mBACA,WACA,0C,KCvLKorE,mBAER,SAAA5nF,GACG,6BAAC24E,EAAA,KAAYkP,EAAA,KAcnB,OAZA,qBAAU,WAERpmD,YAAW,WACT,GAAIzhC,EAAM8nF,aAAc,CACtB,IAAM9nC,EAAU1W,SAAS0vC,eAAeh5E,EAAM8nF,cAC9C5oE,kBAAkB8gC,QAElBthD,OAAO8gB,SAAS,CAAEF,IAAK,EAAGG,SAAU,aAErC,OACF,CAACzf,EAAM8nF,eAGR,gBAAC,KAAa,CACZ/7E,MAAO4M,cACF3Y,EAAM8nF,aAAkB9nF,EAAM8nF,aAAY,IAAM,IACjD5hF,GAAWugC,mBAIf,2BACE,gBAAC5uB,EAAA,EAAG,KACF,gBAACC,EAAA,EAAG,KACF,gDAGHiwE,GAAuB70E,KAAI,SAAAs5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","file":"app/main.afa6f7967358079430ec.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1414,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../node_modules/stripcomment-loader/index.js!./index.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".citationListGroupItem-module__listGroupItem__59Dgf{border:0;padding:5px 0;font-size:13px;display:flex;flex-direction:column}.citationListGroupItem-module__listGroupItem__59Dgf a{color:#0968c3}.citationListGroupItem-module__listGroupItem__59Dgf:not(:first-child){border-top:1px solid #d3d3d3}.citationListGroupItem-module__listGroupItem__59Dgf:last-child{border-bottom-right-radius:0;border-bottom-left-radius:0}.citationListGroupItem-module__listGroupItem__59Dgf:first-child{border-top-left-radius:0;border-top-right-radius:0}.citationListGroupItem-module__listGroupItemTitle__2aWaX{line-height:16px}.citationListGroupItem-module__listGroupItemContent__3GSU1{display:flex;flex-direction:row;justify-content:space-between}.citationListGroupItem-module__noStyleUl__3AU5N{padding:0;margin-bottom:0 !important}.citationListGroupItem-module__noStyleUl__3AU5N li{list-style-type:none}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"listGroupItem\": \"citationListGroupItem-module__listGroupItem__59Dgf\",\n\t\"listGroupItemTitle\": \"citationListGroupItem-module__listGroupItemTitle__2aWaX\",\n\t\"listGroupItemContent\": \"citationListGroupItem-module__listGroupItemContent__3GSU1\",\n\t\"noStyleUl\": \"citationListGroupItem-module__noStyleUl__3AU5N\"\n};\nmodule.exports = exports;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1076;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/*!\\n * Bootstrap v4.4.1 (https://getbootstrap.com/)\\n * Copyright 2011-2019 The Bootstrap Authors\\n * Copyright 2011-2019 Twitter, Inc.\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n */:root{--blue: #0968c3;--indigo: #6610f2;--purple: #6f42c1;--pink: #e83e8c;--red: #dc3545;--orange: #fd7e14;--yellow: #ffc107;--green: #28a745;--teal: #20c997;--cyan: #17a2b8;--white: #fff;--gray: #6c757d;--gray-dark: #343a40;--primary: #0968c3;--secondary: gray;--success: #28a745;--info: #17a2b8;--warning: #ffc107;--danger: #dc3545;--light: #f8f9fa;--dark: #343a40;--breakpoint-xs: 0;--breakpoint-sm: 576px;--breakpoint-md: 768px;--breakpoint-lg: 1050px;--breakpoint-xl: 1500px;--font-family-sans-serif: \\\"Gotham Book\\\", serif;--font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace}*,*::before,*::after{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0)}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:\\\"Gotham Book\\\",serif;font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#fff}[tabindex=\\\"-1\\\"]:focus:not(:focus-visible){outline:0 !important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[title],abbr[data-original-title]{text-decoration:underline;text-decoration:underline dotted;cursor:help;border-bottom:0;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul,dl{margin-top:0;margin-bottom:1rem}ol ol,ul ul,ol ul,ul ol{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#0968c3;text-decoration:none;background-color:transparent}a:hover{color:#0b2569;text-decoration:underline}a:not([href]){color:inherit;text-decoration:none}a:not([href]):hover{color:inherit;text-decoration:none}pre,code,kbd,samp{font-family:SFMono-Regular,Menlo,Monaco,Consolas,\\\"Liberation Mono\\\",\\\"Courier New\\\",monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg{overflow:hidden;vertical-align:middle}table{border-collapse:collapse}caption{padding-top:.75rem;padding-bottom:.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}input,button,select,optgroup,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}select{word-wrap:normal}button,[type=\\\"button\\\"],[type=\\\"reset\\\"],[type=\\\"submit\\\"]{-webkit-appearance:button}button:not(:disabled),[type=\\\"button\\\"]:not(:disabled),[type=\\\"reset\\\"]:not(:disabled),[type=\\\"submit\\\"]:not(:disabled){cursor:pointer}button::-moz-focus-inner,[type=\\\"button\\\"]::-moz-focus-inner,[type=\\\"reset\\\"]::-moz-focus-inner,[type=\\\"submit\\\"]::-moz-focus-inner{padding:0;border-style:none}input[type=\\\"radio\\\"],input[type=\\\"checkbox\\\"]{box-sizing:border-box;padding:0}input[type=\\\"date\\\"],input[type=\\\"time\\\"],input[type=\\\"datetime-local\\\"],input[type=\\\"month\\\"]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=\\\"number\\\"]::-webkit-inner-spin-button,[type=\\\"number\\\"]::-webkit-outer-spin-button{height:auto}[type=\\\"search\\\"]{outline-offset:-2px;-webkit-appearance:none}[type=\\\"search\\\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none !important}h1,h2,h3,h4,h5,h6,.index-module__h1__2Zs1c,.index-module__h2__2tzij,.index-module__h3__2QXT1,.index-module__h4__2L2El,.index-module__h5__ElCx4,.index-module__h6__1VvV-{margin-bottom:.5rem;font-weight:500;line-height:1.2}h1,.index-module__h1__2Zs1c{font-size:2.5rem}h2,.index-module__h2__2tzij{font-size:2rem}h3,.index-module__h3__2QXT1{font-size:1.75rem}h4,.index-module__h4__2L2El{font-size:1.5rem}h5,.index-module__h5__ElCx4{font-size:1.25rem}h6,.index-module__h6__1VvV-{font-size:1rem}.index-module__lead__20NIT{font-size:1.25rem;font-weight:300}.index-module__display-1__2iZX-{font-size:6rem;font-weight:300;line-height:1.2}.index-module__display-2__1eRGE{font-size:5.5rem;font-weight:300;line-height:1.2}.index-module__display-3__3EPgn{font-size:4.5rem;font-weight:300;line-height:1.2}.index-module__display-4__1e8hN{font-size:3.5rem;font-weight:300;line-height:1.2}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,0.1)}small,.index-module__small__1CGb3{font-size:80%;font-weight:400}mark,.index-module__mark__3c8s9{padding:.2em;background-color:#fcf8e3}.index-module__list-unstyled__1__6D{padding-left:0;list-style:none}.index-module__list-inline__ZlCfG{padding-left:0;list-style:none}.index-module__list-inline-item__2ONHP{display:inline-block}.index-module__list-inline-item__2ONHP:not(:last-child){margin-right:.5rem}.index-module__initialism__3Gvp6{font-size:90%;text-transform:uppercase}.index-module__blockquote__3xDQX{margin-bottom:1rem;font-size:1.25rem}.index-module__blockquote-footer__6lW1r{display:block;font-size:80%;color:#6c757d}.index-module__blockquote-footer__6lW1r::before{content:\\\"\\\\2014\\\\00A0\\\"}.index-module__img-fluid__3UAXz{max-width:100%;height:auto}.index-module__img-thumbnail__3FAxg{padding:.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:.25rem;max-width:100%;height:auto}.index-module__figure__1vy1E{display:inline-block}.index-module__figure-img__uTv_m{margin-bottom:.5rem;line-height:1}.index-module__figure-caption__rW8q7{font-size:90%;color:#6c757d}code{font-size:87.5%;color:#e83e8c;word-wrap:break-word}a>code{color:inherit}kbd{padding:.2rem .4rem;font-size:87.5%;color:#fff;background-color:#212529;border-radius:.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.index-module__pre-scrollable__1jAPn{max-height:340px;overflow-y:scroll}.index-module__container__wQ7Ga{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width: 1500px){.index-module__container__wQ7Ga{max-width:1500px}}.index-module__container-fluid__3sxsA,.index-module__container-xl__2xcz3{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width: 1500px){.index-module__container__wQ7Ga,.index-module__container-sm__3Ee-h,.index-module__container-md__3z7wM,.index-module__container-lg__dGDu9,.index-module__container-xl__2xcz3{max-width:1500px}}.index-module__row__1pqLN{display:flex;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}.index-module__no-gutters__jNVn5{margin-right:0;margin-left:0}.index-module__no-gutters__jNVn5>.index-module__col__M-EJO,.index-module__no-gutters__jNVn5>[class*=\\\"col-\\\"]{padding-right:0;padding-left:0}.index-module__col-1__3EtkG,.index-module__col-2__1Ji3Q,.index-module__col-3__2UA1d,.index-module__col-4__1kTx2,.index-module__col-5__6HRRD,.index-module__col-6__2G0my,.index-module__col-7__1K7hc,.index-module__col-8__3iQYg,.index-module__col-9__gh4pM,.index-module__col-10__2nn8g,.index-module__col-11__2cmlT,.index-module__col-12__1oNnb,.index-module__col__M-EJO,.index-module__col-auto__yXSBd,.index-module__col-sm-1__21fLV,.index-module__col-sm-2__1WMhV,.index-module__col-sm-3__dnAOF,.index-module__col-sm-4__yWZeA,.index-module__col-sm-5__2uvYE,.index-module__col-sm-6__2K5yk,.index-module__col-sm-7__6EhtA,.index-module__col-sm-8__2xVr3,.index-module__col-sm-9__2RoxH,.index-module__col-sm-10__1lfeN,.index-module__col-sm-11__2-M_b,.index-module__col-sm-12__AeBQW,.index-module__col-sm__1bHan,.index-module__col-sm-auto__36eLe,.index-module__col-md-1__20ZRz,.index-module__col-md-2__1ZxnM,.index-module__col-md-3__1RFP1,.index-module__col-md-4__u0MPK,.index-module__col-md-5__8GuET,.index-module__col-md-6__205rr,.index-module__col-md-7__2EBei,.index-module__col-md-8__aXRZd,.index-module__col-md-9__2kIRW,.index-module__col-md-10__2F-ST,.index-module__col-md-11__9avAX,.index-module__col-md-12__cOK1_,.index-module__col-md__wSRc4,.index-module__col-md-auto__2XmM6,.index-module__col-lg-1__1WRTf,.index-module__col-lg-2__2QXX6,.index-module__col-lg-3__10Yit,.index-module__col-lg-4__2URwl,.index-module__col-lg-5__1rcZ5,.index-module__col-lg-6__340kS,.index-module__col-lg-7__3XN2d,.index-module__col-lg-8__2z5v1,.index-module__col-lg-9__11qNT,.index-module__col-lg-10__2c-nH,.index-module__col-lg-11__2t9Kt,.index-module__col-lg-12__f7DC3,.index-module__col-lg__3C8hZ,.index-module__col-lg-auto__1UHMo,.index-module__col-xl-1__2Lis_,.index-module__col-xl-2__JsJ8O,.index-module__col-xl-3__190_R,.index-module__col-xl-4__1agfc,.index-module__col-xl-5__14dbP,.index-module__col-xl-6__2oN46,.index-module__col-xl-7__2TaVu,.index-module__col-xl-8__2nxJe,.index-module__col-xl-9__2J_oe,.index-module__col-xl-10__1WIsZ,.index-module__col-xl-11__8vCtv,.index-module__col-xl-12__j8Z45,.index-module__col-xl__3fe9S,.index-module__col-xl-auto__xiWvz{position:relative;width:100%;padding-right:15px;padding-left:15px}.index-module__col__M-EJO{flex-basis:0;flex-grow:1;max-width:100%}.index-module__row-cols-1__1FNb7>*{flex:0 0 100%;max-width:100%}.index-module__row-cols-2__1dZ3Z>*{flex:0 0 50%;max-width:50%}.index-module__row-cols-3__1wzbO>*{flex:0 0 33.33333%;max-width:33.33333%}.index-module__row-cols-4__PZjhq>*{flex:0 0 25%;max-width:25%}.index-module__row-cols-5__17JUr>*{flex:0 0 20%;max-width:20%}.index-module__row-cols-6__2NDhK>*{flex:0 0 16.66667%;max-width:16.66667%}.index-module__col-auto__yXSBd{flex:0 0 auto;width:auto;max-width:100%}.index-module__col-1__3EtkG{flex:0 0 8.33333%;max-width:8.33333%}.index-module__col-2__1Ji3Q{flex:0 0 16.66667%;max-width:16.66667%}.index-module__col-3__2UA1d{flex:0 0 25%;max-width:25%}.index-module__col-4__1kTx2{flex:0 0 33.33333%;max-width:33.33333%}.index-module__col-5__6HRRD{flex:0 0 41.66667%;max-width:41.66667%}.index-module__col-6__2G0my{flex:0 0 50%;max-width:50%}.index-module__col-7__1K7hc{flex:0 0 58.33333%;max-width:58.33333%}.index-module__col-8__3iQYg{flex:0 0 66.66667%;max-width:66.66667%}.index-module__col-9__gh4pM{flex:0 0 75%;max-width:75%}.index-module__col-10__2nn8g{flex:0 0 83.33333%;max-width:83.33333%}.index-module__col-11__2cmlT{flex:0 0 91.66667%;max-width:91.66667%}.index-module__col-12__1oNnb{flex:0 0 100%;max-width:100%}.index-module__order-first__3Hs9V{order:-1}.index-module__order-last__r4HE7{order:13}.index-module__order-0__MtWed{order:0}.index-module__order-1__2pN5P{order:1}.index-module__order-2__p7x5Y{order:2}.index-module__order-3__H2pK4{order:3}.index-module__order-4__2_k5C{order:4}.index-module__order-5__owHHG{order:5}.index-module__order-6__3joV0{order:6}.index-module__order-7__1DjJj{order:7}.index-module__order-8__1fb-T{order:8}.index-module__order-9__1iRmq{order:9}.index-module__order-10__1jqSX{order:10}.index-module__order-11__296eF{order:11}.index-module__order-12__33UoU{order:12}.index-module__offset-1__1jBB6{margin-left:8.33333%}.index-module__offset-2__3KiQn{margin-left:16.66667%}.index-module__offset-3__1devQ{margin-left:25%}.index-module__offset-4__1r0Gx{margin-left:33.33333%}.index-module__offset-5__3TkPh{margin-left:41.66667%}.index-module__offset-6__waww2{margin-left:50%}.index-module__offset-7__XJZKj{margin-left:58.33333%}.index-module__offset-8__yFcro{margin-left:66.66667%}.index-module__offset-9__2qRCz{margin-left:75%}.index-module__offset-10__3w12u{margin-left:83.33333%}.index-module__offset-11__1feHx{margin-left:91.66667%}@media (min-width: 576px){.index-module__col-sm__1bHan{flex-basis:0;flex-grow:1;max-width:100%}.index-module__row-cols-sm-1__EAeZk>*{flex:0 0 100%;max-width:100%}.index-module__row-cols-sm-2__3qKY4>*{flex:0 0 50%;max-width:50%}.index-module__row-cols-sm-3__EkRaa>*{flex:0 0 33.33333%;max-width:33.33333%}.index-module__row-cols-sm-4__26Eq7>*{flex:0 0 25%;max-width:25%}.index-module__row-cols-sm-5__2hyKt>*{flex:0 0 20%;max-width:20%}.index-module__row-cols-sm-6__28kwq>*{flex:0 0 16.66667%;max-width:16.66667%}.index-module__col-sm-auto__36eLe{flex:0 0 auto;width:auto;max-width:100%}.index-module__col-sm-1__21fLV{flex:0 0 8.33333%;max-width:8.33333%}.index-module__col-sm-2__1WMhV{flex:0 0 16.66667%;max-width:16.66667%}.index-module__col-sm-3__dnAOF{flex:0 0 25%;max-width:25%}.index-module__col-sm-4__yWZeA{flex:0 0 33.33333%;max-width:33.33333%}.index-module__col-sm-5__2uvYE{flex:0 0 41.66667%;max-width:41.66667%}.index-module__col-sm-6__2K5yk{flex:0 0 50%;max-width:50%}.index-module__col-sm-7__6EhtA{flex:0 0 58.33333%;max-width:58.33333%}.index-module__col-sm-8__2xVr3{flex:0 0 66.66667%;max-width:66.66667%}.index-module__col-sm-9__2RoxH{flex:0 0 75%;max-width:75%}.index-module__col-sm-10__1lfeN{flex:0 0 83.33333%;max-width:83.33333%}.index-module__col-sm-11__2-M_b{flex:0 0 91.66667%;max-width:91.66667%}.index-module__col-sm-12__AeBQW{flex:0 0 100%;max-width:100%}.index-module__order-sm-first__3CRIx{order:-1}.index-module__order-sm-last__34cnT{order:13}.index-module__order-sm-0__3CqE9{order:0}.index-module__order-sm-1__gG3Wl{order:1}.index-module__order-sm-2__Jwmp3{order:2}.index-module__order-sm-3__7rddC{order:3}.index-module__order-sm-4__2cnRd{order:4}.index-module__order-sm-5__3CXUD{order:5}.index-module__order-sm-6__qkxzU{order:6}.index-module__order-sm-7__1KjcE{order:7}.index-module__order-sm-8__8Z5te{order:8}.index-module__order-sm-9__20rLk{order:9}.index-module__order-sm-10__2XDt6{order:10}.index-module__order-sm-11__maEOj{order:11}.index-module__order-sm-12__2wOJ7{order:12}.index-module__offset-sm-0__1mRif{margin-left:0}.index-module__offset-sm-1__3eZx2{margin-left:8.33333%}.index-module__offset-sm-2__2G39Y{margin-left:16.66667%}.index-module__offset-sm-3__2YZgj{margin-left:25%}.index-module__offset-sm-4__2hWHR{margin-left:33.33333%}.index-module__offset-sm-5__3XV2_{margin-left:41.66667%}.index-module__offset-sm-6__2xOhx{margin-left:50%}.index-module__offset-sm-7__2dC9_{margin-left:58.33333%}.index-module__offset-sm-8__3l86r{margin-left:66.66667%}.index-module__offset-sm-9__3YD9L{margin-left:75%}.index-module__offset-sm-10__K4DWR{margin-left:83.33333%}.index-module__offset-sm-11__p4eoy{margin-left:91.66667%}}@media (min-width: 768px){.index-module__col-md__wSRc4{flex-basis:0;flex-grow:1;max-width:100%}.index-module__row-cols-md-1__7AtEw>*{flex:0 0 100%;max-width:100%}.index-module__row-cols-md-2__KRZxm>*{flex:0 0 50%;max-width:50%}.index-module__row-cols-md-3__2ne1G>*{flex:0 0 33.33333%;max-width:33.33333%}.index-module__row-cols-md-4__KOA7x>*{flex:0 0 25%;max-width:25%}.index-module__row-cols-md-5__16MPN>*{flex:0 0 20%;max-width:20%}.index-module__row-cols-md-6__32ABs>*{flex:0 0 16.66667%;max-width:16.66667%}.index-module__col-md-auto__2XmM6{flex:0 0 auto;width:auto;max-width:100%}.index-module__col-md-1__20ZRz{flex:0 0 8.33333%;max-width:8.33333%}.index-module__col-md-2__1ZxnM{flex:0 0 16.66667%;max-width:16.66667%}.index-module__col-md-3__1RFP1{flex:0 0 25%;max-width:25%}.index-module__col-md-4__u0MPK{flex:0 0 33.33333%;max-width:33.33333%}.index-module__col-md-5__8GuET{flex:0 0 41.66667%;max-width:41.66667%}.index-module__col-md-6__205rr{flex:0 0 50%;max-width:50%}.index-module__col-md-7__2EBei{flex:0 0 58.33333%;max-width:58.33333%}.index-module__col-md-8__aXRZd{flex:0 0 66.66667%;max-width:66.66667%}.index-module__col-md-9__2kIRW{flex:0 0 75%;max-width:75%}.index-module__col-md-10__2F-ST{flex:0 0 83.33333%;max-width:83.33333%}.index-module__col-md-11__9avAX{flex:0 0 91.66667%;max-width:91.66667%}.index-module__col-md-12__cOK1_{flex:0 0 100%;max-width:100%}.index-module__order-md-first__y1RDE{order:-1}.index-module__order-md-last__309lS{order:13}.index-module__order-md-0__4GzqG{order:0}.index-module__order-md-1__Ca0bZ{order:1}.index-module__order-md-2__2WTS1{order:2}.index-module__order-md-3__1MozB{order:3}.index-module__order-md-4__2sPkt{order:4}.index-module__order-md-5__26pQx{order:5}.index-module__order-md-6__2aJ3K{order:6}.index-module__order-md-7__3YjS3{order:7}.index-module__order-md-8__dXyhh{order:8}.index-module__order-md-9__YZbiF{order:9}.index-module__order-md-10__fJ2MW{order:10}.index-module__order-md-11__3ckIW{order:11}.index-module__order-md-12__26qoU{order:12}.index-module__offset-md-0__ya-Ay{margin-left:0}.index-module__offset-md-1__1ONaS{margin-left:8.33333%}.index-module__offset-md-2__11nqL{margin-left:16.66667%}.index-module__offset-md-3__DfIUA{margin-left:25%}.index-module__offset-md-4__rCDkk{margin-left:33.33333%}.index-module__offset-md-5__1v40f{margin-left:41.66667%}.index-module__offset-md-6__2cqe1{margin-left:50%}.index-module__offset-md-7__3gplN{margin-left:58.33333%}.index-module__offset-md-8__1Q-gh{margin-left:66.66667%}.index-module__offset-md-9__3gDzw{margin-left:75%}.index-module__offset-md-10__3AHhr{margin-left:83.33333%}.index-module__offset-md-11__2QhYH{margin-left:91.66667%}}@media (min-width: 1050px){.index-module__col-lg__3C8hZ{flex-basis:0;flex-grow:1;max-width:100%}.index-module__row-cols-lg-1__3p819>*{flex:0 0 100%;max-width:100%}.index-module__row-cols-lg-2__2kjN1>*{flex:0 0 50%;max-width:50%}.index-module__row-cols-lg-3__3MnS3>*{flex:0 0 33.33333%;max-width:33.33333%}.index-module__row-cols-lg-4__2T0BO>*{flex:0 0 25%;max-width:25%}.index-module__row-cols-lg-5__mtJXe>*{flex:0 0 20%;max-width:20%}.index-module__row-cols-lg-6__ZDtK3>*{flex:0 0 16.66667%;max-width:16.66667%}.index-module__col-lg-auto__1UHMo{flex:0 0 auto;width:auto;max-width:100%}.index-module__col-lg-1__1WRTf{flex:0 0 8.33333%;max-width:8.33333%}.index-module__col-lg-2__2QXX6{flex:0 0 16.66667%;max-width:16.66667%}.index-module__col-lg-3__10Yit{flex:0 0 25%;max-width:25%}.index-module__col-lg-4__2URwl{flex:0 0 33.33333%;max-width:33.33333%}.index-module__col-lg-5__1rcZ5{flex:0 0 41.66667%;max-width:41.66667%}.index-module__col-lg-6__340kS{flex:0 0 50%;max-width:50%}.index-module__col-lg-7__3XN2d{flex:0 0 58.33333%;max-width:58.33333%}.index-module__col-lg-8__2z5v1{flex:0 0 66.66667%;max-width:66.66667%}.index-module__col-lg-9__11qNT{flex:0 0 75%;max-width:75%}.index-module__col-lg-10__2c-nH{flex:0 0 83.33333%;max-width:83.33333%}.index-module__col-lg-11__2t9Kt{flex:0 0 91.66667%;max-width:91.66667%}.index-module__col-lg-12__f7DC3{flex:0 0 100%;max-width:100%}.index-module__order-lg-first__1jFrp{order:-1}.index-module__order-lg-last__1uwuT{order:13}.index-module__order-lg-0__2ptQQ{order:0}.index-module__order-lg-1__1J1Vx{order:1}.index-module__order-lg-2__1GGE9{order:2}.index-module__order-lg-3__3VR90{order:3}.index-module__order-lg-4__InZ9E{order:4}.index-module__order-lg-5__9uOd5{order:5}.index-module__order-lg-6__2xthQ{order:6}.index-module__order-lg-7__2fqfz{order:7}.index-module__order-lg-8__1QJot{order:8}.index-module__order-lg-9__3-6Mo{order:9}.index-module__order-lg-10__18GT6{order:10}.index-module__order-lg-11__1x3Qb{order:11}.index-module__order-lg-12__tN_vP{order:12}.index-module__offset-lg-0__3HQA9{margin-left:0}.index-module__offset-lg-1__3rh22{margin-left:8.33333%}.index-module__offset-lg-2__10oum{margin-left:16.66667%}.index-module__offset-lg-3__w5uun{margin-left:25%}.index-module__offset-lg-4__2plO1{margin-left:33.33333%}.index-module__offset-lg-5__18dPx{margin-left:41.66667%}.index-module__offset-lg-6__pCeUy{margin-left:50%}.index-module__offset-lg-7__128QV{margin-left:58.33333%}.index-module__offset-lg-8__12ykp{margin-left:66.66667%}.index-module__offset-lg-9__e1OGj{margin-left:75%}.index-module__offset-lg-10__2AALe{margin-left:83.33333%}.index-module__offset-lg-11__34Mvi{margin-left:91.66667%}}@media (min-width: 1500px){.index-module__col-xl__3fe9S{flex-basis:0;flex-grow:1;max-width:100%}.index-module__row-cols-xl-1__2QDRm>*{flex:0 0 100%;max-width:100%}.index-module__row-cols-xl-2__3keEO>*{flex:0 0 50%;max-width:50%}.index-module__row-cols-xl-3__2_qUD>*{flex:0 0 33.33333%;max-width:33.33333%}.index-module__row-cols-xl-4__3lwxK>*{flex:0 0 25%;max-width:25%}.index-module__row-cols-xl-5__2YSsW>*{flex:0 0 20%;max-width:20%}.index-module__row-cols-xl-6__34a5f>*{flex:0 0 16.66667%;max-width:16.66667%}.index-module__col-xl-auto__xiWvz{flex:0 0 auto;width:auto;max-width:100%}.index-module__col-xl-1__2Lis_{flex:0 0 8.33333%;max-width:8.33333%}.index-module__col-xl-2__JsJ8O{flex:0 0 16.66667%;max-width:16.66667%}.index-module__col-xl-3__190_R{flex:0 0 25%;max-width:25%}.index-module__col-xl-4__1agfc{flex:0 0 33.33333%;max-width:33.33333%}.index-module__col-xl-5__14dbP{flex:0 0 41.66667%;max-width:41.66667%}.index-module__col-xl-6__2oN46{flex:0 0 50%;max-width:50%}.index-module__col-xl-7__2TaVu{flex:0 0 58.33333%;max-width:58.33333%}.index-module__col-xl-8__2nxJe{flex:0 0 66.66667%;max-width:66.66667%}.index-module__col-xl-9__2J_oe{flex:0 0 75%;max-width:75%}.index-module__col-xl-10__1WIsZ{flex:0 0 83.33333%;max-width:83.33333%}.index-module__col-xl-11__8vCtv{flex:0 0 91.66667%;max-width:91.66667%}.index-module__col-xl-12__j8Z45{flex:0 0 100%;max-width:100%}.index-module__order-xl-first__215F4{order:-1}.index-module__order-xl-last__2stDj{order:13}.index-module__order-xl-0__3gs9p{order:0}.index-module__order-xl-1__2Ae1d{order:1}.index-module__order-xl-2__2zf4Q{order:2}.index-module__order-xl-3__xvyOF{order:3}.index-module__order-xl-4__3luhn{order:4}.index-module__order-xl-5__1EFGZ{order:5}.index-module__order-xl-6__22kV_{order:6}.index-module__order-xl-7__ejq1Q{order:7}.index-module__order-xl-8___ZkX8{order:8}.index-module__order-xl-9__3TRag{order:9}.index-module__order-xl-10__3PI3u{order:10}.index-module__order-xl-11__2ETxp{order:11}.index-module__order-xl-12__2GT-K{order:12}.index-module__offset-xl-0__X8R3U{margin-left:0}.index-module__offset-xl-1__saoQS{margin-left:8.33333%}.index-module__offset-xl-2__3SzfE{margin-left:16.66667%}.index-module__offset-xl-3__34j0j{margin-left:25%}.index-module__offset-xl-4__3CJMB{margin-left:33.33333%}.index-module__offset-xl-5__3X4s5{margin-left:41.66667%}.index-module__offset-xl-6__S9lmE{margin-left:50%}.index-module__offset-xl-7__1ZGDM{margin-left:58.33333%}.index-module__offset-xl-8__yr2VY{margin-left:66.66667%}.index-module__offset-xl-9__2bJkc{margin-left:75%}.index-module__offset-xl-10__21jAp{margin-left:83.33333%}.index-module__offset-xl-11__2y1te{margin-left:91.66667%}}.index-module__table__2mYYw{width:100%;margin-bottom:1rem;color:#212529}.index-module__table__2mYYw th,.index-module__table__2mYYw td{padding:.75rem;vertical-align:top;border-top:1px solid #dee2e6}.index-module__table__2mYYw thead th{vertical-align:bottom;border-bottom:2px solid #dee2e6}.index-module__table__2mYYw tbody+tbody{border-top:2px solid #dee2e6}.index-module__table-sm__16Fr0 th,.index-module__table-sm__16Fr0 td{padding:.3rem}.index-module__table-bordered__19nzh{border:1px solid #dee2e6}.index-module__table-bordered__19nzh th,.index-module__table-bordered__19nzh td{border:1px solid #dee2e6}.index-module__table-bordered__19nzh thead th,.index-module__table-bordered__19nzh thead td{border-bottom-width:2px}.index-module__table-borderless__2yWHG th,.index-module__table-borderless__2yWHG td,.index-module__table-borderless__2yWHG thead th,.index-module__table-borderless__2yWHG tbody+tbody{border:0}.index-module__table-striped__1PPA- tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,0.05)}.index-module__table-hover__3xY4C tbody tr:hover{color:#212529;background-color:rgba(0,0,0,0.075)}.index-module__table-primary__2Tj3r,.index-module__table-primary__2Tj3r>th,.index-module__table-primary__2Tj3r>td{background-color:#bad5ee}.index-module__table-primary__2Tj3r th,.index-module__table-primary__2Tj3r td,.index-module__table-primary__2Tj3r thead th,.index-module__table-primary__2Tj3r tbody+tbody{border-color:#7fb0e0}.index-module__table-hover__3xY4C .index-module__table-primary__2Tj3r:hover{background-color:#a6c9e9}.index-module__table-hover__3xY4C .index-module__table-primary__2Tj3r:hover>td,.index-module__table-hover__3xY4C .index-module__table-primary__2Tj3r:hover>th{background-color:#a6c9e9}.index-module__table-secondary__3-f2t,.index-module__table-secondary__3-f2t>th,.index-module__table-secondary__3-f2t>td{background-color:#dbdbdb}.index-module__table-secondary__3-f2t th,.index-module__table-secondary__3-f2t td,.index-module__table-secondary__3-f2t thead th,.index-module__table-secondary__3-f2t tbody+tbody{border-color:#bdbdbd}.index-module__table-hover__3xY4C .index-module__table-secondary__3-f2t:hover{background-color:#cecece}.index-module__table-hover__3xY4C .index-module__table-secondary__3-f2t:hover>td,.index-module__table-hover__3xY4C .index-module__table-secondary__3-f2t:hover>th{background-color:#cecece}.index-module__table-success__3Lovj,.index-module__table-success__3Lovj>th,.index-module__table-success__3Lovj>td{background-color:#c3e6cb}.index-module__table-success__3Lovj th,.index-module__table-success__3Lovj td,.index-module__table-success__3Lovj thead th,.index-module__table-success__3Lovj tbody+tbody{border-color:#8fd19e}.index-module__table-hover__3xY4C .index-module__table-success__3Lovj:hover{background-color:#b1dfbb}.index-module__table-hover__3xY4C .index-module__table-success__3Lovj:hover>td,.index-module__table-hover__3xY4C .index-module__table-success__3Lovj:hover>th{background-color:#b1dfbb}.index-module__table-info__Lr3-l,.index-module__table-info__Lr3-l>th,.index-module__table-info__Lr3-l>td{background-color:#bee5eb}.index-module__table-info__Lr3-l th,.index-module__table-info__Lr3-l td,.index-module__table-info__Lr3-l thead th,.index-module__table-info__Lr3-l tbody+tbody{border-color:#86cfda}.index-module__table-hover__3xY4C .index-module__table-info__Lr3-l:hover{background-color:#abdde5}.index-module__table-hover__3xY4C .index-module__table-info__Lr3-l:hover>td,.index-module__table-hover__3xY4C .index-module__table-info__Lr3-l:hover>th{background-color:#abdde5}.index-module__table-warning__ZT-n9,.index-module__table-warning__ZT-n9>th,.index-module__table-warning__ZT-n9>td{background-color:#ffeeba}.index-module__table-warning__ZT-n9 th,.index-module__table-warning__ZT-n9 td,.index-module__table-warning__ZT-n9 thead th,.index-module__table-warning__ZT-n9 tbody+tbody{border-color:#ffdf7e}.index-module__table-hover__3xY4C .index-module__table-warning__ZT-n9:hover{background-color:#ffe8a1}.index-module__table-hover__3xY4C .index-module__table-warning__ZT-n9:hover>td,.index-module__table-hover__3xY4C .index-module__table-warning__ZT-n9:hover>th{background-color:#ffe8a1}.index-module__table-danger__3cxzc,.index-module__table-danger__3cxzc>th,.index-module__table-danger__3cxzc>td{background-color:#f5c6cb}.index-module__table-danger__3cxzc th,.index-module__table-danger__3cxzc td,.index-module__table-danger__3cxzc thead th,.index-module__table-danger__3cxzc tbody+tbody{border-color:#ed969e}.index-module__table-hover__3xY4C .index-module__table-danger__3cxzc:hover{background-color:#f1b0b7}.index-module__table-hover__3xY4C .index-module__table-danger__3cxzc:hover>td,.index-module__table-hover__3xY4C .index-module__table-danger__3cxzc:hover>th{background-color:#f1b0b7}.index-module__table-light__2IkbY,.index-module__table-light__2IkbY>th,.index-module__table-light__2IkbY>td{background-color:#fdfdfe}.index-module__table-light__2IkbY th,.index-module__table-light__2IkbY td,.index-module__table-light__2IkbY thead th,.index-module__table-light__2IkbY tbody+tbody{border-color:#fbfcfc}.index-module__table-hover__3xY4C .index-module__table-light__2IkbY:hover{background-color:#ececf6}.index-module__table-hover__3xY4C .index-module__table-light__2IkbY:hover>td,.index-module__table-hover__3xY4C .index-module__table-light__2IkbY:hover>th{background-color:#ececf6}.index-module__table-dark__xEdoZ,.index-module__table-dark__xEdoZ>th,.index-module__table-dark__xEdoZ>td{background-color:#c6c8ca}.index-module__table-dark__xEdoZ th,.index-module__table-dark__xEdoZ td,.index-module__table-dark__xEdoZ thead th,.index-module__table-dark__xEdoZ tbody+tbody{border-color:#95999c}.index-module__table-hover__3xY4C .index-module__table-dark__xEdoZ:hover{background-color:#b9bbbe}.index-module__table-hover__3xY4C .index-module__table-dark__xEdoZ:hover>td,.index-module__table-hover__3xY4C .index-module__table-dark__xEdoZ:hover>th{background-color:#b9bbbe}.index-module__table-active__1blBy,.index-module__table-active__1blBy>th,.index-module__table-active__1blBy>td{background-color:rgba(0,0,0,0.075)}.index-module__table-hover__3xY4C .index-module__table-active__1blBy:hover{background-color:rgba(0,0,0,0.075)}.index-module__table-hover__3xY4C .index-module__table-active__1blBy:hover>td,.index-module__table-hover__3xY4C .index-module__table-active__1blBy:hover>th{background-color:rgba(0,0,0,0.075)}.index-module__table__2mYYw .index-module__thead-dark__wbYfA th{color:#fff;background-color:#343a40;border-color:#454d55}.index-module__table__2mYYw .index-module__thead-light__IYVhc th{color:#495057;background-color:#e9ecef;border-color:#dee2e6}.index-module__table-dark__xEdoZ{color:#fff;background-color:#343a40}.index-module__table-dark__xEdoZ th,.index-module__table-dark__xEdoZ td,.index-module__table-dark__xEdoZ thead th{border-color:#454d55}.index-module__table-dark__xEdoZ.index-module__table-bordered__19nzh{border:0}.index-module__table-dark__xEdoZ.index-module__table-striped__1PPA- tbody tr:nth-of-type(odd){background-color:rgba(255,255,255,0.05)}.index-module__table-dark__xEdoZ.index-module__table-hover__3xY4C tbody tr:hover{color:#fff;background-color:rgba(255,255,255,0.075)}@media (max-width: 575.98px){.index-module__table-responsive-sm__2eJfs{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.index-module__table-responsive-sm__2eJfs>.index-module__table-bordered__19nzh{border:0}}@media (max-width: 767.98px){.index-module__table-responsive-md__1SaFY{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.index-module__table-responsive-md__1SaFY>.index-module__table-bordered__19nzh{border:0}}@media (max-width: 1049.98px){.index-module__table-responsive-lg__2Uoev{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.index-module__table-responsive-lg__2Uoev>.index-module__table-bordered__19nzh{border:0}}@media (max-width: 1499.98px){.index-module__table-responsive-xl__1H_WR{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.index-module__table-responsive-xl__1H_WR>.index-module__table-bordered__19nzh{border:0}}.index-module__table-responsive__2d-QH{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.index-module__table-responsive__2d-QH>.index-module__table-bordered__19nzh{border:0}.index-module__form-control__33tSj{display:block;width:100%;height:calc(1.5em + .75rem + 2px);padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:.25rem;transition:border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.index-module__form-control__33tSj{transition:none}}.index-module__form-control__33tSj::-ms-expand{background-color:transparent;border:0}.index-module__form-control__33tSj:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.index-module__form-control__33tSj:focus{color:#495057;background-color:#fff;border-color:#54a8f7;outline:0;box-shadow:0 0 0 .2rem rgba(9,104,195,0.25)}.index-module__form-control__33tSj::placeholder{color:#6c757d;opacity:1}.index-module__form-control__33tSj:disabled,.index-module__form-control__33tSj[readonly]{background-color:#e9ecef;opacity:1}select.index-module__form-control__33tSj:focus::-ms-value{color:#495057;background-color:#fff}.index-module__form-control-file__-_pwY,.index-module__form-control-range__LLbKa{display:block;width:100%}.index-module__col-form-label__nBcIH{padding-top:calc(.375rem + 1px);padding-bottom:calc(.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.index-module__col-form-label-lg__ZVtl2{padding-top:calc(.5rem + 1px);padding-bottom:calc(.5rem + 1px);font-size:1.25rem;line-height:1.5}.index-module__col-form-label-sm__1gHvU{padding-top:calc(.25rem + 1px);padding-bottom:calc(.25rem + 1px);font-size:.875rem;line-height:1.5}.index-module__form-control-plaintext__1Qr5_{display:block;width:100%;padding:.375rem 0;margin-bottom:0;font-size:1rem;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.index-module__form-control-plaintext__1Qr5_.index-module__form-control-sm__2Mi-0,.index-module__form-control-plaintext__1Qr5_.index-module__form-control-lg__1FX9v{padding-right:0;padding-left:0}.index-module__form-control-sm__2Mi-0{height:calc(1.5em + .5rem + 2px);padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.index-module__form-control-lg__1FX9v{height:calc(1.5em + 1rem + 2px);padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}select.index-module__form-control__33tSj[size],select.index-module__form-control__33tSj[multiple]{height:auto}textarea.index-module__form-control__33tSj{height:auto}.index-module__form-group__20g9m{margin-bottom:1rem}.index-module__form-text__15IaJ{display:block;margin-top:.25rem}.index-module__form-row__1q1iq{display:flex;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.index-module__form-row__1q1iq>.index-module__col__M-EJO,.index-module__form-row__1q1iq>[class*=\\\"col-\\\"]{padding-right:5px;padding-left:5px}.index-module__form-check__2UQrO{position:relative;display:block;padding-left:1.25rem}.index-module__form-check-input__XpnZN{position:absolute;margin-top:.3rem;margin-left:-1.25rem}.index-module__form-check-input__XpnZN[disabled] ~ .index-module__form-check-label__2cbqH,.index-module__form-check-input__XpnZN:disabled ~ .index-module__form-check-label__2cbqH{color:#6c757d}.index-module__form-check-label__2cbqH{margin-bottom:0}.index-module__form-check-inline__212tg{display:inline-flex;align-items:center;padding-left:0;margin-right:.75rem}.index-module__form-check-inline__212tg .index-module__form-check-input__XpnZN{position:static;margin-top:0;margin-right:.3125rem;margin-left:0}.index-module__valid-feedback__2e8qI{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#28a745}.index-module__valid-tooltip__3G7sU{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;line-height:1.5;color:#fff;background-color:rgba(40,167,69,0.9);border-radius:.25rem}.index-module__was-validated__LSagy :valid ~ .index-module__valid-feedback__2e8qI,.index-module__was-validated__LSagy :valid ~ .index-module__valid-tooltip__3G7sU,.index-module__is-valid__2NFXf ~ .index-module__valid-feedback__2e8qI,.index-module__is-valid__2NFXf ~ .index-module__valid-tooltip__3G7sU{display:block}.index-module__was-validated__LSagy .index-module__form-control__33tSj:valid,.index-module__form-control__33tSj.index-module__is-valid__2NFXf{border-color:#28a745;padding-right:calc(1.5em + .75rem);background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\\\");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.index-module__was-validated__LSagy .index-module__form-control__33tSj:valid:focus,.index-module__form-control__33tSj.index-module__is-valid__2NFXf:focus{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,0.25)}.index-module__was-validated__LSagy textarea.index-module__form-control__33tSj:valid,textarea.index-module__form-control__33tSj.index-module__is-valid__2NFXf{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.index-module__was-validated__LSagy .index-module__custom-select__2Ae5X:valid,.index-module__custom-select__2Ae5X.index-module__is-valid__2NFXf{border-color:#28a745;padding-right:calc(.75em + 2.3125rem);background:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\\\") no-repeat right .75rem center/8px 10px,url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\\\") #fff no-repeat center right 1.75rem/calc(.75em + .375rem) calc(.75em + .375rem)}.index-module__was-validated__LSagy .index-module__custom-select__2Ae5X:valid:focus,.index-module__custom-select__2Ae5X.index-module__is-valid__2NFXf:focus{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,0.25)}.index-module__was-validated__LSagy .index-module__form-check-input__XpnZN:valid ~ .index-module__form-check-label__2cbqH,.index-module__form-check-input__XpnZN.index-module__is-valid__2NFXf ~ .index-module__form-check-label__2cbqH{color:#28a745}.index-module__was-validated__LSagy .index-module__form-check-input__XpnZN:valid ~ .index-module__valid-feedback__2e8qI,.index-module__was-validated__LSagy .index-module__form-check-input__XpnZN:valid ~ .index-module__valid-tooltip__3G7sU,.index-module__form-check-input__XpnZN.index-module__is-valid__2NFXf ~ .index-module__valid-feedback__2e8qI,.index-module__form-check-input__XpnZN.index-module__is-valid__2NFXf ~ .index-module__valid-tooltip__3G7sU{display:block}.index-module__was-validated__LSagy .index-module__custom-control-input__2tloy:valid ~ .index-module__custom-control-label__17M6G,.index-module__custom-control-input__2tloy.index-module__is-valid__2NFXf ~ .index-module__custom-control-label__17M6G{color:#28a745}.index-module__was-validated__LSagy .index-module__custom-control-input__2tloy:valid ~ .index-module__custom-control-label__17M6G::before,.index-module__custom-control-input__2tloy.index-module__is-valid__2NFXf ~ .index-module__custom-control-label__17M6G::before{border-color:#28a745}.index-module__was-validated__LSagy .index-module__custom-control-input__2tloy:valid:checked ~ .index-module__custom-control-label__17M6G::before,.index-module__custom-control-input__2tloy.index-module__is-valid__2NFXf:checked ~ .index-module__custom-control-label__17M6G::before{border-color:#34ce57;background-color:#34ce57}.index-module__was-validated__LSagy .index-module__custom-control-input__2tloy:valid:focus ~ .index-module__custom-control-label__17M6G::before,.index-module__custom-control-input__2tloy.index-module__is-valid__2NFXf:focus ~ .index-module__custom-control-label__17M6G::before{box-shadow:0 0 0 .2rem rgba(40,167,69,0.25)}.index-module__was-validated__LSagy .index-module__custom-control-input__2tloy:valid:focus:not(:checked) ~ .index-module__custom-control-label__17M6G::before,.index-module__custom-control-input__2tloy.index-module__is-valid__2NFXf:focus:not(:checked) ~ .index-module__custom-control-label__17M6G::before{border-color:#28a745}.index-module__was-validated__LSagy .index-module__custom-file-input__22YHK:valid ~ .index-module__custom-file-label__1lWwo,.index-module__custom-file-input__22YHK.index-module__is-valid__2NFXf ~ .index-module__custom-file-label__1lWwo{border-color:#28a745}.index-module__was-validated__LSagy .index-module__custom-file-input__22YHK:valid:focus ~ .index-module__custom-file-label__1lWwo,.index-module__custom-file-input__22YHK.index-module__is-valid__2NFXf:focus ~ .index-module__custom-file-label__1lWwo{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,0.25)}.index-module__invalid-feedback__2SYE6{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#dc3545}.index-module__invalid-tooltip__2ajud{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;line-height:1.5;color:#fff;background-color:rgba(220,53,69,0.9);border-radius:.25rem}.index-module__was-validated__LSagy :invalid ~ .index-module__invalid-feedback__2SYE6,.index-module__was-validated__LSagy :invalid ~ .index-module__invalid-tooltip__2ajud,.index-module__is-invalid__3_LmP ~ .index-module__invalid-feedback__2SYE6,.index-module__is-invalid__3_LmP ~ .index-module__invalid-tooltip__2ajud{display:block}.index-module__was-validated__LSagy .index-module__form-control__33tSj:invalid,.index-module__form-control__33tSj.index-module__is-invalid__3_LmP{border-color:#dc3545;padding-right:calc(1.5em + .75rem);background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\\\");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.index-module__was-validated__LSagy .index-module__form-control__33tSj:invalid:focus,.index-module__form-control__33tSj.index-module__is-invalid__3_LmP:focus{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,0.25)}.index-module__was-validated__LSagy textarea.index-module__form-control__33tSj:invalid,textarea.index-module__form-control__33tSj.index-module__is-invalid__3_LmP{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.index-module__was-validated__LSagy .index-module__custom-select__2Ae5X:invalid,.index-module__custom-select__2Ae5X.index-module__is-invalid__3_LmP{border-color:#dc3545;padding-right:calc(.75em + 2.3125rem);background:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\\\") no-repeat right .75rem center/8px 10px,url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\\\") #fff no-repeat center right 1.75rem/calc(.75em + .375rem) calc(.75em + .375rem)}.index-module__was-validated__LSagy .index-module__custom-select__2Ae5X:invalid:focus,.index-module__custom-select__2Ae5X.index-module__is-invalid__3_LmP:focus{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,0.25)}.index-module__was-validated__LSagy .index-module__form-check-input__XpnZN:invalid ~ .index-module__form-check-label__2cbqH,.index-module__form-check-input__XpnZN.index-module__is-invalid__3_LmP ~ .index-module__form-check-label__2cbqH{color:#dc3545}.index-module__was-validated__LSagy .index-module__form-check-input__XpnZN:invalid ~ .index-module__invalid-feedback__2SYE6,.index-module__was-validated__LSagy .index-module__form-check-input__XpnZN:invalid ~ .index-module__invalid-tooltip__2ajud,.index-module__form-check-input__XpnZN.index-module__is-invalid__3_LmP ~ .index-module__invalid-feedback__2SYE6,.index-module__form-check-input__XpnZN.index-module__is-invalid__3_LmP ~ .index-module__invalid-tooltip__2ajud{display:block}.index-module__was-validated__LSagy .index-module__custom-control-input__2tloy:invalid ~ .index-module__custom-control-label__17M6G,.index-module__custom-control-input__2tloy.index-module__is-invalid__3_LmP ~ .index-module__custom-control-label__17M6G{color:#dc3545}.index-module__was-validated__LSagy .index-module__custom-control-input__2tloy:invalid ~ .index-module__custom-control-label__17M6G::before,.index-module__custom-control-input__2tloy.index-module__is-invalid__3_LmP ~ .index-module__custom-control-label__17M6G::before{border-color:#dc3545}.index-module__was-validated__LSagy .index-module__custom-control-input__2tloy:invalid:checked ~ .index-module__custom-control-label__17M6G::before,.index-module__custom-control-input__2tloy.index-module__is-invalid__3_LmP:checked ~ .index-module__custom-control-label__17M6G::before{border-color:#e4606d;background-color:#e4606d}.index-module__was-validated__LSagy .index-module__custom-control-input__2tloy:invalid:focus ~ .index-module__custom-control-label__17M6G::before,.index-module__custom-control-input__2tloy.index-module__is-invalid__3_LmP:focus ~ .index-module__custom-control-label__17M6G::before{box-shadow:0 0 0 .2rem rgba(220,53,69,0.25)}.index-module__was-validated__LSagy .index-module__custom-control-input__2tloy:invalid:focus:not(:checked) ~ .index-module__custom-control-label__17M6G::before,.index-module__custom-control-input__2tloy.index-module__is-invalid__3_LmP:focus:not(:checked) ~ .index-module__custom-control-label__17M6G::before{border-color:#dc3545}.index-module__was-validated__LSagy .index-module__custom-file-input__22YHK:invalid ~ .index-module__custom-file-label__1lWwo,.index-module__custom-file-input__22YHK.index-module__is-invalid__3_LmP ~ .index-module__custom-file-label__1lWwo{border-color:#dc3545}.index-module__was-validated__LSagy .index-module__custom-file-input__22YHK:invalid:focus ~ .index-module__custom-file-label__1lWwo,.index-module__custom-file-input__22YHK.index-module__is-invalid__3_LmP:focus ~ .index-module__custom-file-label__1lWwo{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,0.25)}.index-module__form-inline__1XHn0{display:flex;flex-flow:row wrap;align-items:center}.index-module__form-inline__1XHn0 .index-module__form-check__2UQrO{width:100%}@media (min-width: 576px){.index-module__form-inline__1XHn0 label{display:flex;align-items:center;justify-content:center;margin-bottom:0}.index-module__form-inline__1XHn0 .index-module__form-group__20g9m{display:flex;flex:0 0 auto;flex-flow:row wrap;align-items:center;margin-bottom:0}.index-module__form-inline__1XHn0 .index-module__form-control__33tSj{display:inline-block;width:auto;vertical-align:middle}.index-module__form-inline__1XHn0 .index-module__form-control-plaintext__1Qr5_{display:inline-block}.index-module__form-inline__1XHn0 .index-module__input-group__2KI-F,.index-module__form-inline__1XHn0 .index-module__custom-select__2Ae5X{width:auto}.index-module__form-inline__1XHn0 .index-module__form-check__2UQrO{display:flex;align-items:center;justify-content:center;width:auto;padding-left:0}.index-module__form-inline__1XHn0 .index-module__form-check-input__XpnZN{position:relative;flex-shrink:0;margin-top:0;margin-right:.25rem;margin-left:0}.index-module__form-inline__1XHn0 .index-module__custom-control__2LzXs{align-items:center;justify-content:center}.index-module__form-inline__1XHn0 .index-module__custom-control-label__17M6G{margin-bottom:0}}.index-module__btn__1Pcdf{display:inline-block;font-weight:400;color:#212529;text-align:center;vertical-align:middle;cursor:pointer;user-select:none;background-color:transparent;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;line-height:1.5;border-radius:.25rem;transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.index-module__btn__1Pcdf{transition:none}}.index-module__btn__1Pcdf:hover{color:#212529;text-decoration:none}.index-module__btn__1Pcdf:focus,.index-module__btn__1Pcdf.index-module__focus__37XLI{outline:0;box-shadow:0 0 0 .2rem rgba(9,104,195,0.25)}.index-module__btn__1Pcdf.index-module__disabled__2BtOk,.index-module__btn__1Pcdf:disabled{opacity:.65}a.index-module__btn__1Pcdf.index-module__disabled__2BtOk,fieldset:disabled a.index-module__btn__1Pcdf{pointer-events:none}.index-module__btn-primary__tn4qX{color:#fff;background-color:#0968c3;border-color:#0968c3}.index-module__btn-primary__tn4qX:hover{color:#fff;background-color:#07559e;border-color:#074e92}.index-module__btn-primary__tn4qX:focus,.index-module__btn-primary__tn4qX.index-module__focus__37XLI{color:#fff;background-color:#07559e;border-color:#074e92;box-shadow:0 0 0 .2rem rgba(46,127,204,0.5)}.index-module__btn-primary__tn4qX.index-module__disabled__2BtOk,.index-module__btn-primary__tn4qX:disabled{color:#fff;background-color:#0968c3;border-color:#0968c3}.index-module__btn-primary__tn4qX:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-primary__tn4qX:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-primary__tn4qX.index-module__dropdown-toggle__126GD{color:#fff;background-color:#074e92;border-color:#064886}.index-module__btn-primary__tn4qX:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-primary__tn4qX:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-primary__tn4qX.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(46,127,204,0.5)}.index-module__btn-secondary__1R5pU{color:#fff;background-color:gray;border-color:gray}.index-module__btn-secondary__1R5pU:hover{color:#fff;background-color:#6d6d6d;border-color:#676767}.index-module__btn-secondary__1R5pU:focus,.index-module__btn-secondary__1R5pU.index-module__focus__37XLI{color:#fff;background-color:#6d6d6d;border-color:#676767;box-shadow:0 0 0 .2rem rgba(147,147,147,0.5)}.index-module__btn-secondary__1R5pU.index-module__disabled__2BtOk,.index-module__btn-secondary__1R5pU:disabled{color:#fff;background-color:gray;border-color:gray}.index-module__btn-secondary__1R5pU:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-secondary__1R5pU:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-secondary__1R5pU.index-module__dropdown-toggle__126GD{color:#fff;background-color:#676767;border-color:#606060}.index-module__btn-secondary__1R5pU:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-secondary__1R5pU:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-secondary__1R5pU.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(147,147,147,0.5)}.index-module__btn-success__1EMgR{color:#fff;background-color:#28a745;border-color:#28a745}.index-module__btn-success__1EMgR:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.index-module__btn-success__1EMgR:focus,.index-module__btn-success__1EMgR.index-module__focus__37XLI{color:#fff;background-color:#218838;border-color:#1e7e34;box-shadow:0 0 0 .2rem rgba(72,180,97,0.5)}.index-module__btn-success__1EMgR.index-module__disabled__2BtOk,.index-module__btn-success__1EMgR:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.index-module__btn-success__1EMgR:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-success__1EMgR:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-success__1EMgR.index-module__dropdown-toggle__126GD{color:#fff;background-color:#1e7e34;border-color:#1c7430}.index-module__btn-success__1EMgR:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-success__1EMgR:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-success__1EMgR.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(72,180,97,0.5)}.index-module__btn-info__qrgmt{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.index-module__btn-info__qrgmt:hover{color:#fff;background-color:#138496;border-color:#117a8b}.index-module__btn-info__qrgmt:focus,.index-module__btn-info__qrgmt.index-module__focus__37XLI{color:#fff;background-color:#138496;border-color:#117a8b;box-shadow:0 0 0 .2rem rgba(58,176,195,0.5)}.index-module__btn-info__qrgmt.index-module__disabled__2BtOk,.index-module__btn-info__qrgmt:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.index-module__btn-info__qrgmt:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-info__qrgmt:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-info__qrgmt.index-module__dropdown-toggle__126GD{color:#fff;background-color:#117a8b;border-color:#10707f}.index-module__btn-info__qrgmt:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-info__qrgmt:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-info__qrgmt.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(58,176,195,0.5)}.index-module__btn-warning__1E7if{color:#212529;background-color:#ffc107;border-color:#ffc107}.index-module__btn-warning__1E7if:hover{color:#212529;background-color:#e0a800;border-color:#d39e00}.index-module__btn-warning__1E7if:focus,.index-module__btn-warning__1E7if.index-module__focus__37XLI{color:#212529;background-color:#e0a800;border-color:#d39e00;box-shadow:0 0 0 .2rem rgba(222,170,12,0.5)}.index-module__btn-warning__1E7if.index-module__disabled__2BtOk,.index-module__btn-warning__1E7if:disabled{color:#212529;background-color:#ffc107;border-color:#ffc107}.index-module__btn-warning__1E7if:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-warning__1E7if:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-warning__1E7if.index-module__dropdown-toggle__126GD{color:#212529;background-color:#d39e00;border-color:#c69500}.index-module__btn-warning__1E7if:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-warning__1E7if:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-warning__1E7if.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(222,170,12,0.5)}.index-module__btn-danger__3Wxrs{color:#fff;background-color:#dc3545;border-color:#dc3545}.index-module__btn-danger__3Wxrs:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.index-module__btn-danger__3Wxrs:focus,.index-module__btn-danger__3Wxrs.index-module__focus__37XLI{color:#fff;background-color:#c82333;border-color:#bd2130;box-shadow:0 0 0 .2rem rgba(225,83,97,0.5)}.index-module__btn-danger__3Wxrs.index-module__disabled__2BtOk,.index-module__btn-danger__3Wxrs:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.index-module__btn-danger__3Wxrs:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-danger__3Wxrs:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-danger__3Wxrs.index-module__dropdown-toggle__126GD{color:#fff;background-color:#bd2130;border-color:#b21f2d}.index-module__btn-danger__3Wxrs:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-danger__3Wxrs:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-danger__3Wxrs.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(225,83,97,0.5)}.index-module__btn-light__3I-9B{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.index-module__btn-light__3I-9B:hover{color:#212529;background-color:#e2e6ea;border-color:#dae0e5}.index-module__btn-light__3I-9B:focus,.index-module__btn-light__3I-9B.index-module__focus__37XLI{color:#212529;background-color:#e2e6ea;border-color:#dae0e5;box-shadow:0 0 0 .2rem rgba(216,217,219,0.5)}.index-module__btn-light__3I-9B.index-module__disabled__2BtOk,.index-module__btn-light__3I-9B:disabled{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.index-module__btn-light__3I-9B:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-light__3I-9B:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-light__3I-9B.index-module__dropdown-toggle__126GD{color:#212529;background-color:#dae0e5;border-color:#d3d9df}.index-module__btn-light__3I-9B:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-light__3I-9B:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-light__3I-9B.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(216,217,219,0.5)}.index-module__btn-dark__1JkqV{color:#fff;background-color:#343a40;border-color:#343a40}.index-module__btn-dark__1JkqV:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.index-module__btn-dark__1JkqV:focus,.index-module__btn-dark__1JkqV.index-module__focus__37XLI{color:#fff;background-color:#23272b;border-color:#1d2124;box-shadow:0 0 0 .2rem rgba(82,88,93,0.5)}.index-module__btn-dark__1JkqV.index-module__disabled__2BtOk,.index-module__btn-dark__1JkqV:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.index-module__btn-dark__1JkqV:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-dark__1JkqV:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-dark__1JkqV.index-module__dropdown-toggle__126GD{color:#fff;background-color:#1d2124;border-color:#171a1d}.index-module__btn-dark__1JkqV:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-dark__1JkqV:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-dark__1JkqV.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(82,88,93,0.5)}.index-module__btn-outline-primary__3lAZR{color:#0968c3;border-color:#0968c3}.index-module__btn-outline-primary__3lAZR:hover{color:#fff;background-color:#0968c3;border-color:#0968c3}.index-module__btn-outline-primary__3lAZR:focus,.index-module__btn-outline-primary__3lAZR.index-module__focus__37XLI{box-shadow:0 0 0 .2rem rgba(9,104,195,0.5)}.index-module__btn-outline-primary__3lAZR.index-module__disabled__2BtOk,.index-module__btn-outline-primary__3lAZR:disabled{color:#0968c3;background-color:transparent}.index-module__btn-outline-primary__3lAZR:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-outline-primary__3lAZR:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-outline-primary__3lAZR.index-module__dropdown-toggle__126GD{color:#fff;background-color:#0968c3;border-color:#0968c3}.index-module__btn-outline-primary__3lAZR:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-outline-primary__3lAZR:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-outline-primary__3lAZR.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(9,104,195,0.5)}.index-module__btn-outline-secondary__2qj9A{color:gray;border-color:gray}.index-module__btn-outline-secondary__2qj9A:hover{color:#fff;background-color:gray;border-color:gray}.index-module__btn-outline-secondary__2qj9A:focus,.index-module__btn-outline-secondary__2qj9A.index-module__focus__37XLI{box-shadow:0 0 0 .2rem rgba(128,128,128,0.5)}.index-module__btn-outline-secondary__2qj9A.index-module__disabled__2BtOk,.index-module__btn-outline-secondary__2qj9A:disabled{color:gray;background-color:transparent}.index-module__btn-outline-secondary__2qj9A:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-outline-secondary__2qj9A:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-outline-secondary__2qj9A.index-module__dropdown-toggle__126GD{color:#fff;background-color:gray;border-color:gray}.index-module__btn-outline-secondary__2qj9A:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-outline-secondary__2qj9A:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-outline-secondary__2qj9A.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(128,128,128,0.5)}.index-module__btn-outline-success__3gxh5{color:#28a745;border-color:#28a745}.index-module__btn-outline-success__3gxh5:hover{color:#fff;background-color:#28a745;border-color:#28a745}.index-module__btn-outline-success__3gxh5:focus,.index-module__btn-outline-success__3gxh5.index-module__focus__37XLI{box-shadow:0 0 0 .2rem rgba(40,167,69,0.5)}.index-module__btn-outline-success__3gxh5.index-module__disabled__2BtOk,.index-module__btn-outline-success__3gxh5:disabled{color:#28a745;background-color:transparent}.index-module__btn-outline-success__3gxh5:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-outline-success__3gxh5:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-outline-success__3gxh5.index-module__dropdown-toggle__126GD{color:#fff;background-color:#28a745;border-color:#28a745}.index-module__btn-outline-success__3gxh5:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-outline-success__3gxh5:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-outline-success__3gxh5.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,0.5)}.index-module__btn-outline-info__1XYaK{color:#17a2b8;border-color:#17a2b8}.index-module__btn-outline-info__1XYaK:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.index-module__btn-outline-info__1XYaK:focus,.index-module__btn-outline-info__1XYaK.index-module__focus__37XLI{box-shadow:0 0 0 .2rem rgba(23,162,184,0.5)}.index-module__btn-outline-info__1XYaK.index-module__disabled__2BtOk,.index-module__btn-outline-info__1XYaK:disabled{color:#17a2b8;background-color:transparent}.index-module__btn-outline-info__1XYaK:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-outline-info__1XYaK:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-outline-info__1XYaK.index-module__dropdown-toggle__126GD{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.index-module__btn-outline-info__1XYaK:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-outline-info__1XYaK:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-outline-info__1XYaK.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(23,162,184,0.5)}.index-module__btn-outline-warning__1VRWd{color:#ffc107;border-color:#ffc107}.index-module__btn-outline-warning__1VRWd:hover{color:#212529;background-color:#ffc107;border-color:#ffc107}.index-module__btn-outline-warning__1VRWd:focus,.index-module__btn-outline-warning__1VRWd.index-module__focus__37XLI{box-shadow:0 0 0 .2rem rgba(255,193,7,0.5)}.index-module__btn-outline-warning__1VRWd.index-module__disabled__2BtOk,.index-module__btn-outline-warning__1VRWd:disabled{color:#ffc107;background-color:transparent}.index-module__btn-outline-warning__1VRWd:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-outline-warning__1VRWd:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-outline-warning__1VRWd.index-module__dropdown-toggle__126GD{color:#212529;background-color:#ffc107;border-color:#ffc107}.index-module__btn-outline-warning__1VRWd:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-outline-warning__1VRWd:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-outline-warning__1VRWd.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(255,193,7,0.5)}.index-module__btn-outline-danger__1hm77{color:#dc3545;border-color:#dc3545}.index-module__btn-outline-danger__1hm77:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.index-module__btn-outline-danger__1hm77:focus,.index-module__btn-outline-danger__1hm77.index-module__focus__37XLI{box-shadow:0 0 0 .2rem rgba(220,53,69,0.5)}.index-module__btn-outline-danger__1hm77.index-module__disabled__2BtOk,.index-module__btn-outline-danger__1hm77:disabled{color:#dc3545;background-color:transparent}.index-module__btn-outline-danger__1hm77:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-outline-danger__1hm77:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-outline-danger__1hm77.index-module__dropdown-toggle__126GD{color:#fff;background-color:#dc3545;border-color:#dc3545}.index-module__btn-outline-danger__1hm77:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-outline-danger__1hm77:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-outline-danger__1hm77.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,0.5)}.index-module__btn-outline-light__2kClq{color:#f8f9fa;border-color:#f8f9fa}.index-module__btn-outline-light__2kClq:hover{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.index-module__btn-outline-light__2kClq:focus,.index-module__btn-outline-light__2kClq.index-module__focus__37XLI{box-shadow:0 0 0 .2rem rgba(248,249,250,0.5)}.index-module__btn-outline-light__2kClq.index-module__disabled__2BtOk,.index-module__btn-outline-light__2kClq:disabled{color:#f8f9fa;background-color:transparent}.index-module__btn-outline-light__2kClq:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-outline-light__2kClq:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-outline-light__2kClq.index-module__dropdown-toggle__126GD{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.index-module__btn-outline-light__2kClq:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-outline-light__2kClq:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-outline-light__2kClq.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(248,249,250,0.5)}.index-module__btn-outline-dark__2uuwK{color:#343a40;border-color:#343a40}.index-module__btn-outline-dark__2uuwK:hover{color:#fff;background-color:#343a40;border-color:#343a40}.index-module__btn-outline-dark__2uuwK:focus,.index-module__btn-outline-dark__2uuwK.index-module__focus__37XLI{box-shadow:0 0 0 .2rem rgba(52,58,64,0.5)}.index-module__btn-outline-dark__2uuwK.index-module__disabled__2BtOk,.index-module__btn-outline-dark__2uuwK:disabled{color:#343a40;background-color:transparent}.index-module__btn-outline-dark__2uuwK:not(:disabled):not(.index-module__disabled__2BtOk):active,.index-module__btn-outline-dark__2uuwK:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA,.index-module__show__6Epil>.index-module__btn-outline-dark__2uuwK.index-module__dropdown-toggle__126GD{color:#fff;background-color:#343a40;border-color:#343a40}.index-module__btn-outline-dark__2uuwK:not(:disabled):not(.index-module__disabled__2BtOk):active:focus,.index-module__btn-outline-dark__2uuwK:not(:disabled):not(.index-module__disabled__2BtOk).index-module__active__2-CxA:focus,.index-module__show__6Epil>.index-module__btn-outline-dark__2uuwK.index-module__dropdown-toggle__126GD:focus{box-shadow:0 0 0 .2rem rgba(52,58,64,0.5)}.index-module__btn-link__Ryrl9,.index-module__btnLinkText__3tE8k{font-weight:400;color:#0968c3;text-decoration:none}.index-module__btn-link__Ryrl9:hover,.index-module__btnLinkText__3tE8k:hover{color:#0b2569;text-decoration:underline}.index-module__btn-link__Ryrl9:focus,.index-module__btnLinkText__3tE8k:focus,.index-module__btn-link__Ryrl9.index-module__focus__37XLI,.index-module__focus__37XLI.index-module__btnLinkText__3tE8k{text-decoration:underline;box-shadow:none}.index-module__btn-link__Ryrl9:disabled,.index-module__btnLinkText__3tE8k:disabled,.index-module__btn-link__Ryrl9.index-module__disabled__2BtOk,.index-module__disabled__2BtOk.index-module__btnLinkText__3tE8k{color:#6c757d;pointer-events:none}.index-module__btn-lg__2dm__,.index-module__btn-group-lg__3vO5c>.index-module__btn__1Pcdf{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.index-module__btn-sm__uACm9,.index-module__btn-group-sm__2qGvo>.index-module__btn__1Pcdf{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.index-module__btn-block__2B8z7{display:block;width:100%}.index-module__btn-block__2B8z7+.index-module__btn-block__2B8z7{margin-top:.5rem}input[type=\\\"submit\\\"].index-module__btn-block__2B8z7,input[type=\\\"reset\\\"].index-module__btn-block__2B8z7,input[type=\\\"button\\\"].index-module__btn-block__2B8z7{width:100%}.index-module__fade__23Syb{transition:opacity 0.15s linear}@media (prefers-reduced-motion: reduce){.index-module__fade__23Syb{transition:none}}.index-module__fade__23Syb:not(.index-module__show__6Epil){opacity:0}.index-module__collapse__12Qls:not(.index-module__show__6Epil){display:none}.index-module__collapsing__1R9Ig{position:relative;height:0;overflow:hidden;transition:height 0.35s ease}@media (prefers-reduced-motion: reduce){.index-module__collapsing__1R9Ig{transition:none}}.index-module__dropup__1uJXa,.index-module__dropright__2YE8b,.index-module__dropdown__3F8O8,.index-module__dropleft__2pr3E{position:relative}.index-module__dropdown-toggle__126GD{white-space:nowrap}.index-module__dropdown-toggle__126GD::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.index-module__dropdown-toggle__126GD:empty::after{margin-left:0}.index-module__dropdown-menu__1pzMl{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.15);border-radius:.25rem}.index-module__dropdown-menu-left__3FpwF{right:auto;left:0}.index-module__dropdown-menu-right__1UJne{right:0;left:auto}@media (min-width: 576px){.index-module__dropdown-menu-sm-left__3m9sl{right:auto;left:0}.index-module__dropdown-menu-sm-right__eaU72{right:0;left:auto}}@media (min-width: 768px){.index-module__dropdown-menu-md-left__2v8Zw{right:auto;left:0}.index-module__dropdown-menu-md-right__29eeO{right:0;left:auto}}@media (min-width: 1050px){.index-module__dropdown-menu-lg-left__1Mo8l{right:auto;left:0}.index-module__dropdown-menu-lg-right__2GKQl{right:0;left:auto}}@media (min-width: 1500px){.index-module__dropdown-menu-xl-left__qwf9Z{right:auto;left:0}.index-module__dropdown-menu-xl-right__gVhbV{right:0;left:auto}}.index-module__dropup__1uJXa .index-module__dropdown-menu__1pzMl{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.index-module__dropup__1uJXa .index-module__dropdown-toggle__126GD::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.index-module__dropup__1uJXa .index-module__dropdown-toggle__126GD:empty::after{margin-left:0}.index-module__dropright__2YE8b .index-module__dropdown-menu__1pzMl{top:0;right:auto;left:100%;margin-top:0;margin-left:.125rem}.index-module__dropright__2YE8b .index-module__dropdown-toggle__126GD::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.index-module__dropright__2YE8b .index-module__dropdown-toggle__126GD:empty::after{margin-left:0}.index-module__dropright__2YE8b .index-module__dropdown-toggle__126GD::after{vertical-align:0}.index-module__dropleft__2pr3E .index-module__dropdown-menu__1pzMl{top:0;right:100%;left:auto;margin-top:0;margin-right:.125rem}.index-module__dropleft__2pr3E .index-module__dropdown-toggle__126GD::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\"}.index-module__dropleft__2pr3E .index-module__dropdown-toggle__126GD::after{display:none}.index-module__dropleft__2pr3E .index-module__dropdown-toggle__126GD::before{display:inline-block;margin-right:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.index-module__dropleft__2pr3E .index-module__dropdown-toggle__126GD:empty::after{margin-left:0}.index-module__dropleft__2pr3E .index-module__dropdown-toggle__126GD::before{vertical-align:0}.index-module__dropdown-menu__1pzMl[x-placement^=\\\"top\\\"],.index-module__dropdown-menu__1pzMl[x-placement^=\\\"right\\\"],.index-module__dropdown-menu__1pzMl[x-placement^=\\\"bottom\\\"],.index-module__dropdown-menu__1pzMl[x-placement^=\\\"left\\\"]{right:auto;bottom:auto}.index-module__dropdown-divider__G6_n4{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.index-module__dropdown-item__1wMHJ{display:block;width:100%;padding:.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.index-module__dropdown-item__1wMHJ:hover,.index-module__dropdown-item__1wMHJ:focus{color:#16181b;text-decoration:none;background-color:#f8f9fa}.index-module__dropdown-item__1wMHJ.index-module__active__2-CxA,.index-module__dropdown-item__1wMHJ:active{color:#fff;text-decoration:none;background-color:#0968c3}.index-module__dropdown-item__1wMHJ.index-module__disabled__2BtOk,.index-module__dropdown-item__1wMHJ:disabled{color:#6c757d;pointer-events:none;background-color:transparent}.index-module__dropdown-menu__1pzMl.index-module__show__6Epil{display:block}.index-module__dropdown-header__2G1LB{display:block;padding:.5rem 1.5rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.index-module__dropdown-item-text__Tc00Q{display:block;padding:.25rem 1.5rem;color:#212529}.index-module__btn-group__dCLg2,.index-module__btn-group-vertical__1uuqp{position:relative;display:inline-flex;vertical-align:middle}.index-module__btn-group__dCLg2>.index-module__btn__1Pcdf,.index-module__btn-group-vertical__1uuqp>.index-module__btn__1Pcdf{position:relative;flex:1 1 auto}.index-module__btn-group__dCLg2>.index-module__btn__1Pcdf:hover,.index-module__btn-group-vertical__1uuqp>.index-module__btn__1Pcdf:hover{z-index:1}.index-module__btn-group__dCLg2>.index-module__btn__1Pcdf:focus,.index-module__btn-group__dCLg2>.index-module__btn__1Pcdf:active,.index-module__btn-group__dCLg2>.index-module__btn__1Pcdf.index-module__active__2-CxA,.index-module__btn-group-vertical__1uuqp>.index-module__btn__1Pcdf:focus,.index-module__btn-group-vertical__1uuqp>.index-module__btn__1Pcdf:active,.index-module__btn-group-vertical__1uuqp>.index-module__btn__1Pcdf.index-module__active__2-CxA{z-index:1}.index-module__btn-toolbar__3FwpK{display:flex;flex-wrap:wrap;justify-content:flex-start}.index-module__btn-toolbar__3FwpK .index-module__input-group__2KI-F{width:auto}.index-module__btn-group__dCLg2>.index-module__btn__1Pcdf:not(:first-child),.index-module__btn-group__dCLg2>.index-module__btn-group__dCLg2:not(:first-child){margin-left:-1px}.index-module__btn-group__dCLg2>.index-module__btn__1Pcdf:not(:last-child):not(.index-module__dropdown-toggle__126GD),.index-module__btn-group__dCLg2>.index-module__btn-group__dCLg2:not(:last-child)>.index-module__btn__1Pcdf{border-top-right-radius:0;border-bottom-right-radius:0}.index-module__btn-group__dCLg2>.index-module__btn__1Pcdf:not(:first-child),.index-module__btn-group__dCLg2>.index-module__btn-group__dCLg2:not(:first-child)>.index-module__btn__1Pcdf{border-top-left-radius:0;border-bottom-left-radius:0}.index-module__dropdown-toggle-split__2cUc1{padding-right:.5625rem;padding-left:.5625rem}.index-module__dropdown-toggle-split__2cUc1::after,.index-module__dropup__1uJXa .index-module__dropdown-toggle-split__2cUc1::after,.index-module__dropright__2YE8b .index-module__dropdown-toggle-split__2cUc1::after{margin-left:0}.index-module__dropleft__2pr3E .index-module__dropdown-toggle-split__2cUc1::before{margin-right:0}.index-module__btn-sm__uACm9+.index-module__dropdown-toggle-split__2cUc1,.index-module__btn-group-sm__2qGvo>.index-module__btn__1Pcdf+.index-module__dropdown-toggle-split__2cUc1{padding-right:.375rem;padding-left:.375rem}.index-module__btn-lg__2dm__+.index-module__dropdown-toggle-split__2cUc1,.index-module__btn-group-lg__3vO5c>.index-module__btn__1Pcdf+.index-module__dropdown-toggle-split__2cUc1{padding-right:.75rem;padding-left:.75rem}.index-module__btn-group-vertical__1uuqp{flex-direction:column;align-items:flex-start;justify-content:center}.index-module__btn-group-vertical__1uuqp>.index-module__btn__1Pcdf,.index-module__btn-group-vertical__1uuqp>.index-module__btn-group__dCLg2{width:100%}.index-module__btn-group-vertical__1uuqp>.index-module__btn__1Pcdf:not(:first-child),.index-module__btn-group-vertical__1uuqp>.index-module__btn-group__dCLg2:not(:first-child){margin-top:-1px}.index-module__btn-group-vertical__1uuqp>.index-module__btn__1Pcdf:not(:last-child):not(.index-module__dropdown-toggle__126GD),.index-module__btn-group-vertical__1uuqp>.index-module__btn-group__dCLg2:not(:last-child)>.index-module__btn__1Pcdf{border-bottom-right-radius:0;border-bottom-left-radius:0}.index-module__btn-group-vertical__1uuqp>.index-module__btn__1Pcdf:not(:first-child),.index-module__btn-group-vertical__1uuqp>.index-module__btn-group__dCLg2:not(:first-child)>.index-module__btn__1Pcdf{border-top-left-radius:0;border-top-right-radius:0}.index-module__btn-group-toggle__3n4Fk>.index-module__btn__1Pcdf,.index-module__btn-group-toggle__3n4Fk>.index-module__btn-group__dCLg2>.index-module__btn__1Pcdf{margin-bottom:0}.index-module__btn-group-toggle__3n4Fk>.index-module__btn__1Pcdf input[type=\\\"radio\\\"],.index-module__btn-group-toggle__3n4Fk>.index-module__btn__1Pcdf input[type=\\\"checkbox\\\"],.index-module__btn-group-toggle__3n4Fk>.index-module__btn-group__dCLg2>.index-module__btn__1Pcdf input[type=\\\"radio\\\"],.index-module__btn-group-toggle__3n4Fk>.index-module__btn-group__dCLg2>.index-module__btn__1Pcdf input[type=\\\"checkbox\\\"]{position:absolute;clip:rect(0, 0, 0, 0);pointer-events:none}.index-module__input-group__2KI-F{position:relative;display:flex;flex-wrap:wrap;align-items:stretch;width:100%}.index-module__input-group__2KI-F>.index-module__form-control__33tSj,.index-module__input-group__2KI-F>.index-module__form-control-plaintext__1Qr5_,.index-module__input-group__2KI-F>.index-module__custom-select__2Ae5X,.index-module__input-group__2KI-F>.index-module__custom-file__3IAmZ{position:relative;flex:1 1 0%;min-width:0;margin-bottom:0}.index-module__input-group__2KI-F>.index-module__form-control__33tSj+.index-module__form-control__33tSj,.index-module__input-group__2KI-F>.index-module__form-control__33tSj+.index-module__custom-select__2Ae5X,.index-module__input-group__2KI-F>.index-module__form-control__33tSj+.index-module__custom-file__3IAmZ,.index-module__input-group__2KI-F>.index-module__form-control-plaintext__1Qr5_+.index-module__form-control__33tSj,.index-module__input-group__2KI-F>.index-module__form-control-plaintext__1Qr5_+.index-module__custom-select__2Ae5X,.index-module__input-group__2KI-F>.index-module__form-control-plaintext__1Qr5_+.index-module__custom-file__3IAmZ,.index-module__input-group__2KI-F>.index-module__custom-select__2Ae5X+.index-module__form-control__33tSj,.index-module__input-group__2KI-F>.index-module__custom-select__2Ae5X+.index-module__custom-select__2Ae5X,.index-module__input-group__2KI-F>.index-module__custom-select__2Ae5X+.index-module__custom-file__3IAmZ,.index-module__input-group__2KI-F>.index-module__custom-file__3IAmZ+.index-module__form-control__33tSj,.index-module__input-group__2KI-F>.index-module__custom-file__3IAmZ+.index-module__custom-select__2Ae5X,.index-module__input-group__2KI-F>.index-module__custom-file__3IAmZ+.index-module__custom-file__3IAmZ{margin-left:-1px}.index-module__input-group__2KI-F>.index-module__form-control__33tSj:focus,.index-module__input-group__2KI-F>.index-module__custom-select__2Ae5X:focus,.index-module__input-group__2KI-F>.index-module__custom-file__3IAmZ .index-module__custom-file-input__22YHK:focus ~ .index-module__custom-file-label__1lWwo{z-index:3}.index-module__input-group__2KI-F>.index-module__custom-file__3IAmZ .index-module__custom-file-input__22YHK:focus{z-index:4}.index-module__input-group__2KI-F>.index-module__form-control__33tSj:not(:last-child),.index-module__input-group__2KI-F>.index-module__custom-select__2Ae5X:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.index-module__input-group__2KI-F>.index-module__form-control__33tSj:not(:first-child),.index-module__input-group__2KI-F>.index-module__custom-select__2Ae5X:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.index-module__input-group__2KI-F>.index-module__custom-file__3IAmZ{display:flex;align-items:center}.index-module__input-group__2KI-F>.index-module__custom-file__3IAmZ:not(:last-child) .index-module__custom-file-label__1lWwo,.index-module__input-group__2KI-F>.index-module__custom-file__3IAmZ:not(:last-child) .index-module__custom-file-label__1lWwo::after{border-top-right-radius:0;border-bottom-right-radius:0}.index-module__input-group__2KI-F>.index-module__custom-file__3IAmZ:not(:first-child) .index-module__custom-file-label__1lWwo{border-top-left-radius:0;border-bottom-left-radius:0}.index-module__input-group-prepend__1qgDw,.index-module__input-group-append__2wnvP{display:flex}.index-module__input-group-prepend__1qgDw .index-module__btn__1Pcdf,.index-module__input-group-append__2wnvP .index-module__btn__1Pcdf{position:relative;z-index:2}.index-module__input-group-prepend__1qgDw .index-module__btn__1Pcdf:focus,.index-module__input-group-append__2wnvP .index-module__btn__1Pcdf:focus{z-index:3}.index-module__input-group-prepend__1qgDw .index-module__btn__1Pcdf+.index-module__btn__1Pcdf,.index-module__input-group-prepend__1qgDw .index-module__btn__1Pcdf+.index-module__input-group-text__3ZCLt,.index-module__input-group-prepend__1qgDw .index-module__input-group-text__3ZCLt+.index-module__input-group-text__3ZCLt,.index-module__input-group-prepend__1qgDw .index-module__input-group-text__3ZCLt+.index-module__btn__1Pcdf,.index-module__input-group-append__2wnvP .index-module__btn__1Pcdf+.index-module__btn__1Pcdf,.index-module__input-group-append__2wnvP .index-module__btn__1Pcdf+.index-module__input-group-text__3ZCLt,.index-module__input-group-append__2wnvP .index-module__input-group-text__3ZCLt+.index-module__input-group-text__3ZCLt,.index-module__input-group-append__2wnvP .index-module__input-group-text__3ZCLt+.index-module__btn__1Pcdf{margin-left:-1px}.index-module__input-group-prepend__1qgDw{margin-right:-1px}.index-module__input-group-append__2wnvP{margin-left:-1px}.index-module__input-group-text__3ZCLt{display:flex;align-items:center;padding:.375rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:.25rem}.index-module__input-group-text__3ZCLt input[type=\\\"radio\\\"],.index-module__input-group-text__3ZCLt input[type=\\\"checkbox\\\"]{margin-top:0}.index-module__input-group-lg__127GP>.index-module__form-control__33tSj:not(textarea),.index-module__input-group-lg__127GP>.index-module__custom-select__2Ae5X{height:calc(1.5em + 1rem + 2px)}.index-module__input-group-lg__127GP>.index-module__form-control__33tSj,.index-module__input-group-lg__127GP>.index-module__custom-select__2Ae5X,.index-module__input-group-lg__127GP>.index-module__input-group-prepend__1qgDw>.index-module__input-group-text__3ZCLt,.index-module__input-group-lg__127GP>.index-module__input-group-append__2wnvP>.index-module__input-group-text__3ZCLt,.index-module__input-group-lg__127GP>.index-module__input-group-prepend__1qgDw>.index-module__btn__1Pcdf,.index-module__input-group-lg__127GP>.index-module__input-group-append__2wnvP>.index-module__btn__1Pcdf{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.index-module__input-group-sm__1YP3y>.index-module__form-control__33tSj:not(textarea),.index-module__input-group-sm__1YP3y>.index-module__custom-select__2Ae5X{height:calc(1.5em + .5rem + 2px)}.index-module__input-group-sm__1YP3y>.index-module__form-control__33tSj,.index-module__input-group-sm__1YP3y>.index-module__custom-select__2Ae5X,.index-module__input-group-sm__1YP3y>.index-module__input-group-prepend__1qgDw>.index-module__input-group-text__3ZCLt,.index-module__input-group-sm__1YP3y>.index-module__input-group-append__2wnvP>.index-module__input-group-text__3ZCLt,.index-module__input-group-sm__1YP3y>.index-module__input-group-prepend__1qgDw>.index-module__btn__1Pcdf,.index-module__input-group-sm__1YP3y>.index-module__input-group-append__2wnvP>.index-module__btn__1Pcdf{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.index-module__input-group-lg__127GP>.index-module__custom-select__2Ae5X,.index-module__input-group-sm__1YP3y>.index-module__custom-select__2Ae5X{padding-right:1.75rem}.index-module__input-group__2KI-F>.index-module__input-group-prepend__1qgDw>.index-module__btn__1Pcdf,.index-module__input-group__2KI-F>.index-module__input-group-prepend__1qgDw>.index-module__input-group-text__3ZCLt,.index-module__input-group__2KI-F>.index-module__input-group-append__2wnvP:not(:last-child)>.index-module__btn__1Pcdf,.index-module__input-group__2KI-F>.index-module__input-group-append__2wnvP:not(:last-child)>.index-module__input-group-text__3ZCLt,.index-module__input-group__2KI-F>.index-module__input-group-append__2wnvP:last-child>.index-module__btn__1Pcdf:not(:last-child):not(.index-module__dropdown-toggle__126GD),.index-module__input-group__2KI-F>.index-module__input-group-append__2wnvP:last-child>.index-module__input-group-text__3ZCLt:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.index-module__input-group__2KI-F>.index-module__input-group-append__2wnvP>.index-module__btn__1Pcdf,.index-module__input-group__2KI-F>.index-module__input-group-append__2wnvP>.index-module__input-group-text__3ZCLt,.index-module__input-group__2KI-F>.index-module__input-group-prepend__1qgDw:not(:first-child)>.index-module__btn__1Pcdf,.index-module__input-group__2KI-F>.index-module__input-group-prepend__1qgDw:not(:first-child)>.index-module__input-group-text__3ZCLt,.index-module__input-group__2KI-F>.index-module__input-group-prepend__1qgDw:first-child>.index-module__btn__1Pcdf:not(:first-child),.index-module__input-group__2KI-F>.index-module__input-group-prepend__1qgDw:first-child>.index-module__input-group-text__3ZCLt:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.index-module__custom-control__2LzXs{position:relative;display:block;min-height:1.5rem;padding-left:1.5rem}.index-module__custom-control-inline__2i4MT{display:inline-flex;margin-right:1rem}.index-module__custom-control-input__2tloy{position:absolute;left:0;z-index:-1;width:1rem;height:1.25rem;opacity:0}.index-module__custom-control-input__2tloy:checked ~ .index-module__custom-control-label__17M6G::before{color:#fff;border-color:#0968c3;background-color:#0968c3}.index-module__custom-control-input__2tloy:focus ~ .index-module__custom-control-label__17M6G::before{box-shadow:0 0 0 .2rem rgba(9,104,195,0.25)}.index-module__custom-control-input__2tloy:focus:not(:checked) ~ .index-module__custom-control-label__17M6G::before{border-color:#54a8f7}.index-module__custom-control-input__2tloy:not(:disabled):active ~ .index-module__custom-control-label__17M6G::before{color:#fff;background-color:#85c1f9;border-color:#85c1f9}.index-module__custom-control-input__2tloy[disabled] ~ .index-module__custom-control-label__17M6G,.index-module__custom-control-input__2tloy:disabled ~ .index-module__custom-control-label__17M6G{color:#6c757d}.index-module__custom-control-input__2tloy[disabled] ~ .index-module__custom-control-label__17M6G::before,.index-module__custom-control-input__2tloy:disabled ~ .index-module__custom-control-label__17M6G::before{background-color:#e9ecef}.index-module__custom-control-label__17M6G{position:relative;margin-bottom:0;vertical-align:top}.index-module__custom-control-label__17M6G::before{position:absolute;top:.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;pointer-events:none;content:\\\"\\\";background-color:#fff;border:#adb5bd solid 1px}.index-module__custom-control-label__17M6G::after{position:absolute;top:.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;content:\\\"\\\";background:no-repeat 50% / 50% 50%}.index-module__custom-checkbox__nqODx .index-module__custom-control-label__17M6G::before{border-radius:.25rem}.index-module__custom-checkbox__nqODx .index-module__custom-control-input__2tloy:checked ~ .index-module__custom-control-label__17M6G::after{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z'/%3e%3c/svg%3e\\\")}.index-module__custom-checkbox__nqODx .index-module__custom-control-input__2tloy:indeterminate ~ .index-module__custom-control-label__17M6G::before{border-color:#0968c3;background-color:#0968c3}.index-module__custom-checkbox__nqODx .index-module__custom-control-input__2tloy:indeterminate ~ .index-module__custom-control-label__17M6G::after{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3e%3cpath stroke='%23fff' d='M0 2h4'/%3e%3c/svg%3e\\\")}.index-module__custom-checkbox__nqODx .index-module__custom-control-input__2tloy:disabled:checked ~ .index-module__custom-control-label__17M6G::before{background-color:rgba(9,104,195,0.5)}.index-module__custom-checkbox__nqODx .index-module__custom-control-input__2tloy:disabled:indeterminate ~ .index-module__custom-control-label__17M6G::before{background-color:rgba(9,104,195,0.5)}.index-module__custom-radio__3kbvO .index-module__custom-control-label__17M6G::before{border-radius:50%}.index-module__custom-radio__3kbvO .index-module__custom-control-input__2tloy:checked ~ .index-module__custom-control-label__17M6G::after{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e\\\")}.index-module__custom-radio__3kbvO .index-module__custom-control-input__2tloy:disabled:checked ~ .index-module__custom-control-label__17M6G::before{background-color:rgba(9,104,195,0.5)}.index-module__custom-switch__2ak_l{padding-left:2.25rem}.index-module__custom-switch__2ak_l .index-module__custom-control-label__17M6G::before{left:-2.25rem;width:1.75rem;pointer-events:all;border-radius:.5rem}.index-module__custom-switch__2ak_l .index-module__custom-control-label__17M6G::after{top:calc(.25rem + 2px);left:calc(-2.25rem + 2px);width:calc(1rem - 4px);height:calc(1rem - 4px);background-color:#adb5bd;border-radius:.5rem;transition:transform 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.index-module__custom-switch__2ak_l .index-module__custom-control-label__17M6G::after{transition:none}}.index-module__custom-switch__2ak_l .index-module__custom-control-input__2tloy:checked ~ .index-module__custom-control-label__17M6G::after{background-color:#fff;transform:translateX(.75rem)}.index-module__custom-switch__2ak_l .index-module__custom-control-input__2tloy:disabled:checked ~ .index-module__custom-control-label__17M6G::before{background-color:rgba(9,104,195,0.5)}.index-module__custom-select__2Ae5X{display:inline-block;width:100%;height:calc(1.5em + .75rem + 2px);padding:.375rem 1.75rem .375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;vertical-align:middle;background:#fff url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\\\") no-repeat right .75rem center/8px 10px;border:1px solid #ced4da;border-radius:.25rem;appearance:none}.index-module__custom-select__2Ae5X:focus{border-color:#54a8f7;outline:0;box-shadow:0 0 0 .2rem rgba(9,104,195,0.25)}.index-module__custom-select__2Ae5X:focus::-ms-value{color:#495057;background-color:#fff}.index-module__custom-select__2Ae5X[multiple],.index-module__custom-select__2Ae5X[size]:not([size=\\\"1\\\"]){height:auto;padding-right:.75rem;background-image:none}.index-module__custom-select__2Ae5X:disabled{color:#6c757d;background-color:#e9ecef}.index-module__custom-select__2Ae5X::-ms-expand{display:none}.index-module__custom-select__2Ae5X:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.index-module__custom-select-sm__2XmWm{height:calc(1.5em + .5rem + 2px);padding-top:.25rem;padding-bottom:.25rem;padding-left:.5rem;font-size:.875rem}.index-module__custom-select-lg__6Vz-r{height:calc(1.5em + 1rem + 2px);padding-top:.5rem;padding-bottom:.5rem;padding-left:1rem;font-size:1.25rem}.index-module__custom-file__3IAmZ{position:relative;display:inline-block;width:100%;height:calc(1.5em + .75rem + 2px);margin-bottom:0}.index-module__custom-file-input__22YHK{position:relative;z-index:2;width:100%;height:calc(1.5em + .75rem + 2px);margin:0;opacity:0}.index-module__custom-file-input__22YHK:focus ~ .index-module__custom-file-label__1lWwo{border-color:#54a8f7;box-shadow:0 0 0 .2rem rgba(9,104,195,0.25)}.index-module__custom-file-input__22YHK[disabled] ~ .index-module__custom-file-label__1lWwo,.index-module__custom-file-input__22YHK:disabled ~ .index-module__custom-file-label__1lWwo{background-color:#e9ecef}.index-module__custom-file-input__22YHK:lang(en) ~ .index-module__custom-file-label__1lWwo::after{content:\\\"Browse\\\"}.index-module__custom-file-input__22YHK ~ .index-module__custom-file-label__1lWwo[data-browse]::after{content:attr(data-browse)}.index-module__custom-file-label__1lWwo{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(1.5em + .75rem + 2px);padding:.375rem .75rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;border:1px solid #ced4da;border-radius:.25rem}.index-module__custom-file-label__1lWwo::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:calc(1.5em + .75rem);padding:.375rem .75rem;line-height:1.5;color:#495057;content:\\\"Browse\\\";background-color:#e9ecef;border-left:inherit;border-radius:0 .25rem .25rem 0}.index-module__custom-range__2zVif{width:100%;height:1.4rem;padding:0;background-color:transparent;appearance:none}.index-module__custom-range__2zVif:focus{outline:none}.index-module__custom-range__2zVif:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(9,104,195,0.25)}.index-module__custom-range__2zVif:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(9,104,195,0.25)}.index-module__custom-range__2zVif:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(9,104,195,0.25)}.index-module__custom-range__2zVif::-moz-focus-outer{border:0}.index-module__custom-range__2zVif::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#0968c3;border:0;border-radius:1rem;transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.index-module__custom-range__2zVif::-webkit-slider-thumb{transition:none}}.index-module__custom-range__2zVif::-webkit-slider-thumb:active{background-color:#85c1f9}.index-module__custom-range__2zVif::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.index-module__custom-range__2zVif::-moz-range-thumb{width:1rem;height:1rem;background-color:#0968c3;border:0;border-radius:1rem;transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.index-module__custom-range__2zVif::-moz-range-thumb{transition:none}}.index-module__custom-range__2zVif::-moz-range-thumb:active{background-color:#85c1f9}.index-module__custom-range__2zVif::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.index-module__custom-range__2zVif::-ms-thumb{width:1rem;height:1rem;margin-top:0;margin-right:.2rem;margin-left:.2rem;background-color:#0968c3;border:0;border-radius:1rem;transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.index-module__custom-range__2zVif::-ms-thumb{transition:none}}.index-module__custom-range__2zVif::-ms-thumb:active{background-color:#85c1f9}.index-module__custom-range__2zVif::-ms-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:.5rem}.index-module__custom-range__2zVif::-ms-fill-lower{background-color:#dee2e6;border-radius:1rem}.index-module__custom-range__2zVif::-ms-fill-upper{margin-right:15px;background-color:#dee2e6;border-radius:1rem}.index-module__custom-range__2zVif:disabled::-webkit-slider-thumb{background-color:#adb5bd}.index-module__custom-range__2zVif:disabled::-webkit-slider-runnable-track{cursor:default}.index-module__custom-range__2zVif:disabled::-moz-range-thumb{background-color:#adb5bd}.index-module__custom-range__2zVif:disabled::-moz-range-track{cursor:default}.index-module__custom-range__2zVif:disabled::-ms-thumb{background-color:#adb5bd}.index-module__custom-control-label__17M6G::before,.index-module__custom-file-label__1lWwo,.index-module__custom-select__2Ae5X{transition:background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.index-module__custom-control-label__17M6G::before,.index-module__custom-file-label__1lWwo,.index-module__custom-select__2Ae5X{transition:none}}.index-module__nav__grBJx{display:flex;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.index-module__nav-link__1g202{display:block;padding:.5rem 1rem}.index-module__nav-link__1g202:hover,.index-module__nav-link__1g202:focus{text-decoration:none}.index-module__nav-link__1g202.index-module__disabled__2BtOk{color:#6c757d;pointer-events:none;cursor:default}.index-module__nav-tabs__2chpV{border-bottom:1px solid #dee2e6}.index-module__nav-tabs__2chpV .index-module__nav-item__zM8hg{margin-bottom:-1px}.index-module__nav-tabs__2chpV .index-module__nav-link__1g202{border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.index-module__nav-tabs__2chpV .index-module__nav-link__1g202:hover,.index-module__nav-tabs__2chpV .index-module__nav-link__1g202:focus{border-color:#e9ecef #e9ecef #dee2e6}.index-module__nav-tabs__2chpV .index-module__nav-link__1g202.index-module__disabled__2BtOk{color:#6c757d;background-color:transparent;border-color:transparent}.index-module__nav-tabs__2chpV .index-module__nav-link__1g202.index-module__active__2-CxA,.index-module__nav-tabs__2chpV .index-module__nav-item__zM8hg.index-module__show__6Epil .index-module__nav-link__1g202{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.index-module__nav-tabs__2chpV .index-module__dropdown-menu__1pzMl{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.index-module__nav-pills__181h9 .index-module__nav-link__1g202{border-radius:.25rem}.index-module__nav-pills__181h9 .index-module__nav-link__1g202.index-module__active__2-CxA,.index-module__nav-pills__181h9 .index-module__show__6Epil>.index-module__nav-link__1g202{color:#fff;background-color:#0968c3}.index-module__nav-fill__1Fo-l .index-module__nav-item__zM8hg{flex:1 1 auto;text-align:center}.index-module__nav-justified__52yxZ .index-module__nav-item__zM8hg{flex-basis:0;flex-grow:1;text-align:center}.index-module__tab-content__hn4Jn>.index-module__tab-pane__1e72a{display:none}.index-module__tab-content__hn4Jn>.index-module__active__2-CxA{display:block}.index-module__navbar__38ZzD{position:relative;display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between;padding:.5rem 0}.index-module__navbar__38ZzD .index-module__container__wQ7Ga,.index-module__navbar__38ZzD .index-module__container-fluid__3sxsA,.index-module__navbar__38ZzD .index-module__container-xl__2xcz3{display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between}.index-module__navbar-brand__1-wxk{display:inline-block;padding-top:.3125rem;padding-bottom:.3125rem;margin-right:0;font-size:1.25rem;line-height:inherit;white-space:nowrap}.index-module__navbar-brand__1-wxk:hover,.index-module__navbar-brand__1-wxk:focus{text-decoration:none}.index-module__navbar-nav__2Pd71{display:flex;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202{padding-right:0;padding-left:0}.index-module__navbar-nav__2Pd71 .index-module__dropdown-menu__1pzMl{position:static;float:none}.index-module__navbar-text__1-cNr{display:inline-block;padding-top:.5rem;padding-bottom:.5rem}.index-module__navbar-collapse__1VNc8{flex-basis:100%;flex-grow:1;align-items:center}.index-module__navbar-toggler__2R5Cp{padding:.25rem .75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:.25rem}.index-module__navbar-toggler__2R5Cp:hover,.index-module__navbar-toggler__2R5Cp:focus{text-decoration:none}.index-module__navbar-toggler-icon__2FJv8{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:\\\"\\\";background:no-repeat center center;background-size:100% 100%}@media (max-width: 575.98px){.index-module__navbar-expand-sm__12Ctm>.index-module__container__wQ7Ga,.index-module__navbar-expand-sm__12Ctm>.index-module__container-fluid__3sxsA,.index-module__navbar-expand-sm__12Ctm>.index-module__container-xl__2xcz3{padding-right:0;padding-left:0}}@media (min-width: 576px){.index-module__navbar-expand-sm__12Ctm{flex-flow:row nowrap;justify-content:flex-start}.index-module__navbar-expand-sm__12Ctm .index-module__navbar-nav__2Pd71{flex-direction:row}.index-module__navbar-expand-sm__12Ctm .index-module__navbar-nav__2Pd71 .index-module__dropdown-menu__1pzMl{position:absolute}.index-module__navbar-expand-sm__12Ctm .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202{padding-right:.5rem;padding-left:.5rem}.index-module__navbar-expand-sm__12Ctm>.index-module__container__wQ7Ga,.index-module__navbar-expand-sm__12Ctm>.index-module__container-fluid__3sxsA,.index-module__navbar-expand-sm__12Ctm>.index-module__container-xl__2xcz3{flex-wrap:nowrap}.index-module__navbar-expand-sm__12Ctm .index-module__navbar-collapse__1VNc8{display:flex !important;flex-basis:auto}.index-module__navbar-expand-sm__12Ctm .index-module__navbar-toggler__2R5Cp{display:none}}@media (max-width: 767.98px){.index-module__navbar-expand-md__GpUQ5>.index-module__container__wQ7Ga,.index-module__navbar-expand-md__GpUQ5>.index-module__container-fluid__3sxsA,.index-module__navbar-expand-md__GpUQ5>.index-module__container-xl__2xcz3{padding-right:0;padding-left:0}}@media (min-width: 768px){.index-module__navbar-expand-md__GpUQ5{flex-flow:row nowrap;justify-content:flex-start}.index-module__navbar-expand-md__GpUQ5 .index-module__navbar-nav__2Pd71{flex-direction:row}.index-module__navbar-expand-md__GpUQ5 .index-module__navbar-nav__2Pd71 .index-module__dropdown-menu__1pzMl{position:absolute}.index-module__navbar-expand-md__GpUQ5 .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202{padding-right:.5rem;padding-left:.5rem}.index-module__navbar-expand-md__GpUQ5>.index-module__container__wQ7Ga,.index-module__navbar-expand-md__GpUQ5>.index-module__container-fluid__3sxsA,.index-module__navbar-expand-md__GpUQ5>.index-module__container-xl__2xcz3{flex-wrap:nowrap}.index-module__navbar-expand-md__GpUQ5 .index-module__navbar-collapse__1VNc8{display:flex !important;flex-basis:auto}.index-module__navbar-expand-md__GpUQ5 .index-module__navbar-toggler__2R5Cp{display:none}}@media (max-width: 1049.98px){.index-module__navbar-expand-lg__3j_tA>.index-module__container__wQ7Ga,.index-module__navbar-expand-lg__3j_tA>.index-module__container-fluid__3sxsA,.index-module__navbar-expand-lg__3j_tA>.index-module__container-xl__2xcz3{padding-right:0;padding-left:0}}@media (min-width: 1050px){.index-module__navbar-expand-lg__3j_tA{flex-flow:row nowrap;justify-content:flex-start}.index-module__navbar-expand-lg__3j_tA .index-module__navbar-nav__2Pd71{flex-direction:row}.index-module__navbar-expand-lg__3j_tA .index-module__navbar-nav__2Pd71 .index-module__dropdown-menu__1pzMl{position:absolute}.index-module__navbar-expand-lg__3j_tA .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202{padding-right:.5rem;padding-left:.5rem}.index-module__navbar-expand-lg__3j_tA>.index-module__container__wQ7Ga,.index-module__navbar-expand-lg__3j_tA>.index-module__container-fluid__3sxsA,.index-module__navbar-expand-lg__3j_tA>.index-module__container-xl__2xcz3{flex-wrap:nowrap}.index-module__navbar-expand-lg__3j_tA .index-module__navbar-collapse__1VNc8{display:flex !important;flex-basis:auto}.index-module__navbar-expand-lg__3j_tA .index-module__navbar-toggler__2R5Cp{display:none}}@media (max-width: 1499.98px){.index-module__navbar-expand-xl__1XIWi>.index-module__container__wQ7Ga,.index-module__navbar-expand-xl__1XIWi>.index-module__container-fluid__3sxsA,.index-module__navbar-expand-xl__1XIWi>.index-module__container-xl__2xcz3{padding-right:0;padding-left:0}}@media (min-width: 1500px){.index-module__navbar-expand-xl__1XIWi{flex-flow:row nowrap;justify-content:flex-start}.index-module__navbar-expand-xl__1XIWi .index-module__navbar-nav__2Pd71{flex-direction:row}.index-module__navbar-expand-xl__1XIWi .index-module__navbar-nav__2Pd71 .index-module__dropdown-menu__1pzMl{position:absolute}.index-module__navbar-expand-xl__1XIWi .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202{padding-right:.5rem;padding-left:.5rem}.index-module__navbar-expand-xl__1XIWi>.index-module__container__wQ7Ga,.index-module__navbar-expand-xl__1XIWi>.index-module__container-fluid__3sxsA,.index-module__navbar-expand-xl__1XIWi>.index-module__container-xl__2xcz3{flex-wrap:nowrap}.index-module__navbar-expand-xl__1XIWi .index-module__navbar-collapse__1VNc8{display:flex !important;flex-basis:auto}.index-module__navbar-expand-xl__1XIWi .index-module__navbar-toggler__2R5Cp{display:none}}.index-module__navbar-expand__4s4sc{flex-flow:row nowrap;justify-content:flex-start}.index-module__navbar-expand__4s4sc>.index-module__container__wQ7Ga,.index-module__navbar-expand__4s4sc>.index-module__container-fluid__3sxsA,.index-module__navbar-expand__4s4sc>.index-module__container-xl__2xcz3{padding-right:0;padding-left:0}.index-module__navbar-expand__4s4sc .index-module__navbar-nav__2Pd71{flex-direction:row}.index-module__navbar-expand__4s4sc .index-module__navbar-nav__2Pd71 .index-module__dropdown-menu__1pzMl{position:absolute}.index-module__navbar-expand__4s4sc .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202{padding-right:.5rem;padding-left:.5rem}.index-module__navbar-expand__4s4sc>.index-module__container__wQ7Ga,.index-module__navbar-expand__4s4sc>.index-module__container-fluid__3sxsA,.index-module__navbar-expand__4s4sc>.index-module__container-xl__2xcz3{flex-wrap:nowrap}.index-module__navbar-expand__4s4sc .index-module__navbar-collapse__1VNc8{display:flex !important;flex-basis:auto}.index-module__navbar-expand__4s4sc .index-module__navbar-toggler__2R5Cp{display:none}.index-module__navbar-light__2YBmS .index-module__navbar-brand__1-wxk{color:rgba(0,0,0,0.9)}.index-module__navbar-light__2YBmS .index-module__navbar-brand__1-wxk:hover,.index-module__navbar-light__2YBmS .index-module__navbar-brand__1-wxk:focus{color:rgba(0,0,0,0.9)}.index-module__navbar-light__2YBmS .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202{color:rgba(0,0,0,0.5)}.index-module__navbar-light__2YBmS .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202:hover,.index-module__navbar-light__2YBmS .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202:focus{color:rgba(0,0,0,0.7)}.index-module__navbar-light__2YBmS .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202.index-module__disabled__2BtOk{color:rgba(0,0,0,0.3)}.index-module__navbar-light__2YBmS .index-module__navbar-nav__2Pd71 .index-module__show__6Epil>.index-module__nav-link__1g202,.index-module__navbar-light__2YBmS .index-module__navbar-nav__2Pd71 .index-module__active__2-CxA>.index-module__nav-link__1g202,.index-module__navbar-light__2YBmS .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202.index-module__show__6Epil,.index-module__navbar-light__2YBmS .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202.index-module__active__2-CxA{color:rgba(0,0,0,0.9)}.index-module__navbar-light__2YBmS .index-module__navbar-toggler__2R5Cp{color:rgba(0,0,0,0.5);border-color:rgba(0,0,0,0.1)}.index-module__navbar-light__2YBmS .index-module__navbar-toggler-icon__2FJv8{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(0,0,0,0.5)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\\\")}.index-module__navbar-light__2YBmS .index-module__navbar-text__1-cNr{color:rgba(0,0,0,0.5)}.index-module__navbar-light__2YBmS .index-module__navbar-text__1-cNr a{color:rgba(0,0,0,0.9)}.index-module__navbar-light__2YBmS .index-module__navbar-text__1-cNr a:hover,.index-module__navbar-light__2YBmS .index-module__navbar-text__1-cNr a:focus{color:rgba(0,0,0,0.9)}.index-module__navbar-dark__2zWgs .index-module__navbar-brand__1-wxk{color:#fff}.index-module__navbar-dark__2zWgs .index-module__navbar-brand__1-wxk:hover,.index-module__navbar-dark__2zWgs .index-module__navbar-brand__1-wxk:focus{color:#fff}.index-module__navbar-dark__2zWgs .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202{color:rgba(255,255,255,0.5)}.index-module__navbar-dark__2zWgs .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202:hover,.index-module__navbar-dark__2zWgs .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202:focus{color:rgba(255,255,255,0.75)}.index-module__navbar-dark__2zWgs .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202.index-module__disabled__2BtOk{color:rgba(255,255,255,0.25)}.index-module__navbar-dark__2zWgs .index-module__navbar-nav__2Pd71 .index-module__show__6Epil>.index-module__nav-link__1g202,.index-module__navbar-dark__2zWgs .index-module__navbar-nav__2Pd71 .index-module__active__2-CxA>.index-module__nav-link__1g202,.index-module__navbar-dark__2zWgs .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202.index-module__show__6Epil,.index-module__navbar-dark__2zWgs .index-module__navbar-nav__2Pd71 .index-module__nav-link__1g202.index-module__active__2-CxA{color:#fff}.index-module__navbar-dark__2zWgs .index-module__navbar-toggler__2R5Cp{color:rgba(255,255,255,0.5);border-color:rgba(255,255,255,0.1)}.index-module__navbar-dark__2zWgs .index-module__navbar-toggler-icon__2FJv8{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(255,255,255,0.5)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\\\")}.index-module__navbar-dark__2zWgs .index-module__navbar-text__1-cNr{color:rgba(255,255,255,0.5)}.index-module__navbar-dark__2zWgs .index-module__navbar-text__1-cNr a{color:#fff}.index-module__navbar-dark__2zWgs .index-module__navbar-text__1-cNr a:hover,.index-module__navbar-dark__2zWgs .index-module__navbar-text__1-cNr a:focus{color:#fff}.index-module__card__3t4oV{position:relative;display:flex;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,0.125);border-radius:.25rem}.index-module__card__3t4oV>hr{margin-right:0;margin-left:0}.index-module__card__3t4oV>.index-module__list-group__3IKFg:first-child .index-module__list-group-item__tsEJn:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.index-module__card__3t4oV>.index-module__list-group__3IKFg:last-child .index-module__list-group-item__tsEJn:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.index-module__card-body__gNdRz{flex:1 1 auto;min-height:1px;padding:1.25rem}.index-module__card-title__33NYI{margin-bottom:.75rem}.index-module__card-subtitle__-A253{margin-top:-.375rem;margin-bottom:0}.index-module__card-text__3FW8A:last-child{margin-bottom:0}.index-module__card-link__2-IZq:hover{text-decoration:none}.index-module__card-link__2-IZq+.index-module__card-link__2-IZq{margin-left:1.25rem}.index-module__card-header__3oeJg{padding:.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,0.03);border-bottom:1px solid rgba(0,0,0,0.125)}.index-module__card-header__3oeJg:first-child{border-radius:calc(.25rem - 1px) calc(.25rem - 1px) 0 0}.index-module__card-header__3oeJg+.index-module__list-group__3IKFg .index-module__list-group-item__tsEJn:first-child{border-top:0}.index-module__card-footer__2oex3{padding:.75rem 1.25rem;background-color:rgba(0,0,0,0.03);border-top:1px solid rgba(0,0,0,0.125)}.index-module__card-footer__2oex3:last-child{border-radius:0 0 calc(.25rem - 1px) calc(.25rem - 1px)}.index-module__card-header-tabs__icvJz{margin-right:-.625rem;margin-bottom:-.75rem;margin-left:-.625rem;border-bottom:0}.index-module__card-header-pills__2xH21{margin-right:-.625rem;margin-left:-.625rem}.index-module__card-img-overlay__1Bace{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.index-module__card-img__1ZQ7a,.index-module__card-img-top__1HK8Y,.index-module__card-img-bottom__1hj8U{flex-shrink:0;width:100%}.index-module__card-img__1ZQ7a,.index-module__card-img-top__1HK8Y{border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.index-module__card-img__1ZQ7a,.index-module__card-img-bottom__1hj8U{border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.index-module__card-deck__rogx_ .index-module__card__3t4oV{margin-bottom:15px}@media (min-width: 576px){.index-module__card-deck__rogx_{display:flex;flex-flow:row wrap;margin-right:-15px;margin-left:-15px}.index-module__card-deck__rogx_ .index-module__card__3t4oV{flex:1 0 0%;margin-right:15px;margin-bottom:0;margin-left:15px}}.index-module__card-group__3wOGH>.index-module__card__3t4oV{margin-bottom:15px}@media (min-width: 576px){.index-module__card-group__3wOGH{display:flex;flex-flow:row wrap}.index-module__card-group__3wOGH>.index-module__card__3t4oV{flex:1 0 0%;margin-bottom:0}.index-module__card-group__3wOGH>.index-module__card__3t4oV+.index-module__card__3t4oV{margin-left:0;border-left:0}.index-module__card-group__3wOGH>.index-module__card__3t4oV:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.index-module__card-group__3wOGH>.index-module__card__3t4oV:not(:last-child) .index-module__card-img-top__1HK8Y,.index-module__card-group__3wOGH>.index-module__card__3t4oV:not(:last-child) .index-module__card-header__3oeJg{border-top-right-radius:0}.index-module__card-group__3wOGH>.index-module__card__3t4oV:not(:last-child) .index-module__card-img-bottom__1hj8U,.index-module__card-group__3wOGH>.index-module__card__3t4oV:not(:last-child) .index-module__card-footer__2oex3{border-bottom-right-radius:0}.index-module__card-group__3wOGH>.index-module__card__3t4oV:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.index-module__card-group__3wOGH>.index-module__card__3t4oV:not(:first-child) .index-module__card-img-top__1HK8Y,.index-module__card-group__3wOGH>.index-module__card__3t4oV:not(:first-child) .index-module__card-header__3oeJg{border-top-left-radius:0}.index-module__card-group__3wOGH>.index-module__card__3t4oV:not(:first-child) .index-module__card-img-bottom__1hj8U,.index-module__card-group__3wOGH>.index-module__card__3t4oV:not(:first-child) .index-module__card-footer__2oex3{border-bottom-left-radius:0}}.index-module__card-columns__2u9rC .index-module__card__3t4oV{margin-bottom:.75rem}@media (min-width: 576px){.index-module__card-columns__2u9rC{column-count:3;column-gap:1.25rem;orphans:1;widows:1}.index-module__card-columns__2u9rC .index-module__card__3t4oV{display:inline-block;width:100%}}.index-module__accordion__1NO1->.index-module__card__3t4oV{overflow:hidden}.index-module__accordion__1NO1->.index-module__card__3t4oV:not(:last-of-type){border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.index-module__accordion__1NO1->.index-module__card__3t4oV:not(:first-of-type){border-top-left-radius:0;border-top-right-radius:0}.index-module__accordion__1NO1->.index-module__card__3t4oV>.index-module__card-header__3oeJg{border-radius:0;margin-bottom:-1px}.index-module__breadcrumb__1riuu{display:flex;flex-wrap:wrap;padding:0 0;margin-bottom:.5rem;list-style:none;background-color:rgba(0,0,0,0);border-radius:.25rem}.index-module__breadcrumb-item__1U6IH+.index-module__breadcrumb-item__1U6IH{padding-left:.5rem}.index-module__breadcrumb-item__1U6IH+.index-module__breadcrumb-item__1U6IH::before{display:inline-block;padding-right:.5rem;color:#6c757d;content:\\\"/\\\"}.index-module__breadcrumb-item__1U6IH+.index-module__breadcrumb-item__1U6IH:hover::before{text-decoration:underline}.index-module__breadcrumb-item__1U6IH+.index-module__breadcrumb-item__1U6IH:hover::before{text-decoration:none}.index-module__breadcrumb-item__1U6IH.index-module__active__2-CxA{color:#6c757d}.index-module__pagination__2pJWs{display:flex;padding-left:0;list-style:none;border-radius:.25rem}.index-module__page-link__xNY6Q{position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#0968c3;background-color:#fff;border:1px solid #dee2e6}.index-module__page-link__xNY6Q:hover{z-index:2;color:#0b2569;text-decoration:none;background-color:#e9ecef;border-color:#dee2e6}.index-module__page-link__xNY6Q:focus{z-index:3;outline:0;box-shadow:0 0 0 .2rem rgba(9,104,195,0.25)}.index-module__page-item__16OYx:first-child .index-module__page-link__xNY6Q{margin-left:0;border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.index-module__page-item__16OYx:last-child .index-module__page-link__xNY6Q{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.index-module__page-item__16OYx.index-module__active__2-CxA .index-module__page-link__xNY6Q{z-index:3;color:#fff;background-color:#0968c3;border-color:#0968c3}.index-module__page-item__16OYx.index-module__disabled__2BtOk .index-module__page-link__xNY6Q{color:#6c757d;pointer-events:none;cursor:auto;background-color:#fff;border-color:#dee2e6}.index-module__pagination-lg__2mTGn .index-module__page-link__xNY6Q{padding:.75rem 1.5rem;font-size:1.25rem;line-height:1.5}.index-module__pagination-lg__2mTGn .index-module__page-item__16OYx:first-child .index-module__page-link__xNY6Q{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.index-module__pagination-lg__2mTGn .index-module__page-item__16OYx:last-child .index-module__page-link__xNY6Q{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem}.index-module__pagination-sm__3mLnZ .index-module__page-link__xNY6Q{padding:.25rem .5rem;font-size:.875rem;line-height:1.5}.index-module__pagination-sm__3mLnZ .index-module__page-item__16OYx:first-child .index-module__page-link__xNY6Q{border-top-left-radius:.2rem;border-bottom-left-radius:.2rem}.index-module__pagination-sm__3mLnZ .index-module__page-item__16OYx:last-child .index-module__page-link__xNY6Q{border-top-right-radius:.2rem;border-bottom-right-radius:.2rem}.index-module__badge__3XyDs{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem;transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.index-module__badge__3XyDs{transition:none}}a.index-module__badge__3XyDs:hover,a.index-module__badge__3XyDs:focus{text-decoration:none}.index-module__badge__3XyDs:empty{display:none}.index-module__btn__1Pcdf .index-module__badge__3XyDs{position:relative;top:-1px}.index-module__badge-pill__vtpQL{padding-right:.6em;padding-left:.6em;border-radius:10rem}.index-module__badge-primary__3ZDgH{color:#fff;background-color:#0968c3}a.index-module__badge-primary__3ZDgH:hover,a.index-module__badge-primary__3ZDgH:focus{color:#fff;background-color:#074e92}a.index-module__badge-primary__3ZDgH:focus,a.index-module__badge-primary__3ZDgH.index-module__focus__37XLI{outline:0;box-shadow:0 0 0 .2rem rgba(9,104,195,0.5)}.index-module__badge-secondary__34ML3{color:#fff;background-color:gray}a.index-module__badge-secondary__34ML3:hover,a.index-module__badge-secondary__34ML3:focus{color:#fff;background-color:#676767}a.index-module__badge-secondary__34ML3:focus,a.index-module__badge-secondary__34ML3.index-module__focus__37XLI{outline:0;box-shadow:0 0 0 .2rem rgba(128,128,128,0.5)}.index-module__badge-success__XyqRD{color:#fff;background-color:#28a745}a.index-module__badge-success__XyqRD:hover,a.index-module__badge-success__XyqRD:focus{color:#fff;background-color:#1e7e34}a.index-module__badge-success__XyqRD:focus,a.index-module__badge-success__XyqRD.index-module__focus__37XLI{outline:0;box-shadow:0 0 0 .2rem rgba(40,167,69,0.5)}.index-module__badge-info__2eMvu{color:#fff;background-color:#17a2b8}a.index-module__badge-info__2eMvu:hover,a.index-module__badge-info__2eMvu:focus{color:#fff;background-color:#117a8b}a.index-module__badge-info__2eMvu:focus,a.index-module__badge-info__2eMvu.index-module__focus__37XLI{outline:0;box-shadow:0 0 0 .2rem rgba(23,162,184,0.5)}.index-module__badge-warning__2JO5V{color:#212529;background-color:#ffc107}a.index-module__badge-warning__2JO5V:hover,a.index-module__badge-warning__2JO5V:focus{color:#212529;background-color:#d39e00}a.index-module__badge-warning__2JO5V:focus,a.index-module__badge-warning__2JO5V.index-module__focus__37XLI{outline:0;box-shadow:0 0 0 .2rem rgba(255,193,7,0.5)}.index-module__badge-danger__3VOpV{color:#fff;background-color:#dc3545}a.index-module__badge-danger__3VOpV:hover,a.index-module__badge-danger__3VOpV:focus{color:#fff;background-color:#bd2130}a.index-module__badge-danger__3VOpV:focus,a.index-module__badge-danger__3VOpV.index-module__focus__37XLI{outline:0;box-shadow:0 0 0 .2rem rgba(220,53,69,0.5)}.index-module__badge-light__2n5iP{color:#212529;background-color:#f8f9fa}a.index-module__badge-light__2n5iP:hover,a.index-module__badge-light__2n5iP:focus{color:#212529;background-color:#dae0e5}a.index-module__badge-light__2n5iP:focus,a.index-module__badge-light__2n5iP.index-module__focus__37XLI{outline:0;box-shadow:0 0 0 .2rem rgba(248,249,250,0.5)}.index-module__badge-dark__24am4{color:#fff;background-color:#343a40}a.index-module__badge-dark__24am4:hover,a.index-module__badge-dark__24am4:focus{color:#fff;background-color:#1d2124}a.index-module__badge-dark__24am4:focus,a.index-module__badge-dark__24am4.index-module__focus__37XLI{outline:0;box-shadow:0 0 0 .2rem rgba(52,58,64,0.5)}.index-module__jumbotron__1NqXn{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:.3rem}@media (min-width: 576px){.index-module__jumbotron__1NqXn{padding:4rem 2rem}}.index-module__jumbotron-fluid__xlJLH{padding-right:0;padding-left:0;border-radius:0}.index-module__alert__3rOIn{position:relative;padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.index-module__alert-heading__1a7ZA{color:inherit}.index-module__alert-link__2eQzr{font-weight:700}.index-module__alert-dismissible__AOgXM{padding-right:4rem}.index-module__alert-dismissible__AOgXM .index-module__close__1wRFd{position:absolute;top:0;right:0;padding:.75rem 1.25rem;color:inherit}.index-module__alert-primary__2OecW{color:#053665;background-color:#cee1f3;border-color:#bad5ee}.index-module__alert-primary__2OecW hr{border-top-color:#a6c9e9}.index-module__alert-primary__2OecW .index-module__alert-link__2eQzr{color:#031c34}.index-module__alert-secondary__3QWKW{color:#434343;background-color:#e6e6e6;border-color:#dbdbdb}.index-module__alert-secondary__3QWKW hr{border-top-color:#cecece}.index-module__alert-secondary__3QWKW .index-module__alert-link__2eQzr{color:#2a2a2a}.index-module__alert-success__92kfn{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.index-module__alert-success__92kfn hr{border-top-color:#b1dfbb}.index-module__alert-success__92kfn .index-module__alert-link__2eQzr{color:#0b2e13}.index-module__alert-info__271H0{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.index-module__alert-info__271H0 hr{border-top-color:#abdde5}.index-module__alert-info__271H0 .index-module__alert-link__2eQzr{color:#062c33}.index-module__alert-warning__3c5Fc{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.index-module__alert-warning__3c5Fc hr{border-top-color:#ffe8a1}.index-module__alert-warning__3c5Fc .index-module__alert-link__2eQzr{color:#533f03}.index-module__alert-danger__1jubp{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.index-module__alert-danger__1jubp hr{border-top-color:#f1b0b7}.index-module__alert-danger__1jubp .index-module__alert-link__2eQzr{color:#491217}.index-module__alert-light__hPVLg{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.index-module__alert-light__hPVLg hr{border-top-color:#ececf6}.index-module__alert-light__hPVLg .index-module__alert-link__2eQzr{color:#686868}.index-module__alert-dark__ZFBLX{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.index-module__alert-dark__ZFBLX hr{border-top-color:#b9bbbe}.index-module__alert-dark__ZFBLX .index-module__alert-link__2eQzr{color:#040505}@keyframes index-module__progress-bar-stripes__1n6hj{from{background-position:1rem 0}to{background-position:0 0}}.index-module__progress__1h-rT{display:flex;height:1rem;overflow:hidden;font-size:.75rem;background-color:#e9ecef;border-radius:.25rem}.index-module__progress-bar__18OLp{display:flex;flex-direction:column;justify-content:center;overflow:hidden;color:#fff;text-align:center;white-space:nowrap;background-color:#0968c3;transition:width 0.6s ease}@media (prefers-reduced-motion: reduce){.index-module__progress-bar__18OLp{transition:none}}.index-module__progress-bar-striped__3B_Cl{background-image:linear-gradient(45deg, rgba(255,255,255,0.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.15) 50%, rgba(255,255,255,0.15) 75%, transparent 75%, transparent);background-size:1rem 1rem}.index-module__progress-bar-animated__c8pmU{animation:index-module__progress-bar-stripes__1n6hj 1s linear infinite}@media (prefers-reduced-motion: reduce){.index-module__progress-bar-animated__c8pmU{animation:none}}.index-module__media__4_ndS{display:flex;align-items:flex-start}.index-module__media-body__cY3XF{flex:1}.index-module__list-group__3IKFg{display:flex;flex-direction:column;padding-left:0;margin-bottom:0}.index-module__list-group-item-action__NDrlj{width:100%;color:#495057;text-align:inherit}.index-module__list-group-item-action__NDrlj:hover,.index-module__list-group-item-action__NDrlj:focus{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.index-module__list-group-item-action__NDrlj:active{color:#212529;background-color:#e9ecef}.index-module__list-group-item__tsEJn{position:relative;display:block;padding:.75rem 1.25rem;background-color:#fff;border:1px solid rgba(0,0,0,0.125)}.index-module__list-group-item__tsEJn:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.index-module__list-group-item__tsEJn:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.index-module__list-group-item__tsEJn.index-module__disabled__2BtOk,.index-module__list-group-item__tsEJn:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.index-module__list-group-item__tsEJn.index-module__active__2-CxA{z-index:2;color:#fff;background-color:#0968c3;border-color:#0968c3}.index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn{border-top-width:0}.index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn.index-module__active__2-CxA{margin-top:-1px;border-top-width:1px}.index-module__list-group-horizontal__1PrM2{flex-direction:row}.index-module__list-group-horizontal__1PrM2 .index-module__list-group-item__tsEJn:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.index-module__list-group-horizontal__1PrM2 .index-module__list-group-item__tsEJn:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.index-module__list-group-horizontal__1PrM2 .index-module__list-group-item__tsEJn.index-module__active__2-CxA{margin-top:0}.index-module__list-group-horizontal__1PrM2 .index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn{border-top-width:1px;border-left-width:0}.index-module__list-group-horizontal__1PrM2 .index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn.index-module__active__2-CxA{margin-left:-1px;border-left-width:1px}@media (min-width: 576px){.index-module__list-group-horizontal-sm__2eMJE{flex-direction:row}.index-module__list-group-horizontal-sm__2eMJE .index-module__list-group-item__tsEJn:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.index-module__list-group-horizontal-sm__2eMJE .index-module__list-group-item__tsEJn:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.index-module__list-group-horizontal-sm__2eMJE .index-module__list-group-item__tsEJn.index-module__active__2-CxA{margin-top:0}.index-module__list-group-horizontal-sm__2eMJE .index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn{border-top-width:1px;border-left-width:0}.index-module__list-group-horizontal-sm__2eMJE .index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn.index-module__active__2-CxA{margin-left:-1px;border-left-width:1px}}@media (min-width: 768px){.index-module__list-group-horizontal-md__2_xpm{flex-direction:row}.index-module__list-group-horizontal-md__2_xpm .index-module__list-group-item__tsEJn:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.index-module__list-group-horizontal-md__2_xpm .index-module__list-group-item__tsEJn:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.index-module__list-group-horizontal-md__2_xpm .index-module__list-group-item__tsEJn.index-module__active__2-CxA{margin-top:0}.index-module__list-group-horizontal-md__2_xpm .index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn{border-top-width:1px;border-left-width:0}.index-module__list-group-horizontal-md__2_xpm .index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn.index-module__active__2-CxA{margin-left:-1px;border-left-width:1px}}@media (min-width: 1050px){.index-module__list-group-horizontal-lg__Nr559{flex-direction:row}.index-module__list-group-horizontal-lg__Nr559 .index-module__list-group-item__tsEJn:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.index-module__list-group-horizontal-lg__Nr559 .index-module__list-group-item__tsEJn:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.index-module__list-group-horizontal-lg__Nr559 .index-module__list-group-item__tsEJn.index-module__active__2-CxA{margin-top:0}.index-module__list-group-horizontal-lg__Nr559 .index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn{border-top-width:1px;border-left-width:0}.index-module__list-group-horizontal-lg__Nr559 .index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn.index-module__active__2-CxA{margin-left:-1px;border-left-width:1px}}@media (min-width: 1500px){.index-module__list-group-horizontal-xl__1F2ib{flex-direction:row}.index-module__list-group-horizontal-xl__1F2ib .index-module__list-group-item__tsEJn:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.index-module__list-group-horizontal-xl__1F2ib .index-module__list-group-item__tsEJn:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.index-module__list-group-horizontal-xl__1F2ib .index-module__list-group-item__tsEJn.index-module__active__2-CxA{margin-top:0}.index-module__list-group-horizontal-xl__1F2ib .index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn{border-top-width:1px;border-left-width:0}.index-module__list-group-horizontal-xl__1F2ib .index-module__list-group-item__tsEJn+.index-module__list-group-item__tsEJn.index-module__active__2-CxA{margin-left:-1px;border-left-width:1px}}.index-module__list-group-flush__bAJYq .index-module__list-group-item__tsEJn{border-right-width:0;border-left-width:0;border-radius:0}.index-module__list-group-flush__bAJYq .index-module__list-group-item__tsEJn:first-child{border-top-width:0}.index-module__list-group-flush__bAJYq:last-child .index-module__list-group-item__tsEJn:last-child{border-bottom-width:0}.index-module__list-group-item-primary__3dYur{color:#053665;background-color:#bad5ee}.index-module__list-group-item-primary__3dYur.index-module__list-group-item-action__NDrlj:hover,.index-module__list-group-item-primary__3dYur.index-module__list-group-item-action__NDrlj:focus{color:#053665;background-color:#a6c9e9}.index-module__list-group-item-primary__3dYur.index-module__list-group-item-action__NDrlj.index-module__active__2-CxA{color:#fff;background-color:#053665;border-color:#053665}.index-module__list-group-item-secondary__28l_L{color:#434343;background-color:#dbdbdb}.index-module__list-group-item-secondary__28l_L.index-module__list-group-item-action__NDrlj:hover,.index-module__list-group-item-secondary__28l_L.index-module__list-group-item-action__NDrlj:focus{color:#434343;background-color:#cecece}.index-module__list-group-item-secondary__28l_L.index-module__list-group-item-action__NDrlj.index-module__active__2-CxA{color:#fff;background-color:#434343;border-color:#434343}.index-module__list-group-item-success__3oakj{color:#155724;background-color:#c3e6cb}.index-module__list-group-item-success__3oakj.index-module__list-group-item-action__NDrlj:hover,.index-module__list-group-item-success__3oakj.index-module__list-group-item-action__NDrlj:focus{color:#155724;background-color:#b1dfbb}.index-module__list-group-item-success__3oakj.index-module__list-group-item-action__NDrlj.index-module__active__2-CxA{color:#fff;background-color:#155724;border-color:#155724}.index-module__list-group-item-info__1Uniy{color:#0c5460;background-color:#bee5eb}.index-module__list-group-item-info__1Uniy.index-module__list-group-item-action__NDrlj:hover,.index-module__list-group-item-info__1Uniy.index-module__list-group-item-action__NDrlj:focus{color:#0c5460;background-color:#abdde5}.index-module__list-group-item-info__1Uniy.index-module__list-group-item-action__NDrlj.index-module__active__2-CxA{color:#fff;background-color:#0c5460;border-color:#0c5460}.index-module__list-group-item-warning__KVL0w{color:#856404;background-color:#ffeeba}.index-module__list-group-item-warning__KVL0w.index-module__list-group-item-action__NDrlj:hover,.index-module__list-group-item-warning__KVL0w.index-module__list-group-item-action__NDrlj:focus{color:#856404;background-color:#ffe8a1}.index-module__list-group-item-warning__KVL0w.index-module__list-group-item-action__NDrlj.index-module__active__2-CxA{color:#fff;background-color:#856404;border-color:#856404}.index-module__list-group-item-danger__ckwbt{color:#721c24;background-color:#f5c6cb}.index-module__list-group-item-danger__ckwbt.index-module__list-group-item-action__NDrlj:hover,.index-module__list-group-item-danger__ckwbt.index-module__list-group-item-action__NDrlj:focus{color:#721c24;background-color:#f1b0b7}.index-module__list-group-item-danger__ckwbt.index-module__list-group-item-action__NDrlj.index-module__active__2-CxA{color:#fff;background-color:#721c24;border-color:#721c24}.index-module__list-group-item-light__3D-0P{color:#818182;background-color:#fdfdfe}.index-module__list-group-item-light__3D-0P.index-module__list-group-item-action__NDrlj:hover,.index-module__list-group-item-light__3D-0P.index-module__list-group-item-action__NDrlj:focus{color:#818182;background-color:#ececf6}.index-module__list-group-item-light__3D-0P.index-module__list-group-item-action__NDrlj.index-module__active__2-CxA{color:#fff;background-color:#818182;border-color:#818182}.index-module__list-group-item-dark__1UzNj{color:#1b1e21;background-color:#c6c8ca}.index-module__list-group-item-dark__1UzNj.index-module__list-group-item-action__NDrlj:hover,.index-module__list-group-item-dark__1UzNj.index-module__list-group-item-action__NDrlj:focus{color:#1b1e21;background-color:#b9bbbe}.index-module__list-group-item-dark__1UzNj.index-module__list-group-item-action__NDrlj.index-module__active__2-CxA{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.index-module__close__1wRFd{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.index-module__close__1wRFd:hover{color:#000;text-decoration:none}.index-module__close__1wRFd:not(:disabled):not(.index-module__disabled__2BtOk):hover,.index-module__close__1wRFd:not(:disabled):not(.index-module__disabled__2BtOk):focus{opacity:.75}button.index-module__close__1wRFd{padding:0;background-color:transparent;border:0;appearance:none}a.index-module__close__1wRFd.index-module__disabled__2BtOk{pointer-events:none}.index-module__toast__1IzFA{max-width:350px;overflow:hidden;font-size:.875rem;background-color:rgba(255,255,255,0.85);background-clip:padding-box;border:1px solid rgba(0,0,0,0.1);box-shadow:0 0.25rem 0.75rem rgba(0,0,0,0.1);backdrop-filter:blur(10px);opacity:0;border-radius:.25rem}.index-module__toast__1IzFA:not(:last-child){margin-bottom:.75rem}.index-module__toast__1IzFA.index-module__showing__rfjiQ{opacity:1}.index-module__toast__1IzFA.index-module__show__6Epil{display:block;opacity:1}.index-module__toast__1IzFA.index-module__hide__1efFV{display:none}.index-module__toast-header__rCzMs{display:flex;align-items:center;padding:.25rem .75rem;color:#6c757d;background-color:rgba(255,255,255,0.85);background-clip:padding-box;border-bottom:1px solid rgba(0,0,0,0.05)}.index-module__toast-body__1ADiS{padding:.75rem}.index-module__modal-open__3gsI2{overflow:hidden}.index-module__modal-open__3gsI2 .index-module__modal__1klTB{overflow-x:hidden;overflow-y:auto}.index-module__modal__1klTB{position:fixed;top:0;left:0;z-index:1050;display:none;width:100%;height:100%;overflow:hidden;outline:0}.index-module__modal-dialog__2D-RY{position:relative;width:auto;margin:.5rem;pointer-events:none}.index-module__modal__1klTB.index-module__fade__23Syb .index-module__modal-dialog__2D-RY{transition:transform 0.3s ease-out;transform:translate(0, -50px)}@media (prefers-reduced-motion: reduce){.index-module__modal__1klTB.index-module__fade__23Syb .index-module__modal-dialog__2D-RY{transition:none}}.index-module__modal__1klTB.index-module__show__6Epil .index-module__modal-dialog__2D-RY{transform:none}.index-module__modal__1klTB.index-module__modal-static__2CUMP .index-module__modal-dialog__2D-RY{transform:scale(1.02)}.index-module__modal-dialog-scrollable__2OLKI{display:flex;max-height:calc(100% - 1rem)}.index-module__modal-dialog-scrollable__2OLKI .index-module__modal-content__2xTWw{max-height:calc(100vh - 1rem);overflow:hidden}.index-module__modal-dialog-scrollable__2OLKI .index-module__modal-header__2kgoY,.index-module__modal-dialog-scrollable__2OLKI .index-module__modal-footer__O3U1v{flex-shrink:0}.index-module__modal-dialog-scrollable__2OLKI .index-module__modal-body__3-1HX{overflow-y:auto}.index-module__modal-dialog-centered__2Kk9k{display:flex;align-items:center;min-height:calc(100% - 1rem)}.index-module__modal-dialog-centered__2Kk9k::before{display:block;height:calc(100vh - 1rem);content:\\\"\\\"}.index-module__modal-dialog-centered__2Kk9k.index-module__modal-dialog-scrollable__2OLKI{flex-direction:column;justify-content:center;height:100%}.index-module__modal-dialog-centered__2Kk9k.index-module__modal-dialog-scrollable__2OLKI .index-module__modal-content__2xTWw{max-height:none}.index-module__modal-dialog-centered__2Kk9k.index-module__modal-dialog-scrollable__2OLKI::before{content:none}.index-module__modal-content__2xTWw{position:relative;display:flex;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.2);border-radius:.3rem;outline:0}.index-module__modal-backdrop__2kxkF{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.index-module__modal-backdrop__2kxkF.index-module__fade__23Syb{opacity:0}.index-module__modal-backdrop__2kxkF.index-module__show__6Epil{opacity:.5}.index-module__modal-header__2kgoY{display:flex;align-items:flex-start;justify-content:space-between;padding:1rem 1rem;border-bottom:1px solid #dee2e6;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.index-module__modal-header__2kgoY .index-module__close__1wRFd{padding:1rem 1rem;margin:-1rem -1rem -1rem auto}.index-module__modal-title__3Nvyk{margin-bottom:0;line-height:1.5}.index-module__modal-body__3-1HX{position:relative;flex:1 1 auto;padding:1rem}.index-module__modal-footer__O3U1v{display:flex;flex-wrap:wrap;align-items:center;justify-content:flex-end;padding:.75rem;border-top:1px solid #dee2e6;border-bottom-right-radius:calc(.3rem - 1px);border-bottom-left-radius:calc(.3rem - 1px)}.index-module__modal-footer__O3U1v>*{margin:.25rem}.index-module__modal-scrollbar-measure__1Xc9r{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width: 576px){.index-module__modal-dialog__2D-RY{max-width:500px;margin:1.75rem auto}.index-module__modal-dialog-scrollable__2OLKI{max-height:calc(100% - 3.5rem)}.index-module__modal-dialog-scrollable__2OLKI .index-module__modal-content__2xTWw{max-height:calc(100vh - 3.5rem)}.index-module__modal-dialog-centered__2Kk9k{min-height:calc(100% - 3.5rem)}.index-module__modal-dialog-centered__2Kk9k::before{height:calc(100vh - 3.5rem)}.index-module__modal-sm__10Rkr{max-width:300px}}@media (min-width: 1050px){.index-module__modal-lg__12tAk,.index-module__modal-xl__2Ot7e{max-width:800px}}@media (min-width: 1500px){.index-module__modal-xl__2Ot7e{max-width:1140px}}.index-module__tooltip__qBnHg{position:absolute;z-index:1070;display:block;margin:0;font-family:\\\"Gotham Book\\\",serif;font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.index-module__tooltip__qBnHg.index-module__show__6Epil{opacity:.9}.index-module__tooltip__qBnHg .index-module__arrow__2rswH{position:absolute;display:block;width:.8rem;height:.4rem}.index-module__tooltip__qBnHg .index-module__arrow__2rswH::before{position:absolute;content:\\\"\\\";border-color:transparent;border-style:solid}.index-module__bs-tooltip-top__1BhwH,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"top\\\"]{padding:.4rem 0}.index-module__bs-tooltip-top__1BhwH .index-module__arrow__2rswH,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"top\\\"] .index-module__arrow__2rswH{bottom:0}.index-module__bs-tooltip-top__1BhwH .index-module__arrow__2rswH::before,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"top\\\"] .index-module__arrow__2rswH::before{top:0;border-width:.4rem .4rem 0;border-top-color:#000}.index-module__bs-tooltip-right__398mf,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"right\\\"]{padding:0 .4rem}.index-module__bs-tooltip-right__398mf .index-module__arrow__2rswH,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"right\\\"] .index-module__arrow__2rswH{left:0;width:.4rem;height:.8rem}.index-module__bs-tooltip-right__398mf .index-module__arrow__2rswH::before,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"right\\\"] .index-module__arrow__2rswH::before{right:0;border-width:.4rem .4rem .4rem 0;border-right-color:#000}.index-module__bs-tooltip-bottom__3mc1t,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"bottom\\\"]{padding:.4rem 0}.index-module__bs-tooltip-bottom__3mc1t .index-module__arrow__2rswH,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"bottom\\\"] .index-module__arrow__2rswH{top:0}.index-module__bs-tooltip-bottom__3mc1t .index-module__arrow__2rswH::before,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"bottom\\\"] .index-module__arrow__2rswH::before{bottom:0;border-width:0 .4rem .4rem;border-bottom-color:#000}.index-module__bs-tooltip-left__3gj7E,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"left\\\"]{padding:0 .4rem}.index-module__bs-tooltip-left__3gj7E .index-module__arrow__2rswH,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"left\\\"] .index-module__arrow__2rswH{right:0;width:.4rem;height:.8rem}.index-module__bs-tooltip-left__3gj7E .index-module__arrow__2rswH::before,.index-module__bs-tooltip-auto__xkBn_[x-placement^=\\\"left\\\"] .index-module__arrow__2rswH::before{left:0;border-width:.4rem 0 .4rem .4rem;border-left-color:#000}.index-module__tooltip-inner__2Y2jl{max-width:200px;padding:.25rem .5rem;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.index-module__popover__2SGlP{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;font-family:\\\"Gotham Book\\\",serif;font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.2);border-radius:.3rem}.index-module__popover__2SGlP .index-module__arrow__2rswH{position:absolute;display:block;width:1rem;height:.5rem;margin:0 .3rem}.index-module__popover__2SGlP .index-module__arrow__2rswH::before,.index-module__popover__2SGlP .index-module__arrow__2rswH::after{position:absolute;display:block;content:\\\"\\\";border-color:transparent;border-style:solid}.index-module__bs-popover-top__PjDeA,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"top\\\"]{margin-bottom:.5rem}.index-module__bs-popover-top__PjDeA>.index-module__arrow__2rswH,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"top\\\"]>.index-module__arrow__2rswH{bottom:calc(-.5rem - 1px)}.index-module__bs-popover-top__PjDeA>.index-module__arrow__2rswH::before,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"top\\\"]>.index-module__arrow__2rswH::before{bottom:0;border-width:.5rem .5rem 0;border-top-color:rgba(0,0,0,0.25)}.index-module__bs-popover-top__PjDeA>.index-module__arrow__2rswH::after,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"top\\\"]>.index-module__arrow__2rswH::after{bottom:1px;border-width:.5rem .5rem 0;border-top-color:#fff}.index-module__bs-popover-right__2e2y6,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"right\\\"]{margin-left:.5rem}.index-module__bs-popover-right__2e2y6>.index-module__arrow__2rswH,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"right\\\"]>.index-module__arrow__2rswH{left:calc(-.5rem - 1px);width:.5rem;height:1rem;margin:.3rem 0}.index-module__bs-popover-right__2e2y6>.index-module__arrow__2rswH::before,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"right\\\"]>.index-module__arrow__2rswH::before{left:0;border-width:.5rem .5rem .5rem 0;border-right-color:rgba(0,0,0,0.25)}.index-module__bs-popover-right__2e2y6>.index-module__arrow__2rswH::after,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"right\\\"]>.index-module__arrow__2rswH::after{left:1px;border-width:.5rem .5rem .5rem 0;border-right-color:#fff}.index-module__bs-popover-bottom__3kUoW,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"bottom\\\"]{margin-top:.5rem}.index-module__bs-popover-bottom__3kUoW>.index-module__arrow__2rswH,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"bottom\\\"]>.index-module__arrow__2rswH{top:calc(-.5rem - 1px)}.index-module__bs-popover-bottom__3kUoW>.index-module__arrow__2rswH::before,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"bottom\\\"]>.index-module__arrow__2rswH::before{top:0;border-width:0 .5rem .5rem .5rem;border-bottom-color:rgba(0,0,0,0.25)}.index-module__bs-popover-bottom__3kUoW>.index-module__arrow__2rswH::after,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"bottom\\\"]>.index-module__arrow__2rswH::after{top:1px;border-width:0 .5rem .5rem .5rem;border-bottom-color:#fff}.index-module__bs-popover-bottom__3kUoW .index-module__popover-header__2EU4L::before,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"bottom\\\"] .index-module__popover-header__2EU4L::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-.5rem;content:\\\"\\\";border-bottom:1px solid #f7f7f7}.index-module__bs-popover-left__35_5h,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"left\\\"]{margin-right:.5rem}.index-module__bs-popover-left__35_5h>.index-module__arrow__2rswH,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"left\\\"]>.index-module__arrow__2rswH{right:calc(-.5rem - 1px);width:.5rem;height:1rem;margin:.3rem 0}.index-module__bs-popover-left__35_5h>.index-module__arrow__2rswH::before,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"left\\\"]>.index-module__arrow__2rswH::before{right:0;border-width:.5rem 0 .5rem .5rem;border-left-color:rgba(0,0,0,0.25)}.index-module__bs-popover-left__35_5h>.index-module__arrow__2rswH::after,.index-module__bs-popover-auto__2bb6x[x-placement^=\\\"left\\\"]>.index-module__arrow__2rswH::after{right:1px;border-width:.5rem 0 .5rem .5rem;border-left-color:#fff}.index-module__popover-header__2EU4L{padding:.5rem .75rem;margin-bottom:0;font-size:1rem;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.index-module__popover-header__2EU4L:empty{display:none}.index-module__popover-body__Mf9Hm{padding:.5rem .75rem;color:#212529}.index-module__carousel__23XUu{position:relative}.index-module__carousel__23XUu.index-module__pointer-event__Q7Iut{touch-action:pan-y}.index-module__carousel-inner__3Wj3-{position:relative;width:100%;overflow:hidden}.index-module__carousel-inner__3Wj3-::after{display:block;clear:both;content:\\\"\\\"}.index-module__carousel-item__19qZ3{position:relative;display:none;float:left;width:100%;margin-right:-100%;backface-visibility:hidden;transition:transform .6s ease-in-out}@media (prefers-reduced-motion: reduce){.index-module__carousel-item__19qZ3{transition:none}}.index-module__carousel-item__19qZ3.index-module__active__2-CxA,.index-module__carousel-item-next__1l_ur,.index-module__carousel-item-prev__Vjq-I{display:block}.index-module__carousel-item-next__1l_ur:not(.index-module__carousel-item-left__1BDm2),.index-module__active__2-CxA.index-module__carousel-item-right__O3R4g{transform:translateX(100%)}.index-module__carousel-item-prev__Vjq-I:not(.index-module__carousel-item-right__O3R4g),.index-module__active__2-CxA.index-module__carousel-item-left__1BDm2{transform:translateX(-100%)}.index-module__carousel-fade__2KFRm .index-module__carousel-item__19qZ3{opacity:0;transition-property:opacity;transform:none}.index-module__carousel-fade__2KFRm .index-module__carousel-item__19qZ3.index-module__active__2-CxA,.index-module__carousel-fade__2KFRm .index-module__carousel-item-next__1l_ur.index-module__carousel-item-left__1BDm2,.index-module__carousel-fade__2KFRm .index-module__carousel-item-prev__Vjq-I.index-module__carousel-item-right__O3R4g{z-index:1;opacity:1}.index-module__carousel-fade__2KFRm .index-module__active__2-CxA.index-module__carousel-item-left__1BDm2,.index-module__carousel-fade__2KFRm .index-module__active__2-CxA.index-module__carousel-item-right__O3R4g{z-index:0;opacity:0;transition:opacity 0s .6s}@media (prefers-reduced-motion: reduce){.index-module__carousel-fade__2KFRm .index-module__active__2-CxA.index-module__carousel-item-left__1BDm2,.index-module__carousel-fade__2KFRm .index-module__active__2-CxA.index-module__carousel-item-right__O3R4g{transition:none}}.index-module__carousel-control-prev__AIH7r,.index-module__carousel-control-next__1Ltqh{position:absolute;top:0;bottom:0;z-index:1;display:flex;align-items:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:.5;transition:opacity 0.15s ease}@media (prefers-reduced-motion: reduce){.index-module__carousel-control-prev__AIH7r,.index-module__carousel-control-next__1Ltqh{transition:none}}.index-module__carousel-control-prev__AIH7r:hover,.index-module__carousel-control-prev__AIH7r:focus,.index-module__carousel-control-next__1Ltqh:hover,.index-module__carousel-control-next__1Ltqh:focus{color:#fff;text-decoration:none;outline:0;opacity:.9}.index-module__carousel-control-prev__AIH7r{left:0}.index-module__carousel-control-next__1Ltqh{right:0}.index-module__carousel-control-prev-icon__j7Rif,.index-module__carousel-control-next-icon__iOkN6{display:inline-block;width:20px;height:20px;background:no-repeat 50% / 100% 100%}.index-module__carousel-control-prev-icon__j7Rif{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z'/%3e%3c/svg%3e\\\")}.index-module__carousel-control-next-icon__iOkN6{background-image:url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z'/%3e%3c/svg%3e\\\")}.index-module__carousel-indicators__1N_Ir{position:absolute;right:0;bottom:0;left:0;z-index:15;display:flex;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.index-module__carousel-indicators__1N_Ir li{box-sizing:content-box;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:.5;transition:opacity 0.6s ease}@media (prefers-reduced-motion: reduce){.index-module__carousel-indicators__1N_Ir li{transition:none}}.index-module__carousel-indicators__1N_Ir .index-module__active__2-CxA{opacity:1}.index-module__carousel-caption__2ICBR{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}@keyframes index-module__spinner-border__32qWc{to{transform:rotate(360deg)}}.index-module__spinner-border__32qWc{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;border:.25em solid currentColor;border-right-color:transparent;border-radius:50%;animation:index-module__spinner-border__32qWc .75s linear infinite}.index-module__spinner-border-sm__2wo5d{width:1rem;height:1rem;border-width:.2em}@keyframes index-module__spinner-grow__2z4qf{0%{transform:scale(0)}50%{opacity:1}}.index-module__spinner-grow__2z4qf{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;background-color:currentColor;border-radius:50%;opacity:0;animation:index-module__spinner-grow__2z4qf .75s linear infinite}.index-module__spinner-grow-sm__2J_8F{width:1rem;height:1rem}.index-module__align-baseline__22Ief{vertical-align:baseline !important}.index-module__align-top__2LAh3{vertical-align:top !important}.index-module__align-middle__lRkJM{vertical-align:middle !important}.index-module__align-bottom__2fuRH{vertical-align:bottom !important}.index-module__align-text-bottom__uGF0N{vertical-align:text-bottom !important}.index-module__align-text-top__1QpKK{vertical-align:text-top !important}.index-module__bg-primary__15bc4{background-color:#0968c3 !important}a.index-module__bg-primary__15bc4:hover,a.index-module__bg-primary__15bc4:focus,button.index-module__bg-primary__15bc4:hover,button.index-module__bg-primary__15bc4:focus{background-color:#074e92 !important}.index-module__bg-secondary__3kg7Z{background-color:gray !important}a.index-module__bg-secondary__3kg7Z:hover,a.index-module__bg-secondary__3kg7Z:focus,button.index-module__bg-secondary__3kg7Z:hover,button.index-module__bg-secondary__3kg7Z:focus{background-color:#676767 !important}.index-module__bg-success__2JnfU{background-color:#28a745 !important}a.index-module__bg-success__2JnfU:hover,a.index-module__bg-success__2JnfU:focus,button.index-module__bg-success__2JnfU:hover,button.index-module__bg-success__2JnfU:focus{background-color:#1e7e34 !important}.index-module__bg-info__3c20Z{background-color:#17a2b8 !important}a.index-module__bg-info__3c20Z:hover,a.index-module__bg-info__3c20Z:focus,button.index-module__bg-info__3c20Z:hover,button.index-module__bg-info__3c20Z:focus{background-color:#117a8b !important}.index-module__bg-warning__3Zb3D{background-color:#ffc107 !important}a.index-module__bg-warning__3Zb3D:hover,a.index-module__bg-warning__3Zb3D:focus,button.index-module__bg-warning__3Zb3D:hover,button.index-module__bg-warning__3Zb3D:focus{background-color:#d39e00 !important}.index-module__bg-danger__2sSv0{background-color:#dc3545 !important}a.index-module__bg-danger__2sSv0:hover,a.index-module__bg-danger__2sSv0:focus,button.index-module__bg-danger__2sSv0:hover,button.index-module__bg-danger__2sSv0:focus{background-color:#bd2130 !important}.index-module__bg-light__3u2Ac{background-color:#f8f9fa !important}a.index-module__bg-light__3u2Ac:hover,a.index-module__bg-light__3u2Ac:focus,button.index-module__bg-light__3u2Ac:hover,button.index-module__bg-light__3u2Ac:focus{background-color:#dae0e5 !important}.index-module__bg-dark__3HV6-{background-color:#343a40 !important}a.index-module__bg-dark__3HV6-:hover,a.index-module__bg-dark__3HV6-:focus,button.index-module__bg-dark__3HV6-:hover,button.index-module__bg-dark__3HV6-:focus{background-color:#1d2124 !important}.index-module__bg-white__2snQi{background-color:#fff !important}.index-module__bg-transparent__1tysZ{background-color:transparent !important}.index-module__border__11qPG{border:1px solid #dee2e6 !important}.index-module__border-top__Yy2_J{border-top:1px solid #dee2e6 !important}.index-module__border-right__3ToJc{border-right:1px solid #dee2e6 !important}.index-module__border-bottom__2ixth{border-bottom:1px solid #dee2e6 !important}.index-module__border-left__2pfJ8{border-left:1px solid #dee2e6 !important}.index-module__border-0__1797k{border:0 !important}.index-module__border-top-0__3Fg04{border-top:0 !important}.index-module__border-right-0__TIwct{border-right:0 !important}.index-module__border-bottom-0__2ac8a{border-bottom:0 !important}.index-module__border-left-0__xW4be{border-left:0 !important}.index-module__border-primary__31kWz{border-color:#0968c3 !important}.index-module__border-secondary__2BBub{border-color:gray !important}.index-module__border-success__1ojwX{border-color:#28a745 !important}.index-module__border-info__I4TLB{border-color:#17a2b8 !important}.index-module__border-warning__2gX2z{border-color:#ffc107 !important}.index-module__border-danger__2mjDE{border-color:#dc3545 !important}.index-module__border-light__2X8Tg{border-color:#f8f9fa !important}.index-module__border-dark__2jE9k{border-color:#343a40 !important}.index-module__border-white__3oFZD{border-color:#fff !important}.index-module__rounded-sm__sgDxH{border-radius:.2rem !important}.index-module__rounded__3b7gS{border-radius:.25rem !important}.index-module__rounded-top__1VBjR{border-top-left-radius:.25rem !important;border-top-right-radius:.25rem !important}.index-module__rounded-right__2XyLx{border-top-right-radius:.25rem !important;border-bottom-right-radius:.25rem !important}.index-module__rounded-bottom__Rv8nC{border-bottom-right-radius:.25rem !important;border-bottom-left-radius:.25rem !important}.index-module__rounded-left__3mXIm{border-top-left-radius:.25rem !important;border-bottom-left-radius:.25rem !important}.index-module__rounded-lg__3JUTg{border-radius:.3rem !important}.index-module__rounded-circle__1Ug3f{border-radius:50% !important}.index-module__rounded-pill__25bLX{border-radius:50rem !important}.index-module__rounded-0__2M6hd{border-radius:0 !important}.index-module__clearfix__1jDy6::after{display:block;clear:both;content:\\\"\\\"}.index-module__d-none__1UFzy{display:none !important}.index-module__d-inline__1eSrQ{display:inline !important}.index-module__d-inline-block__17YVa{display:inline-block !important}.index-module__d-block__2YlS_{display:block !important}.index-module__d-table__MEAF8{display:table !important}.index-module__d-table-row__1q4SV{display:table-row !important}.index-module__d-table-cell__W8QY2{display:table-cell !important}.index-module__d-flex__1qvFp{display:flex !important}.index-module__d-inline-flex__1DK7F{display:inline-flex !important}@media (min-width: 576px){.index-module__d-sm-none__D-Ixz{display:none !important}.index-module__d-sm-inline__1hnTb{display:inline !important}.index-module__d-sm-inline-block__1plB9{display:inline-block !important}.index-module__d-sm-block__28HbD{display:block !important}.index-module__d-sm-table__3WY7a{display:table !important}.index-module__d-sm-table-row__S7LDT{display:table-row !important}.index-module__d-sm-table-cell___SH4G{display:table-cell !important}.index-module__d-sm-flex__2MqUn{display:flex !important}.index-module__d-sm-inline-flex__3dbe7{display:inline-flex !important}}@media (min-width: 768px){.index-module__d-md-none__2FNrA{display:none !important}.index-module__d-md-inline__1lcRW{display:inline !important}.index-module__d-md-inline-block__2-kHh{display:inline-block !important}.index-module__d-md-block__32CZ2{display:block !important}.index-module__d-md-table__2Ef9h{display:table !important}.index-module__d-md-table-row__U07gX{display:table-row !important}.index-module__d-md-table-cell__3LnKv{display:table-cell !important}.index-module__d-md-flex__1a9hJ{display:flex !important}.index-module__d-md-inline-flex__1h4jp{display:inline-flex !important}}@media (min-width: 1050px){.index-module__d-lg-none__2MP9w{display:none !important}.index-module__d-lg-inline__1z4Cd{display:inline !important}.index-module__d-lg-inline-block__2pczW{display:inline-block !important}.index-module__d-lg-block__acbC3{display:block !important}.index-module__d-lg-table__3OSxx{display:table !important}.index-module__d-lg-table-row__X9lhz{display:table-row !important}.index-module__d-lg-table-cell__B15gg{display:table-cell !important}.index-module__d-lg-flex__3uRhp{display:flex !important}.index-module__d-lg-inline-flex__2wY0b{display:inline-flex !important}}@media (min-width: 1500px){.index-module__d-xl-none__5cs9L{display:none !important}.index-module__d-xl-inline__11qkx{display:inline !important}.index-module__d-xl-inline-block__56yqa{display:inline-block !important}.index-module__d-xl-block__3I3yt{display:block !important}.index-module__d-xl-table__1x9-d{display:table !important}.index-module__d-xl-table-row__gQeSj{display:table-row !important}.index-module__d-xl-table-cell__1EUMM{display:table-cell !important}.index-module__d-xl-flex__FUdMO{display:flex !important}.index-module__d-xl-inline-flex__CeC7K{display:inline-flex !important}}@media print{.index-module__d-print-none__eG0Fa{display:none !important}.index-module__d-print-inline__1amkG{display:inline !important}.index-module__d-print-inline-block__1wWGM{display:inline-block !important}.index-module__d-print-block__3TyG4{display:block !important}.index-module__d-print-table__BOEMC{display:table !important}.index-module__d-print-table-row__oywhQ{display:table-row !important}.index-module__d-print-table-cell__OEW4w{display:table-cell !important}.index-module__d-print-flex__S0pKW{display:flex !important}.index-module__d-print-inline-flex__29VnD{display:inline-flex !important}}.index-module__embed-responsive__1yscp{position:relative;display:block;width:100%;padding:0;overflow:hidden}.index-module__embed-responsive__1yscp::before{display:block;content:\\\"\\\"}.index-module__embed-responsive__1yscp .index-module__embed-responsive-item__1jl2s,.index-module__embed-responsive__1yscp iframe,.index-module__embed-responsive__1yscp embed,.index-module__embed-responsive__1yscp object,.index-module__embed-responsive__1yscp video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.index-module__embed-responsive-21by9__28XiT::before{padding-top:42.85714%}.index-module__embed-responsive-16by9__22ItI::before{padding-top:56.25%}.index-module__embed-responsive-4by3__2MUFC::before{padding-top:75%}.index-module__embed-responsive-1by1__2ZJnY::before{padding-top:100%}.index-module__flex-row__3ylbW{flex-direction:row !important}.index-module__flex-column__sIl7l{flex-direction:column !important}.index-module__flex-row-reverse__BcGRz{flex-direction:row-reverse !important}.index-module__flex-column-reverse__3Go3V{flex-direction:column-reverse !important}.index-module__flex-wrap__1ovaQ{flex-wrap:wrap !important}.index-module__flex-nowrap__2lmSF{flex-wrap:nowrap !important}.index-module__flex-wrap-reverse__2f8MK{flex-wrap:wrap-reverse !important}.index-module__flex-fill__35sP0{flex:1 1 auto !important}.index-module__flex-grow-0__Kysyq{flex-grow:0 !important}.index-module__flex-grow-1__2kwOp{flex-grow:1 !important}.index-module__flex-shrink-0__2OK2B{flex-shrink:0 !important}.index-module__flex-shrink-1__3O3pH{flex-shrink:1 !important}.index-module__justify-content-start__2gV9a{justify-content:flex-start !important}.index-module__justify-content-end__37y2T{justify-content:flex-end !important}.index-module__justify-content-center__2qQe5{justify-content:center !important}.index-module__justify-content-between__2xAct{justify-content:space-between !important}.index-module__justify-content-around__3PGZy{justify-content:space-around !important}.index-module__align-items-start__2a328{align-items:flex-start !important}.index-module__align-items-end__pxmDe{align-items:flex-end !important}.index-module__align-items-center__2B3iW{align-items:center !important}.index-module__align-items-baseline__TgH6a{align-items:baseline !important}.index-module__align-items-stretch__3KWud{align-items:stretch !important}.index-module__align-content-start__3b3Hg{align-content:flex-start !important}.index-module__align-content-end__wksf2{align-content:flex-end !important}.index-module__align-content-center__23Dyy{align-content:center !important}.index-module__align-content-between__2FLKa{align-content:space-between !important}.index-module__align-content-around__1Da4N{align-content:space-around !important}.index-module__align-content-stretch__3h4Bi{align-content:stretch !important}.index-module__align-self-auto__1dgAE{align-self:auto !important}.index-module__align-self-start__t8nl-{align-self:flex-start !important}.index-module__align-self-end__2Qm5m{align-self:flex-end !important}.index-module__align-self-center__Dd-Gs{align-self:center !important}.index-module__align-self-baseline__2Z5zE{align-self:baseline !important}.index-module__align-self-stretch__2n0um{align-self:stretch !important}@media (min-width: 576px){.index-module__flex-sm-row__3I57n{flex-direction:row !important}.index-module__flex-sm-column__2g-Z0{flex-direction:column !important}.index-module__flex-sm-row-reverse__3p0k4{flex-direction:row-reverse !important}.index-module__flex-sm-column-reverse__3ig6z{flex-direction:column-reverse !important}.index-module__flex-sm-wrap__VabSO{flex-wrap:wrap !important}.index-module__flex-sm-nowrap__2HWVy{flex-wrap:nowrap !important}.index-module__flex-sm-wrap-reverse__3Ratx{flex-wrap:wrap-reverse !important}.index-module__flex-sm-fill__391be{flex:1 1 auto !important}.index-module__flex-sm-grow-0__8xMOK{flex-grow:0 !important}.index-module__flex-sm-grow-1__1t3iD{flex-grow:1 !important}.index-module__flex-sm-shrink-0__n3hK2{flex-shrink:0 !important}.index-module__flex-sm-shrink-1__1xswC{flex-shrink:1 !important}.index-module__justify-content-sm-start__2ZsPP{justify-content:flex-start !important}.index-module__justify-content-sm-end__vGSVX{justify-content:flex-end !important}.index-module__justify-content-sm-center__2UFVe{justify-content:center !important}.index-module__justify-content-sm-between__3LXES{justify-content:space-between !important}.index-module__justify-content-sm-around__3WUhc{justify-content:space-around !important}.index-module__align-items-sm-start__2V-Us{align-items:flex-start !important}.index-module__align-items-sm-end__1lPXR{align-items:flex-end !important}.index-module__align-items-sm-center__3EkLM{align-items:center !important}.index-module__align-items-sm-baseline__3OQKT{align-items:baseline !important}.index-module__align-items-sm-stretch__252IZ{align-items:stretch !important}.index-module__align-content-sm-start__2HOv7{align-content:flex-start !important}.index-module__align-content-sm-end__1gRgm{align-content:flex-end !important}.index-module__align-content-sm-center__xi-TT{align-content:center !important}.index-module__align-content-sm-between__36LSv{align-content:space-between !important}.index-module__align-content-sm-around__2K9Ol{align-content:space-around !important}.index-module__align-content-sm-stretch__2mMHr{align-content:stretch !important}.index-module__align-self-sm-auto__2LRHD{align-self:auto !important}.index-module__align-self-sm-start__2EPH9{align-self:flex-start !important}.index-module__align-self-sm-end__3ClY5{align-self:flex-end !important}.index-module__align-self-sm-center__2kaQb{align-self:center !important}.index-module__align-self-sm-baseline__5WHZz{align-self:baseline !important}.index-module__align-self-sm-stretch__2yy6Y{align-self:stretch !important}}@media (min-width: 768px){.index-module__flex-md-row__3LS07{flex-direction:row !important}.index-module__flex-md-column__21yB1{flex-direction:column !important}.index-module__flex-md-row-reverse__b4lh6{flex-direction:row-reverse !important}.index-module__flex-md-column-reverse__162vZ{flex-direction:column-reverse !important}.index-module__flex-md-wrap__2-Ub4{flex-wrap:wrap !important}.index-module__flex-md-nowrap__KXFMp{flex-wrap:nowrap !important}.index-module__flex-md-wrap-reverse__3eW60{flex-wrap:wrap-reverse !important}.index-module__flex-md-fill__2VA1R{flex:1 1 auto !important}.index-module__flex-md-grow-0__DoL0L{flex-grow:0 !important}.index-module__flex-md-grow-1__CLD-r{flex-grow:1 !important}.index-module__flex-md-shrink-0__UEK9v{flex-shrink:0 !important}.index-module__flex-md-shrink-1__1A6r9{flex-shrink:1 !important}.index-module__justify-content-md-start__3AgZj{justify-content:flex-start !important}.index-module__justify-content-md-end__3Fmkm{justify-content:flex-end !important}.index-module__justify-content-md-center__3Bf-A{justify-content:center !important}.index-module__justify-content-md-between__31BQP{justify-content:space-between !important}.index-module__justify-content-md-around__2ajuf{justify-content:space-around !important}.index-module__align-items-md-start__21Px_{align-items:flex-start !important}.index-module__align-items-md-end__1RCoB{align-items:flex-end !important}.index-module__align-items-md-center__22zo2{align-items:center !important}.index-module__align-items-md-baseline__u6hUc{align-items:baseline !important}.index-module__align-items-md-stretch__34Yzf{align-items:stretch !important}.index-module__align-content-md-start__2ROQC{align-content:flex-start !important}.index-module__align-content-md-end__2gh2a{align-content:flex-end !important}.index-module__align-content-md-center__3C9R9{align-content:center !important}.index-module__align-content-md-between__1iBKE{align-content:space-between !important}.index-module__align-content-md-around__N4dF0{align-content:space-around !important}.index-module__align-content-md-stretch__2XrTJ{align-content:stretch !important}.index-module__align-self-md-auto__1H5uO{align-self:auto !important}.index-module__align-self-md-start__1GOy0{align-self:flex-start !important}.index-module__align-self-md-end__3QFHN{align-self:flex-end !important}.index-module__align-self-md-center__3cknV{align-self:center !important}.index-module__align-self-md-baseline__3xUAb{align-self:baseline !important}.index-module__align-self-md-stretch__1k63x{align-self:stretch !important}}@media (min-width: 1050px){.index-module__flex-lg-row__2QnDI{flex-direction:row !important}.index-module__flex-lg-column__Ztry7{flex-direction:column !important}.index-module__flex-lg-row-reverse__hk1Bj{flex-direction:row-reverse !important}.index-module__flex-lg-column-reverse__1egF5{flex-direction:column-reverse !important}.index-module__flex-lg-wrap__1EhhV{flex-wrap:wrap !important}.index-module__flex-lg-nowrap__2dKGN{flex-wrap:nowrap !important}.index-module__flex-lg-wrap-reverse__R8cys{flex-wrap:wrap-reverse !important}.index-module__flex-lg-fill__2ILqZ{flex:1 1 auto !important}.index-module__flex-lg-grow-0__3nGok{flex-grow:0 !important}.index-module__flex-lg-grow-1__2KOwB{flex-grow:1 !important}.index-module__flex-lg-shrink-0__3xNsV{flex-shrink:0 !important}.index-module__flex-lg-shrink-1__3KEEK{flex-shrink:1 !important}.index-module__justify-content-lg-start__2uQ3g{justify-content:flex-start !important}.index-module__justify-content-lg-end__-gGfk{justify-content:flex-end !important}.index-module__justify-content-lg-center__1fDc0{justify-content:center !important}.index-module__justify-content-lg-between__2JShF{justify-content:space-between !important}.index-module__justify-content-lg-around__3ERPN{justify-content:space-around !important}.index-module__align-items-lg-start__3d3XW{align-items:flex-start !important}.index-module__align-items-lg-end__1ztQH{align-items:flex-end !important}.index-module__align-items-lg-center__1FfdS{align-items:center !important}.index-module__align-items-lg-baseline__otn8F{align-items:baseline !important}.index-module__align-items-lg-stretch__1yjRg{align-items:stretch !important}.index-module__align-content-lg-start__3_Gwy{align-content:flex-start !important}.index-module__align-content-lg-end__3jEIR{align-content:flex-end !important}.index-module__align-content-lg-center__3JMp3{align-content:center !important}.index-module__align-content-lg-between__3vKJx{align-content:space-between !important}.index-module__align-content-lg-around__XgvDj{align-content:space-around !important}.index-module__align-content-lg-stretch__v7qMh{align-content:stretch !important}.index-module__align-self-lg-auto__11h14{align-self:auto !important}.index-module__align-self-lg-start__2lekD{align-self:flex-start !important}.index-module__align-self-lg-end__Y-ezZ{align-self:flex-end !important}.index-module__align-self-lg-center__20ASJ{align-self:center !important}.index-module__align-self-lg-baseline__3e5c6{align-self:baseline !important}.index-module__align-self-lg-stretch__3rDPl{align-self:stretch !important}}@media (min-width: 1500px){.index-module__flex-xl-row__1pb92{flex-direction:row !important}.index-module__flex-xl-column__1gAon{flex-direction:column !important}.index-module__flex-xl-row-reverse__O8p-w{flex-direction:row-reverse !important}.index-module__flex-xl-column-reverse__ajrCo{flex-direction:column-reverse !important}.index-module__flex-xl-wrap__34zm7{flex-wrap:wrap !important}.index-module__flex-xl-nowrap__2IA-h{flex-wrap:nowrap !important}.index-module__flex-xl-wrap-reverse__a6aWr{flex-wrap:wrap-reverse !important}.index-module__flex-xl-fill__3rzig{flex:1 1 auto !important}.index-module__flex-xl-grow-0__3MUTQ{flex-grow:0 !important}.index-module__flex-xl-grow-1__2fkua{flex-grow:1 !important}.index-module__flex-xl-shrink-0__1GTOW{flex-shrink:0 !important}.index-module__flex-xl-shrink-1__3fvXj{flex-shrink:1 !important}.index-module__justify-content-xl-start__2m5Kf{justify-content:flex-start !important}.index-module__justify-content-xl-end__3jKqh{justify-content:flex-end !important}.index-module__justify-content-xl-center__f_V4w{justify-content:center !important}.index-module__justify-content-xl-between__3Z3Qx{justify-content:space-between !important}.index-module__justify-content-xl-around__1ak2X{justify-content:space-around !important}.index-module__align-items-xl-start__RX8_l{align-items:flex-start !important}.index-module__align-items-xl-end__l9w9U{align-items:flex-end !important}.index-module__align-items-xl-center__2Wxqa{align-items:center !important}.index-module__align-items-xl-baseline__3pCGZ{align-items:baseline !important}.index-module__align-items-xl-stretch__3HJ0Y{align-items:stretch !important}.index-module__align-content-xl-start__3Q5-a{align-content:flex-start !important}.index-module__align-content-xl-end__1GJCc{align-content:flex-end !important}.index-module__align-content-xl-center__2E0uB{align-content:center !important}.index-module__align-content-xl-between__OX8EN{align-content:space-between !important}.index-module__align-content-xl-around__3US3D{align-content:space-around !important}.index-module__align-content-xl-stretch__y0bVZ{align-content:stretch !important}.index-module__align-self-xl-auto__HEXjT{align-self:auto !important}.index-module__align-self-xl-start__1pgdI{align-self:flex-start !important}.index-module__align-self-xl-end__38P43{align-self:flex-end !important}.index-module__align-self-xl-center__10iLa{align-self:center !important}.index-module__align-self-xl-baseline__3usxa{align-self:baseline !important}.index-module__align-self-xl-stretch__wGjfY{align-self:stretch !important}}.index-module__float-left__2ItlT{float:left !important}.index-module__float-right__13qtj{float:right !important}.index-module__float-none__1WMWR{float:none !important}@media (min-width: 576px){.index-module__float-sm-left__1_6W8{float:left !important}.index-module__float-sm-right__2TmyR{float:right !important}.index-module__float-sm-none__mby_i{float:none !important}}@media (min-width: 768px){.index-module__float-md-left__21sb4{float:left !important}.index-module__float-md-right__2rZhy{float:right !important}.index-module__float-md-none__LVtgq{float:none !important}}@media (min-width: 1050px){.index-module__float-lg-left__1hDZR{float:left !important}.index-module__float-lg-right__1Q1Vg{float:right !important}.index-module__float-lg-none__2kloU{float:none !important}}@media (min-width: 1500px){.index-module__float-xl-left__1Ipg5{float:left !important}.index-module__float-xl-right__3z1P5{float:right !important}.index-module__float-xl-none__3CgDx{float:none !important}}.index-module__overflow-auto__1_LnW{overflow:auto !important}.index-module__overflow-hidden__1N-pd{overflow:hidden !important}.index-module__position-static__1Cih-{position:static !important}.index-module__position-relative__yYqey{position:relative !important}.index-module__position-absolute__Q5jhn{position:absolute !important}.index-module__position-fixed__3_uIf{position:fixed !important}.index-module__position-sticky__3BADn{position:sticky !important}.index-module__fixed-top__SAxfM{position:fixed;top:0;right:0;left:0;z-index:1030}.index-module__fixed-bottom__1ReKY{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports (position: sticky){.index-module__sticky-top__1KjAB{position:sticky;top:0;z-index:1020}}.index-module__sr-only__1dHXJ{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border:0}.index-module__sr-only-focusable__3MxNf:active,.index-module__sr-only-focusable__3MxNf:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.index-module__shadow-sm__xdpcj{box-shadow:0 0.125rem 0.25rem rgba(0,0,0,0.075) !important}.index-module__shadow__zNlgF{box-shadow:0 0.5rem 1rem rgba(0,0,0,0.15) !important}.index-module__shadow-lg__3tMpx{box-shadow:0 1rem 3rem rgba(0,0,0,0.175) !important}.index-module__shadow-none__3XTEz{box-shadow:none !important}.index-module__w-25__3Ky3f{width:25% !important}.index-module__w-50___jH8R{width:50% !important}.index-module__w-75__1gEeF{width:75% !important}.index-module__w-100__1CQ4t{width:100% !important}.index-module__w-auto__1Nmo7{width:auto !important}.index-module__h-25__1AqXI{height:25% !important}.index-module__h-50__36dGq{height:50% !important}.index-module__h-75__dmFFp{height:75% !important}.index-module__h-100__1vS0I{height:100% !important}.index-module__h-auto__2l9Zr{height:auto !important}.index-module__mw-100__2WQ1C{max-width:100% !important}.index-module__mh-100__Szyu-{max-height:100% !important}.index-module__min-vw-100__1rHjv{min-width:100vw !important}.index-module__min-vh-100__fNIrY{min-height:100vh !important}.index-module__vw-100__dhfVX{width:100vw !important}.index-module__vh-100__1l6Oa{height:100vh !important}.index-module__stretched-link__YNqTs::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;pointer-events:auto;content:\\\"\\\";background-color:rgba(0,0,0,0)}.index-module__m-0__3Bg6F{margin:0 !important}.index-module__mt-0__27bpg,.index-module__my-0__2wjB_{margin-top:0 !important}.index-module__mr-0__-mY-V,.index-module__mx-0__nf3Oa{margin-right:0 !important}.index-module__mb-0__1Xfp4,.index-module__my-0__2wjB_{margin-bottom:0 !important}.index-module__ml-0__1vuq_,.index-module__mx-0__nf3Oa{margin-left:0 !important}.index-module__m-1__3N_AO{margin:.25rem !important}.index-module__mt-1__UOfnZ,.index-module__my-1__2vIKj{margin-top:.25rem !important}.index-module__mr-1__ScRhc,.index-module__mx-1__2ahHv{margin-right:.25rem !important}.index-module__mb-1__mJEqk,.index-module__my-1__2vIKj{margin-bottom:.25rem !important}.index-module__ml-1__1nlqW,.index-module__mx-1__2ahHv{margin-left:.25rem !important}.index-module__m-2__2SBpn{margin:.5rem !important}.index-module__mt-2__xxQYp,.index-module__my-2__CMVC9{margin-top:.5rem !important}.index-module__mr-2__16QXx,.index-module__mx-2__2K4C7{margin-right:.5rem !important}.index-module__mb-2__30dJ-,.index-module__my-2__CMVC9{margin-bottom:.5rem !important}.index-module__ml-2__GCQY5,.index-module__mx-2__2K4C7{margin-left:.5rem !important}.index-module__m-3__73S80{margin:1rem !important}.index-module__mt-3__3oY2q,.index-module__my-3__1HVMW{margin-top:1rem !important}.index-module__mr-3__1-dNe,.index-module__mx-3__wfPc3{margin-right:1rem !important}.index-module__mb-3__27Icc,.index-module__my-3__1HVMW{margin-bottom:1rem !important}.index-module__ml-3__F4qVT,.index-module__mx-3__wfPc3{margin-left:1rem !important}.index-module__m-4__1sF0p{margin:1.5rem !important}.index-module__mt-4__3boPd,.index-module__my-4__2Z3iO{margin-top:1.5rem !important}.index-module__mr-4__2wQ8M,.index-module__mx-4__10rTx{margin-right:1.5rem !important}.index-module__mb-4__3GkHJ,.index-module__my-4__2Z3iO{margin-bottom:1.5rem !important}.index-module__ml-4__gQwnv,.index-module__mx-4__10rTx{margin-left:1.5rem !important}.index-module__m-5__o9vyd{margin:3rem !important}.index-module__mt-5__FgDSC,.index-module__my-5__1GaRc{margin-top:3rem !important}.index-module__mr-5__22MnS,.index-module__mx-5__21F_v{margin-right:3rem !important}.index-module__mb-5__28_jw,.index-module__my-5__1GaRc{margin-bottom:3rem !important}.index-module__ml-5__L28BX,.index-module__mx-5__21F_v{margin-left:3rem !important}.index-module__p-0__3Q0fl{padding:0 !important}.index-module__pt-0__1YRFC,.index-module__py-0__28r0a{padding-top:0 !important}.index-module__pr-0__1mw5I,.index-module__px-0__2jMKp{padding-right:0 !important}.index-module__pb-0__SMGwc,.index-module__py-0__28r0a{padding-bottom:0 !important}.index-module__pl-0__ttynt,.index-module__px-0__2jMKp{padding-left:0 !important}.index-module__p-1__16jwj{padding:.25rem !important}.index-module__pt-1__33TEj,.index-module__py-1__1sGR7{padding-top:.25rem !important}.index-module__pr-1__2Pujk,.index-module__px-1__bBl_O{padding-right:.25rem !important}.index-module__pb-1__3StZv,.index-module__py-1__1sGR7{padding-bottom:.25rem !important}.index-module__pl-1__pTKa8,.index-module__px-1__bBl_O{padding-left:.25rem !important}.index-module__p-2__cN3ho{padding:.5rem !important}.index-module__pt-2__EVSE3,.index-module__py-2__2Yebw{padding-top:.5rem !important}.index-module__pr-2__gtAKV,.index-module__px-2__2_M5u{padding-right:.5rem !important}.index-module__pb-2__2Bj9S,.index-module__py-2__2Yebw{padding-bottom:.5rem !important}.index-module__pl-2__2OxRa,.index-module__px-2__2_M5u{padding-left:.5rem !important}.index-module__p-3__3WCcC{padding:1rem !important}.index-module__pt-3__3YKqE,.index-module__py-3__IzPwi{padding-top:1rem !important}.index-module__pr-3__32OrT,.index-module__px-3__1VWr6{padding-right:1rem !important}.index-module__pb-3__2K-7M,.index-module__py-3__IzPwi{padding-bottom:1rem !important}.index-module__pl-3__29nIA,.index-module__px-3__1VWr6{padding-left:1rem !important}.index-module__p-4__1iy78{padding:1.5rem !important}.index-module__pt-4__3ps9a,.index-module__py-4__ceYxD{padding-top:1.5rem !important}.index-module__pr-4__3pIXG,.index-module__px-4__jBFWx{padding-right:1.5rem !important}.index-module__pb-4__3Xf0V,.index-module__py-4__ceYxD{padding-bottom:1.5rem !important}.index-module__pl-4__iCMoO,.index-module__px-4__jBFWx{padding-left:1.5rem !important}.index-module__p-5__2R6jq{padding:3rem !important}.index-module__pt-5__J3MKH,.index-module__py-5__2wGce{padding-top:3rem !important}.index-module__pr-5__29xN7,.index-module__px-5__2j1jE{padding-right:3rem !important}.index-module__pb-5__3FtU_,.index-module__py-5__2wGce{padding-bottom:3rem !important}.index-module__pl-5__MkEO2,.index-module__px-5__2j1jE{padding-left:3rem !important}.index-module__m-n1__3cNmb{margin:-.25rem !important}.index-module__mt-n1__bzEMB,.index-module__my-n1__kz_uY{margin-top:-.25rem !important}.index-module__mr-n1__1NHNL,.index-module__mx-n1__14Riz{margin-right:-.25rem !important}.index-module__mb-n1__2COD5,.index-module__my-n1__kz_uY{margin-bottom:-.25rem !important}.index-module__ml-n1__2wM_8,.index-module__mx-n1__14Riz{margin-left:-.25rem !important}.index-module__m-n2__1VzlW{margin:-.5rem !important}.index-module__mt-n2___XoWx,.index-module__my-n2__29vLf{margin-top:-.5rem !important}.index-module__mr-n2__w_PMi,.index-module__mx-n2__bNnbe{margin-right:-.5rem !important}.index-module__mb-n2__1WNYR,.index-module__my-n2__29vLf{margin-bottom:-.5rem !important}.index-module__ml-n2__3xsEF,.index-module__mx-n2__bNnbe{margin-left:-.5rem !important}.index-module__m-n3__uO8Ib{margin:-1rem !important}.index-module__mt-n3__1_4sQ,.index-module__my-n3__3U460{margin-top:-1rem !important}.index-module__mr-n3__2VgEm,.index-module__mx-n3__1UFaP{margin-right:-1rem !important}.index-module__mb-n3__19RHK,.index-module__my-n3__3U460{margin-bottom:-1rem !important}.index-module__ml-n3__1sXdk,.index-module__mx-n3__1UFaP{margin-left:-1rem !important}.index-module__m-n4__2YT-u{margin:-1.5rem !important}.index-module__mt-n4__2ipXo,.index-module__my-n4__2L3wJ{margin-top:-1.5rem !important}.index-module__mr-n4__3SiU_,.index-module__mx-n4__a3ZmA{margin-right:-1.5rem !important}.index-module__mb-n4__36HfO,.index-module__my-n4__2L3wJ{margin-bottom:-1.5rem !important}.index-module__ml-n4__s3pL9,.index-module__mx-n4__a3ZmA{margin-left:-1.5rem !important}.index-module__m-n5__1zXc2{margin:-3rem !important}.index-module__mt-n5__quEl_,.index-module__my-n5__3fVUd{margin-top:-3rem !important}.index-module__mr-n5__2oiUc,.index-module__mx-n5__qePd-{margin-right:-3rem !important}.index-module__mb-n5__L4Uae,.index-module__my-n5__3fVUd{margin-bottom:-3rem !important}.index-module__ml-n5__2DqqR,.index-module__mx-n5__qePd-{margin-left:-3rem !important}.index-module__m-auto__dI9nI{margin:auto !important}.index-module__mt-auto__3XA8C,.index-module__my-auto__187En{margin-top:auto !important}.index-module__mr-auto__27KoY,.index-module__mx-auto__17mnR{margin-right:auto !important}.index-module__mb-auto__2H255,.index-module__my-auto__187En{margin-bottom:auto !important}.index-module__ml-auto__1REk7,.index-module__mx-auto__17mnR{margin-left:auto !important}@media (min-width: 576px){.index-module__m-sm-0__UOxaM{margin:0 !important}.index-module__mt-sm-0__2gQ0K,.index-module__my-sm-0__2SUDn{margin-top:0 !important}.index-module__mr-sm-0__Q12to,.index-module__mx-sm-0__20vT3{margin-right:0 !important}.index-module__mb-sm-0__OOHPy,.index-module__my-sm-0__2SUDn{margin-bottom:0 !important}.index-module__ml-sm-0__AUKWP,.index-module__mx-sm-0__20vT3{margin-left:0 !important}.index-module__m-sm-1__1MxFe{margin:.25rem !important}.index-module__mt-sm-1__yWOGf,.index-module__my-sm-1__2N-jx{margin-top:.25rem !important}.index-module__mr-sm-1__3tnYj,.index-module__mx-sm-1__36U93{margin-right:.25rem !important}.index-module__mb-sm-1__102ZE,.index-module__my-sm-1__2N-jx{margin-bottom:.25rem !important}.index-module__ml-sm-1__p0t6e,.index-module__mx-sm-1__36U93{margin-left:.25rem !important}.index-module__m-sm-2__3pD_1{margin:.5rem !important}.index-module__mt-sm-2__2zgHD,.index-module__my-sm-2__xuzYd{margin-top:.5rem !important}.index-module__mr-sm-2__2da9W,.index-module__mx-sm-2__2NmZs{margin-right:.5rem !important}.index-module__mb-sm-2__3a934,.index-module__my-sm-2__xuzYd{margin-bottom:.5rem !important}.index-module__ml-sm-2__39sBO,.index-module__mx-sm-2__2NmZs{margin-left:.5rem !important}.index-module__m-sm-3__1Jrdt{margin:1rem !important}.index-module__mt-sm-3__295No,.index-module__my-sm-3__W0MlH{margin-top:1rem !important}.index-module__mr-sm-3__3Jts6,.index-module__mx-sm-3__17DH5{margin-right:1rem !important}.index-module__mb-sm-3__3ghuC,.index-module__my-sm-3__W0MlH{margin-bottom:1rem !important}.index-module__ml-sm-3__1tCRJ,.index-module__mx-sm-3__17DH5{margin-left:1rem !important}.index-module__m-sm-4__3B-ju{margin:1.5rem !important}.index-module__mt-sm-4__1XjzN,.index-module__my-sm-4__gbDxr{margin-top:1.5rem !important}.index-module__mr-sm-4__2431H,.index-module__mx-sm-4__1Ge7E{margin-right:1.5rem !important}.index-module__mb-sm-4__2IiqN,.index-module__my-sm-4__gbDxr{margin-bottom:1.5rem !important}.index-module__ml-sm-4__1Z5su,.index-module__mx-sm-4__1Ge7E{margin-left:1.5rem !important}.index-module__m-sm-5__10iDU{margin:3rem !important}.index-module__mt-sm-5__1x0ic,.index-module__my-sm-5__xKhQ3{margin-top:3rem !important}.index-module__mr-sm-5__OeP5h,.index-module__mx-sm-5__1tR-u{margin-right:3rem !important}.index-module__mb-sm-5__21BXm,.index-module__my-sm-5__xKhQ3{margin-bottom:3rem !important}.index-module__ml-sm-5__14mlm,.index-module__mx-sm-5__1tR-u{margin-left:3rem !important}.index-module__p-sm-0___dVPi{padding:0 !important}.index-module__pt-sm-0__3GUOK,.index-module__py-sm-0__14r0T{padding-top:0 !important}.index-module__pr-sm-0__2AHr-,.index-module__px-sm-0__2JGxn{padding-right:0 !important}.index-module__pb-sm-0__2mgJa,.index-module__py-sm-0__14r0T{padding-bottom:0 !important}.index-module__pl-sm-0__3jbjV,.index-module__px-sm-0__2JGxn{padding-left:0 !important}.index-module__p-sm-1__2EZMF{padding:.25rem !important}.index-module__pt-sm-1__2plGi,.index-module__py-sm-1__3pnWv{padding-top:.25rem !important}.index-module__pr-sm-1__2L3Ge,.index-module__px-sm-1__3C-dc{padding-right:.25rem !important}.index-module__pb-sm-1__oigIb,.index-module__py-sm-1__3pnWv{padding-bottom:.25rem !important}.index-module__pl-sm-1__RVNGg,.index-module__px-sm-1__3C-dc{padding-left:.25rem !important}.index-module__p-sm-2__1aK5L{padding:.5rem !important}.index-module__pt-sm-2__2GK6S,.index-module__py-sm-2__tE2NK{padding-top:.5rem !important}.index-module__pr-sm-2__1-AjD,.index-module__px-sm-2__1KlDf{padding-right:.5rem !important}.index-module__pb-sm-2__aurHt,.index-module__py-sm-2__tE2NK{padding-bottom:.5rem !important}.index-module__pl-sm-2__1CoNX,.index-module__px-sm-2__1KlDf{padding-left:.5rem !important}.index-module__p-sm-3__1nWcE{padding:1rem !important}.index-module__pt-sm-3__1TSL5,.index-module__py-sm-3__3cVeT{padding-top:1rem !important}.index-module__pr-sm-3__1dCOd,.index-module__px-sm-3__2g26l{padding-right:1rem !important}.index-module__pb-sm-3__PwaR-,.index-module__py-sm-3__3cVeT{padding-bottom:1rem !important}.index-module__pl-sm-3__1aTAU,.index-module__px-sm-3__2g26l{padding-left:1rem !important}.index-module__p-sm-4__3YDMm{padding:1.5rem !important}.index-module__pt-sm-4__3iG51,.index-module__py-sm-4__IsMNy{padding-top:1.5rem !important}.index-module__pr-sm-4__QJPK6,.index-module__px-sm-4__2dKrX{padding-right:1.5rem !important}.index-module__pb-sm-4__i-pVm,.index-module__py-sm-4__IsMNy{padding-bottom:1.5rem !important}.index-module__pl-sm-4__2ttje,.index-module__px-sm-4__2dKrX{padding-left:1.5rem !important}.index-module__p-sm-5__1mMmk{padding:3rem !important}.index-module__pt-sm-5__GByCK,.index-module__py-sm-5__1-UnJ{padding-top:3rem !important}.index-module__pr-sm-5__2rXQa,.index-module__px-sm-5__2fC4g{padding-right:3rem !important}.index-module__pb-sm-5__2mx_C,.index-module__py-sm-5__1-UnJ{padding-bottom:3rem !important}.index-module__pl-sm-5__e7rD8,.index-module__px-sm-5__2fC4g{padding-left:3rem !important}.index-module__m-sm-n1__3Gp2a{margin:-.25rem !important}.index-module__mt-sm-n1__32B7m,.index-module__my-sm-n1__37rh6{margin-top:-.25rem !important}.index-module__mr-sm-n1__3wbn0,.index-module__mx-sm-n1__1Z_8O{margin-right:-.25rem !important}.index-module__mb-sm-n1__3BhoV,.index-module__my-sm-n1__37rh6{margin-bottom:-.25rem !important}.index-module__ml-sm-n1__3SjVT,.index-module__mx-sm-n1__1Z_8O{margin-left:-.25rem !important}.index-module__m-sm-n2__1bK2c{margin:-.5rem !important}.index-module__mt-sm-n2__3ybVY,.index-module__my-sm-n2__3HT7k{margin-top:-.5rem !important}.index-module__mr-sm-n2__CM7aG,.index-module__mx-sm-n2__2X9c_{margin-right:-.5rem !important}.index-module__mb-sm-n2__1a1bZ,.index-module__my-sm-n2__3HT7k{margin-bottom:-.5rem !important}.index-module__ml-sm-n2__1zsa8,.index-module__mx-sm-n2__2X9c_{margin-left:-.5rem !important}.index-module__m-sm-n3__21sAz{margin:-1rem !important}.index-module__mt-sm-n3__36X8y,.index-module__my-sm-n3__3-A9I{margin-top:-1rem !important}.index-module__mr-sm-n3__uuKtu,.index-module__mx-sm-n3__11Xqy{margin-right:-1rem !important}.index-module__mb-sm-n3__rPKJx,.index-module__my-sm-n3__3-A9I{margin-bottom:-1rem !important}.index-module__ml-sm-n3__5i0H_,.index-module__mx-sm-n3__11Xqy{margin-left:-1rem !important}.index-module__m-sm-n4__3i1_p{margin:-1.5rem !important}.index-module__mt-sm-n4__ebkWf,.index-module__my-sm-n4__AK50h{margin-top:-1.5rem !important}.index-module__mr-sm-n4__2k9cY,.index-module__mx-sm-n4__oiX2h{margin-right:-1.5rem !important}.index-module__mb-sm-n4__1bf-0,.index-module__my-sm-n4__AK50h{margin-bottom:-1.5rem !important}.index-module__ml-sm-n4__2QfZ7,.index-module__mx-sm-n4__oiX2h{margin-left:-1.5rem !important}.index-module__m-sm-n5__2dnGS{margin:-3rem !important}.index-module__mt-sm-n5__rp2Sx,.index-module__my-sm-n5__As_bH{margin-top:-3rem !important}.index-module__mr-sm-n5__1TLjR,.index-module__mx-sm-n5__28a4H{margin-right:-3rem !important}.index-module__mb-sm-n5__SGM_V,.index-module__my-sm-n5__As_bH{margin-bottom:-3rem !important}.index-module__ml-sm-n5__2B5Nx,.index-module__mx-sm-n5__28a4H{margin-left:-3rem !important}.index-module__m-sm-auto__285Ue{margin:auto !important}.index-module__mt-sm-auto__3SY_B,.index-module__my-sm-auto__3zVYa{margin-top:auto !important}.index-module__mr-sm-auto__3m1uH,.index-module__mx-sm-auto__1CsDx{margin-right:auto !important}.index-module__mb-sm-auto__2H81k,.index-module__my-sm-auto__3zVYa{margin-bottom:auto !important}.index-module__ml-sm-auto__3PlBs,.index-module__mx-sm-auto__1CsDx{margin-left:auto !important}}@media (min-width: 768px){.index-module__m-md-0__k6-mR{margin:0 !important}.index-module__mt-md-0__1oMw1,.index-module__my-md-0__2A5vs{margin-top:0 !important}.index-module__mr-md-0__2M0kU,.index-module__mx-md-0__ywKd9{margin-right:0 !important}.index-module__mb-md-0__2u8YT,.index-module__my-md-0__2A5vs{margin-bottom:0 !important}.index-module__ml-md-0__2L6Yu,.index-module__mx-md-0__ywKd9{margin-left:0 !important}.index-module__m-md-1__1uqMa{margin:.25rem !important}.index-module__mt-md-1__129F4,.index-module__my-md-1__3rwif{margin-top:.25rem !important}.index-module__mr-md-1__3u0mT,.index-module__mx-md-1__1M8C6{margin-right:.25rem !important}.index-module__mb-md-1__1sN4X,.index-module__my-md-1__3rwif{margin-bottom:.25rem !important}.index-module__ml-md-1__2fkpR,.index-module__mx-md-1__1M8C6{margin-left:.25rem !important}.index-module__m-md-2__I8wp7{margin:.5rem !important}.index-module__mt-md-2__2z8zU,.index-module__my-md-2__2SI64{margin-top:.5rem !important}.index-module__mr-md-2__2klLR,.index-module__mx-md-2__1K3bx{margin-right:.5rem !important}.index-module__mb-md-2__2nkny,.index-module__my-md-2__2SI64{margin-bottom:.5rem !important}.index-module__ml-md-2__1oJFk,.index-module__mx-md-2__1K3bx{margin-left:.5rem !important}.index-module__m-md-3__qO5xs{margin:1rem !important}.index-module__mt-md-3__3vyZP,.index-module__my-md-3__1u3mC{margin-top:1rem !important}.index-module__mr-md-3__3UrxW,.index-module__mx-md-3__4c7OH{margin-right:1rem !important}.index-module__mb-md-3__2xpy7,.index-module__my-md-3__1u3mC{margin-bottom:1rem !important}.index-module__ml-md-3__3T_U-,.index-module__mx-md-3__4c7OH{margin-left:1rem !important}.index-module__m-md-4__2thHI{margin:1.5rem !important}.index-module__mt-md-4__1kbZo,.index-module__my-md-4__eNl4L{margin-top:1.5rem !important}.index-module__mr-md-4__1GpR2,.index-module__mx-md-4__eo4A4{margin-right:1.5rem !important}.index-module__mb-md-4__3x-09,.index-module__my-md-4__eNl4L{margin-bottom:1.5rem !important}.index-module__ml-md-4__O02OL,.index-module__mx-md-4__eo4A4{margin-left:1.5rem !important}.index-module__m-md-5__2KnM2{margin:3rem !important}.index-module__mt-md-5__1Yxze,.index-module__my-md-5__xamyy{margin-top:3rem !important}.index-module__mr-md-5__1t5Mt,.index-module__mx-md-5__2f8-l{margin-right:3rem !important}.index-module__mb-md-5__-AzcE,.index-module__my-md-5__xamyy{margin-bottom:3rem !important}.index-module__ml-md-5__2b3D5,.index-module__mx-md-5__2f8-l{margin-left:3rem !important}.index-module__p-md-0__2891w{padding:0 !important}.index-module__pt-md-0__1GMZ7,.index-module__py-md-0__3tUXv{padding-top:0 !important}.index-module__pr-md-0__3rc_C,.index-module__px-md-0__Q6C4n{padding-right:0 !important}.index-module__pb-md-0__3VtR1,.index-module__py-md-0__3tUXv{padding-bottom:0 !important}.index-module__pl-md-0__laFsD,.index-module__px-md-0__Q6C4n{padding-left:0 !important}.index-module__p-md-1__29Rpd{padding:.25rem !important}.index-module__pt-md-1__1JtaW,.index-module__py-md-1__26upk{padding-top:.25rem !important}.index-module__pr-md-1__3qIBb,.index-module__px-md-1__1RUQF{padding-right:.25rem !important}.index-module__pb-md-1__1D6nW,.index-module__py-md-1__26upk{padding-bottom:.25rem !important}.index-module__pl-md-1__2vAf3,.index-module__px-md-1__1RUQF{padding-left:.25rem !important}.index-module__p-md-2__3S59W{padding:.5rem !important}.index-module__pt-md-2__-QjXC,.index-module__py-md-2__3p7-Z{padding-top:.5rem !important}.index-module__pr-md-2__2R91o,.index-module__px-md-2__dt1D-{padding-right:.5rem !important}.index-module__pb-md-2__3dIsl,.index-module__py-md-2__3p7-Z{padding-bottom:.5rem !important}.index-module__pl-md-2__LYgpO,.index-module__px-md-2__dt1D-{padding-left:.5rem !important}.index-module__p-md-3__3HJKc{padding:1rem !important}.index-module__pt-md-3__W5pI4,.index-module__py-md-3__2BqnX{padding-top:1rem !important}.index-module__pr-md-3__2jRCO,.index-module__px-md-3__1O5BH{padding-right:1rem !important}.index-module__pb-md-3__2O0vh,.index-module__py-md-3__2BqnX{padding-bottom:1rem !important}.index-module__pl-md-3__2CSFh,.index-module__px-md-3__1O5BH{padding-left:1rem !important}.index-module__p-md-4__c7dhP{padding:1.5rem !important}.index-module__pt-md-4__27EVY,.index-module__py-md-4__1BntI{padding-top:1.5rem !important}.index-module__pr-md-4__3H38H,.index-module__px-md-4__o4cnu{padding-right:1.5rem !important}.index-module__pb-md-4__26vru,.index-module__py-md-4__1BntI{padding-bottom:1.5rem !important}.index-module__pl-md-4__2s7e8,.index-module__px-md-4__o4cnu{padding-left:1.5rem !important}.index-module__p-md-5__ZrOzJ{padding:3rem !important}.index-module__pt-md-5__1TXdP,.index-module__py-md-5__3zbsn{padding-top:3rem !important}.index-module__pr-md-5__1raWv,.index-module__px-md-5__2biS5{padding-right:3rem !important}.index-module__pb-md-5__qwDUp,.index-module__py-md-5__3zbsn{padding-bottom:3rem !important}.index-module__pl-md-5__3jLp6,.index-module__px-md-5__2biS5{padding-left:3rem !important}.index-module__m-md-n1__nkxoD{margin:-.25rem !important}.index-module__mt-md-n1__DwjNx,.index-module__my-md-n1__wZZBt{margin-top:-.25rem !important}.index-module__mr-md-n1__zON98,.index-module__mx-md-n1__3UEWe{margin-right:-.25rem !important}.index-module__mb-md-n1__1rQzo,.index-module__my-md-n1__wZZBt{margin-bottom:-.25rem !important}.index-module__ml-md-n1__PHLiP,.index-module__mx-md-n1__3UEWe{margin-left:-.25rem !important}.index-module__m-md-n2__3AcDB{margin:-.5rem !important}.index-module__mt-md-n2__3TeF-,.index-module__my-md-n2__dvNVp{margin-top:-.5rem !important}.index-module__mr-md-n2__9Qsg5,.index-module__mx-md-n2__f6FTY{margin-right:-.5rem !important}.index-module__mb-md-n2__3Armk,.index-module__my-md-n2__dvNVp{margin-bottom:-.5rem !important}.index-module__ml-md-n2__HEAx8,.index-module__mx-md-n2__f6FTY{margin-left:-.5rem !important}.index-module__m-md-n3__qusyy{margin:-1rem !important}.index-module__mt-md-n3__3A9X1,.index-module__my-md-n3__2IL19{margin-top:-1rem !important}.index-module__mr-md-n3__3r8Dm,.index-module__mx-md-n3__t4ZYA{margin-right:-1rem !important}.index-module__mb-md-n3__3M8Tk,.index-module__my-md-n3__2IL19{margin-bottom:-1rem !important}.index-module__ml-md-n3__1aZyg,.index-module__mx-md-n3__t4ZYA{margin-left:-1rem !important}.index-module__m-md-n4__2tW0B{margin:-1.5rem !important}.index-module__mt-md-n4__3voqs,.index-module__my-md-n4__Epsfz{margin-top:-1.5rem !important}.index-module__mr-md-n4__2ZCPw,.index-module__mx-md-n4__1ni40{margin-right:-1.5rem !important}.index-module__mb-md-n4__22vW2,.index-module__my-md-n4__Epsfz{margin-bottom:-1.5rem !important}.index-module__ml-md-n4__1SNAt,.index-module__mx-md-n4__1ni40{margin-left:-1.5rem !important}.index-module__m-md-n5__1SQ2K{margin:-3rem !important}.index-module__mt-md-n5__gpKRF,.index-module__my-md-n5__3prNT{margin-top:-3rem !important}.index-module__mr-md-n5__2jncD,.index-module__mx-md-n5__wgakg{margin-right:-3rem !important}.index-module__mb-md-n5__3QTky,.index-module__my-md-n5__3prNT{margin-bottom:-3rem !important}.index-module__ml-md-n5__bKY0j,.index-module__mx-md-n5__wgakg{margin-left:-3rem !important}.index-module__m-md-auto__Fx8Tj{margin:auto !important}.index-module__mt-md-auto__3UILE,.index-module__my-md-auto__37_se{margin-top:auto !important}.index-module__mr-md-auto__3a3Id,.index-module__mx-md-auto__3eZSL{margin-right:auto !important}.index-module__mb-md-auto__IQQqh,.index-module__my-md-auto__37_se{margin-bottom:auto !important}.index-module__ml-md-auto__2OswT,.index-module__mx-md-auto__3eZSL{margin-left:auto !important}}@media (min-width: 1050px){.index-module__m-lg-0__3T7J6{margin:0 !important}.index-module__mt-lg-0__25ZBB,.index-module__my-lg-0__1b5Sv{margin-top:0 !important}.index-module__mr-lg-0__1riDY,.index-module__mx-lg-0__2brbT{margin-right:0 !important}.index-module__mb-lg-0__1EttO,.index-module__my-lg-0__1b5Sv{margin-bottom:0 !important}.index-module__ml-lg-0__1hR8s,.index-module__mx-lg-0__2brbT{margin-left:0 !important}.index-module__m-lg-1__2LeSK{margin:.25rem !important}.index-module__mt-lg-1__1R9N4,.index-module__my-lg-1__kCESn{margin-top:.25rem !important}.index-module__mr-lg-1__2sgvZ,.index-module__mx-lg-1__3VpjD{margin-right:.25rem !important}.index-module__mb-lg-1__37PHX,.index-module__my-lg-1__kCESn{margin-bottom:.25rem !important}.index-module__ml-lg-1__1larX,.index-module__mx-lg-1__3VpjD{margin-left:.25rem !important}.index-module__m-lg-2__28Sbd{margin:.5rem !important}.index-module__mt-lg-2__1V-hP,.index-module__my-lg-2__EL4e_{margin-top:.5rem !important}.index-module__mr-lg-2__2Yc29,.index-module__mx-lg-2__38i2l{margin-right:.5rem !important}.index-module__mb-lg-2__2aGYE,.index-module__my-lg-2__EL4e_{margin-bottom:.5rem !important}.index-module__ml-lg-2__2LkeK,.index-module__mx-lg-2__38i2l{margin-left:.5rem !important}.index-module__m-lg-3__1PYJs{margin:1rem !important}.index-module__mt-lg-3__1SfOd,.index-module__my-lg-3__3rwD-{margin-top:1rem !important}.index-module__mr-lg-3__15EP3,.index-module__mx-lg-3__3tlXi{margin-right:1rem !important}.index-module__mb-lg-3__3XQYc,.index-module__my-lg-3__3rwD-{margin-bottom:1rem !important}.index-module__ml-lg-3__3iImM,.index-module__mx-lg-3__3tlXi{margin-left:1rem !important}.index-module__m-lg-4__180zk{margin:1.5rem !important}.index-module__mt-lg-4__Z0tDD,.index-module__my-lg-4__1Ox3I{margin-top:1.5rem !important}.index-module__mr-lg-4__3GsdM,.index-module__mx-lg-4__2K7JE{margin-right:1.5rem !important}.index-module__mb-lg-4__3dFoL,.index-module__my-lg-4__1Ox3I{margin-bottom:1.5rem !important}.index-module__ml-lg-4__2B7S8,.index-module__mx-lg-4__2K7JE{margin-left:1.5rem !important}.index-module__m-lg-5__35MbW{margin:3rem !important}.index-module__mt-lg-5__3xcMv,.index-module__my-lg-5__oBFUN{margin-top:3rem !important}.index-module__mr-lg-5__1Uc5T,.index-module__mx-lg-5__2dtA0{margin-right:3rem !important}.index-module__mb-lg-5__3z6xv,.index-module__my-lg-5__oBFUN{margin-bottom:3rem !important}.index-module__ml-lg-5__GIRMN,.index-module__mx-lg-5__2dtA0{margin-left:3rem !important}.index-module__p-lg-0__2x7cr{padding:0 !important}.index-module__pt-lg-0__26i0L,.index-module__py-lg-0__3SXD9{padding-top:0 !important}.index-module__pr-lg-0__MYptK,.index-module__px-lg-0__2R_EL{padding-right:0 !important}.index-module__pb-lg-0__2V-eh,.index-module__py-lg-0__3SXD9{padding-bottom:0 !important}.index-module__pl-lg-0__3myPS,.index-module__px-lg-0__2R_EL{padding-left:0 !important}.index-module__p-lg-1__1UwKW{padding:.25rem !important}.index-module__pt-lg-1__3U9Xq,.index-module__py-lg-1__wCoR4{padding-top:.25rem !important}.index-module__pr-lg-1__1PRZ8,.index-module__px-lg-1__3eEMr{padding-right:.25rem !important}.index-module__pb-lg-1__uOTWQ,.index-module__py-lg-1__wCoR4{padding-bottom:.25rem !important}.index-module__pl-lg-1__gvWko,.index-module__px-lg-1__3eEMr{padding-left:.25rem !important}.index-module__p-lg-2__yW4Au{padding:.5rem !important}.index-module__pt-lg-2__3OiEl,.index-module__py-lg-2__2gSIv{padding-top:.5rem !important}.index-module__pr-lg-2__2FpTd,.index-module__px-lg-2__2g_pD{padding-right:.5rem !important}.index-module__pb-lg-2__1fuq-,.index-module__py-lg-2__2gSIv{padding-bottom:.5rem !important}.index-module__pl-lg-2__19-hq,.index-module__px-lg-2__2g_pD{padding-left:.5rem !important}.index-module__p-lg-3__2iNOi{padding:1rem !important}.index-module__pt-lg-3__1IrlQ,.index-module__py-lg-3__3FX7-{padding-top:1rem !important}.index-module__pr-lg-3__yWkw4,.index-module__px-lg-3__3vPvZ{padding-right:1rem !important}.index-module__pb-lg-3__X2AZw,.index-module__py-lg-3__3FX7-{padding-bottom:1rem !important}.index-module__pl-lg-3__1Lhro,.index-module__px-lg-3__3vPvZ{padding-left:1rem !important}.index-module__p-lg-4__1VZO7{padding:1.5rem !important}.index-module__pt-lg-4__37k36,.index-module__py-lg-4__23l1J{padding-top:1.5rem !important}.index-module__pr-lg-4__3BCp-,.index-module__px-lg-4__3ir8a{padding-right:1.5rem !important}.index-module__pb-lg-4__2CCGg,.index-module__py-lg-4__23l1J{padding-bottom:1.5rem !important}.index-module__pl-lg-4__3taiG,.index-module__px-lg-4__3ir8a{padding-left:1.5rem !important}.index-module__p-lg-5__JG0e2{padding:3rem !important}.index-module__pt-lg-5__3io5d,.index-module__py-lg-5__3ULTT{padding-top:3rem !important}.index-module__pr-lg-5__3H1Pj,.index-module__px-lg-5__17GV_{padding-right:3rem !important}.index-module__pb-lg-5__1CtGg,.index-module__py-lg-5__3ULTT{padding-bottom:3rem !important}.index-module__pl-lg-5__3qovR,.index-module__px-lg-5__17GV_{padding-left:3rem !important}.index-module__m-lg-n1__17lt1{margin:-.25rem !important}.index-module__mt-lg-n1__2Wv8X,.index-module__my-lg-n1__HqUsr{margin-top:-.25rem !important}.index-module__mr-lg-n1__2ykNm,.index-module__mx-lg-n1__Yc0OX{margin-right:-.25rem !important}.index-module__mb-lg-n1__VmbN8,.index-module__my-lg-n1__HqUsr{margin-bottom:-.25rem !important}.index-module__ml-lg-n1__2Aj2M,.index-module__mx-lg-n1__Yc0OX{margin-left:-.25rem !important}.index-module__m-lg-n2__1HU-z{margin:-.5rem !important}.index-module__mt-lg-n2__1MCYW,.index-module__my-lg-n2__18OK2{margin-top:-.5rem !important}.index-module__mr-lg-n2__1Rw-_,.index-module__mx-lg-n2__SvmZo{margin-right:-.5rem !important}.index-module__mb-lg-n2__W7lfv,.index-module__my-lg-n2__18OK2{margin-bottom:-.5rem !important}.index-module__ml-lg-n2__231O_,.index-module__mx-lg-n2__SvmZo{margin-left:-.5rem !important}.index-module__m-lg-n3__qmMJ6{margin:-1rem !important}.index-module__mt-lg-n3__3PtWE,.index-module__my-lg-n3__3qKZd{margin-top:-1rem !important}.index-module__mr-lg-n3__2ozPT,.index-module__mx-lg-n3__3MPI4{margin-right:-1rem !important}.index-module__mb-lg-n3__1r3HE,.index-module__my-lg-n3__3qKZd{margin-bottom:-1rem !important}.index-module__ml-lg-n3__2RALR,.index-module__mx-lg-n3__3MPI4{margin-left:-1rem !important}.index-module__m-lg-n4__2aDSY{margin:-1.5rem !important}.index-module__mt-lg-n4__39eZ2,.index-module__my-lg-n4__CMs-5{margin-top:-1.5rem !important}.index-module__mr-lg-n4__1Ggmm,.index-module__mx-lg-n4__34JLH{margin-right:-1.5rem !important}.index-module__mb-lg-n4__1ouBW,.index-module__my-lg-n4__CMs-5{margin-bottom:-1.5rem !important}.index-module__ml-lg-n4__r0YL9,.index-module__mx-lg-n4__34JLH{margin-left:-1.5rem !important}.index-module__m-lg-n5__Pw0Hb{margin:-3rem !important}.index-module__mt-lg-n5__3PiR6,.index-module__my-lg-n5__2NYNI{margin-top:-3rem !important}.index-module__mr-lg-n5__1RLgJ,.index-module__mx-lg-n5__etUHt{margin-right:-3rem !important}.index-module__mb-lg-n5__3VW2-,.index-module__my-lg-n5__2NYNI{margin-bottom:-3rem !important}.index-module__ml-lg-n5__FbleI,.index-module__mx-lg-n5__etUHt{margin-left:-3rem !important}.index-module__m-lg-auto__2NxP5{margin:auto !important}.index-module__mt-lg-auto__1V8a9,.index-module__my-lg-auto__11YSe{margin-top:auto !important}.index-module__mr-lg-auto__3niDw,.index-module__mx-lg-auto__2_6oa{margin-right:auto !important}.index-module__mb-lg-auto__1vkK1,.index-module__my-lg-auto__11YSe{margin-bottom:auto !important}.index-module__ml-lg-auto__pXOTq,.index-module__mx-lg-auto__2_6oa{margin-left:auto !important}}@media (min-width: 1500px){.index-module__m-xl-0__3Gqrr{margin:0 !important}.index-module__mt-xl-0__1iy-Y,.index-module__my-xl-0__2PC1S{margin-top:0 !important}.index-module__mr-xl-0__1ZH9J,.index-module__mx-xl-0__3qTGn{margin-right:0 !important}.index-module__mb-xl-0__3DTHu,.index-module__my-xl-0__2PC1S{margin-bottom:0 !important}.index-module__ml-xl-0__3f_2o,.index-module__mx-xl-0__3qTGn{margin-left:0 !important}.index-module__m-xl-1__191yL{margin:.25rem !important}.index-module__mt-xl-1__1diZ-,.index-module__my-xl-1__1nasP{margin-top:.25rem !important}.index-module__mr-xl-1__1Hdkz,.index-module__mx-xl-1__j9ocB{margin-right:.25rem !important}.index-module__mb-xl-1__qDH_Q,.index-module__my-xl-1__1nasP{margin-bottom:.25rem !important}.index-module__ml-xl-1__NMfWb,.index-module__mx-xl-1__j9ocB{margin-left:.25rem !important}.index-module__m-xl-2__1-64O{margin:.5rem !important}.index-module__mt-xl-2__2rTIS,.index-module__my-xl-2___baH5{margin-top:.5rem !important}.index-module__mr-xl-2__3rtZG,.index-module__mx-xl-2__5bcfp{margin-right:.5rem !important}.index-module__mb-xl-2__3C-4S,.index-module__my-xl-2___baH5{margin-bottom:.5rem !important}.index-module__ml-xl-2__amJlf,.index-module__mx-xl-2__5bcfp{margin-left:.5rem !important}.index-module__m-xl-3__3M9e7{margin:1rem !important}.index-module__mt-xl-3__3_gKw,.index-module__my-xl-3__ZqHO-{margin-top:1rem !important}.index-module__mr-xl-3__3RDKf,.index-module__mx-xl-3__2YlLZ{margin-right:1rem !important}.index-module__mb-xl-3__3UM0-,.index-module__my-xl-3__ZqHO-{margin-bottom:1rem !important}.index-module__ml-xl-3__1mlcO,.index-module__mx-xl-3__2YlLZ{margin-left:1rem !important}.index-module__m-xl-4__3Jgrm{margin:1.5rem !important}.index-module__mt-xl-4__3Xkpk,.index-module__my-xl-4__3BWId{margin-top:1.5rem !important}.index-module__mr-xl-4__3sovC,.index-module__mx-xl-4__2FXVK{margin-right:1.5rem !important}.index-module__mb-xl-4__3Qgr7,.index-module__my-xl-4__3BWId{margin-bottom:1.5rem !important}.index-module__ml-xl-4__383Jl,.index-module__mx-xl-4__2FXVK{margin-left:1.5rem !important}.index-module__m-xl-5__yPj32{margin:3rem !important}.index-module__mt-xl-5__1k9NI,.index-module__my-xl-5__WKMgM{margin-top:3rem !important}.index-module__mr-xl-5__3PfiN,.index-module__mx-xl-5__3IAef{margin-right:3rem !important}.index-module__mb-xl-5__2odD5,.index-module__my-xl-5__WKMgM{margin-bottom:3rem !important}.index-module__ml-xl-5__2teD9,.index-module__mx-xl-5__3IAef{margin-left:3rem !important}.index-module__p-xl-0__1d4FO{padding:0 !important}.index-module__pt-xl-0__32AIP,.index-module__py-xl-0__FWpmt{padding-top:0 !important}.index-module__pr-xl-0__2SBXj,.index-module__px-xl-0__2SfmW{padding-right:0 !important}.index-module__pb-xl-0__20KgZ,.index-module__py-xl-0__FWpmt{padding-bottom:0 !important}.index-module__pl-xl-0__2Gif4,.index-module__px-xl-0__2SfmW{padding-left:0 !important}.index-module__p-xl-1__1qH2j{padding:.25rem !important}.index-module__pt-xl-1__3bMZl,.index-module__py-xl-1__qL0Gg{padding-top:.25rem !important}.index-module__pr-xl-1__3eNOZ,.index-module__px-xl-1__3KSs_{padding-right:.25rem !important}.index-module__pb-xl-1__2_2Vg,.index-module__py-xl-1__qL0Gg{padding-bottom:.25rem !important}.index-module__pl-xl-1__3ive0,.index-module__px-xl-1__3KSs_{padding-left:.25rem !important}.index-module__p-xl-2__SNtxJ{padding:.5rem !important}.index-module__pt-xl-2__2QVyR,.index-module__py-xl-2__RvZnJ{padding-top:.5rem !important}.index-module__pr-xl-2__1cCS4,.index-module__px-xl-2__15Zoi{padding-right:.5rem !important}.index-module__pb-xl-2__1ym5V,.index-module__py-xl-2__RvZnJ{padding-bottom:.5rem !important}.index-module__pl-xl-2__2S143,.index-module__px-xl-2__15Zoi{padding-left:.5rem !important}.index-module__p-xl-3__LWU29{padding:1rem !important}.index-module__pt-xl-3__vY-Uh,.index-module__py-xl-3__gO_A6{padding-top:1rem !important}.index-module__pr-xl-3__5zqXh,.index-module__px-xl-3__13xDt{padding-right:1rem !important}.index-module__pb-xl-3__UBCtI,.index-module__py-xl-3__gO_A6{padding-bottom:1rem !important}.index-module__pl-xl-3__2aqpE,.index-module__px-xl-3__13xDt{padding-left:1rem !important}.index-module__p-xl-4__p-Hh9{padding:1.5rem !important}.index-module__pt-xl-4__1QNaH,.index-module__py-xl-4__3tt-J{padding-top:1.5rem !important}.index-module__pr-xl-4__eVSHY,.index-module__px-xl-4__1d0vx{padding-right:1.5rem !important}.index-module__pb-xl-4__ZhcQ-,.index-module__py-xl-4__3tt-J{padding-bottom:1.5rem !important}.index-module__pl-xl-4__1shLR,.index-module__px-xl-4__1d0vx{padding-left:1.5rem !important}.index-module__p-xl-5__tIsj4{padding:3rem !important}.index-module__pt-xl-5__ySliu,.index-module__py-xl-5__3D1lu{padding-top:3rem !important}.index-module__pr-xl-5__2Pn8o,.index-module__px-xl-5__3zY2B{padding-right:3rem !important}.index-module__pb-xl-5__36F0Y,.index-module__py-xl-5__3D1lu{padding-bottom:3rem !important}.index-module__pl-xl-5__1xQXN,.index-module__px-xl-5__3zY2B{padding-left:3rem !important}.index-module__m-xl-n1__1bBxe{margin:-.25rem !important}.index-module__mt-xl-n1__q2fF_,.index-module__my-xl-n1__3awq7{margin-top:-.25rem !important}.index-module__mr-xl-n1__OPVGr,.index-module__mx-xl-n1__1KRsq{margin-right:-.25rem !important}.index-module__mb-xl-n1__2hrRo,.index-module__my-xl-n1__3awq7{margin-bottom:-.25rem !important}.index-module__ml-xl-n1__e960N,.index-module__mx-xl-n1__1KRsq{margin-left:-.25rem !important}.index-module__m-xl-n2__2WByY{margin:-.5rem !important}.index-module__mt-xl-n2__1jaUu,.index-module__my-xl-n2__XEBif{margin-top:-.5rem !important}.index-module__mr-xl-n2__2XyrX,.index-module__mx-xl-n2__3Pd9U{margin-right:-.5rem !important}.index-module__mb-xl-n2__1nwzO,.index-module__my-xl-n2__XEBif{margin-bottom:-.5rem !important}.index-module__ml-xl-n2__1ZqbO,.index-module__mx-xl-n2__3Pd9U{margin-left:-.5rem !important}.index-module__m-xl-n3__mx9AY{margin:-1rem !important}.index-module__mt-xl-n3__2Z8VV,.index-module__my-xl-n3__2iVzY{margin-top:-1rem !important}.index-module__mr-xl-n3__1kSTw,.index-module__mx-xl-n3__1S3cN{margin-right:-1rem !important}.index-module__mb-xl-n3__xPqFI,.index-module__my-xl-n3__2iVzY{margin-bottom:-1rem !important}.index-module__ml-xl-n3__4Mbxg,.index-module__mx-xl-n3__1S3cN{margin-left:-1rem !important}.index-module__m-xl-n4__1BPVM{margin:-1.5rem !important}.index-module__mt-xl-n4__HvJrp,.index-module__my-xl-n4__2Io7J{margin-top:-1.5rem !important}.index-module__mr-xl-n4__1PDbI,.index-module__mx-xl-n4__whjCM{margin-right:-1.5rem !important}.index-module__mb-xl-n4__emYZx,.index-module__my-xl-n4__2Io7J{margin-bottom:-1.5rem !important}.index-module__ml-xl-n4__1rjF_,.index-module__mx-xl-n4__whjCM{margin-left:-1.5rem !important}.index-module__m-xl-n5__2QTsr{margin:-3rem !important}.index-module__mt-xl-n5__3p-mS,.index-module__my-xl-n5__rPHSb{margin-top:-3rem !important}.index-module__mr-xl-n5__Q_XT6,.index-module__mx-xl-n5__39imV{margin-right:-3rem !important}.index-module__mb-xl-n5__UNne0,.index-module__my-xl-n5__rPHSb{margin-bottom:-3rem !important}.index-module__ml-xl-n5__kOh2L,.index-module__mx-xl-n5__39imV{margin-left:-3rem !important}.index-module__m-xl-auto__1bgul{margin:auto !important}.index-module__mt-xl-auto__3ceJb,.index-module__my-xl-auto__1RaL5{margin-top:auto !important}.index-module__mr-xl-auto__hSkNd,.index-module__mx-xl-auto__OfxLc{margin-right:auto !important}.index-module__mb-xl-auto__2sj2U,.index-module__my-xl-auto__1RaL5{margin-bottom:auto !important}.index-module__ml-xl-auto__3R4ut,.index-module__mx-xl-auto__OfxLc{margin-left:auto !important}}.index-module__text-monospace__3ZXs-{font-family:SFMono-Regular,Menlo,Monaco,Consolas,\\\"Liberation Mono\\\",\\\"Courier New\\\",monospace !important}.index-module__text-justify__2spY7{text-align:justify !important}.index-module__text-wrap__3Wa1N{white-space:normal !important}.index-module__text-nowrap__3xkV3{white-space:nowrap !important}.index-module__text-truncate__22MRW{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.index-module__text-left__11_ZM{text-align:left !important}.index-module__text-right__FqdFY{text-align:right !important}.index-module__text-center__3iiMv{text-align:center !important}@media (min-width: 576px){.index-module__text-sm-left__1pkTf{text-align:left !important}.index-module__text-sm-right__30jGp{text-align:right !important}.index-module__text-sm-center__53AB2{text-align:center !important}}@media (min-width: 768px){.index-module__text-md-left__3yZXO{text-align:left !important}.index-module__text-md-right__3yuQO{text-align:right !important}.index-module__text-md-center__cEURs{text-align:center !important}}@media (min-width: 1050px){.index-module__text-lg-left__2Vfpj{text-align:left !important}.index-module__text-lg-right__bujyR{text-align:right !important}.index-module__text-lg-center__1eVzC{text-align:center !important}}@media (min-width: 1500px){.index-module__text-xl-left__LKIeb{text-align:left !important}.index-module__text-xl-right__1fk69{text-align:right !important}.index-module__text-xl-center__2kKVr{text-align:center !important}}.index-module__text-lowercase__M6z0E{text-transform:lowercase !important}.index-module__text-uppercase__1D_mE{text-transform:uppercase !important}.index-module__text-capitalize__3ToM5{text-transform:capitalize !important}.index-module__font-weight-light__19Y8d{font-weight:300 !important}.index-module__font-weight-lighter__295eW{font-weight:lighter !important}.index-module__font-weight-normal__30d4r{font-weight:400 !important}.index-module__font-weight-bold__gRJLY{font-weight:700 !important}.index-module__font-weight-bolder__1aEyc{font-weight:bolder !important}.index-module__font-italic__3-ciA{font-style:italic !important}.index-module__text-white__oWH4J{color:#fff !important}.index-module__text-primary__2S_iJ{color:#0968c3 !important}a.index-module__text-primary__2S_iJ:hover,a.index-module__text-primary__2S_iJ:focus{color:#06417a !important}.index-module__text-secondary__1pubE{color:gray !important}a.index-module__text-secondary__1pubE:hover,a.index-module__text-secondary__1pubE:focus{color:#5a5a5a !important}.index-module__text-success__3wGJG{color:#28a745 !important}a.index-module__text-success__3wGJG:hover,a.index-module__text-success__3wGJG:focus{color:#19692c !important}.index-module__text-info__2prMR{color:#17a2b8 !important}a.index-module__text-info__2prMR:hover,a.index-module__text-info__2prMR:focus{color:#0f6674 !important}.index-module__text-warning__2y3LD{color:#ffc107 !important}a.index-module__text-warning__2y3LD:hover,a.index-module__text-warning__2y3LD:focus{color:#ba8b00 !important}.index-module__text-danger__3rX-z{color:#dc3545 !important}a.index-module__text-danger__3rX-z:hover,a.index-module__text-danger__3rX-z:focus{color:#a71d2a !important}.index-module__text-light__1oIH9{color:#f8f9fa !important}a.index-module__text-light__1oIH9:hover,a.index-module__text-light__1oIH9:focus{color:#cbd3da !important}.index-module__text-dark__12Db9{color:#343a40 !important}a.index-module__text-dark__12Db9:hover,a.index-module__text-dark__12Db9:focus{color:#121416 !important}.index-module__text-body__12vhI{color:#212529 !important}.index-module__text-muted__1fgqt{color:#6c757d !important}.index-module__text-black-50__1a8Py{color:rgba(0,0,0,0.5) !important}.index-module__text-white-50__2Fg8k{color:rgba(255,255,255,0.5) !important}.index-module__text-hide__1wLlz{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.index-module__text-decoration-none__PrbYu{text-decoration:none !important}.index-module__text-break__1BJUB{word-break:break-word !important;overflow-wrap:break-word !important}.index-module__text-reset__2ZOg1{color:inherit !important}.index-module__visible__26FEw{visibility:visible !important}.index-module__invisible__7u005{visibility:hidden !important}@media print{*,*::before,*::after{text-shadow:none !important;box-shadow:none !important}a:not(.index-module__btn__1Pcdf){text-decoration:underline}abbr[title]::after{content:\\\" (\\\" attr(title) \\\")\\\"}pre{white-space:pre-wrap !important}pre,blockquote{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}tr,img{page-break-inside:avoid}p,h2,h3{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}body{min-width:1050px !important}.index-module__container__wQ7Ga{min-width:1050px !important}.index-module__navbar__38ZzD{display:none}.index-module__badge__3XyDs{border:1px solid #000}.index-module__table__2mYYw{border-collapse:collapse !important}.index-module__table__2mYYw td,.index-module__table__2mYYw th{background-color:#fff !important}.index-module__table-bordered__19nzh th,.index-module__table-bordered__19nzh td{border:1px solid #dee2e6 !important}.index-module__table-dark__xEdoZ{color:inherit}.index-module__table-dark__xEdoZ th,.index-module__table-dark__xEdoZ td,.index-module__table-dark__xEdoZ thead th,.index-module__table-dark__xEdoZ tbody+tbody{border-color:#dee2e6}.index-module__table__2mYYw .index-module__thead-dark__wbYfA th{color:inherit;border-color:#dee2e6}}.index-module__btnLinkText__3tE8k:hover{cursor:pointer}.index-module__linkOutText__2nCIa{color:#0968c3;cursor:pointer}.index-module__linkOutText__2nCIa:hover{text-decoration:underline}.index-module__biggerText__3874w{font-size:1.2rem}.RRT__tab{z-index:0 !important}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"h1\": \"index-module__h1__2Zs1c\",\n\t\"h2\": \"index-module__h2__2tzij\",\n\t\"h3\": \"index-module__h3__2QXT1\",\n\t\"h4\": \"index-module__h4__2L2El\",\n\t\"h5\": \"index-module__h5__ElCx4\",\n\t\"h6\": \"index-module__h6__1VvV-\",\n\t\"lead\": \"index-module__lead__20NIT\",\n\t\"display-1\": \"index-module__display-1__2iZX-\",\n\t\"display-2\": \"index-module__display-2__1eRGE\",\n\t\"display-3\": \"index-module__display-3__3EPgn\",\n\t\"display-4\": \"index-module__display-4__1e8hN\",\n\t\"small\": \"index-module__small__1CGb3\",\n\t\"mark\": \"index-module__mark__3c8s9\",\n\t\"list-unstyled\": \"index-module__list-unstyled__1__6D\",\n\t\"list-inline\": \"index-module__list-inline__ZlCfG\",\n\t\"list-inline-item\": \"index-module__list-inline-item__2ONHP\",\n\t\"initialism\": \"index-module__initialism__3Gvp6\",\n\t\"blockquote\": \"index-module__blockquote__3xDQX\",\n\t\"blockquote-footer\": \"index-module__blockquote-footer__6lW1r\",\n\t\"img-fluid\": \"index-module__img-fluid__3UAXz\",\n\t\"img-thumbnail\": \"index-module__img-thumbnail__3FAxg\",\n\t\"figure\": \"index-module__figure__1vy1E\",\n\t\"figure-img\": \"index-module__figure-img__uTv_m\",\n\t\"figure-caption\": \"index-module__figure-caption__rW8q7\",\n\t\"pre-scrollable\": \"index-module__pre-scrollable__1jAPn\",\n\t\"container\": \"index-module__container__wQ7Ga\",\n\t\"container-fluid\": \"index-module__container-fluid__3sxsA\",\n\t\"container-xl\": \"index-module__container-xl__2xcz3\",\n\t\"container-sm\": \"index-module__container-sm__3Ee-h\",\n\t\"container-md\": \"index-module__container-md__3z7wM\",\n\t\"container-lg\": \"index-module__container-lg__dGDu9\",\n\t\"row\": \"index-module__row__1pqLN\",\n\t\"no-gutters\": \"index-module__no-gutters__jNVn5\",\n\t\"col\": \"index-module__col__M-EJO\",\n\t\"col-1\": \"index-module__col-1__3EtkG\",\n\t\"col-2\": \"index-module__col-2__1Ji3Q\",\n\t\"col-3\": \"index-module__col-3__2UA1d\",\n\t\"col-4\": \"index-module__col-4__1kTx2\",\n\t\"col-5\": \"index-module__col-5__6HRRD\",\n\t\"col-6\": \"index-module__col-6__2G0my\",\n\t\"col-7\": \"index-module__col-7__1K7hc\",\n\t\"col-8\": \"index-module__col-8__3iQYg\",\n\t\"col-9\": \"index-module__col-9__gh4pM\",\n\t\"col-10\": \"index-module__col-10__2nn8g\",\n\t\"col-11\": \"index-module__col-11__2cmlT\",\n\t\"col-12\": \"index-module__col-12__1oNnb\",\n\t\"col-auto\": \"index-module__col-auto__yXSBd\",\n\t\"col-sm-1\": \"index-module__col-sm-1__21fLV\",\n\t\"col-sm-2\": \"index-module__col-sm-2__1WMhV\",\n\t\"col-sm-3\": \"index-module__col-sm-3__dnAOF\",\n\t\"col-sm-4\": \"index-module__col-sm-4__yWZeA\",\n\t\"col-sm-5\": \"index-module__col-sm-5__2uvYE\",\n\t\"col-sm-6\": \"index-module__col-sm-6__2K5yk\",\n\t\"col-sm-7\": \"index-module__col-sm-7__6EhtA\",\n\t\"col-sm-8\": \"index-module__col-sm-8__2xVr3\",\n\t\"col-sm-9\": \"index-module__col-sm-9__2RoxH\",\n\t\"col-sm-10\": \"index-module__col-sm-10__1lfeN\",\n\t\"col-sm-11\": \"index-module__col-sm-11__2-M_b\",\n\t\"col-sm-12\": \"index-module__col-sm-12__AeBQW\",\n\t\"col-sm\": \"index-module__col-sm__1bHan\",\n\t\"col-sm-auto\": \"index-module__col-sm-auto__36eLe\",\n\t\"col-md-1\": \"index-module__col-md-1__20ZRz\",\n\t\"col-md-2\": \"index-module__col-md-2__1ZxnM\",\n\t\"col-md-3\": \"index-module__col-md-3__1RFP1\",\n\t\"col-md-4\": \"index-module__col-md-4__u0MPK\",\n\t\"col-md-5\": \"index-module__col-md-5__8GuET\",\n\t\"col-md-6\": \"index-module__col-md-6__205rr\",\n\t\"col-md-7\": \"index-module__col-md-7__2EBei\",\n\t\"col-md-8\": \"index-module__col-md-8__aXRZd\",\n\t\"col-md-9\": \"index-module__col-md-9__2kIRW\",\n\t\"col-md-10\": \"index-module__col-md-10__2F-ST\",\n\t\"col-md-11\": \"index-module__col-md-11__9avAX\",\n\t\"col-md-12\": \"index-module__col-md-12__cOK1_\",\n\t\"col-md\": \"index-module__col-md__wSRc4\",\n\t\"col-md-auto\": \"index-module__col-md-auto__2XmM6\",\n\t\"col-lg-1\": \"index-module__col-lg-1__1WRTf\",\n\t\"col-lg-2\": \"index-module__col-lg-2__2QXX6\",\n\t\"col-lg-3\": \"index-module__col-lg-3__10Yit\",\n\t\"col-lg-4\": \"index-module__col-lg-4__2URwl\",\n\t\"col-lg-5\": \"index-module__col-lg-5__1rcZ5\",\n\t\"col-lg-6\": \"index-module__col-lg-6__340kS\",\n\t\"col-lg-7\": \"index-module__col-lg-7__3XN2d\",\n\t\"col-lg-8\": \"index-module__col-lg-8__2z5v1\",\n\t\"col-lg-9\": \"index-module__col-lg-9__11qNT\",\n\t\"col-lg-10\": \"index-module__col-lg-10__2c-nH\",\n\t\"col-lg-11\": \"index-module__col-lg-11__2t9Kt\",\n\t\"col-lg-12\": \"index-module__col-lg-12__f7DC3\",\n\t\"col-lg\": \"index-module__col-lg__3C8hZ\",\n\t\"col-lg-auto\": \"index-module__col-lg-auto__1UHMo\",\n\t\"col-xl-1\": \"index-module__col-xl-1__2Lis_\",\n\t\"col-xl-2\": \"index-module__col-xl-2__JsJ8O\",\n\t\"col-xl-3\": \"index-module__col-xl-3__190_R\",\n\t\"col-xl-4\": \"index-module__col-xl-4__1agfc\",\n\t\"col-xl-5\": \"index-module__col-xl-5__14dbP\",\n\t\"col-xl-6\": \"index-module__col-xl-6__2oN46\",\n\t\"col-xl-7\": \"index-module__col-xl-7__2TaVu\",\n\t\"col-xl-8\": \"index-module__col-xl-8__2nxJe\",\n\t\"col-xl-9\": \"index-module__col-xl-9__2J_oe\",\n\t\"col-xl-10\": \"index-module__col-xl-10__1WIsZ\",\n\t\"col-xl-11\": \"index-module__col-xl-11__8vCtv\",\n\t\"col-xl-12\": \"index-module__col-xl-12__j8Z45\",\n\t\"col-xl\": \"index-module__col-xl__3fe9S\",\n\t\"col-xl-auto\": \"index-module__col-xl-auto__xiWvz\",\n\t\"row-cols-1\": \"index-module__row-cols-1__1FNb7\",\n\t\"row-cols-2\": \"index-module__row-cols-2__1dZ3Z\",\n\t\"row-cols-3\": \"index-module__row-cols-3__1wzbO\",\n\t\"row-cols-4\": \"index-module__row-cols-4__PZjhq\",\n\t\"row-cols-5\": \"index-module__row-cols-5__17JUr\",\n\t\"row-cols-6\": \"index-module__row-cols-6__2NDhK\",\n\t\"order-first\": \"index-module__order-first__3Hs9V\",\n\t\"order-last\": \"index-module__order-last__r4HE7\",\n\t\"order-0\": \"index-module__order-0__MtWed\",\n\t\"order-1\": \"index-module__order-1__2pN5P\",\n\t\"order-2\": \"index-module__order-2__p7x5Y\",\n\t\"order-3\": \"index-module__order-3__H2pK4\",\n\t\"order-4\": \"index-module__order-4__2_k5C\",\n\t\"order-5\": \"index-module__order-5__owHHG\",\n\t\"order-6\": \"index-module__order-6__3joV0\",\n\t\"order-7\": \"index-module__order-7__1DjJj\",\n\t\"order-8\": \"index-module__order-8__1fb-T\",\n\t\"order-9\": \"index-module__order-9__1iRmq\",\n\t\"order-10\": \"index-module__order-10__1jqSX\",\n\t\"order-11\": \"index-module__order-11__296eF\",\n\t\"order-12\": \"index-module__order-12__33UoU\",\n\t\"offset-1\": \"index-module__offset-1__1jBB6\",\n\t\"offset-2\": \"index-module__offset-2__3KiQn\",\n\t\"offset-3\": \"index-module__offset-3__1devQ\",\n\t\"offset-4\": \"index-module__offset-4__1r0Gx\",\n\t\"offset-5\": \"index-module__offset-5__3TkPh\",\n\t\"offset-6\": \"index-module__offset-6__waww2\",\n\t\"offset-7\": \"index-module__offset-7__XJZKj\",\n\t\"offset-8\": \"index-module__offset-8__yFcro\",\n\t\"offset-9\": \"index-module__offset-9__2qRCz\",\n\t\"offset-10\": \"index-module__offset-10__3w12u\",\n\t\"offset-11\": \"index-module__offset-11__1feHx\",\n\t\"row-cols-sm-1\": \"index-module__row-cols-sm-1__EAeZk\",\n\t\"row-cols-sm-2\": \"index-module__row-cols-sm-2__3qKY4\",\n\t\"row-cols-sm-3\": \"index-module__row-cols-sm-3__EkRaa\",\n\t\"row-cols-sm-4\": \"index-module__row-cols-sm-4__26Eq7\",\n\t\"row-cols-sm-5\": \"index-module__row-cols-sm-5__2hyKt\",\n\t\"row-cols-sm-6\": \"index-module__row-cols-sm-6__28kwq\",\n\t\"order-sm-first\": \"index-module__order-sm-first__3CRIx\",\n\t\"order-sm-last\": \"index-module__order-sm-last__34cnT\",\n\t\"order-sm-0\": \"index-module__order-sm-0__3CqE9\",\n\t\"order-sm-1\": \"index-module__order-sm-1__gG3Wl\",\n\t\"order-sm-2\": \"index-module__order-sm-2__Jwmp3\",\n\t\"order-sm-3\": \"index-module__order-sm-3__7rddC\",\n\t\"order-sm-4\": \"index-module__order-sm-4__2cnRd\",\n\t\"order-sm-5\": \"index-module__order-sm-5__3CXUD\",\n\t\"order-sm-6\": \"index-module__order-sm-6__qkxzU\",\n\t\"order-sm-7\": \"index-module__order-sm-7__1KjcE\",\n\t\"order-sm-8\": \"index-module__order-sm-8__8Z5te\",\n\t\"order-sm-9\": \"index-module__order-sm-9__20rLk\",\n\t\"order-sm-10\": \"index-module__order-sm-10__2XDt6\",\n\t\"order-sm-11\": \"index-module__order-sm-11__maEOj\",\n\t\"order-sm-12\": \"index-module__order-sm-12__2wOJ7\",\n\t\"offset-sm-0\": \"index-module__offset-sm-0__1mRif\",\n\t\"offset-sm-1\": \"index-module__offset-sm-1__3eZx2\",\n\t\"offset-sm-2\": \"index-module__offset-sm-2__2G39Y\",\n\t\"offset-sm-3\": \"index-module__offset-sm-3__2YZgj\",\n\t\"offset-sm-4\": \"index-module__offset-sm-4__2hWHR\",\n\t\"offset-sm-5\": \"index-module__offset-sm-5__3XV2_\",\n\t\"offset-sm-6\": \"index-module__offset-sm-6__2xOhx\",\n\t\"offset-sm-7\": \"index-module__offset-sm-7__2dC9_\",\n\t\"offset-sm-8\": \"index-module__offset-sm-8__3l86r\",\n\t\"offset-sm-9\": \"index-module__offset-sm-9__3YD9L\",\n\t\"offset-sm-10\": \"index-module__offset-sm-10__K4DWR\",\n\t\"offset-sm-11\": \"index-module__offset-sm-11__p4eoy\",\n\t\"row-cols-md-1\": \"index-module__row-cols-md-1__7AtEw\",\n\t\"row-cols-md-2\": \"index-module__row-cols-md-2__KRZxm\",\n\t\"row-cols-md-3\": \"index-module__row-cols-md-3__2ne1G\",\n\t\"row-cols-md-4\": \"index-module__row-cols-md-4__KOA7x\",\n\t\"row-cols-md-5\": \"index-module__row-cols-md-5__16MPN\",\n\t\"row-cols-md-6\": \"index-module__row-cols-md-6__32ABs\",\n\t\"order-md-first\": \"index-module__order-md-first__y1RDE\",\n\t\"order-md-last\": \"index-module__order-md-last__309lS\",\n\t\"order-md-0\": \"index-module__order-md-0__4GzqG\",\n\t\"order-md-1\": \"index-module__order-md-1__Ca0bZ\",\n\t\"order-md-2\": \"index-module__order-md-2__2WTS1\",\n\t\"order-md-3\": \"index-module__order-md-3__1MozB\",\n\t\"order-md-4\": \"index-module__order-md-4__2sPkt\",\n\t\"order-md-5\": \"index-module__order-md-5__26pQx\",\n\t\"order-md-6\": \"index-module__order-md-6__2aJ3K\",\n\t\"order-md-7\": \"index-module__order-md-7__3YjS3\",\n\t\"order-md-8\": \"index-module__order-md-8__dXyhh\",\n\t\"order-md-9\": \"index-module__order-md-9__YZbiF\",\n\t\"order-md-10\": \"index-module__order-md-10__fJ2MW\",\n\t\"order-md-11\": \"index-module__order-md-11__3ckIW\",\n\t\"order-md-12\": \"index-module__order-md-12__26qoU\",\n\t\"offset-md-0\": \"index-module__offset-md-0__ya-Ay\",\n\t\"offset-md-1\": \"index-module__offset-md-1__1ONaS\",\n\t\"offset-md-2\": \"index-module__offset-md-2__11nqL\",\n\t\"offset-md-3\": \"index-module__offset-md-3__DfIUA\",\n\t\"offset-md-4\": \"index-module__offset-md-4__rCDkk\",\n\t\"offset-md-5\": \"index-module__offset-md-5__1v40f\",\n\t\"offset-md-6\": \"index-module__offset-md-6__2cqe1\",\n\t\"offset-md-7\": \"index-module__offset-md-7__3gplN\",\n\t\"offset-md-8\": \"index-module__offset-md-8__1Q-gh\",\n\t\"offset-md-9\": \"index-module__offset-md-9__3gDzw\",\n\t\"offset-md-10\": \"index-module__offset-md-10__3AHhr\",\n\t\"offset-md-11\": \"index-module__offset-md-11__2QhYH\",\n\t\"row-cols-lg-1\": \"index-module__row-cols-lg-1__3p819\",\n\t\"row-cols-lg-2\": \"index-module__row-cols-lg-2__2kjN1\",\n\t\"row-cols-lg-3\": \"index-module__row-cols-lg-3__3MnS3\",\n\t\"row-cols-lg-4\": \"index-module__row-cols-lg-4__2T0BO\",\n\t\"row-cols-lg-5\": \"index-module__row-cols-lg-5__mtJXe\",\n\t\"row-cols-lg-6\": \"index-module__row-cols-lg-6__ZDtK3\",\n\t\"order-lg-first\": \"index-module__order-lg-first__1jFrp\",\n\t\"order-lg-last\": \"index-module__order-lg-last__1uwuT\",\n\t\"order-lg-0\": \"index-module__order-lg-0__2ptQQ\",\n\t\"order-lg-1\": \"index-module__order-lg-1__1J1Vx\",\n\t\"order-lg-2\": \"index-module__order-lg-2__1GGE9\",\n\t\"order-lg-3\": \"index-module__order-lg-3__3VR90\",\n\t\"order-lg-4\": \"index-module__order-lg-4__InZ9E\",\n\t\"order-lg-5\": \"index-module__order-lg-5__9uOd5\",\n\t\"order-lg-6\": \"index-module__order-lg-6__2xthQ\",\n\t\"order-lg-7\": \"index-module__order-lg-7__2fqfz\",\n\t\"order-lg-8\": \"index-module__order-lg-8__1QJot\",\n\t\"order-lg-9\": \"index-module__order-lg-9__3-6Mo\",\n\t\"order-lg-10\": \"index-module__order-lg-10__18GT6\",\n\t\"order-lg-11\": \"index-module__order-lg-11__1x3Qb\",\n\t\"order-lg-12\": \"index-module__order-lg-12__tN_vP\",\n\t\"offset-lg-0\": \"index-module__offset-lg-0__3HQA9\",\n\t\"offset-lg-1\": \"index-module__offset-lg-1__3rh22\",\n\t\"offset-lg-2\": \"index-module__offset-lg-2__10oum\",\n\t\"offset-lg-3\": \"index-module__offset-lg-3__w5uun\",\n\t\"offset-lg-4\": \"index-module__offset-lg-4__2plO1\",\n\t\"offset-lg-5\": \"index-module__offset-lg-5__18dPx\",\n\t\"offset-lg-6\": \"index-module__offset-lg-6__pCeUy\",\n\t\"offset-lg-7\": \"index-module__offset-lg-7__128QV\",\n\t\"offset-lg-8\": \"index-module__offset-lg-8__12ykp\",\n\t\"offset-lg-9\": \"index-module__offset-lg-9__e1OGj\",\n\t\"offset-lg-10\": \"index-module__offset-lg-10__2AALe\",\n\t\"offset-lg-11\": \"index-module__offset-lg-11__34Mvi\",\n\t\"row-cols-xl-1\": \"index-module__row-cols-xl-1__2QDRm\",\n\t\"row-cols-xl-2\": \"index-module__row-cols-xl-2__3keEO\",\n\t\"row-cols-xl-3\": \"index-module__row-cols-xl-3__2_qUD\",\n\t\"row-cols-xl-4\": \"index-module__row-cols-xl-4__3lwxK\",\n\t\"row-cols-xl-5\": \"index-module__row-cols-xl-5__2YSsW\",\n\t\"row-cols-xl-6\": \"index-module__row-cols-xl-6__34a5f\",\n\t\"order-xl-first\": \"index-module__order-xl-first__215F4\",\n\t\"order-xl-last\": \"index-module__order-xl-last__2stDj\",\n\t\"order-xl-0\": \"index-module__order-xl-0__3gs9p\",\n\t\"order-xl-1\": \"index-module__order-xl-1__2Ae1d\",\n\t\"order-xl-2\": \"index-module__order-xl-2__2zf4Q\",\n\t\"order-xl-3\": \"index-module__order-xl-3__xvyOF\",\n\t\"order-xl-4\": \"index-module__order-xl-4__3luhn\",\n\t\"order-xl-5\": \"index-module__order-xl-5__1EFGZ\",\n\t\"order-xl-6\": \"index-module__order-xl-6__22kV_\",\n\t\"order-xl-7\": \"index-module__order-xl-7__ejq1Q\",\n\t\"order-xl-8\": \"index-module__order-xl-8___ZkX8\",\n\t\"order-xl-9\": \"index-module__order-xl-9__3TRag\",\n\t\"order-xl-10\": \"index-module__order-xl-10__3PI3u\",\n\t\"order-xl-11\": \"index-module__order-xl-11__2ETxp\",\n\t\"order-xl-12\": \"index-module__order-xl-12__2GT-K\",\n\t\"offset-xl-0\": \"index-module__offset-xl-0__X8R3U\",\n\t\"offset-xl-1\": \"index-module__offset-xl-1__saoQS\",\n\t\"offset-xl-2\": \"index-module__offset-xl-2__3SzfE\",\n\t\"offset-xl-3\": \"index-module__offset-xl-3__34j0j\",\n\t\"offset-xl-4\": \"index-module__offset-xl-4__3CJMB\",\n\t\"offset-xl-5\": \"index-module__offset-xl-5__3X4s5\",\n\t\"offset-xl-6\": \"index-module__offset-xl-6__S9lmE\",\n\t\"offset-xl-7\": \"index-module__offset-xl-7__1ZGDM\",\n\t\"offset-xl-8\": \"index-module__offset-xl-8__yr2VY\",\n\t\"offset-xl-9\": \"index-module__offset-xl-9__2bJkc\",\n\t\"offset-xl-10\": \"index-module__offset-xl-10__21jAp\",\n\t\"offset-xl-11\": \"index-module__offset-xl-11__2y1te\",\n\t\"table\": \"index-module__table__2mYYw\",\n\t\"table-sm\": \"index-module__table-sm__16Fr0\",\n\t\"table-bordered\": \"index-module__table-bordered__19nzh\",\n\t\"table-borderless\": \"index-module__table-borderless__2yWHG\",\n\t\"table-striped\": \"index-module__table-striped__1PPA-\",\n\t\"table-hover\": \"index-module__table-hover__3xY4C\",\n\t\"table-primary\": \"index-module__table-primary__2Tj3r\",\n\t\"table-secondary\": \"index-module__table-secondary__3-f2t\",\n\t\"table-success\": \"index-module__table-success__3Lovj\",\n\t\"table-info\": \"index-module__table-info__Lr3-l\",\n\t\"table-warning\": \"index-module__table-warning__ZT-n9\",\n\t\"table-danger\": \"index-module__table-danger__3cxzc\",\n\t\"table-light\": \"index-module__table-light__2IkbY\",\n\t\"table-dark\": \"index-module__table-dark__xEdoZ\",\n\t\"table-active\": \"index-module__table-active__1blBy\",\n\t\"thead-dark\": \"index-module__thead-dark__wbYfA\",\n\t\"thead-light\": \"index-module__thead-light__IYVhc\",\n\t\"table-responsive-sm\": \"index-module__table-responsive-sm__2eJfs\",\n\t\"table-responsive-md\": \"index-module__table-responsive-md__1SaFY\",\n\t\"table-responsive-lg\": \"index-module__table-responsive-lg__2Uoev\",\n\t\"table-responsive-xl\": \"index-module__table-responsive-xl__1H_WR\",\n\t\"table-responsive\": \"index-module__table-responsive__2d-QH\",\n\t\"form-control\": \"index-module__form-control__33tSj\",\n\t\"form-control-file\": \"index-module__form-control-file__-_pwY\",\n\t\"form-control-range\": \"index-module__form-control-range__LLbKa\",\n\t\"col-form-label\": \"index-module__col-form-label__nBcIH\",\n\t\"col-form-label-lg\": \"index-module__col-form-label-lg__ZVtl2\",\n\t\"col-form-label-sm\": \"index-module__col-form-label-sm__1gHvU\",\n\t\"form-control-plaintext\": \"index-module__form-control-plaintext__1Qr5_\",\n\t\"form-control-sm\": \"index-module__form-control-sm__2Mi-0\",\n\t\"form-control-lg\": \"index-module__form-control-lg__1FX9v\",\n\t\"form-group\": \"index-module__form-group__20g9m\",\n\t\"form-text\": \"index-module__form-text__15IaJ\",\n\t\"form-row\": \"index-module__form-row__1q1iq\",\n\t\"form-check\": \"index-module__form-check__2UQrO\",\n\t\"form-check-input\": \"index-module__form-check-input__XpnZN\",\n\t\"form-check-label\": \"index-module__form-check-label__2cbqH\",\n\t\"form-check-inline\": \"index-module__form-check-inline__212tg\",\n\t\"valid-feedback\": \"index-module__valid-feedback__2e8qI\",\n\t\"valid-tooltip\": \"index-module__valid-tooltip__3G7sU\",\n\t\"was-validated\": \"index-module__was-validated__LSagy\",\n\t\"is-valid\": \"index-module__is-valid__2NFXf\",\n\t\"custom-select\": \"index-module__custom-select__2Ae5X\",\n\t\"custom-control-input\": \"index-module__custom-control-input__2tloy\",\n\t\"custom-control-label\": \"index-module__custom-control-label__17M6G\",\n\t\"custom-file-input\": \"index-module__custom-file-input__22YHK\",\n\t\"custom-file-label\": \"index-module__custom-file-label__1lWwo\",\n\t\"invalid-feedback\": \"index-module__invalid-feedback__2SYE6\",\n\t\"invalid-tooltip\": \"index-module__invalid-tooltip__2ajud\",\n\t\"is-invalid\": \"index-module__is-invalid__3_LmP\",\n\t\"form-inline\": \"index-module__form-inline__1XHn0\",\n\t\"input-group\": \"index-module__input-group__2KI-F\",\n\t\"custom-control\": \"index-module__custom-control__2LzXs\",\n\t\"btn\": \"index-module__btn__1Pcdf\",\n\t\"focus\": \"index-module__focus__37XLI\",\n\t\"disabled\": \"index-module__disabled__2BtOk\",\n\t\"btn-primary\": \"index-module__btn-primary__tn4qX\",\n\t\"active\": \"index-module__active__2-CxA\",\n\t\"show\": \"index-module__show__6Epil\",\n\t\"dropdown-toggle\": \"index-module__dropdown-toggle__126GD\",\n\t\"btn-secondary\": \"index-module__btn-secondary__1R5pU\",\n\t\"btn-success\": \"index-module__btn-success__1EMgR\",\n\t\"btn-info\": \"index-module__btn-info__qrgmt\",\n\t\"btn-warning\": \"index-module__btn-warning__1E7if\",\n\t\"btn-danger\": \"index-module__btn-danger__3Wxrs\",\n\t\"btn-light\": \"index-module__btn-light__3I-9B\",\n\t\"btn-dark\": \"index-module__btn-dark__1JkqV\",\n\t\"btn-outline-primary\": \"index-module__btn-outline-primary__3lAZR\",\n\t\"btn-outline-secondary\": \"index-module__btn-outline-secondary__2qj9A\",\n\t\"btn-outline-success\": \"index-module__btn-outline-success__3gxh5\",\n\t\"btn-outline-info\": \"index-module__btn-outline-info__1XYaK\",\n\t\"btn-outline-warning\": \"index-module__btn-outline-warning__1VRWd\",\n\t\"btn-outline-danger\": \"index-module__btn-outline-danger__1hm77\",\n\t\"btn-outline-light\": \"index-module__btn-outline-light__2kClq\",\n\t\"btn-outline-dark\": \"index-module__btn-outline-dark__2uuwK\",\n\t\"btn-link\": \"index-module__btn-link__Ryrl9\",\n\t\"btnLinkText\": \"index-module__btnLinkText__3tE8k\",\n\t\"btn-lg\": \"index-module__btn-lg__2dm__\",\n\t\"btn-group-lg\": \"index-module__btn-group-lg__3vO5c\",\n\t\"btn-sm\": \"index-module__btn-sm__uACm9\",\n\t\"btn-group-sm\": \"index-module__btn-group-sm__2qGvo\",\n\t\"btn-block\": \"index-module__btn-block__2B8z7\",\n\t\"fade\": \"index-module__fade__23Syb\",\n\t\"collapse\": \"index-module__collapse__12Qls\",\n\t\"collapsing\": \"index-module__collapsing__1R9Ig\",\n\t\"dropup\": \"index-module__dropup__1uJXa\",\n\t\"dropright\": \"index-module__dropright__2YE8b\",\n\t\"dropdown\": \"index-module__dropdown__3F8O8\",\n\t\"dropleft\": \"index-module__dropleft__2pr3E\",\n\t\"dropdown-menu\": \"index-module__dropdown-menu__1pzMl\",\n\t\"dropdown-menu-left\": \"index-module__dropdown-menu-left__3FpwF\",\n\t\"dropdown-menu-right\": \"index-module__dropdown-menu-right__1UJne\",\n\t\"dropdown-menu-sm-left\": \"index-module__dropdown-menu-sm-left__3m9sl\",\n\t\"dropdown-menu-sm-right\": \"index-module__dropdown-menu-sm-right__eaU72\",\n\t\"dropdown-menu-md-left\": \"index-module__dropdown-menu-md-left__2v8Zw\",\n\t\"dropdown-menu-md-right\": \"index-module__dropdown-menu-md-right__29eeO\",\n\t\"dropdown-menu-lg-left\": \"index-module__dropdown-menu-lg-left__1Mo8l\",\n\t\"dropdown-menu-lg-right\": \"index-module__dropdown-menu-lg-right__2GKQl\",\n\t\"dropdown-menu-xl-left\": \"index-module__dropdown-menu-xl-left__qwf9Z\",\n\t\"dropdown-menu-xl-right\": \"index-module__dropdown-menu-xl-right__gVhbV\",\n\t\"dropdown-divider\": \"index-module__dropdown-divider__G6_n4\",\n\t\"dropdown-item\": \"index-module__dropdown-item__1wMHJ\",\n\t\"dropdown-header\": \"index-module__dropdown-header__2G1LB\",\n\t\"dropdown-item-text\": \"index-module__dropdown-item-text__Tc00Q\",\n\t\"btn-group\": \"index-module__btn-group__dCLg2\",\n\t\"btn-group-vertical\": \"index-module__btn-group-vertical__1uuqp\",\n\t\"btn-toolbar\": \"index-module__btn-toolbar__3FwpK\",\n\t\"dropdown-toggle-split\": \"index-module__dropdown-toggle-split__2cUc1\",\n\t\"btn-group-toggle\": \"index-module__btn-group-toggle__3n4Fk\",\n\t\"custom-file\": \"index-module__custom-file__3IAmZ\",\n\t\"input-group-prepend\": \"index-module__input-group-prepend__1qgDw\",\n\t\"input-group-append\": \"index-module__input-group-append__2wnvP\",\n\t\"input-group-text\": \"index-module__input-group-text__3ZCLt\",\n\t\"input-group-lg\": \"index-module__input-group-lg__127GP\",\n\t\"input-group-sm\": \"index-module__input-group-sm__1YP3y\",\n\t\"custom-control-inline\": \"index-module__custom-control-inline__2i4MT\",\n\t\"custom-checkbox\": \"index-module__custom-checkbox__nqODx\",\n\t\"custom-radio\": \"index-module__custom-radio__3kbvO\",\n\t\"custom-switch\": \"index-module__custom-switch__2ak_l\",\n\t\"custom-select-sm\": \"index-module__custom-select-sm__2XmWm\",\n\t\"custom-select-lg\": \"index-module__custom-select-lg__6Vz-r\",\n\t\"custom-range\": \"index-module__custom-range__2zVif\",\n\t\"nav\": \"index-module__nav__grBJx\",\n\t\"nav-link\": \"index-module__nav-link__1g202\",\n\t\"nav-tabs\": \"index-module__nav-tabs__2chpV\",\n\t\"nav-item\": \"index-module__nav-item__zM8hg\",\n\t\"nav-pills\": \"index-module__nav-pills__181h9\",\n\t\"nav-fill\": \"index-module__nav-fill__1Fo-l\",\n\t\"nav-justified\": \"index-module__nav-justified__52yxZ\",\n\t\"tab-content\": \"index-module__tab-content__hn4Jn\",\n\t\"tab-pane\": \"index-module__tab-pane__1e72a\",\n\t\"navbar\": \"index-module__navbar__38ZzD\",\n\t\"navbar-brand\": \"index-module__navbar-brand__1-wxk\",\n\t\"navbar-nav\": \"index-module__navbar-nav__2Pd71\",\n\t\"navbar-text\": \"index-module__navbar-text__1-cNr\",\n\t\"navbar-collapse\": \"index-module__navbar-collapse__1VNc8\",\n\t\"navbar-toggler\": \"index-module__navbar-toggler__2R5Cp\",\n\t\"navbar-toggler-icon\": \"index-module__navbar-toggler-icon__2FJv8\",\n\t\"navbar-expand-sm\": \"index-module__navbar-expand-sm__12Ctm\",\n\t\"navbar-expand-md\": \"index-module__navbar-expand-md__GpUQ5\",\n\t\"navbar-expand-lg\": \"index-module__navbar-expand-lg__3j_tA\",\n\t\"navbar-expand-xl\": \"index-module__navbar-expand-xl__1XIWi\",\n\t\"navbar-expand\": \"index-module__navbar-expand__4s4sc\",\n\t\"navbar-light\": \"index-module__navbar-light__2YBmS\",\n\t\"navbar-dark\": \"index-module__navbar-dark__2zWgs\",\n\t\"card\": \"index-module__card__3t4oV\",\n\t\"list-group\": \"index-module__list-group__3IKFg\",\n\t\"list-group-item\": \"index-module__list-group-item__tsEJn\",\n\t\"card-body\": \"index-module__card-body__gNdRz\",\n\t\"card-title\": \"index-module__card-title__33NYI\",\n\t\"card-subtitle\": \"index-module__card-subtitle__-A253\",\n\t\"card-text\": \"index-module__card-text__3FW8A\",\n\t\"card-link\": \"index-module__card-link__2-IZq\",\n\t\"card-header\": \"index-module__card-header__3oeJg\",\n\t\"card-footer\": \"index-module__card-footer__2oex3\",\n\t\"card-header-tabs\": \"index-module__card-header-tabs__icvJz\",\n\t\"card-header-pills\": \"index-module__card-header-pills__2xH21\",\n\t\"card-img-overlay\": \"index-module__card-img-overlay__1Bace\",\n\t\"card-img\": \"index-module__card-img__1ZQ7a\",\n\t\"card-img-top\": \"index-module__card-img-top__1HK8Y\",\n\t\"card-img-bottom\": \"index-module__card-img-bottom__1hj8U\",\n\t\"card-deck\": \"index-module__card-deck__rogx_\",\n\t\"card-group\": \"index-module__card-group__3wOGH\",\n\t\"card-columns\": \"index-module__card-columns__2u9rC\",\n\t\"accordion\": \"index-module__accordion__1NO1-\",\n\t\"breadcrumb\": \"index-module__breadcrumb__1riuu\",\n\t\"breadcrumb-item\": \"index-module__breadcrumb-item__1U6IH\",\n\t\"pagination\": \"index-module__pagination__2pJWs\",\n\t\"page-link\": \"index-module__page-link__xNY6Q\",\n\t\"page-item\": \"index-module__page-item__16OYx\",\n\t\"pagination-lg\": \"index-module__pagination-lg__2mTGn\",\n\t\"pagination-sm\": \"index-module__pagination-sm__3mLnZ\",\n\t\"badge\": \"index-module__badge__3XyDs\",\n\t\"badge-pill\": \"index-module__badge-pill__vtpQL\",\n\t\"badge-primary\": \"index-module__badge-primary__3ZDgH\",\n\t\"badge-secondary\": \"index-module__badge-secondary__34ML3\",\n\t\"badge-success\": \"index-module__badge-success__XyqRD\",\n\t\"badge-info\": \"index-module__badge-info__2eMvu\",\n\t\"badge-warning\": \"index-module__badge-warning__2JO5V\",\n\t\"badge-danger\": \"index-module__badge-danger__3VOpV\",\n\t\"badge-light\": \"index-module__badge-light__2n5iP\",\n\t\"badge-dark\": \"index-module__badge-dark__24am4\",\n\t\"jumbotron\": \"index-module__jumbotron__1NqXn\",\n\t\"jumbotron-fluid\": \"index-module__jumbotron-fluid__xlJLH\",\n\t\"alert\": \"index-module__alert__3rOIn\",\n\t\"alert-heading\": \"index-module__alert-heading__1a7ZA\",\n\t\"alert-link\": \"index-module__alert-link__2eQzr\",\n\t\"alert-dismissible\": \"index-module__alert-dismissible__AOgXM\",\n\t\"close\": \"index-module__close__1wRFd\",\n\t\"alert-primary\": \"index-module__alert-primary__2OecW\",\n\t\"alert-secondary\": \"index-module__alert-secondary__3QWKW\",\n\t\"alert-success\": \"index-module__alert-success__92kfn\",\n\t\"alert-info\": \"index-module__alert-info__271H0\",\n\t\"alert-warning\": \"index-module__alert-warning__3c5Fc\",\n\t\"alert-danger\": \"index-module__alert-danger__1jubp\",\n\t\"alert-light\": \"index-module__alert-light__hPVLg\",\n\t\"alert-dark\": \"index-module__alert-dark__ZFBLX\",\n\t\"progress\": \"index-module__progress__1h-rT\",\n\t\"progress-bar\": \"index-module__progress-bar__18OLp\",\n\t\"progress-bar-striped\": \"index-module__progress-bar-striped__3B_Cl\",\n\t\"progress-bar-animated\": \"index-module__progress-bar-animated__c8pmU\",\n\t\"progress-bar-stripes\": \"index-module__progress-bar-stripes__1n6hj\",\n\t\"media\": \"index-module__media__4_ndS\",\n\t\"media-body\": \"index-module__media-body__cY3XF\",\n\t\"list-group-item-action\": \"index-module__list-group-item-action__NDrlj\",\n\t\"list-group-horizontal\": \"index-module__list-group-horizontal__1PrM2\",\n\t\"list-group-horizontal-sm\": \"index-module__list-group-horizontal-sm__2eMJE\",\n\t\"list-group-horizontal-md\": \"index-module__list-group-horizontal-md__2_xpm\",\n\t\"list-group-horizontal-lg\": \"index-module__list-group-horizontal-lg__Nr559\",\n\t\"list-group-horizontal-xl\": \"index-module__list-group-horizontal-xl__1F2ib\",\n\t\"list-group-flush\": \"index-module__list-group-flush__bAJYq\",\n\t\"list-group-item-primary\": \"index-module__list-group-item-primary__3dYur\",\n\t\"list-group-item-secondary\": \"index-module__list-group-item-secondary__28l_L\",\n\t\"list-group-item-success\": \"index-module__list-group-item-success__3oakj\",\n\t\"list-group-item-info\": \"index-module__list-group-item-info__1Uniy\",\n\t\"list-group-item-warning\": \"index-module__list-group-item-warning__KVL0w\",\n\t\"list-group-item-danger\": \"index-module__list-group-item-danger__ckwbt\",\n\t\"list-group-item-light\": \"index-module__list-group-item-light__3D-0P\",\n\t\"list-group-item-dark\": \"index-module__list-group-item-dark__1UzNj\",\n\t\"toast\": \"index-module__toast__1IzFA\",\n\t\"showing\": \"index-module__showing__rfjiQ\",\n\t\"hide\": \"index-module__hide__1efFV\",\n\t\"toast-header\": \"index-module__toast-header__rCzMs\",\n\t\"toast-body\": \"index-module__toast-body__1ADiS\",\n\t\"modal-open\": \"index-module__modal-open__3gsI2\",\n\t\"modal\": \"index-module__modal__1klTB\",\n\t\"modal-dialog\": \"index-module__modal-dialog__2D-RY\",\n\t\"modal-static\": \"index-module__modal-static__2CUMP\",\n\t\"modal-dialog-scrollable\": \"index-module__modal-dialog-scrollable__2OLKI\",\n\t\"modal-content\": \"index-module__modal-content__2xTWw\",\n\t\"modal-header\": \"index-module__modal-header__2kgoY\",\n\t\"modal-footer\": \"index-module__modal-footer__O3U1v\",\n\t\"modal-body\": \"index-module__modal-body__3-1HX\",\n\t\"modal-dialog-centered\": \"index-module__modal-dialog-centered__2Kk9k\",\n\t\"modal-backdrop\": \"index-module__modal-backdrop__2kxkF\",\n\t\"modal-title\": \"index-module__modal-title__3Nvyk\",\n\t\"modal-scrollbar-measure\": \"index-module__modal-scrollbar-measure__1Xc9r\",\n\t\"modal-sm\": \"index-module__modal-sm__10Rkr\",\n\t\"modal-lg\": \"index-module__modal-lg__12tAk\",\n\t\"modal-xl\": \"index-module__modal-xl__2Ot7e\",\n\t\"tooltip\": \"index-module__tooltip__qBnHg\",\n\t\"arrow\": \"index-module__arrow__2rswH\",\n\t\"bs-tooltip-top\": \"index-module__bs-tooltip-top__1BhwH\",\n\t\"bs-tooltip-auto\": \"index-module__bs-tooltip-auto__xkBn_\",\n\t\"bs-tooltip-right\": \"index-module__bs-tooltip-right__398mf\",\n\t\"bs-tooltip-bottom\": \"index-module__bs-tooltip-bottom__3mc1t\",\n\t\"bs-tooltip-left\": \"index-module__bs-tooltip-left__3gj7E\",\n\t\"tooltip-inner\": \"index-module__tooltip-inner__2Y2jl\",\n\t\"popover\": \"index-module__popover__2SGlP\",\n\t\"bs-popover-top\": \"index-module__bs-popover-top__PjDeA\",\n\t\"bs-popover-auto\": \"index-module__bs-popover-auto__2bb6x\",\n\t\"bs-popover-right\": \"index-module__bs-popover-right__2e2y6\",\n\t\"bs-popover-bottom\": \"index-module__bs-popover-bottom__3kUoW\",\n\t\"popover-header\": \"index-module__popover-header__2EU4L\",\n\t\"bs-popover-left\": \"index-module__bs-popover-left__35_5h\",\n\t\"popover-body\": \"index-module__popover-body__Mf9Hm\",\n\t\"carousel\": \"index-module__carousel__23XUu\",\n\t\"pointer-event\": \"index-module__pointer-event__Q7Iut\",\n\t\"carousel-inner\": \"index-module__carousel-inner__3Wj3-\",\n\t\"carousel-item\": \"index-module__carousel-item__19qZ3\",\n\t\"carousel-item-next\": \"index-module__carousel-item-next__1l_ur\",\n\t\"carousel-item-prev\": \"index-module__carousel-item-prev__Vjq-I\",\n\t\"carousel-item-left\": \"index-module__carousel-item-left__1BDm2\",\n\t\"carousel-item-right\": \"index-module__carousel-item-right__O3R4g\",\n\t\"carousel-fade\": \"index-module__carousel-fade__2KFRm\",\n\t\"carousel-control-prev\": \"index-module__carousel-control-prev__AIH7r\",\n\t\"carousel-control-next\": \"index-module__carousel-control-next__1Ltqh\",\n\t\"carousel-control-prev-icon\": \"index-module__carousel-control-prev-icon__j7Rif\",\n\t\"carousel-control-next-icon\": \"index-module__carousel-control-next-icon__iOkN6\",\n\t\"carousel-indicators\": \"index-module__carousel-indicators__1N_Ir\",\n\t\"carousel-caption\": \"index-module__carousel-caption__2ICBR\",\n\t\"spinner-border\": \"index-module__spinner-border__32qWc\",\n\t\"spinner-border-sm\": \"index-module__spinner-border-sm__2wo5d\",\n\t\"spinner-grow\": \"index-module__spinner-grow__2z4qf\",\n\t\"spinner-grow-sm\": \"index-module__spinner-grow-sm__2J_8F\",\n\t\"align-baseline\": \"index-module__align-baseline__22Ief\",\n\t\"align-top\": \"index-module__align-top__2LAh3\",\n\t\"align-middle\": \"index-module__align-middle__lRkJM\",\n\t\"align-bottom\": \"index-module__align-bottom__2fuRH\",\n\t\"align-text-bottom\": \"index-module__align-text-bottom__uGF0N\",\n\t\"align-text-top\": \"index-module__align-text-top__1QpKK\",\n\t\"bg-primary\": \"index-module__bg-primary__15bc4\",\n\t\"bg-secondary\": \"index-module__bg-secondary__3kg7Z\",\n\t\"bg-success\": \"index-module__bg-success__2JnfU\",\n\t\"bg-info\": \"index-module__bg-info__3c20Z\",\n\t\"bg-warning\": \"index-module__bg-warning__3Zb3D\",\n\t\"bg-danger\": \"index-module__bg-danger__2sSv0\",\n\t\"bg-light\": \"index-module__bg-light__3u2Ac\",\n\t\"bg-dark\": \"index-module__bg-dark__3HV6-\",\n\t\"bg-white\": \"index-module__bg-white__2snQi\",\n\t\"bg-transparent\": \"index-module__bg-transparent__1tysZ\",\n\t\"border\": \"index-module__border__11qPG\",\n\t\"border-top\": \"index-module__border-top__Yy2_J\",\n\t\"border-right\": \"index-module__border-right__3ToJc\",\n\t\"border-bottom\": \"index-module__border-bottom__2ixth\",\n\t\"border-left\": \"index-module__border-left__2pfJ8\",\n\t\"border-0\": \"index-module__border-0__1797k\",\n\t\"border-top-0\": \"index-module__border-top-0__3Fg04\",\n\t\"border-right-0\": \"index-module__border-right-0__TIwct\",\n\t\"border-bottom-0\": \"index-module__border-bottom-0__2ac8a\",\n\t\"border-left-0\": \"index-module__border-left-0__xW4be\",\n\t\"border-primary\": \"index-module__border-primary__31kWz\",\n\t\"border-secondary\": \"index-module__border-secondary__2BBub\",\n\t\"border-success\": \"index-module__border-success__1ojwX\",\n\t\"border-info\": \"index-module__border-info__I4TLB\",\n\t\"border-warning\": \"index-module__border-warning__2gX2z\",\n\t\"border-danger\": \"index-module__border-danger__2mjDE\",\n\t\"border-light\": \"index-module__border-light__2X8Tg\",\n\t\"border-dark\": \"index-module__border-dark__2jE9k\",\n\t\"border-white\": \"index-module__border-white__3oFZD\",\n\t\"rounded-sm\": \"index-module__rounded-sm__sgDxH\",\n\t\"rounded\": \"index-module__rounded__3b7gS\",\n\t\"rounded-top\": \"index-module__rounded-top__1VBjR\",\n\t\"rounded-right\": \"index-module__rounded-right__2XyLx\",\n\t\"rounded-bottom\": \"index-module__rounded-bottom__Rv8nC\",\n\t\"rounded-left\": \"index-module__rounded-left__3mXIm\",\n\t\"rounded-lg\": \"index-module__rounded-lg__3JUTg\",\n\t\"rounded-circle\": \"index-module__rounded-circle__1Ug3f\",\n\t\"rounded-pill\": \"index-module__rounded-pill__25bLX\",\n\t\"rounded-0\": \"index-module__rounded-0__2M6hd\",\n\t\"clearfix\": \"index-module__clearfix__1jDy6\",\n\t\"d-none\": \"index-module__d-none__1UFzy\",\n\t\"d-inline\": \"index-module__d-inline__1eSrQ\",\n\t\"d-inline-block\": \"index-module__d-inline-block__17YVa\",\n\t\"d-block\": \"index-module__d-block__2YlS_\",\n\t\"d-table\": \"index-module__d-table__MEAF8\",\n\t\"d-table-row\": \"index-module__d-table-row__1q4SV\",\n\t\"d-table-cell\": \"index-module__d-table-cell__W8QY2\",\n\t\"d-flex\": \"index-module__d-flex__1qvFp\",\n\t\"d-inline-flex\": \"index-module__d-inline-flex__1DK7F\",\n\t\"d-sm-none\": \"index-module__d-sm-none__D-Ixz\",\n\t\"d-sm-inline\": \"index-module__d-sm-inline__1hnTb\",\n\t\"d-sm-inline-block\": \"index-module__d-sm-inline-block__1plB9\",\n\t\"d-sm-block\": \"index-module__d-sm-block__28HbD\",\n\t\"d-sm-table\": \"index-module__d-sm-table__3WY7a\",\n\t\"d-sm-table-row\": \"index-module__d-sm-table-row__S7LDT\",\n\t\"d-sm-table-cell\": \"index-module__d-sm-table-cell___SH4G\",\n\t\"d-sm-flex\": \"index-module__d-sm-flex__2MqUn\",\n\t\"d-sm-inline-flex\": \"index-module__d-sm-inline-flex__3dbe7\",\n\t\"d-md-none\": \"index-module__d-md-none__2FNrA\",\n\t\"d-md-inline\": \"index-module__d-md-inline__1lcRW\",\n\t\"d-md-inline-block\": \"index-module__d-md-inline-block__2-kHh\",\n\t\"d-md-block\": \"index-module__d-md-block__32CZ2\",\n\t\"d-md-table\": \"index-module__d-md-table__2Ef9h\",\n\t\"d-md-table-row\": \"index-module__d-md-table-row__U07gX\",\n\t\"d-md-table-cell\": \"index-module__d-md-table-cell__3LnKv\",\n\t\"d-md-flex\": \"index-module__d-md-flex__1a9hJ\",\n\t\"d-md-inline-flex\": \"index-module__d-md-inline-flex__1h4jp\",\n\t\"d-lg-none\": \"index-module__d-lg-none__2MP9w\",\n\t\"d-lg-inline\": \"index-module__d-lg-inline__1z4Cd\",\n\t\"d-lg-inline-block\": \"index-module__d-lg-inline-block__2pczW\",\n\t\"d-lg-block\": \"index-module__d-lg-block__acbC3\",\n\t\"d-lg-table\": \"index-module__d-lg-table__3OSxx\",\n\t\"d-lg-table-row\": \"index-module__d-lg-table-row__X9lhz\",\n\t\"d-lg-table-cell\": \"index-module__d-lg-table-cell__B15gg\",\n\t\"d-lg-flex\": \"index-module__d-lg-flex__3uRhp\",\n\t\"d-lg-inline-flex\": \"index-module__d-lg-inline-flex__2wY0b\",\n\t\"d-xl-none\": \"index-module__d-xl-none__5cs9L\",\n\t\"d-xl-inline\": \"index-module__d-xl-inline__11qkx\",\n\t\"d-xl-inline-block\": \"index-module__d-xl-inline-block__56yqa\",\n\t\"d-xl-block\": \"index-module__d-xl-block__3I3yt\",\n\t\"d-xl-table\": \"index-module__d-xl-table__1x9-d\",\n\t\"d-xl-table-row\": \"index-module__d-xl-table-row__gQeSj\",\n\t\"d-xl-table-cell\": \"index-module__d-xl-table-cell__1EUMM\",\n\t\"d-xl-flex\": \"index-module__d-xl-flex__FUdMO\",\n\t\"d-xl-inline-flex\": \"index-module__d-xl-inline-flex__CeC7K\",\n\t\"d-print-none\": \"index-module__d-print-none__eG0Fa\",\n\t\"d-print-inline\": \"index-module__d-print-inline__1amkG\",\n\t\"d-print-inline-block\": \"index-module__d-print-inline-block__1wWGM\",\n\t\"d-print-block\": \"index-module__d-print-block__3TyG4\",\n\t\"d-print-table\": \"index-module__d-print-table__BOEMC\",\n\t\"d-print-table-row\": \"index-module__d-print-table-row__oywhQ\",\n\t\"d-print-table-cell\": \"index-module__d-print-table-cell__OEW4w\",\n\t\"d-print-flex\": \"index-module__d-print-flex__S0pKW\",\n\t\"d-print-inline-flex\": \"index-module__d-print-inline-flex__29VnD\",\n\t\"embed-responsive\": \"index-module__embed-responsive__1yscp\",\n\t\"embed-responsive-item\": \"index-module__embed-responsive-item__1jl2s\",\n\t\"embed-responsive-21by9\": \"index-module__embed-responsive-21by9__28XiT\",\n\t\"embed-responsive-16by9\": \"index-module__embed-responsive-16by9__22ItI\",\n\t\"embed-responsive-4by3\": \"index-module__embed-responsive-4by3__2MUFC\",\n\t\"embed-responsive-1by1\": \"index-module__embed-responsive-1by1__2ZJnY\",\n\t\"flex-row\": \"index-module__flex-row__3ylbW\",\n\t\"flex-column\": \"index-module__flex-column__sIl7l\",\n\t\"flex-row-reverse\": \"index-module__flex-row-reverse__BcGRz\",\n\t\"flex-column-reverse\": \"index-module__flex-column-reverse__3Go3V\",\n\t\"flex-wrap\": \"index-module__flex-wrap__1ovaQ\",\n\t\"flex-nowrap\": \"index-module__flex-nowrap__2lmSF\",\n\t\"flex-wrap-reverse\": \"index-module__flex-wrap-reverse__2f8MK\",\n\t\"flex-fill\": \"index-module__flex-fill__35sP0\",\n\t\"flex-grow-0\": \"index-module__flex-grow-0__Kysyq\",\n\t\"flex-grow-1\": \"index-module__flex-grow-1__2kwOp\",\n\t\"flex-shrink-0\": \"index-module__flex-shrink-0__2OK2B\",\n\t\"flex-shrink-1\": \"index-module__flex-shrink-1__3O3pH\",\n\t\"justify-content-start\": \"index-module__justify-content-start__2gV9a\",\n\t\"justify-content-end\": \"index-module__justify-content-end__37y2T\",\n\t\"justify-content-center\": \"index-module__justify-content-center__2qQe5\",\n\t\"justify-content-between\": \"index-module__justify-content-between__2xAct\",\n\t\"justify-content-around\": \"index-module__justify-content-around__3PGZy\",\n\t\"align-items-start\": \"index-module__align-items-start__2a328\",\n\t\"align-items-end\": \"index-module__align-items-end__pxmDe\",\n\t\"align-items-center\": \"index-module__align-items-center__2B3iW\",\n\t\"align-items-baseline\": \"index-module__align-items-baseline__TgH6a\",\n\t\"align-items-stretch\": \"index-module__align-items-stretch__3KWud\",\n\t\"align-content-start\": \"index-module__align-content-start__3b3Hg\",\n\t\"align-content-end\": \"index-module__align-content-end__wksf2\",\n\t\"align-content-center\": \"index-module__align-content-center__23Dyy\",\n\t\"align-content-between\": \"index-module__align-content-between__2FLKa\",\n\t\"align-content-around\": \"index-module__align-content-around__1Da4N\",\n\t\"align-content-stretch\": \"index-module__align-content-stretch__3h4Bi\",\n\t\"align-self-auto\": \"index-module__align-self-auto__1dgAE\",\n\t\"align-self-start\": \"index-module__align-self-start__t8nl-\",\n\t\"align-self-end\": \"index-module__align-self-end__2Qm5m\",\n\t\"align-self-center\": \"index-module__align-self-center__Dd-Gs\",\n\t\"align-self-baseline\": \"index-module__align-self-baseline__2Z5zE\",\n\t\"align-self-stretch\": \"index-module__align-self-stretch__2n0um\",\n\t\"flex-sm-row\": \"index-module__flex-sm-row__3I57n\",\n\t\"flex-sm-column\": \"index-module__flex-sm-column__2g-Z0\",\n\t\"flex-sm-row-reverse\": \"index-module__flex-sm-row-reverse__3p0k4\",\n\t\"flex-sm-column-reverse\": \"index-module__flex-sm-column-reverse__3ig6z\",\n\t\"flex-sm-wrap\": \"index-module__flex-sm-wrap__VabSO\",\n\t\"flex-sm-nowrap\": \"index-module__flex-sm-nowrap__2HWVy\",\n\t\"flex-sm-wrap-reverse\": \"index-module__flex-sm-wrap-reverse__3Ratx\",\n\t\"flex-sm-fill\": \"index-module__flex-sm-fill__391be\",\n\t\"flex-sm-grow-0\": \"index-module__flex-sm-grow-0__8xMOK\",\n\t\"flex-sm-grow-1\": \"index-module__flex-sm-grow-1__1t3iD\",\n\t\"flex-sm-shrink-0\": \"index-module__flex-sm-shrink-0__n3hK2\",\n\t\"flex-sm-shrink-1\": \"index-module__flex-sm-shrink-1__1xswC\",\n\t\"justify-content-sm-start\": \"index-module__justify-content-sm-start__2ZsPP\",\n\t\"justify-content-sm-end\": \"index-module__justify-content-sm-end__vGSVX\",\n\t\"justify-content-sm-center\": \"index-module__justify-content-sm-center__2UFVe\",\n\t\"justify-content-sm-between\": \"index-module__justify-content-sm-between__3LXES\",\n\t\"justify-content-sm-around\": \"index-module__justify-content-sm-around__3WUhc\",\n\t\"align-items-sm-start\": \"index-module__align-items-sm-start__2V-Us\",\n\t\"align-items-sm-end\": \"index-module__align-items-sm-end__1lPXR\",\n\t\"align-items-sm-center\": \"index-module__align-items-sm-center__3EkLM\",\n\t\"align-items-sm-baseline\": \"index-module__align-items-sm-baseline__3OQKT\",\n\t\"align-items-sm-stretch\": \"index-module__align-items-sm-stretch__252IZ\",\n\t\"align-content-sm-start\": \"index-module__align-content-sm-start__2HOv7\",\n\t\"align-content-sm-end\": \"index-module__align-content-sm-end__1gRgm\",\n\t\"align-content-sm-center\": \"index-module__align-content-sm-center__xi-TT\",\n\t\"align-content-sm-between\": \"index-module__align-content-sm-between__36LSv\",\n\t\"align-content-sm-around\": \"index-module__align-content-sm-around__2K9Ol\",\n\t\"align-content-sm-stretch\": \"index-module__align-content-sm-stretch__2mMHr\",\n\t\"align-self-sm-auto\": \"index-module__align-self-sm-auto__2LRHD\",\n\t\"align-self-sm-start\": \"index-module__align-self-sm-start__2EPH9\",\n\t\"align-self-sm-end\": \"index-module__align-self-sm-end__3ClY5\",\n\t\"align-self-sm-center\": \"index-module__align-self-sm-center__2kaQb\",\n\t\"align-self-sm-baseline\": \"index-module__align-self-sm-baseline__5WHZz\",\n\t\"align-self-sm-stretch\": \"index-module__align-self-sm-stretch__2yy6Y\",\n\t\"flex-md-row\": \"index-module__flex-md-row__3LS07\",\n\t\"flex-md-column\": \"index-module__flex-md-column__21yB1\",\n\t\"flex-md-row-reverse\": \"index-module__flex-md-row-reverse__b4lh6\",\n\t\"flex-md-column-reverse\": \"index-module__flex-md-column-reverse__162vZ\",\n\t\"flex-md-wrap\": \"index-module__flex-md-wrap__2-Ub4\",\n\t\"flex-md-nowrap\": \"index-module__flex-md-nowrap__KXFMp\",\n\t\"flex-md-wrap-reverse\": \"index-module__flex-md-wrap-reverse__3eW60\",\n\t\"flex-md-fill\": \"index-module__flex-md-fill__2VA1R\",\n\t\"flex-md-grow-0\": \"index-module__flex-md-grow-0__DoL0L\",\n\t\"flex-md-grow-1\": \"index-module__flex-md-grow-1__CLD-r\",\n\t\"flex-md-shrink-0\": \"index-module__flex-md-shrink-0__UEK9v\",\n\t\"flex-md-shrink-1\": \"index-module__flex-md-shrink-1__1A6r9\",\n\t\"justify-content-md-start\": \"index-module__justify-content-md-start__3AgZj\",\n\t\"justify-content-md-end\": \"index-module__justify-content-md-end__3Fmkm\",\n\t\"justify-content-md-center\": \"index-module__justify-content-md-center__3Bf-A\",\n\t\"justify-content-md-between\": \"index-module__justify-content-md-between__31BQP\",\n\t\"justify-content-md-around\": \"index-module__justify-content-md-around__2ajuf\",\n\t\"align-items-md-start\": \"index-module__align-items-md-start__21Px_\",\n\t\"align-items-md-end\": \"index-module__align-items-md-end__1RCoB\",\n\t\"align-items-md-center\": \"index-module__align-items-md-center__22zo2\",\n\t\"align-items-md-baseline\": \"index-module__align-items-md-baseline__u6hUc\",\n\t\"align-items-md-stretch\": \"index-module__align-items-md-stretch__34Yzf\",\n\t\"align-content-md-start\": \"index-module__align-content-md-start__2ROQC\",\n\t\"align-content-md-end\": \"index-module__align-content-md-end__2gh2a\",\n\t\"align-content-md-center\": \"index-module__align-content-md-center__3C9R9\",\n\t\"align-content-md-between\": \"index-module__align-content-md-between__1iBKE\",\n\t\"align-content-md-around\": \"index-module__align-content-md-around__N4dF0\",\n\t\"align-content-md-stretch\": \"index-module__align-content-md-stretch__2XrTJ\",\n\t\"align-self-md-auto\": \"index-module__align-self-md-auto__1H5uO\",\n\t\"align-self-md-start\": \"index-module__align-self-md-start__1GOy0\",\n\t\"align-self-md-end\": \"index-module__align-self-md-end__3QFHN\",\n\t\"align-self-md-center\": \"index-module__align-self-md-center__3cknV\",\n\t\"align-self-md-baseline\": \"index-module__align-self-md-baseline__3xUAb\",\n\t\"align-self-md-stretch\": \"index-module__align-self-md-stretch__1k63x\",\n\t\"flex-lg-row\": \"index-module__flex-lg-row__2QnDI\",\n\t\"flex-lg-column\": \"index-module__flex-lg-column__Ztry7\",\n\t\"flex-lg-row-reverse\": \"index-module__flex-lg-row-reverse__hk1Bj\",\n\t\"flex-lg-column-reverse\": \"index-module__flex-lg-column-reverse__1egF5\",\n\t\"flex-lg-wrap\": \"index-module__flex-lg-wrap__1EhhV\",\n\t\"flex-lg-nowrap\": \"index-module__flex-lg-nowrap__2dKGN\",\n\t\"flex-lg-wrap-reverse\": \"index-module__flex-lg-wrap-reverse__R8cys\",\n\t\"flex-lg-fill\": \"index-module__flex-lg-fill__2ILqZ\",\n\t\"flex-lg-grow-0\": \"index-module__flex-lg-grow-0__3nGok\",\n\t\"flex-lg-grow-1\": \"index-module__flex-lg-grow-1__2KOwB\",\n\t\"flex-lg-shrink-0\": \"index-module__flex-lg-shrink-0__3xNsV\",\n\t\"flex-lg-shrink-1\": \"index-module__flex-lg-shrink-1__3KEEK\",\n\t\"justify-content-lg-start\": \"index-module__justify-content-lg-start__2uQ3g\",\n\t\"justify-content-lg-end\": \"index-module__justify-content-lg-end__-gGfk\",\n\t\"justify-content-lg-center\": \"index-module__justify-content-lg-center__1fDc0\",\n\t\"justify-content-lg-between\": \"index-module__justify-content-lg-between__2JShF\",\n\t\"justify-content-lg-around\": \"index-module__justify-content-lg-around__3ERPN\",\n\t\"align-items-lg-start\": \"index-module__align-items-lg-start__3d3XW\",\n\t\"align-items-lg-end\": \"index-module__align-items-lg-end__1ztQH\",\n\t\"align-items-lg-center\": \"index-module__align-items-lg-center__1FfdS\",\n\t\"align-items-lg-baseline\": \"index-module__align-items-lg-baseline__otn8F\",\n\t\"align-items-lg-stretch\": \"index-module__align-items-lg-stretch__1yjRg\",\n\t\"align-content-lg-start\": \"index-module__align-content-lg-start__3_Gwy\",\n\t\"align-content-lg-end\": \"index-module__align-content-lg-end__3jEIR\",\n\t\"align-content-lg-center\": \"index-module__align-content-lg-center__3JMp3\",\n\t\"align-content-lg-between\": \"index-module__align-content-lg-between__3vKJx\",\n\t\"align-content-lg-around\": \"index-module__align-content-lg-around__XgvDj\",\n\t\"align-content-lg-stretch\": \"index-module__align-content-lg-stretch__v7qMh\",\n\t\"align-self-lg-auto\": \"index-module__align-self-lg-auto__11h14\",\n\t\"align-self-lg-start\": \"index-module__align-self-lg-start__2lekD\",\n\t\"align-self-lg-end\": \"index-module__align-self-lg-end__Y-ezZ\",\n\t\"align-self-lg-center\": \"index-module__align-self-lg-center__20ASJ\",\n\t\"align-self-lg-baseline\": \"index-module__align-self-lg-baseline__3e5c6\",\n\t\"align-self-lg-stretch\": \"index-module__align-self-lg-stretch__3rDPl\",\n\t\"flex-xl-row\": \"index-module__flex-xl-row__1pb92\",\n\t\"flex-xl-column\": \"index-module__flex-xl-column__1gAon\",\n\t\"flex-xl-row-reverse\": \"index-module__flex-xl-row-reverse__O8p-w\",\n\t\"flex-xl-column-reverse\": \"index-module__flex-xl-column-reverse__ajrCo\",\n\t\"flex-xl-wrap\": \"index-module__flex-xl-wrap__34zm7\",\n\t\"flex-xl-nowrap\": \"index-module__flex-xl-nowrap__2IA-h\",\n\t\"flex-xl-wrap-reverse\": \"index-module__flex-xl-wrap-reverse__a6aWr\",\n\t\"flex-xl-fill\": \"index-module__flex-xl-fill__3rzig\",\n\t\"flex-xl-grow-0\": \"index-module__flex-xl-grow-0__3MUTQ\",\n\t\"flex-xl-grow-1\": \"index-module__flex-xl-grow-1__2fkua\",\n\t\"flex-xl-shrink-0\": \"index-module__flex-xl-shrink-0__1GTOW\",\n\t\"flex-xl-shrink-1\": \"index-module__flex-xl-shrink-1__3fvXj\",\n\t\"justify-content-xl-start\": \"index-module__justify-content-xl-start__2m5Kf\",\n\t\"justify-content-xl-end\": \"index-module__justify-content-xl-end__3jKqh\",\n\t\"justify-content-xl-center\": \"index-module__justify-content-xl-center__f_V4w\",\n\t\"justify-content-xl-between\": \"index-module__justify-content-xl-between__3Z3Qx\",\n\t\"justify-content-xl-around\": \"index-module__justify-content-xl-around__1ak2X\",\n\t\"align-items-xl-start\": \"index-module__align-items-xl-start__RX8_l\",\n\t\"align-items-xl-end\": \"index-module__align-items-xl-end__l9w9U\",\n\t\"align-items-xl-center\": \"index-module__align-items-xl-center__2Wxqa\",\n\t\"align-items-xl-baseline\": \"index-module__align-items-xl-baseline__3pCGZ\",\n\t\"align-items-xl-stretch\": \"index-module__align-items-xl-stretch__3HJ0Y\",\n\t\"align-content-xl-start\": \"index-module__align-content-xl-start__3Q5-a\",\n\t\"align-content-xl-end\": \"index-module__align-content-xl-end__1GJCc\",\n\t\"align-content-xl-center\": \"index-module__align-content-xl-center__2E0uB\",\n\t\"align-content-xl-between\": \"index-module__align-content-xl-between__OX8EN\",\n\t\"align-content-xl-around\": \"index-module__align-content-xl-around__3US3D\",\n\t\"align-content-xl-stretch\": \"index-module__align-content-xl-stretch__y0bVZ\",\n\t\"align-self-xl-auto\": \"index-module__align-self-xl-auto__HEXjT\",\n\t\"align-self-xl-start\": \"index-module__align-self-xl-start__1pgdI\",\n\t\"align-self-xl-end\": \"index-module__align-self-xl-end__38P43\",\n\t\"align-self-xl-center\": \"index-module__align-self-xl-center__10iLa\",\n\t\"align-self-xl-baseline\": \"index-module__align-self-xl-baseline__3usxa\",\n\t\"align-self-xl-stretch\": \"index-module__align-self-xl-stretch__wGjfY\",\n\t\"float-left\": \"index-module__float-left__2ItlT\",\n\t\"float-right\": \"index-module__float-right__13qtj\",\n\t\"float-none\": \"index-module__float-none__1WMWR\",\n\t\"float-sm-left\": \"index-module__float-sm-left__1_6W8\",\n\t\"float-sm-right\": \"index-module__float-sm-right__2TmyR\",\n\t\"float-sm-none\": \"index-module__float-sm-none__mby_i\",\n\t\"float-md-left\": \"index-module__float-md-left__21sb4\",\n\t\"float-md-right\": \"index-module__float-md-right__2rZhy\",\n\t\"float-md-none\": \"index-module__float-md-none__LVtgq\",\n\t\"float-lg-left\": \"index-module__float-lg-left__1hDZR\",\n\t\"float-lg-right\": \"index-module__float-lg-right__1Q1Vg\",\n\t\"float-lg-none\": \"index-module__float-lg-none__2kloU\",\n\t\"float-xl-left\": \"index-module__float-xl-left__1Ipg5\",\n\t\"float-xl-right\": \"index-module__float-xl-right__3z1P5\",\n\t\"float-xl-none\": \"index-module__float-xl-none__3CgDx\",\n\t\"overflow-auto\": \"index-module__overflow-auto__1_LnW\",\n\t\"overflow-hidden\": \"index-module__overflow-hidden__1N-pd\",\n\t\"position-static\": \"index-module__position-static__1Cih-\",\n\t\"position-relative\": \"index-module__position-relative__yYqey\",\n\t\"position-absolute\": \"index-module__position-absolute__Q5jhn\",\n\t\"position-fixed\": \"index-module__position-fixed__3_uIf\",\n\t\"position-sticky\": \"index-module__position-sticky__3BADn\",\n\t\"fixed-top\": \"index-module__fixed-top__SAxfM\",\n\t\"fixed-bottom\": \"index-module__fixed-bottom__1ReKY\",\n\t\"sticky-top\": \"index-module__sticky-top__1KjAB\",\n\t\"sr-only\": \"index-module__sr-only__1dHXJ\",\n\t\"sr-only-focusable\": \"index-module__sr-only-focusable__3MxNf\",\n\t\"shadow-sm\": \"index-module__shadow-sm__xdpcj\",\n\t\"shadow\": \"index-module__shadow__zNlgF\",\n\t\"shadow-lg\": \"index-module__shadow-lg__3tMpx\",\n\t\"shadow-none\": \"index-module__shadow-none__3XTEz\",\n\t\"w-25\": \"index-module__w-25__3Ky3f\",\n\t\"w-50\": \"index-module__w-50___jH8R\",\n\t\"w-75\": \"index-module__w-75__1gEeF\",\n\t\"w-100\": \"index-module__w-100__1CQ4t\",\n\t\"w-auto\": \"index-module__w-auto__1Nmo7\",\n\t\"h-25\": \"index-module__h-25__1AqXI\",\n\t\"h-50\": \"index-module__h-50__36dGq\",\n\t\"h-75\": \"index-module__h-75__dmFFp\",\n\t\"h-100\": \"index-module__h-100__1vS0I\",\n\t\"h-auto\": \"index-module__h-auto__2l9Zr\",\n\t\"mw-100\": \"index-module__mw-100__2WQ1C\",\n\t\"mh-100\": \"index-module__mh-100__Szyu-\",\n\t\"min-vw-100\": \"index-module__min-vw-100__1rHjv\",\n\t\"min-vh-100\": \"index-module__min-vh-100__fNIrY\",\n\t\"vw-100\": \"index-module__vw-100__dhfVX\",\n\t\"vh-100\": \"index-module__vh-100__1l6Oa\",\n\t\"stretched-link\": \"index-module__stretched-link__YNqTs\",\n\t\"m-0\": \"index-module__m-0__3Bg6F\",\n\t\"mt-0\": \"index-module__mt-0__27bpg\",\n\t\"my-0\": \"index-module__my-0__2wjB_\",\n\t\"mr-0\": \"index-module__mr-0__-mY-V\",\n\t\"mx-0\": \"index-module__mx-0__nf3Oa\",\n\t\"mb-0\": \"index-module__mb-0__1Xfp4\",\n\t\"ml-0\": \"index-module__ml-0__1vuq_\",\n\t\"m-1\": \"index-module__m-1__3N_AO\",\n\t\"mt-1\": \"index-module__mt-1__UOfnZ\",\n\t\"my-1\": \"index-module__my-1__2vIKj\",\n\t\"mr-1\": \"index-module__mr-1__ScRhc\",\n\t\"mx-1\": \"index-module__mx-1__2ahHv\",\n\t\"mb-1\": \"index-module__mb-1__mJEqk\",\n\t\"ml-1\": \"index-module__ml-1__1nlqW\",\n\t\"m-2\": \"index-module__m-2__2SBpn\",\n\t\"mt-2\": \"index-module__mt-2__xxQYp\",\n\t\"my-2\": \"index-module__my-2__CMVC9\",\n\t\"mr-2\": \"index-module__mr-2__16QXx\",\n\t\"mx-2\": \"index-module__mx-2__2K4C7\",\n\t\"mb-2\": \"index-module__mb-2__30dJ-\",\n\t\"ml-2\": \"index-module__ml-2__GCQY5\",\n\t\"m-3\": \"index-module__m-3__73S80\",\n\t\"mt-3\": \"index-module__mt-3__3oY2q\",\n\t\"my-3\": \"index-module__my-3__1HVMW\",\n\t\"mr-3\": \"index-module__mr-3__1-dNe\",\n\t\"mx-3\": \"index-module__mx-3__wfPc3\",\n\t\"mb-3\": \"index-module__mb-3__27Icc\",\n\t\"ml-3\": \"index-module__ml-3__F4qVT\",\n\t\"m-4\": \"index-module__m-4__1sF0p\",\n\t\"mt-4\": \"index-module__mt-4__3boPd\",\n\t\"my-4\": \"index-module__my-4__2Z3iO\",\n\t\"mr-4\": \"index-module__mr-4__2wQ8M\",\n\t\"mx-4\": \"index-module__mx-4__10rTx\",\n\t\"mb-4\": \"index-module__mb-4__3GkHJ\",\n\t\"ml-4\": \"index-module__ml-4__gQwnv\",\n\t\"m-5\": \"index-module__m-5__o9vyd\",\n\t\"mt-5\": \"index-module__mt-5__FgDSC\",\n\t\"my-5\": \"index-module__my-5__1GaRc\",\n\t\"mr-5\": \"index-module__mr-5__22MnS\",\n\t\"mx-5\": \"index-module__mx-5__21F_v\",\n\t\"mb-5\": \"index-module__mb-5__28_jw\",\n\t\"ml-5\": \"index-module__ml-5__L28BX\",\n\t\"p-0\": \"index-module__p-0__3Q0fl\",\n\t\"pt-0\": \"index-module__pt-0__1YRFC\",\n\t\"py-0\": \"index-module__py-0__28r0a\",\n\t\"pr-0\": \"index-module__pr-0__1mw5I\",\n\t\"px-0\": \"index-module__px-0__2jMKp\",\n\t\"pb-0\": \"index-module__pb-0__SMGwc\",\n\t\"pl-0\": \"index-module__pl-0__ttynt\",\n\t\"p-1\": \"index-module__p-1__16jwj\",\n\t\"pt-1\": \"index-module__pt-1__33TEj\",\n\t\"py-1\": \"index-module__py-1__1sGR7\",\n\t\"pr-1\": \"index-module__pr-1__2Pujk\",\n\t\"px-1\": \"index-module__px-1__bBl_O\",\n\t\"pb-1\": \"index-module__pb-1__3StZv\",\n\t\"pl-1\": \"index-module__pl-1__pTKa8\",\n\t\"p-2\": \"index-module__p-2__cN3ho\",\n\t\"pt-2\": \"index-module__pt-2__EVSE3\",\n\t\"py-2\": \"index-module__py-2__2Yebw\",\n\t\"pr-2\": \"index-module__pr-2__gtAKV\",\n\t\"px-2\": \"index-module__px-2__2_M5u\",\n\t\"pb-2\": \"index-module__pb-2__2Bj9S\",\n\t\"pl-2\": \"index-module__pl-2__2OxRa\",\n\t\"p-3\": \"index-module__p-3__3WCcC\",\n\t\"pt-3\": \"index-module__pt-3__3YKqE\",\n\t\"py-3\": \"index-module__py-3__IzPwi\",\n\t\"pr-3\": \"index-module__pr-3__32OrT\",\n\t\"px-3\": \"index-module__px-3__1VWr6\",\n\t\"pb-3\": \"index-module__pb-3__2K-7M\",\n\t\"pl-3\": \"index-module__pl-3__29nIA\",\n\t\"p-4\": \"index-module__p-4__1iy78\",\n\t\"pt-4\": \"index-module__pt-4__3ps9a\",\n\t\"py-4\": \"index-module__py-4__ceYxD\",\n\t\"pr-4\": \"index-module__pr-4__3pIXG\",\n\t\"px-4\": \"index-module__px-4__jBFWx\",\n\t\"pb-4\": \"index-module__pb-4__3Xf0V\",\n\t\"pl-4\": \"index-module__pl-4__iCMoO\",\n\t\"p-5\": \"index-module__p-5__2R6jq\",\n\t\"pt-5\": \"index-module__pt-5__J3MKH\",\n\t\"py-5\": \"index-module__py-5__2wGce\",\n\t\"pr-5\": \"index-module__pr-5__29xN7\",\n\t\"px-5\": \"index-module__px-5__2j1jE\",\n\t\"pb-5\": \"index-module__pb-5__3FtU_\",\n\t\"pl-5\": \"index-module__pl-5__MkEO2\",\n\t\"m-n1\": \"index-module__m-n1__3cNmb\",\n\t\"mt-n1\": \"index-module__mt-n1__bzEMB\",\n\t\"my-n1\": \"index-module__my-n1__kz_uY\",\n\t\"mr-n1\": \"index-module__mr-n1__1NHNL\",\n\t\"mx-n1\": \"index-module__mx-n1__14Riz\",\n\t\"mb-n1\": \"index-module__mb-n1__2COD5\",\n\t\"ml-n1\": \"index-module__ml-n1__2wM_8\",\n\t\"m-n2\": \"index-module__m-n2__1VzlW\",\n\t\"mt-n2\": \"index-module__mt-n2___XoWx\",\n\t\"my-n2\": \"index-module__my-n2__29vLf\",\n\t\"mr-n2\": \"index-module__mr-n2__w_PMi\",\n\t\"mx-n2\": \"index-module__mx-n2__bNnbe\",\n\t\"mb-n2\": \"index-module__mb-n2__1WNYR\",\n\t\"ml-n2\": \"index-module__ml-n2__3xsEF\",\n\t\"m-n3\": \"index-module__m-n3__uO8Ib\",\n\t\"mt-n3\": \"index-module__mt-n3__1_4sQ\",\n\t\"my-n3\": \"index-module__my-n3__3U460\",\n\t\"mr-n3\": \"index-module__mr-n3__2VgEm\",\n\t\"mx-n3\": \"index-module__mx-n3__1UFaP\",\n\t\"mb-n3\": \"index-module__mb-n3__19RHK\",\n\t\"ml-n3\": \"index-module__ml-n3__1sXdk\",\n\t\"m-n4\": \"index-module__m-n4__2YT-u\",\n\t\"mt-n4\": \"index-module__mt-n4__2ipXo\",\n\t\"my-n4\": \"index-module__my-n4__2L3wJ\",\n\t\"mr-n4\": \"index-module__mr-n4__3SiU_\",\n\t\"mx-n4\": \"index-module__mx-n4__a3ZmA\",\n\t\"mb-n4\": \"index-module__mb-n4__36HfO\",\n\t\"ml-n4\": \"index-module__ml-n4__s3pL9\",\n\t\"m-n5\": \"index-module__m-n5__1zXc2\",\n\t\"mt-n5\": \"index-module__mt-n5__quEl_\",\n\t\"my-n5\": \"index-module__my-n5__3fVUd\",\n\t\"mr-n5\": \"index-module__mr-n5__2oiUc\",\n\t\"mx-n5\": \"index-module__mx-n5__qePd-\",\n\t\"mb-n5\": \"index-module__mb-n5__L4Uae\",\n\t\"ml-n5\": \"index-module__ml-n5__2DqqR\",\n\t\"m-auto\": \"index-module__m-auto__dI9nI\",\n\t\"mt-auto\": \"index-module__mt-auto__3XA8C\",\n\t\"my-auto\": \"index-module__my-auto__187En\",\n\t\"mr-auto\": \"index-module__mr-auto__27KoY\",\n\t\"mx-auto\": \"index-module__mx-auto__17mnR\",\n\t\"mb-auto\": \"index-module__mb-auto__2H255\",\n\t\"ml-auto\": \"index-module__ml-auto__1REk7\",\n\t\"m-sm-0\": \"index-module__m-sm-0__UOxaM\",\n\t\"mt-sm-0\": \"index-module__mt-sm-0__2gQ0K\",\n\t\"my-sm-0\": \"index-module__my-sm-0__2SUDn\",\n\t\"mr-sm-0\": \"index-module__mr-sm-0__Q12to\",\n\t\"mx-sm-0\": \"index-module__mx-sm-0__20vT3\",\n\t\"mb-sm-0\": \"index-module__mb-sm-0__OOHPy\",\n\t\"ml-sm-0\": \"index-module__ml-sm-0__AUKWP\",\n\t\"m-sm-1\": \"index-module__m-sm-1__1MxFe\",\n\t\"mt-sm-1\": \"index-module__mt-sm-1__yWOGf\",\n\t\"my-sm-1\": \"index-module__my-sm-1__2N-jx\",\n\t\"mr-sm-1\": \"index-module__mr-sm-1__3tnYj\",\n\t\"mx-sm-1\": \"index-module__mx-sm-1__36U93\",\n\t\"mb-sm-1\": \"index-module__mb-sm-1__102ZE\",\n\t\"ml-sm-1\": \"index-module__ml-sm-1__p0t6e\",\n\t\"m-sm-2\": \"index-module__m-sm-2__3pD_1\",\n\t\"mt-sm-2\": \"index-module__mt-sm-2__2zgHD\",\n\t\"my-sm-2\": \"index-module__my-sm-2__xuzYd\",\n\t\"mr-sm-2\": \"index-module__mr-sm-2__2da9W\",\n\t\"mx-sm-2\": \"index-module__mx-sm-2__2NmZs\",\n\t\"mb-sm-2\": \"index-module__mb-sm-2__3a934\",\n\t\"ml-sm-2\": \"index-module__ml-sm-2__39sBO\",\n\t\"m-sm-3\": \"index-module__m-sm-3__1Jrdt\",\n\t\"mt-sm-3\": \"index-module__mt-sm-3__295No\",\n\t\"my-sm-3\": \"index-module__my-sm-3__W0MlH\",\n\t\"mr-sm-3\": \"index-module__mr-sm-3__3Jts6\",\n\t\"mx-sm-3\": \"index-module__mx-sm-3__17DH5\",\n\t\"mb-sm-3\": \"index-module__mb-sm-3__3ghuC\",\n\t\"ml-sm-3\": \"index-module__ml-sm-3__1tCRJ\",\n\t\"m-sm-4\": \"index-module__m-sm-4__3B-ju\",\n\t\"mt-sm-4\": \"index-module__mt-sm-4__1XjzN\",\n\t\"my-sm-4\": \"index-module__my-sm-4__gbDxr\",\n\t\"mr-sm-4\": \"index-module__mr-sm-4__2431H\",\n\t\"mx-sm-4\": \"index-module__mx-sm-4__1Ge7E\",\n\t\"mb-sm-4\": \"index-module__mb-sm-4__2IiqN\",\n\t\"ml-sm-4\": \"index-module__ml-sm-4__1Z5su\",\n\t\"m-sm-5\": \"index-module__m-sm-5__10iDU\",\n\t\"mt-sm-5\": \"index-module__mt-sm-5__1x0ic\",\n\t\"my-sm-5\": \"index-module__my-sm-5__xKhQ3\",\n\t\"mr-sm-5\": \"index-module__mr-sm-5__OeP5h\",\n\t\"mx-sm-5\": \"index-module__mx-sm-5__1tR-u\",\n\t\"mb-sm-5\": \"index-module__mb-sm-5__21BXm\",\n\t\"ml-sm-5\": \"index-module__ml-sm-5__14mlm\",\n\t\"p-sm-0\": \"index-module__p-sm-0___dVPi\",\n\t\"pt-sm-0\": \"index-module__pt-sm-0__3GUOK\",\n\t\"py-sm-0\": \"index-module__py-sm-0__14r0T\",\n\t\"pr-sm-0\": \"index-module__pr-sm-0__2AHr-\",\n\t\"px-sm-0\": \"index-module__px-sm-0__2JGxn\",\n\t\"pb-sm-0\": \"index-module__pb-sm-0__2mgJa\",\n\t\"pl-sm-0\": \"index-module__pl-sm-0__3jbjV\",\n\t\"p-sm-1\": \"index-module__p-sm-1__2EZMF\",\n\t\"pt-sm-1\": \"index-module__pt-sm-1__2plGi\",\n\t\"py-sm-1\": \"index-module__py-sm-1__3pnWv\",\n\t\"pr-sm-1\": \"index-module__pr-sm-1__2L3Ge\",\n\t\"px-sm-1\": \"index-module__px-sm-1__3C-dc\",\n\t\"pb-sm-1\": \"index-module__pb-sm-1__oigIb\",\n\t\"pl-sm-1\": \"index-module__pl-sm-1__RVNGg\",\n\t\"p-sm-2\": \"index-module__p-sm-2__1aK5L\",\n\t\"pt-sm-2\": \"index-module__pt-sm-2__2GK6S\",\n\t\"py-sm-2\": \"index-module__py-sm-2__tE2NK\",\n\t\"pr-sm-2\": \"index-module__pr-sm-2__1-AjD\",\n\t\"px-sm-2\": \"index-module__px-sm-2__1KlDf\",\n\t\"pb-sm-2\": \"index-module__pb-sm-2__aurHt\",\n\t\"pl-sm-2\": \"index-module__pl-sm-2__1CoNX\",\n\t\"p-sm-3\": \"index-module__p-sm-3__1nWcE\",\n\t\"pt-sm-3\": \"index-module__pt-sm-3__1TSL5\",\n\t\"py-sm-3\": \"index-module__py-sm-3__3cVeT\",\n\t\"pr-sm-3\": \"index-module__pr-sm-3__1dCOd\",\n\t\"px-sm-3\": \"index-module__px-sm-3__2g26l\",\n\t\"pb-sm-3\": \"index-module__pb-sm-3__PwaR-\",\n\t\"pl-sm-3\": \"index-module__pl-sm-3__1aTAU\",\n\t\"p-sm-4\": \"index-module__p-sm-4__3YDMm\",\n\t\"pt-sm-4\": \"index-module__pt-sm-4__3iG51\",\n\t\"py-sm-4\": \"index-module__py-sm-4__IsMNy\",\n\t\"pr-sm-4\": \"index-module__pr-sm-4__QJPK6\",\n\t\"px-sm-4\": \"index-module__px-sm-4__2dKrX\",\n\t\"pb-sm-4\": \"index-module__pb-sm-4__i-pVm\",\n\t\"pl-sm-4\": \"index-module__pl-sm-4__2ttje\",\n\t\"p-sm-5\": \"index-module__p-sm-5__1mMmk\",\n\t\"pt-sm-5\": \"index-module__pt-sm-5__GByCK\",\n\t\"py-sm-5\": \"index-module__py-sm-5__1-UnJ\",\n\t\"pr-sm-5\": \"index-module__pr-sm-5__2rXQa\",\n\t\"px-sm-5\": \"index-module__px-sm-5__2fC4g\",\n\t\"pb-sm-5\": \"index-module__pb-sm-5__2mx_C\",\n\t\"pl-sm-5\": \"index-module__pl-sm-5__e7rD8\",\n\t\"m-sm-n1\": \"index-module__m-sm-n1__3Gp2a\",\n\t\"mt-sm-n1\": \"index-module__mt-sm-n1__32B7m\",\n\t\"my-sm-n1\": \"index-module__my-sm-n1__37rh6\",\n\t\"mr-sm-n1\": \"index-module__mr-sm-n1__3wbn0\",\n\t\"mx-sm-n1\": \"index-module__mx-sm-n1__1Z_8O\",\n\t\"mb-sm-n1\": \"index-module__mb-sm-n1__3BhoV\",\n\t\"ml-sm-n1\": \"index-module__ml-sm-n1__3SjVT\",\n\t\"m-sm-n2\": \"index-module__m-sm-n2__1bK2c\",\n\t\"mt-sm-n2\": \"index-module__mt-sm-n2__3ybVY\",\n\t\"my-sm-n2\": \"index-module__my-sm-n2__3HT7k\",\n\t\"mr-sm-n2\": \"index-module__mr-sm-n2__CM7aG\",\n\t\"mx-sm-n2\": \"index-module__mx-sm-n2__2X9c_\",\n\t\"mb-sm-n2\": \"index-module__mb-sm-n2__1a1bZ\",\n\t\"ml-sm-n2\": \"index-module__ml-sm-n2__1zsa8\",\n\t\"m-sm-n3\": \"index-module__m-sm-n3__21sAz\",\n\t\"mt-sm-n3\": \"index-module__mt-sm-n3__36X8y\",\n\t\"my-sm-n3\": \"index-module__my-sm-n3__3-A9I\",\n\t\"mr-sm-n3\": \"index-module__mr-sm-n3__uuKtu\",\n\t\"mx-sm-n3\": \"index-module__mx-sm-n3__11Xqy\",\n\t\"mb-sm-n3\": \"index-module__mb-sm-n3__rPKJx\",\n\t\"ml-sm-n3\": \"index-module__ml-sm-n3__5i0H_\",\n\t\"m-sm-n4\": \"index-module__m-sm-n4__3i1_p\",\n\t\"mt-sm-n4\": \"index-module__mt-sm-n4__ebkWf\",\n\t\"my-sm-n4\": \"index-module__my-sm-n4__AK50h\",\n\t\"mr-sm-n4\": \"index-module__mr-sm-n4__2k9cY\",\n\t\"mx-sm-n4\": \"index-module__mx-sm-n4__oiX2h\",\n\t\"mb-sm-n4\": \"index-module__mb-sm-n4__1bf-0\",\n\t\"ml-sm-n4\": \"index-module__ml-sm-n4__2QfZ7\",\n\t\"m-sm-n5\": \"index-module__m-sm-n5__2dnGS\",\n\t\"mt-sm-n5\": \"index-module__mt-sm-n5__rp2Sx\",\n\t\"my-sm-n5\": \"index-module__my-sm-n5__As_bH\",\n\t\"mr-sm-n5\": \"index-module__mr-sm-n5__1TLjR\",\n\t\"mx-sm-n5\": \"index-module__mx-sm-n5__28a4H\",\n\t\"mb-sm-n5\": \"index-module__mb-sm-n5__SGM_V\",\n\t\"ml-sm-n5\": \"index-module__ml-sm-n5__2B5Nx\",\n\t\"m-sm-auto\": \"index-module__m-sm-auto__285Ue\",\n\t\"mt-sm-auto\": \"index-module__mt-sm-auto__3SY_B\",\n\t\"my-sm-auto\": \"index-module__my-sm-auto__3zVYa\",\n\t\"mr-sm-auto\": \"index-module__mr-sm-auto__3m1uH\",\n\t\"mx-sm-auto\": \"index-module__mx-sm-auto__1CsDx\",\n\t\"mb-sm-auto\": \"index-module__mb-sm-auto__2H81k\",\n\t\"ml-sm-auto\": \"index-module__ml-sm-auto__3PlBs\",\n\t\"m-md-0\": \"index-module__m-md-0__k6-mR\",\n\t\"mt-md-0\": \"index-module__mt-md-0__1oMw1\",\n\t\"my-md-0\": \"index-module__my-md-0__2A5vs\",\n\t\"mr-md-0\": \"index-module__mr-md-0__2M0kU\",\n\t\"mx-md-0\": \"index-module__mx-md-0__ywKd9\",\n\t\"mb-md-0\": \"index-module__mb-md-0__2u8YT\",\n\t\"ml-md-0\": \"index-module__ml-md-0__2L6Yu\",\n\t\"m-md-1\": \"index-module__m-md-1__1uqMa\",\n\t\"mt-md-1\": \"index-module__mt-md-1__129F4\",\n\t\"my-md-1\": \"index-module__my-md-1__3rwif\",\n\t\"mr-md-1\": \"index-module__mr-md-1__3u0mT\",\n\t\"mx-md-1\": \"index-module__mx-md-1__1M8C6\",\n\t\"mb-md-1\": \"index-module__mb-md-1__1sN4X\",\n\t\"ml-md-1\": \"index-module__ml-md-1__2fkpR\",\n\t\"m-md-2\": \"index-module__m-md-2__I8wp7\",\n\t\"mt-md-2\": \"index-module__mt-md-2__2z8zU\",\n\t\"my-md-2\": \"index-module__my-md-2__2SI64\",\n\t\"mr-md-2\": \"index-module__mr-md-2__2klLR\",\n\t\"mx-md-2\": \"index-module__mx-md-2__1K3bx\",\n\t\"mb-md-2\": \"index-module__mb-md-2__2nkny\",\n\t\"ml-md-2\": \"index-module__ml-md-2__1oJFk\",\n\t\"m-md-3\": \"index-module__m-md-3__qO5xs\",\n\t\"mt-md-3\": \"index-module__mt-md-3__3vyZP\",\n\t\"my-md-3\": \"index-module__my-md-3__1u3mC\",\n\t\"mr-md-3\": \"index-module__mr-md-3__3UrxW\",\n\t\"mx-md-3\": \"index-module__mx-md-3__4c7OH\",\n\t\"mb-md-3\": \"index-module__mb-md-3__2xpy7\",\n\t\"ml-md-3\": \"index-module__ml-md-3__3T_U-\",\n\t\"m-md-4\": \"index-module__m-md-4__2thHI\",\n\t\"mt-md-4\": \"index-module__mt-md-4__1kbZo\",\n\t\"my-md-4\": \"index-module__my-md-4__eNl4L\",\n\t\"mr-md-4\": \"index-module__mr-md-4__1GpR2\",\n\t\"mx-md-4\": \"index-module__mx-md-4__eo4A4\",\n\t\"mb-md-4\": \"index-module__mb-md-4__3x-09\",\n\t\"ml-md-4\": \"index-module__ml-md-4__O02OL\",\n\t\"m-md-5\": \"index-module__m-md-5__2KnM2\",\n\t\"mt-md-5\": \"index-module__mt-md-5__1Yxze\",\n\t\"my-md-5\": \"index-module__my-md-5__xamyy\",\n\t\"mr-md-5\": \"index-module__mr-md-5__1t5Mt\",\n\t\"mx-md-5\": \"index-module__mx-md-5__2f8-l\",\n\t\"mb-md-5\": \"index-module__mb-md-5__-AzcE\",\n\t\"ml-md-5\": \"index-module__ml-md-5__2b3D5\",\n\t\"p-md-0\": \"index-module__p-md-0__2891w\",\n\t\"pt-md-0\": \"index-module__pt-md-0__1GMZ7\",\n\t\"py-md-0\": \"index-module__py-md-0__3tUXv\",\n\t\"pr-md-0\": \"index-module__pr-md-0__3rc_C\",\n\t\"px-md-0\": \"index-module__px-md-0__Q6C4n\",\n\t\"pb-md-0\": \"index-module__pb-md-0__3VtR1\",\n\t\"pl-md-0\": \"index-module__pl-md-0__laFsD\",\n\t\"p-md-1\": \"index-module__p-md-1__29Rpd\",\n\t\"pt-md-1\": \"index-module__pt-md-1__1JtaW\",\n\t\"py-md-1\": \"index-module__py-md-1__26upk\",\n\t\"pr-md-1\": \"index-module__pr-md-1__3qIBb\",\n\t\"px-md-1\": \"index-module__px-md-1__1RUQF\",\n\t\"pb-md-1\": \"index-module__pb-md-1__1D6nW\",\n\t\"pl-md-1\": \"index-module__pl-md-1__2vAf3\",\n\t\"p-md-2\": \"index-module__p-md-2__3S59W\",\n\t\"pt-md-2\": \"index-module__pt-md-2__-QjXC\",\n\t\"py-md-2\": \"index-module__py-md-2__3p7-Z\",\n\t\"pr-md-2\": \"index-module__pr-md-2__2R91o\",\n\t\"px-md-2\": \"index-module__px-md-2__dt1D-\",\n\t\"pb-md-2\": \"index-module__pb-md-2__3dIsl\",\n\t\"pl-md-2\": \"index-module__pl-md-2__LYgpO\",\n\t\"p-md-3\": \"index-module__p-md-3__3HJKc\",\n\t\"pt-md-3\": \"index-module__pt-md-3__W5pI4\",\n\t\"py-md-3\": \"index-module__py-md-3__2BqnX\",\n\t\"pr-md-3\": \"index-module__pr-md-3__2jRCO\",\n\t\"px-md-3\": \"index-module__px-md-3__1O5BH\",\n\t\"pb-md-3\": \"index-module__pb-md-3__2O0vh\",\n\t\"pl-md-3\": \"index-module__pl-md-3__2CSFh\",\n\t\"p-md-4\": \"index-module__p-md-4__c7dhP\",\n\t\"pt-md-4\": \"index-module__pt-md-4__27EVY\",\n\t\"py-md-4\": \"index-module__py-md-4__1BntI\",\n\t\"pr-md-4\": \"index-module__pr-md-4__3H38H\",\n\t\"px-md-4\": \"index-module__px-md-4__o4cnu\",\n\t\"pb-md-4\": \"index-module__pb-md-4__26vru\",\n\t\"pl-md-4\": \"index-module__pl-md-4__2s7e8\",\n\t\"p-md-5\": \"index-module__p-md-5__ZrOzJ\",\n\t\"pt-md-5\": \"index-module__pt-md-5__1TXdP\",\n\t\"py-md-5\": \"index-module__py-md-5__3zbsn\",\n\t\"pr-md-5\": \"index-module__pr-md-5__1raWv\",\n\t\"px-md-5\": \"index-module__px-md-5__2biS5\",\n\t\"pb-md-5\": \"index-module__pb-md-5__qwDUp\",\n\t\"pl-md-5\": \"index-module__pl-md-5__3jLp6\",\n\t\"m-md-n1\": \"index-module__m-md-n1__nkxoD\",\n\t\"mt-md-n1\": \"index-module__mt-md-n1__DwjNx\",\n\t\"my-md-n1\": \"index-module__my-md-n1__wZZBt\",\n\t\"mr-md-n1\": \"index-module__mr-md-n1__zON98\",\n\t\"mx-md-n1\": \"index-module__mx-md-n1__3UEWe\",\n\t\"mb-md-n1\": \"index-module__mb-md-n1__1rQzo\",\n\t\"ml-md-n1\": \"index-module__ml-md-n1__PHLiP\",\n\t\"m-md-n2\": \"index-module__m-md-n2__3AcDB\",\n\t\"mt-md-n2\": \"index-module__mt-md-n2__3TeF-\",\n\t\"my-md-n2\": \"index-module__my-md-n2__dvNVp\",\n\t\"mr-md-n2\": \"index-module__mr-md-n2__9Qsg5\",\n\t\"mx-md-n2\": \"index-module__mx-md-n2__f6FTY\",\n\t\"mb-md-n2\": \"index-module__mb-md-n2__3Armk\",\n\t\"ml-md-n2\": \"index-module__ml-md-n2__HEAx8\",\n\t\"m-md-n3\": \"index-module__m-md-n3__qusyy\",\n\t\"mt-md-n3\": \"index-module__mt-md-n3__3A9X1\",\n\t\"my-md-n3\": \"index-module__my-md-n3__2IL19\",\n\t\"mr-md-n3\": \"index-module__mr-md-n3__3r8Dm\",\n\t\"mx-md-n3\": \"index-module__mx-md-n3__t4ZYA\",\n\t\"mb-md-n3\": \"index-module__mb-md-n3__3M8Tk\",\n\t\"ml-md-n3\": \"index-module__ml-md-n3__1aZyg\",\n\t\"m-md-n4\": \"index-module__m-md-n4__2tW0B\",\n\t\"mt-md-n4\": \"index-module__mt-md-n4__3voqs\",\n\t\"my-md-n4\": \"index-module__my-md-n4__Epsfz\",\n\t\"mr-md-n4\": \"index-module__mr-md-n4__2ZCPw\",\n\t\"mx-md-n4\": \"index-module__mx-md-n4__1ni40\",\n\t\"mb-md-n4\": \"index-module__mb-md-n4__22vW2\",\n\t\"ml-md-n4\": \"index-module__ml-md-n4__1SNAt\",\n\t\"m-md-n5\": \"index-module__m-md-n5__1SQ2K\",\n\t\"mt-md-n5\": \"index-module__mt-md-n5__gpKRF\",\n\t\"my-md-n5\": \"index-module__my-md-n5__3prNT\",\n\t\"mr-md-n5\": \"index-module__mr-md-n5__2jncD\",\n\t\"mx-md-n5\": \"index-module__mx-md-n5__wgakg\",\n\t\"mb-md-n5\": \"index-module__mb-md-n5__3QTky\",\n\t\"ml-md-n5\": \"index-module__ml-md-n5__bKY0j\",\n\t\"m-md-auto\": \"index-module__m-md-auto__Fx8Tj\",\n\t\"mt-md-auto\": \"index-module__mt-md-auto__3UILE\",\n\t\"my-md-auto\": \"index-module__my-md-auto__37_se\",\n\t\"mr-md-auto\": \"index-module__mr-md-auto__3a3Id\",\n\t\"mx-md-auto\": \"index-module__mx-md-auto__3eZSL\",\n\t\"mb-md-auto\": \"index-module__mb-md-auto__IQQqh\",\n\t\"ml-md-auto\": \"index-module__ml-md-auto__2OswT\",\n\t\"m-lg-0\": \"index-module__m-lg-0__3T7J6\",\n\t\"mt-lg-0\": \"index-module__mt-lg-0__25ZBB\",\n\t\"my-lg-0\": \"index-module__my-lg-0__1b5Sv\",\n\t\"mr-lg-0\": \"index-module__mr-lg-0__1riDY\",\n\t\"mx-lg-0\": \"index-module__mx-lg-0__2brbT\",\n\t\"mb-lg-0\": \"index-module__mb-lg-0__1EttO\",\n\t\"ml-lg-0\": \"index-module__ml-lg-0__1hR8s\",\n\t\"m-lg-1\": \"index-module__m-lg-1__2LeSK\",\n\t\"mt-lg-1\": \"index-module__mt-lg-1__1R9N4\",\n\t\"my-lg-1\": \"index-module__my-lg-1__kCESn\",\n\t\"mr-lg-1\": \"index-module__mr-lg-1__2sgvZ\",\n\t\"mx-lg-1\": \"index-module__mx-lg-1__3VpjD\",\n\t\"mb-lg-1\": \"index-module__mb-lg-1__37PHX\",\n\t\"ml-lg-1\": \"index-module__ml-lg-1__1larX\",\n\t\"m-lg-2\": \"index-module__m-lg-2__28Sbd\",\n\t\"mt-lg-2\": \"index-module__mt-lg-2__1V-hP\",\n\t\"my-lg-2\": \"index-module__my-lg-2__EL4e_\",\n\t\"mr-lg-2\": \"index-module__mr-lg-2__2Yc29\",\n\t\"mx-lg-2\": \"index-module__mx-lg-2__38i2l\",\n\t\"mb-lg-2\": \"index-module__mb-lg-2__2aGYE\",\n\t\"ml-lg-2\": \"index-module__ml-lg-2__2LkeK\",\n\t\"m-lg-3\": \"index-module__m-lg-3__1PYJs\",\n\t\"mt-lg-3\": \"index-module__mt-lg-3__1SfOd\",\n\t\"my-lg-3\": \"index-module__my-lg-3__3rwD-\",\n\t\"mr-lg-3\": \"index-module__mr-lg-3__15EP3\",\n\t\"mx-lg-3\": \"index-module__mx-lg-3__3tlXi\",\n\t\"mb-lg-3\": \"index-module__mb-lg-3__3XQYc\",\n\t\"ml-lg-3\": \"index-module__ml-lg-3__3iImM\",\n\t\"m-lg-4\": \"index-module__m-lg-4__180zk\",\n\t\"mt-lg-4\": \"index-module__mt-lg-4__Z0tDD\",\n\t\"my-lg-4\": \"index-module__my-lg-4__1Ox3I\",\n\t\"mr-lg-4\": \"index-module__mr-lg-4__3GsdM\",\n\t\"mx-lg-4\": \"index-module__mx-lg-4__2K7JE\",\n\t\"mb-lg-4\": \"index-module__mb-lg-4__3dFoL\",\n\t\"ml-lg-4\": \"index-module__ml-lg-4__2B7S8\",\n\t\"m-lg-5\": \"index-module__m-lg-5__35MbW\",\n\t\"mt-lg-5\": \"index-module__mt-lg-5__3xcMv\",\n\t\"my-lg-5\": \"index-module__my-lg-5__oBFUN\",\n\t\"mr-lg-5\": \"index-module__mr-lg-5__1Uc5T\",\n\t\"mx-lg-5\": \"index-module__mx-lg-5__2dtA0\",\n\t\"mb-lg-5\": \"index-module__mb-lg-5__3z6xv\",\n\t\"ml-lg-5\": \"index-module__ml-lg-5__GIRMN\",\n\t\"p-lg-0\": \"index-module__p-lg-0__2x7cr\",\n\t\"pt-lg-0\": \"index-module__pt-lg-0__26i0L\",\n\t\"py-lg-0\": \"index-module__py-lg-0__3SXD9\",\n\t\"pr-lg-0\": \"index-module__pr-lg-0__MYptK\",\n\t\"px-lg-0\": \"index-module__px-lg-0__2R_EL\",\n\t\"pb-lg-0\": \"index-module__pb-lg-0__2V-eh\",\n\t\"pl-lg-0\": \"index-module__pl-lg-0__3myPS\",\n\t\"p-lg-1\": \"index-module__p-lg-1__1UwKW\",\n\t\"pt-lg-1\": \"index-module__pt-lg-1__3U9Xq\",\n\t\"py-lg-1\": \"index-module__py-lg-1__wCoR4\",\n\t\"pr-lg-1\": \"index-module__pr-lg-1__1PRZ8\",\n\t\"px-lg-1\": \"index-module__px-lg-1__3eEMr\",\n\t\"pb-lg-1\": \"index-module__pb-lg-1__uOTWQ\",\n\t\"pl-lg-1\": \"index-module__pl-lg-1__gvWko\",\n\t\"p-lg-2\": \"index-module__p-lg-2__yW4Au\",\n\t\"pt-lg-2\": \"index-module__pt-lg-2__3OiEl\",\n\t\"py-lg-2\": \"index-module__py-lg-2__2gSIv\",\n\t\"pr-lg-2\": \"index-module__pr-lg-2__2FpTd\",\n\t\"px-lg-2\": \"index-module__px-lg-2__2g_pD\",\n\t\"pb-lg-2\": \"index-module__pb-lg-2__1fuq-\",\n\t\"pl-lg-2\": \"index-module__pl-lg-2__19-hq\",\n\t\"p-lg-3\": \"index-module__p-lg-3__2iNOi\",\n\t\"pt-lg-3\": \"index-module__pt-lg-3__1IrlQ\",\n\t\"py-lg-3\": \"index-module__py-lg-3__3FX7-\",\n\t\"pr-lg-3\": \"index-module__pr-lg-3__yWkw4\",\n\t\"px-lg-3\": \"index-module__px-lg-3__3vPvZ\",\n\t\"pb-lg-3\": \"index-module__pb-lg-3__X2AZw\",\n\t\"pl-lg-3\": \"index-module__pl-lg-3__1Lhro\",\n\t\"p-lg-4\": \"index-module__p-lg-4__1VZO7\",\n\t\"pt-lg-4\": \"index-module__pt-lg-4__37k36\",\n\t\"py-lg-4\": \"index-module__py-lg-4__23l1J\",\n\t\"pr-lg-4\": \"index-module__pr-lg-4__3BCp-\",\n\t\"px-lg-4\": \"index-module__px-lg-4__3ir8a\",\n\t\"pb-lg-4\": \"index-module__pb-lg-4__2CCGg\",\n\t\"pl-lg-4\": \"index-module__pl-lg-4__3taiG\",\n\t\"p-lg-5\": \"index-module__p-lg-5__JG0e2\",\n\t\"pt-lg-5\": \"index-module__pt-lg-5__3io5d\",\n\t\"py-lg-5\": \"index-module__py-lg-5__3ULTT\",\n\t\"pr-lg-5\": \"index-module__pr-lg-5__3H1Pj\",\n\t\"px-lg-5\": \"index-module__px-lg-5__17GV_\",\n\t\"pb-lg-5\": \"index-module__pb-lg-5__1CtGg\",\n\t\"pl-lg-5\": \"index-module__pl-lg-5__3qovR\",\n\t\"m-lg-n1\": \"index-module__m-lg-n1__17lt1\",\n\t\"mt-lg-n1\": \"index-module__mt-lg-n1__2Wv8X\",\n\t\"my-lg-n1\": \"index-module__my-lg-n1__HqUsr\",\n\t\"mr-lg-n1\": \"index-module__mr-lg-n1__2ykNm\",\n\t\"mx-lg-n1\": \"index-module__mx-lg-n1__Yc0OX\",\n\t\"mb-lg-n1\": \"index-module__mb-lg-n1__VmbN8\",\n\t\"ml-lg-n1\": \"index-module__ml-lg-n1__2Aj2M\",\n\t\"m-lg-n2\": \"index-module__m-lg-n2__1HU-z\",\n\t\"mt-lg-n2\": \"index-module__mt-lg-n2__1MCYW\",\n\t\"my-lg-n2\": \"index-module__my-lg-n2__18OK2\",\n\t\"mr-lg-n2\": \"index-module__mr-lg-n2__1Rw-_\",\n\t\"mx-lg-n2\": \"index-module__mx-lg-n2__SvmZo\",\n\t\"mb-lg-n2\": \"index-module__mb-lg-n2__W7lfv\",\n\t\"ml-lg-n2\": \"index-module__ml-lg-n2__231O_\",\n\t\"m-lg-n3\": \"index-module__m-lg-n3__qmMJ6\",\n\t\"mt-lg-n3\": \"index-module__mt-lg-n3__3PtWE\",\n\t\"my-lg-n3\": \"index-module__my-lg-n3__3qKZd\",\n\t\"mr-lg-n3\": \"index-module__mr-lg-n3__2ozPT\",\n\t\"mx-lg-n3\": \"index-module__mx-lg-n3__3MPI4\",\n\t\"mb-lg-n3\": \"index-module__mb-lg-n3__1r3HE\",\n\t\"ml-lg-n3\": \"index-module__ml-lg-n3__2RALR\",\n\t\"m-lg-n4\": \"index-module__m-lg-n4__2aDSY\",\n\t\"mt-lg-n4\": \"index-module__mt-lg-n4__39eZ2\",\n\t\"my-lg-n4\": \"index-module__my-lg-n4__CMs-5\",\n\t\"mr-lg-n4\": \"index-module__mr-lg-n4__1Ggmm\",\n\t\"mx-lg-n4\": \"index-module__mx-lg-n4__34JLH\",\n\t\"mb-lg-n4\": \"index-module__mb-lg-n4__1ouBW\",\n\t\"ml-lg-n4\": \"index-module__ml-lg-n4__r0YL9\",\n\t\"m-lg-n5\": \"index-module__m-lg-n5__Pw0Hb\",\n\t\"mt-lg-n5\": \"index-module__mt-lg-n5__3PiR6\",\n\t\"my-lg-n5\": \"index-module__my-lg-n5__2NYNI\",\n\t\"mr-lg-n5\": \"index-module__mr-lg-n5__1RLgJ\",\n\t\"mx-lg-n5\": \"index-module__mx-lg-n5__etUHt\",\n\t\"mb-lg-n5\": \"index-module__mb-lg-n5__3VW2-\",\n\t\"ml-lg-n5\": \"index-module__ml-lg-n5__FbleI\",\n\t\"m-lg-auto\": \"index-module__m-lg-auto__2NxP5\",\n\t\"mt-lg-auto\": \"index-module__mt-lg-auto__1V8a9\",\n\t\"my-lg-auto\": \"index-module__my-lg-auto__11YSe\",\n\t\"mr-lg-auto\": \"index-module__mr-lg-auto__3niDw\",\n\t\"mx-lg-auto\": \"index-module__mx-lg-auto__2_6oa\",\n\t\"mb-lg-auto\": \"index-module__mb-lg-auto__1vkK1\",\n\t\"ml-lg-auto\": \"index-module__ml-lg-auto__pXOTq\",\n\t\"m-xl-0\": \"index-module__m-xl-0__3Gqrr\",\n\t\"mt-xl-0\": \"index-module__mt-xl-0__1iy-Y\",\n\t\"my-xl-0\": \"index-module__my-xl-0__2PC1S\",\n\t\"mr-xl-0\": \"index-module__mr-xl-0__1ZH9J\",\n\t\"mx-xl-0\": \"index-module__mx-xl-0__3qTGn\",\n\t\"mb-xl-0\": \"index-module__mb-xl-0__3DTHu\",\n\t\"ml-xl-0\": \"index-module__ml-xl-0__3f_2o\",\n\t\"m-xl-1\": \"index-module__m-xl-1__191yL\",\n\t\"mt-xl-1\": \"index-module__mt-xl-1__1diZ-\",\n\t\"my-xl-1\": \"index-module__my-xl-1__1nasP\",\n\t\"mr-xl-1\": \"index-module__mr-xl-1__1Hdkz\",\n\t\"mx-xl-1\": \"index-module__mx-xl-1__j9ocB\",\n\t\"mb-xl-1\": \"index-module__mb-xl-1__qDH_Q\",\n\t\"ml-xl-1\": \"index-module__ml-xl-1__NMfWb\",\n\t\"m-xl-2\": \"index-module__m-xl-2__1-64O\",\n\t\"mt-xl-2\": \"index-module__mt-xl-2__2rTIS\",\n\t\"my-xl-2\": \"index-module__my-xl-2___baH5\",\n\t\"mr-xl-2\": \"index-module__mr-xl-2__3rtZG\",\n\t\"mx-xl-2\": \"index-module__mx-xl-2__5bcfp\",\n\t\"mb-xl-2\": \"index-module__mb-xl-2__3C-4S\",\n\t\"ml-xl-2\": \"index-module__ml-xl-2__amJlf\",\n\t\"m-xl-3\": \"index-module__m-xl-3__3M9e7\",\n\t\"mt-xl-3\": \"index-module__mt-xl-3__3_gKw\",\n\t\"my-xl-3\": \"index-module__my-xl-3__ZqHO-\",\n\t\"mr-xl-3\": \"index-module__mr-xl-3__3RDKf\",\n\t\"mx-xl-3\": \"index-module__mx-xl-3__2YlLZ\",\n\t\"mb-xl-3\": \"index-module__mb-xl-3__3UM0-\",\n\t\"ml-xl-3\": \"index-module__ml-xl-3__1mlcO\",\n\t\"m-xl-4\": \"index-module__m-xl-4__3Jgrm\",\n\t\"mt-xl-4\": \"index-module__mt-xl-4__3Xkpk\",\n\t\"my-xl-4\": \"index-module__my-xl-4__3BWId\",\n\t\"mr-xl-4\": \"index-module__mr-xl-4__3sovC\",\n\t\"mx-xl-4\": \"index-module__mx-xl-4__2FXVK\",\n\t\"mb-xl-4\": \"index-module__mb-xl-4__3Qgr7\",\n\t\"ml-xl-4\": \"index-module__ml-xl-4__383Jl\",\n\t\"m-xl-5\": \"index-module__m-xl-5__yPj32\",\n\t\"mt-xl-5\": \"index-module__mt-xl-5__1k9NI\",\n\t\"my-xl-5\": \"index-module__my-xl-5__WKMgM\",\n\t\"mr-xl-5\": \"index-module__mr-xl-5__3PfiN\",\n\t\"mx-xl-5\": \"index-module__mx-xl-5__3IAef\",\n\t\"mb-xl-5\": \"index-module__mb-xl-5__2odD5\",\n\t\"ml-xl-5\": \"index-module__ml-xl-5__2teD9\",\n\t\"p-xl-0\": \"index-module__p-xl-0__1d4FO\",\n\t\"pt-xl-0\": \"index-module__pt-xl-0__32AIP\",\n\t\"py-xl-0\": \"index-module__py-xl-0__FWpmt\",\n\t\"pr-xl-0\": \"index-module__pr-xl-0__2SBXj\",\n\t\"px-xl-0\": \"index-module__px-xl-0__2SfmW\",\n\t\"pb-xl-0\": \"index-module__pb-xl-0__20KgZ\",\n\t\"pl-xl-0\": \"index-module__pl-xl-0__2Gif4\",\n\t\"p-xl-1\": \"index-module__p-xl-1__1qH2j\",\n\t\"pt-xl-1\": \"index-module__pt-xl-1__3bMZl\",\n\t\"py-xl-1\": \"index-module__py-xl-1__qL0Gg\",\n\t\"pr-xl-1\": \"index-module__pr-xl-1__3eNOZ\",\n\t\"px-xl-1\": \"index-module__px-xl-1__3KSs_\",\n\t\"pb-xl-1\": \"index-module__pb-xl-1__2_2Vg\",\n\t\"pl-xl-1\": \"index-module__pl-xl-1__3ive0\",\n\t\"p-xl-2\": \"index-module__p-xl-2__SNtxJ\",\n\t\"pt-xl-2\": \"index-module__pt-xl-2__2QVyR\",\n\t\"py-xl-2\": \"index-module__py-xl-2__RvZnJ\",\n\t\"pr-xl-2\": \"index-module__pr-xl-2__1cCS4\",\n\t\"px-xl-2\": \"index-module__px-xl-2__15Zoi\",\n\t\"pb-xl-2\": \"index-module__pb-xl-2__1ym5V\",\n\t\"pl-xl-2\": \"index-module__pl-xl-2__2S143\",\n\t\"p-xl-3\": \"index-module__p-xl-3__LWU29\",\n\t\"pt-xl-3\": \"index-module__pt-xl-3__vY-Uh\",\n\t\"py-xl-3\": \"index-module__py-xl-3__gO_A6\",\n\t\"pr-xl-3\": \"index-module__pr-xl-3__5zqXh\",\n\t\"px-xl-3\": \"index-module__px-xl-3__13xDt\",\n\t\"pb-xl-3\": \"index-module__pb-xl-3__UBCtI\",\n\t\"pl-xl-3\": \"index-module__pl-xl-3__2aqpE\",\n\t\"p-xl-4\": \"index-module__p-xl-4__p-Hh9\",\n\t\"pt-xl-4\": \"index-module__pt-xl-4__1QNaH\",\n\t\"py-xl-4\": \"index-module__py-xl-4__3tt-J\",\n\t\"pr-xl-4\": \"index-module__pr-xl-4__eVSHY\",\n\t\"px-xl-4\": \"index-module__px-xl-4__1d0vx\",\n\t\"pb-xl-4\": \"index-module__pb-xl-4__ZhcQ-\",\n\t\"pl-xl-4\": \"index-module__pl-xl-4__1shLR\",\n\t\"p-xl-5\": \"index-module__p-xl-5__tIsj4\",\n\t\"pt-xl-5\": \"index-module__pt-xl-5__ySliu\",\n\t\"py-xl-5\": \"index-module__py-xl-5__3D1lu\",\n\t\"pr-xl-5\": \"index-module__pr-xl-5__2Pn8o\",\n\t\"px-xl-5\": \"index-module__px-xl-5__3zY2B\",\n\t\"pb-xl-5\": \"index-module__pb-xl-5__36F0Y\",\n\t\"pl-xl-5\": \"index-module__pl-xl-5__1xQXN\",\n\t\"m-xl-n1\": \"index-module__m-xl-n1__1bBxe\",\n\t\"mt-xl-n1\": \"index-module__mt-xl-n1__q2fF_\",\n\t\"my-xl-n1\": \"index-module__my-xl-n1__3awq7\",\n\t\"mr-xl-n1\": \"index-module__mr-xl-n1__OPVGr\",\n\t\"mx-xl-n1\": \"index-module__mx-xl-n1__1KRsq\",\n\t\"mb-xl-n1\": \"index-module__mb-xl-n1__2hrRo\",\n\t\"ml-xl-n1\": \"index-module__ml-xl-n1__e960N\",\n\t\"m-xl-n2\": \"index-module__m-xl-n2__2WByY\",\n\t\"mt-xl-n2\": \"index-module__mt-xl-n2__1jaUu\",\n\t\"my-xl-n2\": \"index-module__my-xl-n2__XEBif\",\n\t\"mr-xl-n2\": \"index-module__mr-xl-n2__2XyrX\",\n\t\"mx-xl-n2\": \"index-module__mx-xl-n2__3Pd9U\",\n\t\"mb-xl-n2\": \"index-module__mb-xl-n2__1nwzO\",\n\t\"ml-xl-n2\": \"index-module__ml-xl-n2__1ZqbO\",\n\t\"m-xl-n3\": \"index-module__m-xl-n3__mx9AY\",\n\t\"mt-xl-n3\": \"index-module__mt-xl-n3__2Z8VV\",\n\t\"my-xl-n3\": \"index-module__my-xl-n3__2iVzY\",\n\t\"mr-xl-n3\": \"index-module__mr-xl-n3__1kSTw\",\n\t\"mx-xl-n3\": \"index-module__mx-xl-n3__1S3cN\",\n\t\"mb-xl-n3\": \"index-module__mb-xl-n3__xPqFI\",\n\t\"ml-xl-n3\": \"index-module__ml-xl-n3__4Mbxg\",\n\t\"m-xl-n4\": \"index-module__m-xl-n4__1BPVM\",\n\t\"mt-xl-n4\": \"index-module__mt-xl-n4__HvJrp\",\n\t\"my-xl-n4\": \"index-module__my-xl-n4__2Io7J\",\n\t\"mr-xl-n4\": \"index-module__mr-xl-n4__1PDbI\",\n\t\"mx-xl-n4\": \"index-module__mx-xl-n4__whjCM\",\n\t\"mb-xl-n4\": \"index-module__mb-xl-n4__emYZx\",\n\t\"ml-xl-n4\": \"index-module__ml-xl-n4__1rjF_\",\n\t\"m-xl-n5\": \"index-module__m-xl-n5__2QTsr\",\n\t\"mt-xl-n5\": \"index-module__mt-xl-n5__3p-mS\",\n\t\"my-xl-n5\": \"index-module__my-xl-n5__rPHSb\",\n\t\"mr-xl-n5\": \"index-module__mr-xl-n5__Q_XT6\",\n\t\"mx-xl-n5\": \"index-module__mx-xl-n5__39imV\",\n\t\"mb-xl-n5\": \"index-module__mb-xl-n5__UNne0\",\n\t\"ml-xl-n5\": \"index-module__ml-xl-n5__kOh2L\",\n\t\"m-xl-auto\": \"index-module__m-xl-auto__1bgul\",\n\t\"mt-xl-auto\": \"index-module__mt-xl-auto__3ceJb\",\n\t\"my-xl-auto\": \"index-module__my-xl-auto__1RaL5\",\n\t\"mr-xl-auto\": \"index-module__mr-xl-auto__hSkNd\",\n\t\"mx-xl-auto\": \"index-module__mx-xl-auto__OfxLc\",\n\t\"mb-xl-auto\": \"index-module__mb-xl-auto__2sj2U\",\n\t\"ml-xl-auto\": \"index-module__ml-xl-auto__3R4ut\",\n\t\"text-monospace\": \"index-module__text-monospace__3ZXs-\",\n\t\"text-justify\": \"index-module__text-justify__2spY7\",\n\t\"text-wrap\": \"index-module__text-wrap__3Wa1N\",\n\t\"text-nowrap\": \"index-module__text-nowrap__3xkV3\",\n\t\"text-truncate\": \"index-module__text-truncate__22MRW\",\n\t\"text-left\": \"index-module__text-left__11_ZM\",\n\t\"text-right\": \"index-module__text-right__FqdFY\",\n\t\"text-center\": \"index-module__text-center__3iiMv\",\n\t\"text-sm-left\": \"index-module__text-sm-left__1pkTf\",\n\t\"text-sm-right\": \"index-module__text-sm-right__30jGp\",\n\t\"text-sm-center\": \"index-module__text-sm-center__53AB2\",\n\t\"text-md-left\": \"index-module__text-md-left__3yZXO\",\n\t\"text-md-right\": \"index-module__text-md-right__3yuQO\",\n\t\"text-md-center\": \"index-module__text-md-center__cEURs\",\n\t\"text-lg-left\": \"index-module__text-lg-left__2Vfpj\",\n\t\"text-lg-right\": \"index-module__text-lg-right__bujyR\",\n\t\"text-lg-center\": \"index-module__text-lg-center__1eVzC\",\n\t\"text-xl-left\": \"index-module__text-xl-left__LKIeb\",\n\t\"text-xl-right\": \"index-module__text-xl-right__1fk69\",\n\t\"text-xl-center\": \"index-module__text-xl-center__2kKVr\",\n\t\"text-lowercase\": \"index-module__text-lowercase__M6z0E\",\n\t\"text-uppercase\": \"index-module__text-uppercase__1D_mE\",\n\t\"text-capitalize\": \"index-module__text-capitalize__3ToM5\",\n\t\"font-weight-light\": \"index-module__font-weight-light__19Y8d\",\n\t\"font-weight-lighter\": \"index-module__font-weight-lighter__295eW\",\n\t\"font-weight-normal\": \"index-module__font-weight-normal__30d4r\",\n\t\"font-weight-bold\": \"index-module__font-weight-bold__gRJLY\",\n\t\"font-weight-bolder\": \"index-module__font-weight-bolder__1aEyc\",\n\t\"font-italic\": \"index-module__font-italic__3-ciA\",\n\t\"text-white\": \"index-module__text-white__oWH4J\",\n\t\"text-primary\": \"index-module__text-primary__2S_iJ\",\n\t\"text-secondary\": \"index-module__text-secondary__1pubE\",\n\t\"text-success\": \"index-module__text-success__3wGJG\",\n\t\"text-info\": \"index-module__text-info__2prMR\",\n\t\"text-warning\": \"index-module__text-warning__2y3LD\",\n\t\"text-danger\": \"index-module__text-danger__3rX-z\",\n\t\"text-light\": \"index-module__text-light__1oIH9\",\n\t\"text-dark\": \"index-module__text-dark__12Db9\",\n\t\"text-body\": \"index-module__text-body__12vhI\",\n\t\"text-muted\": \"index-module__text-muted__1fgqt\",\n\t\"text-black-50\": \"index-module__text-black-50__1a8Py\",\n\t\"text-white-50\": \"index-module__text-white-50__2Fg8k\",\n\t\"text-hide\": \"index-module__text-hide__1wLlz\",\n\t\"text-decoration-none\": \"index-module__text-decoration-none__PrbYu\",\n\t\"text-break\": \"index-module__text-break__1BJUB\",\n\t\"text-reset\": \"index-module__text-reset__2ZOg1\",\n\t\"visible\": \"index-module__visible__26FEw\",\n\t\"invisible\": \"index-module__invisible__7u005\",\n\t\"linkOutText\": \"index-module__linkOutText__2nCIa\",\n\t\"biggerText\": \"index-module__biggerText__3874w\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"a.DownloadButton-module__aTag__3tCo6{color:white}a.DownloadButton-module__aTag__3tCo6:hover{color:white;text-decoration:none}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"aTag\": \"DownloadButton-module__aTag__3tCo6\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".styles-module__message__DIfPp{padding:10px 0;background:#064785;color:#fff;font-size:15px;position:relative}.styles-module__message__DIfPp .styles-module__messageContainer__oofqp{display:flex;justify-content:space-between;align-items:center}.styles-module__message__DIfPp i.styles-module__close__38FEU{cursor:pointer}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"message\": \"styles-module__message__DIfPp\",\n\t\"messageContainer\": \"styles-module__messageContainer__oofqp\",\n\t\"close\": \"styles-module__close__38FEU\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".SearchOption-module__subTitle__3bHyF{color:gray;font-size:0.9em;display:flex}.SearchOption-module__match__2Idzv{line-height:1.5rem;white-space:normal}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"subTitle\": \"SearchOption-module__subTitle__3bHyF\",\n\t\"match\": \"SearchOption-module__match__2Idzv\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./UserDetailsPage.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".index-module__simpleTable__eJ2Pr{margin-bottom:0 !important}.index-module__simpleTable__eJ2Pr th{font-family:\\\"Gotham Medium\\\";border-top:0 !important}.index-module__simpleTable__eJ2Pr td{white-space:nowrap}.index-module__simpleTable__eJ2Pr th,.index-module__simpleTable__eJ2Pr td{padding:0.25rem !important}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"simpleTable\": \"index-module__simpleTable__eJ2Pr\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".styles-module__message__29OA8{padding:10px 0;background:#ffc107;color:#000;font-size:15px;position:relative}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"message\": \"styles-module__message__29OA8\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".btn.HighlightLinkButton-module__highlight___dNRA{padding-top:1.5px;font-size:2.5rem;line-height:2.5rem;font-family:'Gotham Bold';min-height:3rem;color:#064785;border-radius:0;border-bottom:1px solid #064785;display:flex;align-items:center}.btn.HighlightLinkButton-module__withHref__RwzJN>a{color:#064785}.btn.HighlightLinkButton-module__withHref__RwzJN>a:hover,.btn.HighlightLinkButton-module__withHref__RwzJN>a:focus{text-decoration:none}.btn.HighlightLinkButton-module__withoutHref__uYsks:hover,.btn.HighlightLinkButton-module__withoutHref__uYsks:focus{color:#064785;text-decoration:none}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"highlight\": \"HighlightLinkButton-module__highlight___dNRA\",\n\t\"withHref\": \"HighlightLinkButton-module__withHref__RwzJN\",\n\t\"withoutHref\": \"HighlightLinkButton-module__withoutHref__uYsks\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".LevelButton-module__levelName__1p66-{font-size:1em}.LevelButton-module__levelDescription__1EXny{font-size:0.7em}.LevelButton-module__geneNumber__3c-Jr{font-size:0.8em}.btn.LevelButton-module__levelButton__FH9Ub{border:1px solid #d3d3d3;background-color:white;border-radius:0.5rem;width:100%;font-size:1.2rem}.btn.LevelButton-module__levelButtonLink__2cvNs{border:0;background-color:white;width:100%;font-size:1.6rem;font-weight:700}.btn.LevelButton-module__levelButtonLink__2cvNs:hover{background-color:white}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"levelName\": \"LevelButton-module__levelName__1p66-\",\n\t\"levelDescription\": \"LevelButton-module__levelDescription__1EXny\",\n\t\"geneNumber\": \"LevelButton-module__geneNumber__3c-Jr\",\n\t\"levelButton\": \"LevelButton-module__levelButton__FH9Ub\",\n\t\"levelButtonLink\": \"LevelButton-module__levelButtonLink__2cvNs\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".AlterationPage-module__headerTumorTypeSelection__3FkLc{width:400px;height:20%}.RRT__panel.AlterationPage-module__panel__3SQC8{border-width:1px 0 0;padding-left:0;padding-right:0}.AlterationPage-module__categoricalAltDescription__20Lfe{color:gray}.AlterationPage-module__categoricalAltDescription__20Lfe a{color:gray !important;text-decoration:underline}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"headerTumorTypeSelection\": \"AlterationPage-module__headerTumorTypeSelection__3FkLc\",\n\t\"panel\": \"AlterationPage-module__panel__3SQC8\",\n\t\"categoricalAltDescription\": \"AlterationPage-module__categoricalAltDescription__20Lfe\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".GenePage-module__geneEnsemblInfo__3uKU8{font-size:0.8rem}.GenePage-module__geneEnsemblInfo__3uKU8,.GenePage-module__lowKeyLinkout__1du-t{color:gray}.GenePage-module__sameLineSpans__3YcD-{display:flex;flex-wrap:wrap}.GenePage-module__sameLineSpans__3YcD->span{margin:0 0.3rem}.GenePage-module__sameLineSpans__3YcD->span:first-child{margin-left:0}.GenePage-module__sameLineSpans__3YcD->span:last-child{margin-left:0}.RRT__panel.GenePage-module__panel__3cyq_{border-width:1px 0 0;padding-left:0;padding-right:0}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"geneEnsemblInfo\": \"GenePage-module__geneEnsemblInfo__3uKU8\",\n\t\"lowKeyLinkout\": \"GenePage-module__lowKeyLinkout__1du-t\",\n\t\"sameLineSpans\": \"GenePage-module__sameLineSpans__3YcD-\",\n\t\"panel\": \"GenePage-module__panel__3cyq_\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".listGroupItem-module__list-group-item__1Ld70{border:0;padding:5px 0;font-size:13px;display:flex;flex-direction:column}.listGroupItem-module__list-group-item__1Ld70 a{color:#0968C3}.listGroupItem-module__list-group-item__1Ld70:not(:first-child){border-top:1px solid #ddd}.listGroupItem-module__list-group-item__1Ld70:last-child{border-bottom-right-radius:0;border-bottom-left-radius:0}.listGroupItem-module__list-group-item__1Ld70:first-child{border-top-left-radius:0;border-top-right-radius:0}.listGroupItem-module__list-group-item-title__3wBvZ{line-height:16px}.listGroupItem-module__list-group-item-content__1QY_D{display:flex;flex-direction:row;justify-content:space-between}.listGroupItem-module__no-style-ul__2jaOI{padding:0;margin-bottom:0 !important}.listGroupItem-module__no-style-ul__2jaOI li{list-style-type:none}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"list-group-item\": \"listGroupItem-module__list-group-item__1Ld70\",\n\t\"list-group-item-title\": \"listGroupItem-module__list-group-item-title__3wBvZ\",\n\t\"list-group-item-content\": \"listGroupItem-module__list-group-item-content__1QY_D\",\n\t\"no-style-ul\": \"listGroupItem-module__no-style-ul__2jaOI\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".main-module__oncokb-card__243DZ{margin:auto;width:600px;font-size:14px;line-height:18px}.main-module__tab-content__ZaABX{max-height:300px;overflow-y:auto}.main-module__tooltip-refs__3Wcuy{max-width:400px;max-height:400px;overflow-y:auto}.main-module__disclaimer__bxHLx{color:grey;font-style:italic}.main-module__blue-icon__LILS6{color:#0968C3}.main-module__footer__167Hp{display:flex;justify-content:space-between;padding:5px 10px}.main-module__oncokb-logo__V4oGo{height:16px}.main-module__title__1VH4b{line-height:22px;font-size:22px;background-color:#0968C3;color:#fff;text-align:center;padding:5px 10px}.main-module__additional-info__3f0ur{padding:5px 10px;line-height:20px;border-bottom:1px solid lightgrey}.main-module__biological-info__zSptC{display:flex;flex-direction:row;background-color:#064785;color:white;padding:10px 0;font-weight:bold;text-align:center}.main-module__ellipsis-text-wrapper__FESfb{overflow:hidden;white-space:nowrap;display:flex;align-items:center}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"oncokb-card\": \"main-module__oncokb-card__243DZ\",\n\t\"tab-content\": \"main-module__tab-content__ZaABX\",\n\t\"tooltip-refs\": \"main-module__tooltip-refs__3Wcuy\",\n\t\"disclaimer\": \"main-module__disclaimer__bxHLx\",\n\t\"blue-icon\": \"main-module__blue-icon__LILS6\",\n\t\"footer\": \"main-module__footer__167Hp\",\n\t\"oncokb-logo\": \"main-module__oncokb-logo__V4oGo\",\n\t\"title\": \"main-module__title__1VH4b\",\n\t\"additional-info\": \"main-module__additional-info__3f0ur\",\n\t\"biological-info\": \"main-module__biological-info__zSptC\",\n\t\"ellipsis-text-wrapper\": \"main-module__ellipsis-text-wrapper__FESfb\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".index-module__cancerTypeSimpleTableHead__1vTOW th{border-bottom:0 !important;font-family:'Gotham Medium';font-weight:normal}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"cancerTypeSimpleTableHead\": \"index-module__cancerTypeSimpleTableHead__1vTOW\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".DividerWithInfo-module__container__7qeWN{width:100%;display:flex;align-items:center}.DividerWithInfo-module__border__18tUX{border-bottom:1px solid black;width:100%}.DividerWithInfo-module__content__6jUSk{padding:0 10px 0 10px}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"container\": \"DividerWithInfo-module__container__7qeWN\",\n\t\"border\": \"DividerWithInfo-module__border__18tUX\",\n\t\"content\": \"DividerWithInfo-module__content__6jUSk\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".UserDetailsPage-module__tableHeader__K02ua{font-weight:bold}.UserDetailsPage-module__center__3fkfb{justify-content:center;display:flex}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"tableHeader\": \"UserDetailsPage-module__tableHeader__K02ua\",\n\t\"center\": \"UserDetailsPage-module__center__3fkfb\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".styles-module__main__1cJmG{display:flex;flex-wrap:wrap}.styles-module__list_container__1AtMY{border:1px solid;border-color:#ddd;border-radius:0.25rem;padding:0.375rem 0.75rem;overflow-y:scroll;min-height:100px;max-height:100px;margin-top:28px}.styles-module__add__1jifo{border-color:#ddd !important}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"main\": \"styles-module__main__1cJmG\",\n\t\"list_container\": \"styles-module__list_container__1AtMY\",\n\t\"add\": \"styles-module__add__1jifo\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".CompanyDetailsPage-module__tableHeader__-oNa1{font-weight:bold}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"tableHeader\": \"CompanyDetailsPage-module__tableHeader__-oNa1\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".main-module__oneRowHeader__1EWnL th{white-space:nowrap}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"oneRowHeader\": \"main-module__oneRowHeader__1EWnL\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".licenseAgreement-module__orderedList__18juN li{margin:0 0 1rem 0}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"orderedList\": \"licenseAgreement-module__orderedList__18juN\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".main-module__header__2tBYV{font-family:'Gotham', 'Gotham Medium'}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"header\": \"main-module__header__2tBYV\"\n};\nmodule.exports = exports;\n","import * as React from 'react';\nimport { If, Then } from 'react-if';\nimport Spinner from 'react-spinkit';\nimport classnames from 'classnames';\nimport styles from './styles.module.scss';\nimport { COLOR_BLUE } from 'app/config/theme';\n\nexport enum LoaderSize {\n  LARGE,\n  SMALL,\n  EXTRA_SMALL,\n}\n\nexport interface ILoader {\n  isLoading: boolean;\n  style?: any;\n  color?: string;\n  center?: boolean;\n  centerRelativeToContainer?: boolean;\n  size?: LoaderSize;\n  className?: string;\n}\n\nexport default class LoadingIndicator extends React.Component<ILoader, {}> {\n  public static defaultProps = {\n    center: false,\n    size: LoaderSize.SMALL,\n  };\n\n  public render() {\n    const color = this.props.color\n      ? this.props.color\n      : this.props.size === LoaderSize.LARGE\n      ? 'white'\n      : COLOR_BLUE;\n    const spinnerStyles = {\n      [styles.extraSmall]: this.props.size === LoaderSize.EXTRA_SMALL,\n      [styles.small]: this.props.size === LoaderSize.SMALL,\n      [styles.big]: this.props.size === LoaderSize.LARGE,\n      'd-flex': true,\n      'justify-content-center': true,\n    };\n\n    const parentStyles = {\n      [styles.centered]: this.props.center,\n      [styles['centered-relative-to-container']]: this.props\n        .centerRelativeToContainer,\n      [styles['centered-with-children']]:\n        (this.props.center || this.props.centerRelativeToContainer) &&\n        React.Children.count(this.props.children) > 0,\n    };\n\n    return (\n      <If condition={this.props.isLoading}>\n        <Then>\n          <div\n            className={classnames(parentStyles, this.props.className)}\n            style={this.props.style || {}}\n          >\n            <Spinner\n              color={color}\n              fadeIn=\"none\"\n              className={classnames(spinnerStyles)}\n              style={this.props.style}\n              name=\"line-scale-pulse-out\"\n            />\n            <div>{this.props.children}</div>\n          </div>\n        </Then>\n      </If>\n    );\n  }\n}\n\n// export class GlobalLoader extends React.Component<ILoader, {}> {\n//\n//   public render() {\n//     return <Portal isOpened={this.props.isLoading}>\n//       <Spinner className={classnames(styles.color, styles.centered, styles.big)} fadeIn=\"none\" name=\"line-scale-pulse-out\" />\n//     </Portal>\n//   }\n//\n// }\n","export default __webpack_public_path__ + \"content/msk-logo-white.svg\";","export default __webpack_public_path__ + \"content/msk-icon-white.svg\";","type FormattedAnnotation = {\n  gene: string;\n  alteration?: string;\n  cancerType?: string;\n};\nexport type Annotation = FormattedAnnotation;\n\nexport type FeedbackContent = {\n  annotation?: Annotation;\n  description?: string;\n  email?: string;\n  name?: string;\n};\nexport type Feedback = FeedbackContent & {\n  type: FeedbackType;\n};\n\nexport enum FeedbackType {\n  GENERAL,\n  ANNOTATION,\n}\n","export const COLOR_BLUE = '#0968C3';\nexport const COLOR_DARK_BLUE = '#064785';\nexport const COLOR_DARKER_BLUE = '#0b2569';\nexport const COLOR_PRIMARY = COLOR_BLUE;\nexport const COLOR_GREY = '#808080';\nexport const COLOR_LIGHT_GREY = '#D3D3D3';\nexport const COLOR_BLACK = '#000';\nexport const COLOR_WARNING = '#ffc107';\nexport const COLOR_ERROR = '#dc3545';\n\nexport const COLOR_ICON_WITH_INFO = COLOR_BLACK;\nexport const COLOR_ICON_WITHOUT_INFO = COLOR_LIGHT_GREY;\n","import React from 'react';\nimport ProgressiveImage from 'react-progressive-image';\nimport LoadingIndicator from 'app/components/loadingIndicator/LoadingIndicator';\n\nconst OptimizedImage: React.FunctionComponent<\n  {\n    src: string;\n    progressiveLoading?: boolean;\n  } & React.ImgHTMLAttributes<HTMLImageElement>\n> = props => {\n  const { progressiveLoading, ...rest } = props;\n\n  const ImgElement = () => (\n    <img\n      {...rest}\n      style={{ imageRendering: '-webkit-optimize-contrast', ...props.style }}\n    />\n  );\n  return progressiveLoading ? (\n    <ProgressiveImage src={props.src} placeholder={''}>\n      {(src: string, loading: boolean) => {\n        return loading ? (\n          <LoadingIndicator isLoading={true}>Loading image</LoadingIndicator>\n        ) : (\n          <ImgElement />\n        );\n      }}\n    </ProgressiveImage>\n  ) : (\n    <ImgElement />\n  );\n};\n\nexport default OptimizedImage;\n","import * as React from 'react';\n\nimport mskLogo from 'content/images/msk-logo-white.svg';\nimport mskIcon from 'content/images/msk-icon-white.svg';\nimport OptimizedImage from 'app/shared/image/OptimizedImage';\n\nclass MskccLogo extends React.Component<{\n  imageHeight?: number;\n  size?: 'sm' | 'lg';\n  className?: string;\n}> {\n  public static defaultProps = {\n    size: 'lg',\n  };\n  public render() {\n    return (\n      <a\n        href=\"https://www.mskcc.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={this.props.className}\n        style={{ display: 'block' }}\n      >\n        <OptimizedImage\n          alt=\"mskcc-logo\"\n          src={this.props.size === 'lg' ? mskLogo : mskIcon}\n          style={{\n            height: this.props.imageHeight || 50,\n          }}\n        />\n      </a>\n    );\n  }\n}\n\nexport default MskccLogo;\n","import { Gene, OncoKBInfo } from 'app/shared/api/generated/OncoKbAPI';\nimport {\n  GeneNumber,\n  MainNumber,\n  VariantAnnotation,\n} from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Feedback, FeedbackType } from 'app/components/feedback/types';\n\n/* eslint no-shadow: 0 */\n\nconst config = {\n  VERSION: process.env.VERSION,\n};\n\nexport default config;\n\nexport const SERVER_API_URL = process.env.SERVER_API_URL;\n\nexport const LOCAL_DEV_OPT = 'localdev';\nexport const DISABLE_BANNER_OPT = 'disablebanner';\n\nexport const DEV_URL = 'http://localhost:9095';\n\nexport const AUTHORITIES = {\n  ADMIN: 'ROLE_ADMIN',\n  USER: 'ROLE_USER',\n};\n\nexport const messages = {\n  DATA_ERROR_ALERT: 'Internal Error',\n};\n\nexport const ONCOKB = 'OncoKB';\nexport const ONCOKB_TM = `${ONCOKB}™`;\n\nexport const MSKCC = 'Memorial Sloan Kettering Cancer Center';\n\nexport const MSK_IMPACT_TM = 'MSK-IMPACT™';\n\nexport const APP_DATE_FORMAT = 'MM/DD/YY HH:mm';\nexport const APP_TIMESTAMP_FORMAT = 'MM/DD/YY HH:mm:ss';\nexport const APP_LOCAL_DATE_FORMAT = 'MM/DD/YYYY';\nexport const APP_LOCAL_DATETIME_FORMAT = 'YYYY-MM-DDTHH:mm:ss';\nexport const APP_LOCAL_DATETIME_FORMAT_Z = 'YYYY-MM-DDTHH:mm:ssZ';\nexport const APP_LOCAL_DATETIME_FORMAT_Z_FORCE = 'YYYY-MM-DDTHH:MM:SS[Z]';\nexport const APP_WHOLE_NUMBER_FORMAT = '0,0';\nexport const APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT = '0,0.[00]';\nexport const NEWS_DATE_FORMAT = 'MMDDYYYY';\nexport const NEWS_TITLE_DATE_FORMAT = 'MMMM D, YYYY';\nexport const YEAR_END_SUMMARY_DATE_FORMAT = 'YYYY';\nexport const YEAR_END_SUMMARY_TITLE_DATE_FORMAT = 'YYYY';\nexport const TABLE_MONTH_FORMAT = 'YYYY-MM';\nexport const TABLE_DAY_FORMAT = 'YYYY-MM-DD';\n\nexport const ONCOKB_NEWS_GROUP_SUBSCRIPTION_LINK =\n  'http://groups.google.com/group/oncokb-news/boxsubscribe';\n\nexport const ONCOKB_CONTACT_EMAIL = 'contact@oncokb.org';\nexport const ONCOKB_LICENSE_EMAIL = 'licenses@oncokb.org';\nexport const GRID_BREAKPOINTS = {\n  SM: 576,\n  MD: 768,\n  LG: 1050,\n  XL: 1500,\n};\nexport const MSK_LOGO_ICON_CUTOFF = 1260;\nexport const SOP_LINK = 'https://sop.oncokb.org';\nexport const FAQ_LINK = 'https://faq.oncokb.org';\nexport const FAQ_URL_PATTERNS_LINK = `${FAQ_LINK}/technical#what-are-the-url-patterns-of-oncokb-website`;\nexport const API_DOCUMENT_LINK = 'https://api.oncokb.org/oncokb-website/api';\nexport const DEMO_WEBSITE_LINK = 'https://demo.oncokb.org';\nexport const FACULTY_COI_WEBSITE_LINK = 'https://www.mskcc.org/disclosures';\nexport const ONCOKB_DATAHUB_LINK = 'https://github.com/oncokb/oncokb-datahub';\nexport const NONE_FACULTY_COI_WEBSITE_LINK =\n  'https://docs.google.com/spreadsheets/d/1PKHV8ArVm4AFu4Rj-URWHcCAqnbWlm7p2-LOxhe0aFU/edit?usp=sharing';\nexport const FDA_LEVELS_OF_EVIDENCE_LINK =\n  'https://www.fda.gov/media/109050/download';\nexport enum VIDEO_TYPES {\n  WEBINAR_INTRO = 'WEBINAR_INTRO',\n  WEBINAR_API = 'WEBINAR_API',\n  INTRO = 'INTRO',\n  INTRO_LONG = 'INTRO_LONG',\n}\n\nexport const YOUTUBE_VIDEO_IDS: { [key in VIDEO_TYPES]: string } = {\n  [VIDEO_TYPES.WEBINAR_INTRO]: 'XqoKrrm2Boc',\n  [VIDEO_TYPES.WEBINAR_API]: 'mTTe7CTdw-g',\n  [VIDEO_TYPES.INTRO]: 'aY2E7-Hhbs0',\n  [VIDEO_TYPES.INTRO_LONG]: 'bYIim5WNL5A',\n};\nexport const BILIBILI_VIDEO_IDS: { [key in VIDEO_TYPES]: string } = {\n  [VIDEO_TYPES.WEBINAR_INTRO]: '370552044',\n  [VIDEO_TYPES.WEBINAR_API]: '328647655',\n  [VIDEO_TYPES.INTRO]: '',\n  [VIDEO_TYPES.INTRO_LONG]: '',\n};\n\nexport const REDIRECT_TIMEOUT_MILLISECONDS = 10000;\nexport const NOTIFICATION_TIMEOUT_MILLISECONDS = 5000;\nexport const SHORTEN_TEXT_FROM_LIST_THRESHOLD = 5;\nexport const TOKEN_ABOUT_2_EXPIRE_NOTICE_IN_DAYS = 14;\nexport const USAGE_TOP_USERS_LIMIT = 10000;\nexport const USAGE_ALL_TIME_KEY = 'All';\nexport const USAGE_ALL_TIME_VALUE = 'This year';\nexport const USAGE_DETAIL_TIME_KEY = 'Detail';\nexport const USAGE_DAY_DETAIL_TIME_KEY = 'Day Detail';\n\nexport const LONG_TEXT_CUTOFF = 200;\nexport const LONG_TEXT_CUTOFF_COMPACT = 80;\n\nexport enum ONCOGENICITY {\n  ONCOGENIC = 'Oncogenic',\n  LIKELY_ONCOGENIC = 'Likely Oncogenic',\n  PREDICTED_ONCOGENIC = 'Predicted Oncogenic',\n  RESISTANCE = 'Resistance',\n  LIKELY_NEUTRAL = 'Likely Neutral',\n  NEUTRAL = 'Neutral',\n  INCONCLUSIVE = 'Inconclusive',\n  UNKNOWN = 'Unknown',\n}\n\nexport const GENERAL_ONCOGENICITY: { [key: string]: ONCOGENICITY } = {\n  [ONCOGENICITY.ONCOGENIC]: ONCOGENICITY.ONCOGENIC,\n  [ONCOGENICITY.LIKELY_ONCOGENIC]: ONCOGENICITY.ONCOGENIC,\n  [ONCOGENICITY.PREDICTED_ONCOGENIC]: ONCOGENICITY.ONCOGENIC,\n  [ONCOGENICITY.RESISTANCE]: ONCOGENICITY.RESISTANCE,\n  [ONCOGENICITY.NEUTRAL]: ONCOGENICITY.NEUTRAL,\n  [ONCOGENICITY.LIKELY_NEUTRAL]: ONCOGENICITY.NEUTRAL,\n  [ONCOGENICITY.INCONCLUSIVE]: ONCOGENICITY.INCONCLUSIVE,\n  [ONCOGENICITY.UNKNOWN]: ONCOGENICITY.UNKNOWN,\n};\n\nexport enum MUTATION_EFFECT {\n  GAIN_OF_FUNCTION = 'Gain-of-function',\n  LIKELY_GAIN_OF_FUNCTION = 'Likely Gain-of-function',\n  LOSS_OF_FUNCTION = 'Loss-of-function',\n  LIKELY_LOSS_OF_FUNCTION = 'Likely Loss-of-function',\n  SWITCH_OF_FUNCTION = 'Switch-of-function',\n  LIKELY_SWITCH_OF_FUNCTION = 'Likely Switch-of-function',\n  NEUTRAL = 'Neutral',\n  LIKELY_NEUTRAL = 'Likely Neutral',\n  INCONCLUSIVE = 'Inconclusive',\n  UNKNOWN = 'Unknown',\n}\n\nconst EVIDENCE_TYPE = {\n  FDA_APPROVED: 'FDA-approved drugs',\n  STANDARD_CARE: 'Standard care',\n  CLINICAL_EVIDENCE: 'Clinical evidence',\n  BIOLOGICAL_EVIDENCE: 'Biological evidence',\n};\n\nexport enum LEVEL_TYPES {\n  TX = 'Tx',\n  DX = 'Dx',\n  PX = 'Px',\n  FDA = 'FDA',\n}\n\nexport enum ANNOTATION_PAGE_TAB_KEYS {\n  BIOLOGICAL = 'Biological',\n  TX = 'Tx',\n  DX = 'Dx',\n  PX = 'Px',\n  FDA = 'FDA',\n}\n\nexport const LEVEL_TYPE_NAMES: { [key in LEVEL_TYPES]: string } = {\n  [LEVEL_TYPES.TX]: 'Therapeutic',\n  [LEVEL_TYPES.DX]: 'Diagnostic',\n  [LEVEL_TYPES.PX]: 'Prognostic',\n  [LEVEL_TYPES.FDA]: 'FDA',\n};\n\nexport const ACTIONABLE_GENES_LEVEL_TITLE: { [key in LEVEL_TYPES]: string } = {\n  [LEVEL_TYPES.TX]: LEVEL_TYPE_NAMES[LEVEL_TYPES.TX],\n  [LEVEL_TYPES.DX]: `${\n    LEVEL_TYPE_NAMES[LEVEL_TYPES.DX]\n  } (for hematologic malignancies only)`,\n  [LEVEL_TYPES.PX]: `${\n    LEVEL_TYPE_NAMES[LEVEL_TYPES.PX]\n  } (for hematologic malignancies only)`,\n  [LEVEL_TYPES.FDA]: `${LEVEL_TYPE_NAMES[LEVEL_TYPES.FDA]}-Recognized Content`,\n};\n\nexport const ANNOTATION_PAGE_TAB_NAMES: {\n  [key in ANNOTATION_PAGE_TAB_KEYS]: string;\n} = {\n  [ANNOTATION_PAGE_TAB_KEYS.BIOLOGICAL]: 'Annotated Alterations',\n  [ANNOTATION_PAGE_TAB_KEYS.TX]: 'Therapeutic',\n  [ANNOTATION_PAGE_TAB_KEYS.DX]: 'Diagnostic',\n  [ANNOTATION_PAGE_TAB_KEYS.PX]: 'Prognostic',\n  [ANNOTATION_PAGE_TAB_KEYS.FDA]: 'FDA-Recognized Content',\n};\n\nexport enum LEVELS {\n  Dx1 = 'Dx1',\n  Dx2 = 'Dx2',\n  Dx3 = 'Dx3',\n  Px1 = 'Px1',\n  Px2 = 'Px2',\n  Px3 = 'Px3',\n  Tx1 = '1',\n  Tx2 = '2',\n  Tx3 = '3',\n  Tx3A = '3A',\n  Tx3B = '3B',\n  Tx4 = '4',\n  R1 = 'R1',\n  R2 = 'R2',\n  Fda1 = 'Fda1',\n  Fda2 = 'Fda2',\n  Fda3 = 'Fda3',\n}\n\nexport const FDA_LEVELS = [LEVELS.Fda1, LEVELS.Fda2, LEVELS.Fda3];\nexport const TX_LEVELS = [\n  LEVELS.Tx1,\n  LEVELS.Tx2,\n  LEVELS.Tx3,\n  LEVELS.Tx3A,\n  LEVELS.Tx3B,\n  LEVELS.Tx4,\n  LEVELS.R1,\n  LEVELS.R2,\n];\nexport const DX_LEVELS = [LEVELS.Dx1, LEVELS.Dx2, LEVELS.Dx3];\nexport const PX_LEVELS = [LEVELS.Px1, LEVELS.Px2, LEVELS.Px3];\nexport const ONCOKB_LEVELS = TX_LEVELS.concat(DX_LEVELS).concat(PX_LEVELS);\n\n// bigger the index, higher the priority\nexport const LEVEL_PRIORITY: LEVELS[] = [\n  LEVELS.Fda3,\n  LEVELS.Fda2,\n  LEVELS.Fda1,\n  LEVELS.Px3,\n  LEVELS.Px2,\n  LEVELS.Px1,\n  LEVELS.Dx3,\n  LEVELS.Dx2,\n  LEVELS.Dx1,\n  LEVELS.R2,\n  LEVELS.Tx4,\n  LEVELS.Tx3B,\n  LEVELS.Tx3A,\n  LEVELS.Tx3,\n  LEVELS.Tx2,\n  LEVELS.R1,\n  LEVELS.Tx1,\n];\n\nexport const LEVEL_PRIORITY_BY_TYPE: LEVELS[] = [\n  LEVELS.Fda3,\n  LEVELS.Fda2,\n  LEVELS.Fda1,\n  LEVELS.Px3,\n  LEVELS.Px2,\n  LEVELS.Px1,\n  LEVELS.Dx3,\n  LEVELS.Dx2,\n  LEVELS.Dx1,\n  LEVELS.R2,\n  LEVELS.R1,\n  LEVELS.Tx4,\n  LEVELS.Tx3B,\n  LEVELS.Tx3A,\n  LEVELS.Tx3,\n  LEVELS.Tx2,\n  LEVELS.Tx1,\n];\n\nexport const LEVEL_BUTTON_DESCRIPTION: { [key in LEVELS]: string } = {\n  [LEVELS.Tx1]: EVIDENCE_TYPE.FDA_APPROVED,\n  [LEVELS.Tx2]: EVIDENCE_TYPE.STANDARD_CARE,\n  [LEVELS.Tx3]: EVIDENCE_TYPE.CLINICAL_EVIDENCE,\n  [LEVELS.Tx3A]: EVIDENCE_TYPE.CLINICAL_EVIDENCE,\n  [LEVELS.Tx3B]: EVIDENCE_TYPE.CLINICAL_EVIDENCE,\n  [LEVELS.Tx4]: EVIDENCE_TYPE.BIOLOGICAL_EVIDENCE,\n  [LEVELS.R1]: EVIDENCE_TYPE.STANDARD_CARE,\n  [LEVELS.R2]: EVIDENCE_TYPE.CLINICAL_EVIDENCE,\n  [LEVELS.Dx1]: 'Required for diagnosis',\n  [LEVELS.Dx2]: 'Supports diagnosis',\n  [LEVELS.Dx3]: 'Investigational diagnosis',\n  [LEVELS.Px1]: 'Guideline-recognized with well-powered data',\n  [LEVELS.Px2]: 'Guideline-recognized with limited data',\n  [LEVELS.Px3]: 'Investigational',\n  [LEVELS.Fda1]: 'With CDx',\n  [LEVELS.Fda2]: 'Clinical Significance',\n  [LEVELS.Fda3]: 'Potential Clinical Significance',\n};\n\nexport const LEVEL_CLASSIFICATION: { [key in LEVELS]: LEVEL_TYPES } = {\n  [LEVELS.Dx1]: LEVEL_TYPES.DX,\n  [LEVELS.Dx2]: LEVEL_TYPES.DX,\n  [LEVELS.Dx3]: LEVEL_TYPES.DX,\n  [LEVELS.Px1]: LEVEL_TYPES.PX,\n  [LEVELS.Px2]: LEVEL_TYPES.PX,\n  [LEVELS.Px3]: LEVEL_TYPES.PX,\n  [LEVELS.Tx1]: LEVEL_TYPES.TX,\n  [LEVELS.Tx2]: LEVEL_TYPES.TX,\n  [LEVELS.Tx3]: LEVEL_TYPES.TX,\n  [LEVELS.Tx3A]: LEVEL_TYPES.TX,\n  [LEVELS.Tx3B]: LEVEL_TYPES.TX,\n  [LEVELS.Tx3]: LEVEL_TYPES.TX,\n  [LEVELS.Tx4]: LEVEL_TYPES.TX,\n  [LEVELS.R1]: LEVEL_TYPES.TX,\n  [LEVELS.R2]: LEVEL_TYPES.TX,\n  [LEVELS.Fda1]: LEVEL_TYPES.FDA,\n  [LEVELS.Fda2]: LEVEL_TYPES.FDA,\n  [LEVELS.Fda3]: LEVEL_TYPES.FDA,\n};\n\nexport const ONCOGENICITY_CLASS_NAMES: { [key in ONCOGENICITY]: string } = {\n  [ONCOGENICITY.NEUTRAL]: 'neutral',\n  [ONCOGENICITY.LIKELY_NEUTRAL]: 'neutral',\n  [ONCOGENICITY.UNKNOWN]: 'unknown',\n  [ONCOGENICITY.INCONCLUSIVE]: 'inconclusive',\n  [ONCOGENICITY.RESISTANCE]: 'oncogenic',\n  [ONCOGENICITY.PREDICTED_ONCOGENIC]: 'oncogenic',\n  [ONCOGENICITY.LIKELY_ONCOGENIC]: 'oncogenic',\n  [ONCOGENICITY.ONCOGENIC]: 'oncogenic',\n};\nexport const DEFAULT_MESSAGE_UNKNOWN_GENE =\n  'We do not have any information for this gene';\nexport const DEFAULT_MESSAGE_HEME_ONLY_DX =\n  'Diagnostic implications are curated for hematologic malignancies only.';\nexport const DEFAULT_MESSAGE_HEME_ONLY_PX =\n  'Prognostic implications are curated for hematologic malignancies only.';\n\nexport enum EVIDENCE_TYPES {\n  GENE_SUMMARY = 'GENE_SUMMARY',\n  GENE_BACKGROUND = 'GENE_BACKGROUND',\n  MUTATION_EFFECT = 'MUTATION_EFFECT',\n  TUMOR_TYPE_SUMMARY = 'TUMOR_TYPE_SUMMARY',\n  GENE_TUMOR_TYPE_SUMMARY = 'GENE_TUMOR_TYPE_SUMMARY',\n  PROGNOSTIC_SUMMARY = 'PROGNOSTIC_SUMMARY',\n  DIAGNOSTIC_SUMMARY = 'DIAGNOSTIC_SUMMARY',\n  ONCOGENIC = 'ONCOGENIC',\n  VUS = 'VUS',\n  PROGNOSTIC_IMPLICATION = 'PROGNOSTIC_IMPLICATION',\n  DIAGNOSTIC_IMPLICATION = 'DIAGNOSTIC_IMPLICATION',\n  STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY = 'STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY',\n  STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE = 'STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE',\n  INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY = 'INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY',\n  INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE = 'INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE',\n}\n\nexport const TREATMENT_EVIDENCE_TYPES: EVIDENCE_TYPES[] = [\n  EVIDENCE_TYPES.STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY,\n  EVIDENCE_TYPES.STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE,\n  EVIDENCE_TYPES.INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY,\n  EVIDENCE_TYPES.INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE,\n];\n\nexport const QUERY_SEPARATOR_FOR_QUERY_STRING = 'comma';\n\n// Defaults for margin spaces between sections\nexport const DEFAULT_MARGIN_TOP_SM = 'mt-2';\nexport const DEFAULT_MARGIN_TOP_LG = 'mt-3';\nexport const DEFAULT_MARGIN_BOTTOM_SM = 'mb-2';\nexport const DEFAULT_MARGIN_BOTTOM_LG = 'mb-3';\nexport const THRESHOLD_TABLE_FIXED_HEIGHT = 15;\nexport const THRESHOLD_ALTERATION_PAGE_TABLE_FIXED_HEIGHT = 5;\nexport const THRESHOLD_TRIAL_TOKEN_VALID_DEFAULT = 90;\nexport const LG_TABLE_FIXED_HEIGHT = 640;\nexport const SM_TABLE_FIXED_HEIGHT = 400;\nexport const IMG_MAX_WIDTH = 800;\nexport const COMPONENT_PADDING = ['pl-2', 'pr-2', 'mb-2'];\nexport const H5_FONT_SIZE = '1.25rem';\nexport const FONT_FAMILY = \"'Gotham Book', sans-serif\";\n\n// Defaults for tooltip size\nexport const TOOLTIP_MAX_HEIGHT = 300;\n\n// Defaults for the models\nexport const DEFAULT_ONCOKB_INFO: OncoKBInfo = {\n  dataVersion: {\n    date: '',\n    version: '',\n  },\n  appVersion: {\n    major: 0,\n    minor: 0,\n    patch: 1,\n    stable: true,\n    suffixTokens: [],\n    version: 'v0.0.1',\n  },\n  levels: [],\n  ncitVersion: '',\n  apiVersion: {\n    major: 1,\n    minor: 0,\n    patch: 0,\n    stable: true,\n    suffixTokens: [],\n    version: 'v1.0.0',\n  },\n  publicInstance: false,\n  oncoTreeVersion: '',\n};\n\nexport const DEFAULT_MAIN_NUMBERS: MainNumber = {\n  gene: 0,\n  alteration: 0,\n  tumorType: 0,\n  drug: 0,\n  level: [],\n};\n\nexport const DEFAULT_GENE: Gene = {\n  grch37Isoform: '',\n  grch37RefSeq: '',\n  grch38Isoform: '',\n  grch38RefSeq: '',\n  entrezGeneId: -1,\n  geneAliases: [],\n  genesets: [],\n  hugoSymbol: '',\n  oncogene: false,\n  tsg: false,\n};\n\nexport const DEFAULT_GENE_NUMBER: GeneNumber = {\n  gene: DEFAULT_GENE,\n  alteration: 0,\n  highestSensitiveLevel: '',\n  highestResistanceLevel: '',\n  highestDiagnosticImplicationLevel: '',\n  highestPrognosticImplicationLevel: '',\n  highestFdaLevel: '',\n  tumorType: 0,\n};\n\nexport const DEFAULT_MUTATION_EFFECT = {\n  citations: {\n    abstracts: [],\n    pmids: [],\n  },\n\n  description: '',\n\n  knownEffect: '',\n};\n\nexport const DEFAULT_QUERY = {\n  alteration: '',\n  alterationType: '',\n  consequence: '',\n  entrezGeneId: -1,\n  hgvs: '',\n  hugoSymbol: '',\n  id: '',\n  proteinEnd: -1,\n  proteinStart: -1,\n  referenceGenome: 'GRCH37' as any,\n  svType: 'UNKNOWN' as 'UNKNOWN',\n  tumorType: '',\n  type: '',\n};\n\nexport const DEFAULT_ANNOTATION: VariantAnnotation = {\n  alleleExist: false,\n  background: '',\n  dataVersion: '',\n  diagnosticImplications: [],\n  diagnosticSummary: '',\n  geneExist: false,\n  geneSummary: '',\n  highestDiagnosticImplicationLevel: 'NO',\n  highestPrognosticImplicationLevel: 'NO',\n  highestResistanceLevel: 'NO',\n  highestSensitiveLevel: 'NO',\n  highestFdaLevel: 'NO',\n  hotspot: false,\n  lastUpdate: '',\n  mutationEffect: DEFAULT_MUTATION_EFFECT,\n  oncogenic: '',\n  otherSignificantResistanceLevels: [],\n  otherSignificantSensitiveLevels: [],\n  prognosticImplications: [],\n  prognosticSummary: '',\n  query: DEFAULT_QUERY,\n  treatments: [],\n  tumorTypeSummary: '',\n  tumorTypes: [],\n\n  variantExist: false,\n\n  variantSummary: '',\n\n  vue: false,\n  vus: false,\n};\n\nexport enum PAGE_TITLE {\n  ABOUT = 'About OncoKB™',\n  ACCOUNT = 'Account',\n  ACCOUNT_SETTINGS = 'Account Settings',\n  ACCOUNT_PASSWORD = 'Change Password',\n  ACTIONABLE_GENES = 'OncoKB™ Actionable Genes',\n  ADMIN_USER_DETAILS = 'Registered Users',\n  ADMIN_SEND_EMAILS = 'Send Emails to Users',\n  ADMIN_CREATE_ACCOUNT = 'Create New Account',\n  ADMIN_USAGE_ANALYSIS = 'Usage Analysis',\n  ADMIN_ADD_COMPANY = 'Add New Company',\n  ADMIN_COMPANY_DETAILS = 'Companies',\n  API_ACCESS = 'API Access',\n  CANCER_GENES = 'OncoKB™ Cancer Gene List',\n  FAQ = 'Frequently Asked Question',\n  FDA_RECOGNITION = 'OncoKB™ is now an FDA-recognized Public Human Genetic Variant Database*',\n  HOME = \"OncoKB™ - MSK's Precision Oncology Knowledge Base\",\n  DX = 'OncoKB™ Diagnostic Levels of Evidence',\n  PX = 'OncoKB™ Prognostic Levels of Evidence',\n  V1 = 'OncoKB™ Therapeutic Level of Evidence V1',\n  V2 = 'OncoKB™ Therapeutic Level of Evidence V2',\n  FDA = 'Mapping between the OncoKB™ Levels of Evidence and the FDA Levels of Evidence',\n  AAC = 'Mapping between the OncoKB™ Levels of Evidence and the AMP/ASCO/CAP Consensus Recommendation',\n  FDA_NGS = 'FDA fact sheet',\n\n  LOGOUT = 'Log out',\n  LOGIN = 'Log in',\n  NEWS = 'Latest News',\n  REGISTER = 'Register',\n  TEAM = 'OncoKB™ Team',\n  TERMS = 'Terms of Use',\n  SOP = 'OncoKB™ Standard Operating Procedure',\n  YEAR_END_SUMMARY = 'Year End Summary',\n}\n\nexport enum PAGE_ROUTE {\n  LOGIN = '/login',\n  LOGOUT = '/logout',\n  LEGACY_DATA_ACCESS = '/dataAccess',\n  LEGACY_API_ACCESS = '/apiAccess',\n  API_ACCESS = '/api-access',\n  FAQ_ACCESS = '/faq',\n  LEGACY_CANCER_GENES = '/cancerGenes',\n  CANCER_GENES = '/cancer-genes',\n  LEGACY_ACTIONABLE_GENE = '/actionableGenes',\n  ACTIONABLE_GENE = '/actionable-genes',\n  PO_TX = '/precision-oncology-therapies',\n  GENE_HEADER = '/gene',\n  GENE = '/gene/:hugoSymbol',\n  ALTERATION = '/gene/:hugoSymbol/:alteration',\n  HGVSG = '/hgvsg',\n  HGVSG_WITH_QUERY = '/hgvsg/:query',\n  GENOMIC_CHANGE = '/genomic-change',\n  GENOMIC_CHANGE_WITH_QUERY = '/genomic-change/:query',\n  ALTERATION_TUMOR_TYPE = '/gene/:hugoSymbol/:alteration/:tumorType',\n  HOME = '/',\n  ABOUT = '/about',\n  TERMS = '/terms',\n  SOP = '/sop',\n  TEAM = '/team',\n  YEAR_END_SUMMARY = '/year-end-summary',\n  NEWS = '/news',\n  FDA_RECOGNITION = '/fda-recognition',\n  LEVELS = '/levels',\n  DX = '/diagnostic-levels',\n  PX = '/prognostic-levels',\n  V2 = '/therapeutic-levels',\n  FDA_NGS = '/fda-levels',\n\n  SWAGGER_UI = '/swagger-ui/index.html',\n  ADMIN = '/admin',\n  ADMIN_USER_DETAILS = '/admin/user-details',\n  ADMIN_SEND_EMAILS = '/admin/send-emails',\n  ADMIN_CREATE_ACCOUNT = '/admin/create-account',\n  ADMIN_USAGE_ANALYSIS = '/admin/usage-analysis',\n  ADMIN_USER_USAGE_DETAILS = '/admin/usage-analysis/users/:id',\n  ADMIN_USER_USAGE_DETAILS_LINK = '/admin/usage-analysis/users/',\n  ADMIN_RESOURCE_DETAILS = '/admin/usage-analysis/resources/:endpoint',\n  ADMIN_RESOURCE_DETAILS_LINK = '/admin/usage-analysis/resources/',\n  ADMIN_ADD_COMPANY = '/admin/create-company',\n  ADMIN_COMPANY_DETAILS = '/admin/company-details',\n  COMPANY = '/companies/:id',\n  CREATE_COMPANY_USERS = '/companies/:id/create-users',\n  USER = '/users/:login',\n  ACCOUNT = '/account',\n  REGISTER = '/account/register',\n  ACCOUNT_VERIFY = '/account/verify',\n  ACCOUNT_SETTINGS = '/account/settings',\n  ACCOUNT_PASSWORD = '/account/password',\n  ACCOUNT_PASSWORD_RESET_REQUEST = '/account/reset/request',\n  ACCOUNT_PASSWORD_RESET_FINISH = '/account/reset/finish',\n  ACCOUNT_ACTIVE_TRIAL_FINISH = '/account/active-trial/finish',\n}\n\nexport enum TABLE_COLUMN_KEY {\n  HUGO_SYMBOL = 'HUGO_SYMBOL',\n  ALTERATION = 'ALTERATION',\n  ALTERATIONS = 'ALTERATIONS',\n  EVIDENCE_CANCER_TYPE = 'EVIDENCE_CANCER_TYPE',\n  CANCER_TYPE = 'CANCER_TYPE',\n  DRUGS = 'DRUGS',\n  LEVEL = 'LEVEL',\n  FDA_LEVEL = 'FDA_LEVEL',\n  CITATIONS = 'CITATIONS',\n  ONCOGENICITY = 'ONCOGENICITY',\n  MUTATION_EFFECT = 'MUTATION_EFFECT',\n  DESCRIPTION = 'DESCRIPTION',\n}\n\nexport const ONCOGENIC_MUTATIONS = 'Oncogenic Mutations';\nexport const AMPLIFICATION = 'Amplification';\nexport const DELETION = 'Deletion';\nexport const FUSIONS = 'Fusions';\nexport const TRUNCATING_MUTATIONS = 'Truncating Mutations';\nexport const OTHER_BIOMARKERS = 'Other Biomarkers';\nexport const GAIN_OF_FUNCTION_MUTATIONS = 'Gain-of-function Mutations';\nexport const LOSS_OF_FUNCTION_MUTATIONS = 'Loss-of-function Mutations';\nexport const SWITCH_OF_FUNCTION_MUTATIONS = 'Switch-of-function Mutations';\n\nexport enum SEARCH_QUERY_KEY {\n  REFERENCE_GENOME = 'refGenome',\n}\n\nexport enum LicenseType {\n  ACADEMIC = 'ACADEMIC',\n  RESEARCH_IN_COMMERCIAL = 'RESEARCH_IN_COMMERCIAL',\n  HOSPITAL = 'HOSPITAL',\n  COMMERCIAL = 'COMMERCIAL',\n}\n\nexport const LICENSE_TITLES: { [key in LicenseType]: string } = {\n  [LicenseType.ACADEMIC]: 'Research use in an academic setting',\n  [LicenseType.RESEARCH_IN_COMMERCIAL]: 'Research use in a commercial setting',\n  [LicenseType.HOSPITAL]:\n    'Use for patient services or reports in a hospital setting',\n  [LicenseType.COMMERCIAL]: 'Use in a commercial product',\n};\n\nexport type License = {\n  key: LicenseType;\n  title: string;\n};\n\nexport const LICENSE_TYPES: License[] = [\n  {\n    key: LicenseType.ACADEMIC,\n    title: LICENSE_TITLES[LicenseType.ACADEMIC],\n  },\n  {\n    key: LicenseType.RESEARCH_IN_COMMERCIAL,\n    title: LICENSE_TITLES[LicenseType.RESEARCH_IN_COMMERCIAL],\n  },\n  {\n    key: LicenseType.HOSPITAL,\n    title: LICENSE_TITLES[LicenseType.HOSPITAL],\n  },\n  {\n    key: LicenseType.COMMERCIAL,\n    title: LICENSE_TITLES[LicenseType.COMMERCIAL],\n  },\n];\n\nexport enum CompanyType {\n  PARENT = 'PARENT',\n  BRANCH = 'BRANCH',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport const COMPANY_TYPE_TITLES: { [key in CompanyType]: string } = {\n  [CompanyType.PARENT]: 'Parent',\n  [CompanyType.BRANCH]: 'Branch',\n  [CompanyType.UNKNOWN]: 'Unknown',\n};\n\nexport enum LicenseStatus {\n  REGULAR = 'REGULAR',\n  TRIAL = 'TRIAL',\n  TRIAL_EXPIRED = 'TRIAL_EXPIRED',\n  EXPIRED = 'EXPIRED',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport const LICENSE_STATUS_TITLES: { [key in LicenseStatus]: string } = {\n  [LicenseStatus.REGULAR]: 'Regular',\n  [LicenseStatus.TRIAL]: 'Trial',\n  [LicenseStatus.TRIAL_EXPIRED]: 'Trial Expired',\n  [LicenseStatus.EXPIRED]: 'Expired',\n  [LicenseStatus.UNKNOWN]: 'Unknown',\n};\n\nexport enum LicenseModel {\n  FULL = 'FULL',\n  LIMITED = 'LIMITED',\n}\n\nexport const LICENSE_MODEL_TITLES: { [key in LicenseModel]: string } = {\n  [LicenseModel.FULL]: 'Full License',\n  [LicenseModel.LIMITED]: 'Limited License',\n};\n\nexport const LICENSE_MODEL_DESCRIPTIONS: { [key in LicenseModel]: string } = {\n  [LicenseModel.FULL]: `This tier will allow any user with a matching email address domain to be automatically approved.`,\n  [LicenseModel.LIMITED]:\n    'This tier is appropriate when we want to restrict the license to a group of users. ',\n};\n\nexport enum ACCOUNT_TITLES {\n  ID = 'User ID',\n  USER_NAME = 'Username',\n  FIRST_NAME = 'First Name',\n  LAST_NAME = 'Last Name',\n  NAME = 'Name',\n  EMAIL = 'Email',\n  POSITION = 'Job Title / Position',\n  COMPANY = 'Company',\n  COMPANY_SECTION_TITLE = 'Company Information',\n  CITY = 'City',\n  COUNTRY = 'Country',\n  API_TOKEN = 'API Token',\n  LICENSE_TYPE = 'License',\n  ADDITIONAL_INFO_USER_CASE = 'Use Case',\n}\n\nexport enum API_CALL_STATUS {\n  SUCCESSFUL,\n  FAILURE,\n}\n\nexport enum TERM_DEFINITION {\n  IS_ACADEMIC_GROUP = 'IS_ACADEMIC_GROUP',\n  ONLY_ACADEMIC_USAGE = 'ONLY_ACADEMIC_USAGE',\n  NO_COMPANY_USAGE = 'NO_COMPANY_USAGE',\n  OK_WITH_TERMS_OF_USE = 'OK_WITH_TERMS_OF_USE',\n}\n\nexport const FDA_RECOGNITION_DISCLAIMER: React.FunctionComponent<{\n  enableLink: boolean;\n}> = props => (\n  <span>\n    {props.enableLink ? (\n      <Link to={PAGE_ROUTE.FDA_RECOGNITION}>FDA recognition</Link>\n    ) : (\n      'FDA recognition'\n    )}{' '}\n    of {ONCOKB_TM} is for the content that is clearly marked\n  </span>\n);\nexport const AsteriskMark = () => <span>&#42;</span>;\nexport const FdaRecognitionDisclaimer: React.FunctionComponent<{\n  enableLink: boolean;\n}> = props => (\n  <span>\n    <AsteriskMark />\n    <FDA_RECOGNITION_DISCLAIMER enableLink={props.enableLink} />\n  </span>\n);\n\nexport const ACADEMIC_TERMS = [\n  {\n    key: TERM_DEFINITION.IS_ACADEMIC_GROUP,\n    description:\n      'I confirm that I am a student or employee at the academic institution specified above.',\n  },\n  {\n    key: TERM_DEFINITION.ONLY_ACADEMIC_USAGE,\n    description: `I agree that my use of ${ONCOKB_TM} is solely for research or educational purposes.`,\n  },\n  {\n    key: TERM_DEFINITION.NO_COMPANY_USAGE,\n    description: `I confirm that I will NOT use ${ONCOKB_TM} data for use in medical reports or in an electronic health care system.`,\n  },\n  {\n    key: TERM_DEFINITION.OK_WITH_TERMS_OF_USE,\n    description: (\n      <span>\n        I have read and agree with the {ONCOKB_TM}{' '}\n        <Link to={PAGE_ROUTE.TERMS}>Terms of Use</Link>.\n      </span>\n    ),\n  },\n];\n\nexport type DataRelease = {\n  version: string;\n  date: string;\n};\n\nexport const DATA_RELEASES: DataRelease[] = [\n  { date: '10022023', version: 'v4.9' },\n  { date: '09012023', version: 'v4.8' },\n  { date: '07282023', version: 'v4.7' },\n  { date: '07122023', version: 'v4.6' },\n  { date: '05192023', version: 'v4.5' },\n  { date: '04122023', version: 'v4.4' },\n  { date: '03222023', version: 'v4.3' },\n  { date: '02102023', version: 'v4.2' },\n  { date: '02012023', version: 'v4.1' },\n  { date: '12222022', version: 'v4.0' },\n  { date: '12132022', version: 'v3.19' },\n  { date: '11302022', version: 'v3.18' },\n  { date: '10282022', version: 'v3.17' },\n  { date: '09062022', version: 'v3.16' },\n  { date: '07252022', version: 'v3.15' },\n  { date: '06062022', version: 'v3.14' },\n  { date: '05052022', version: 'v3.13' },\n  { date: '03292022', version: 'v3.12' },\n  { date: '02282022', version: 'v3.11' },\n  { date: '01072022', version: 'v3.10' },\n  { date: '12302021', version: 'v3.9_patch_1' },\n  { date: '11292021', version: 'v3.9' },\n  { date: '10262021', version: 'v3.8' },\n  { date: '09292021', version: 'v3.7' },\n  { date: '08312021', version: 'v3.6' },\n  { date: '07162021', version: 'v3.5' },\n  { date: '06172021', version: 'v3.4' },\n  { date: '04142021', version: 'v3.3' },\n  { date: '03122021', version: 'v3.2' },\n  { date: '02102021', version: 'v3.1' },\n  { date: '01142021', version: 'v3.0' },\n  { date: '12172020', version: 'v2.10' },\n  { date: '11132020', version: 'v2.9' },\n  { date: '09172020', version: 'v2.8' },\n  { date: '08282020', version: 'v2.7' },\n  { date: '08052020', version: 'v2.6_patch_1' },\n  { date: '07232020', version: 'v2.6' },\n  { date: '07092020', version: 'v2.5' },\n  { date: '06092020', version: 'v2.4' },\n  { date: '05112020', version: 'v2.3' },\n  { date: '04232020', version: 'v2.2' },\n  { date: '03262020', version: 'v2.1_patch_1' },\n  { date: '02122020', version: 'v2.1' },\n  { date: '12202019', version: 'v2.0' },\n  { date: '12162019', version: 'v1.24_patch_1' },\n  { date: '12122019', version: 'v1.24' },\n  { date: '08282019', version: 'v1.23' },\n  { date: '08042019', version: 'v1.22' },\n  { date: '06212019', version: 'v1.21' },\n  { date: '05092019', version: 'v1.20' },\n  { date: '03112019', version: 'v1.19_patch_1' },\n  { date: '01242019', version: 'v1.19' },\n  { date: '12142018', version: 'v1.18' },\n  { date: '11022018', version: 'v1.17_patch_1' },\n  { date: '10262018', version: 'v1.17' },\n  { date: '10012018', version: 'v1.16' },\n  { date: '08202018', version: 'v1.15' },\n  { date: '07122018', version: 'v1.14' },\n  { date: '04032018', version: 'v1.13_patch_2' },\n  { date: '02282018', version: 'v1.13_patch_1' },\n  { date: '02022018', version: 'v1.13' },\n  { date: '10262017', version: 'v1.12_patch_1' },\n  { date: '10192017', version: 'v1.12' },\n  { date: '08302017', version: 'v1.11_patch_1' },\n  { date: '08172017', version: 'v1.11' },\n  { date: '05152017', version: 'v1.10_patch_1' },\n  { date: '04192017', version: 'v1.9_patch_2' },\n  { date: '04172017', version: 'v1.9_patch_1' },\n  { date: '04052017', version: 'v1.9' },\n  { date: '03072017', version: 'v1.8' },\n];\n\nexport const UNAUTHORIZED_ALLOWED_PATH = [\n  PAGE_ROUTE.LOGIN,\n  PAGE_ROUTE.ACCOUNT_PASSWORD,\n  PAGE_ROUTE.ACCOUNT_PASSWORD_RESET_REQUEST,\n  PAGE_ROUTE.ACCOUNT_PASSWORD_RESET_FINISH,\n  PAGE_ROUTE.ACCOUNT_VERIFY,\n  PAGE_ROUTE.REGISTER,\n];\n\nexport enum USER_AUTHORITY {\n  ROLE_USER = 'ROLE_USER',\n  ROLE_PREMIUM_USER = 'ROLE_PREMIUM_USER',\n  ROLE_ADMIN = 'ROLE_ADMIN',\n  ROLE_DATA_DOWNLOAD = 'ROLE_DATA_DOWNLOAD',\n  ROLE_PUBLIC_WEBSITE = 'ROLE_PUBLIC_WEBSITE',\n}\n\nexport const USER_AUTHORITIES = [\n  USER_AUTHORITY.ROLE_ADMIN,\n  USER_AUTHORITY.ROLE_PREMIUM_USER,\n  USER_AUTHORITY.ROLE_DATA_DOWNLOAD,\n  USER_AUTHORITY.ROLE_USER,\n  USER_AUTHORITY.ROLE_PUBLIC_WEBSITE,\n];\n\nexport const NOT_CHANGEABLE_AUTHORITIES = [\n  USER_AUTHORITY.ROLE_USER,\n  USER_AUTHORITY.ROLE_PUBLIC_WEBSITE,\n];\n\nexport enum REGEXP {\n  PMID = 'PMID:\\\\s*([0-9]+,*\\\\s*)+',\n  NCTID = 'NCT[0-9]+',\n}\n\nexport const REGEXP_LINK: { [key: string]: string } = {\n  [REGEXP.PMID]: 'https://www.ncbi.nlm.nih.gov/pubmed/',\n  [REGEXP.NCTID]: 'http://clinicaltrials.gov/show/',\n};\n\nexport enum REFERENCE_GENOME {\n  GRCh37 = 'GRCh37',\n  GRCh38 = 'GRCh38',\n}\n\nexport const DEFAULT_REFERENCE_GENOME = REFERENCE_GENOME.GRCh37;\n\nexport const DEFAULT_FEEDBACK_ANNOTATION: Feedback = {\n  type: FeedbackType.ANNOTATION,\n};\n","import React from 'react';\nimport indexStyles from 'app/index.module.scss';\nimport { ONCOKB_TM } from 'app/config/constants';\n\nexport const CitationText = ({\n  highlightLinkout = false,\n  boldLinkout = false,\n}: {\n  highlightLinkout?: boolean;\n  boldLinkout?: boolean;\n}) => {\n  return (\n    <span>\n      When using {ONCOKB_TM}, please cite:{' '}\n      <a\n        href=\"https://ascopubs.org/doi/full/10.1200/PO.17.00011\"\n        className={boldLinkout ? 'font-medium' : undefined}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Chakravarty et al., JCO PO 2017\n      </a>\n      .\n    </span>\n  );\n};\n","import React from 'react';\nimport {\n  ONCOKB_CONTACT_EMAIL,\n  ONCOKB_LICENSE_EMAIL,\n  PAGE_ROUTE,\n} from 'app/config/constants';\n\nexport const ContactLink: React.FunctionComponent<{\n  emailSubject: string;\n  title?: string;\n}> = props => {\n  return (\n    <a\n      href={`mailto:${ONCOKB_CONTACT_EMAIL}?subject=${props.emailSubject}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      title={props.title ? props.title : props.emailSubject}\n    >\n      {props.children ? props.children : ONCOKB_CONTACT_EMAIL}\n    </a>\n  );\n};\n","import React, { CSSProperties } from 'react';\n\nexport const Linkout: React.FunctionComponent<{\n  link: string;\n  className?: string;\n  style?: CSSProperties;\n  addHttpsProtocol?: boolean;\n}> = props => {\n  let updatedLink = props.link;\n  if (props.addHttpsProtocol === undefined || props.addHttpsProtocol) {\n    if (!/http(s)?:\\/\\/.*/.test(updatedLink)) {\n      updatedLink = `https://${updatedLink}`;\n    }\n  }\n  return (\n    <a\n      href={updatedLink}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      style={props.style}\n      className={props.className}\n    >\n      {props.children ? props.children : props.link}\n    </a>\n  );\n};\n","import React from 'react';\n\nconst ExternalLinkIcon: React.FunctionComponent<{}> = props => {\n  return <i className={'fa fa-external-link'} />;\n};\nexport default ExternalLinkIcon;\n","import {\n  LEVEL_PRIORITY,\n  LEVELS,\n  MUTATION_EFFECT,\n  ONCOGENICITY,\n} from 'app/config/constants';\nimport _ from 'lodash';\nimport { Alteration, Citations } from '../api/generated/OncoKbAPI';\nimport {levelOfEvidence2Level} from \"app/shared/utils/Utils\";\n\nexport function sortByArrayIndexAsc(aIndex: number, bIndex: number) {\n  if (aIndex === bIndex) {\n    return 0;\n  } else if (aIndex === -1) {\n    return 1;\n  } else if (bIndex === -1) {\n    return -1;\n  } else {\n    return aIndex - bIndex;\n  }\n}\n\nexport function sortByLevelWithLevels(a: string, b: string, levels: LEVELS[]) {\n  a = levelOfEvidence2Level(a);\n  b = levelOfEvidence2Level(b);\n  const aIndex = levels.indexOf(a as LEVELS);\n  const bIndex = levels.indexOf(b as LEVELS);\n  if (aIndex === bIndex) {\n    return 0;\n  }\n  return bIndex - aIndex;\n}\n\nexport function sortByLevel(a: string, b: string) {\n  return sortByLevelWithLevels(a, b, LEVEL_PRIORITY)\n}\n\nexport function defaultSortMethod(a: any, b: any): number {\n  // force null and undefined to the bottom\n  a = a === null || a === undefined ? -Infinity : a;\n  b = b === null || b === undefined ? -Infinity : b;\n\n  // force any string values to lowercase\n  a = typeof a === 'string' ? a.toLowerCase() : a;\n  b = typeof b === 'string' ? b.toLowerCase() : b;\n\n  // Return either 1 or -1 to indicate a sort priority\n  if (a > b) {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n\n  // returning 0 or undefined will use any subsequent column sorting methods or the row index as a tiebreaker\n  return 0;\n}\n\nexport function defaultFdaImplicationSortMethod(a: any, b: any): number {\n  // sort by level first\n  let compareScore = sortByLevel(a.level, b.level);\n  if (compareScore === 0) {\n    compareScore = defaultSortMethod(a.cancerTypes, b.cancerTypes);\n    if (compareScore === 0) {\n      compareScore = defaultSortMethod(a.alterations, b.alterations);\n    }\n  }\n  return compareScore;\n}\n\nexport function sortNumber(a: number, b: number): number {\n  if (!_.isNumber(a)) {\n    if (!_.isNumber(b)) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n  if (!_.isNumber(b)) {\n    return -1;\n  }\n  return a - b;\n}\n\nexport function sortByAlteration(a: Alteration, b: Alteration): number {\n  // force null and undefined to the bottom\n  let result = sortNumber(a.proteinStart, b.proteinStart);\n\n  if (result === 0) {\n    result = sortNumber(a.proteinEnd, b.proteinEnd);\n  }\n\n  if (result === 0) {\n    result = a.name.localeCompare(b.name);\n  }\n  return result;\n}\n\nconst oncogenicityOrder = [\n  ONCOGENICITY.ONCOGENIC,\n  ONCOGENICITY.LIKELY_ONCOGENIC,\n  ONCOGENICITY.PREDICTED_ONCOGENIC,\n  ONCOGENICITY.RESISTANCE,\n  ONCOGENICITY.NEUTRAL,\n  ONCOGENICITY.LIKELY_NEUTRAL,\n  ONCOGENICITY.INCONCLUSIVE,\n  ONCOGENICITY.UNKNOWN,\n];\nconst mutationEffectOrder = [\n  MUTATION_EFFECT.GAIN_OF_FUNCTION,\n  MUTATION_EFFECT.LIKELY_GAIN_OF_FUNCTION,\n  MUTATION_EFFECT.LOSS_OF_FUNCTION,\n  MUTATION_EFFECT.LIKELY_LOSS_OF_FUNCTION,\n  MUTATION_EFFECT.NEUTRAL,\n  MUTATION_EFFECT.LIKELY_NEUTRAL,\n  MUTATION_EFFECT.SWITCH_OF_FUNCTION,\n  MUTATION_EFFECT.LIKELY_SWITCH_OF_FUNCTION,\n  MUTATION_EFFECT.INCONCLUSIVE,\n  MUTATION_EFFECT.UNKNOWN,\n];\n\nexport function numberStringSortMethod(a: string, b: string) {\n  if (isNaN(+a)) {\n    return isNaN(+b) ? 0 : 1;\n  } else if (isNaN(+b)) {\n    return -1;\n  } else {\n    return +a - +b;\n  }\n}\n\nexport function citationsSortMethod(a: Citations, b: Citations) {\n  const numOfReferencesA = a.abstracts.length + a.pmids.length;\n  const numOfReferencesB = b.abstracts.length + b.pmids.length;\n\n  return numOfReferencesA - numOfReferencesB;\n}\n\nexport function oncogenicitySortMethod(a: ONCOGENICITY, b: ONCOGENICITY) {\n  return sortByArrayIndexAsc(\n    oncogenicityOrder.indexOf(a),\n    oncogenicityOrder.indexOf(b)\n  );\n}\n\nexport function mutationEffectSortMethod(\n  a: MUTATION_EFFECT,\n  b: MUTATION_EFFECT\n) {\n  return sortByArrayIndexAsc(\n    mutationEffectOrder.indexOf(a),\n    mutationEffectOrder.indexOf(b)\n  );\n}\n","import AppStore from 'app/store/AppStore';\nimport { inject } from 'mobx-react';\nimport React from 'react';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport { InfoLevel } from 'app/shared/api/generated/OncoKbAPI';\nimport _ from 'lodash';\nimport { level2LevelOfEvidence } from 'app/shared/utils/Utils';\nimport ReactHtmlParser from 'react-html-parser';\nimport { LEVELS } from 'app/config/constants';\n\nexport const LevelWithDescription: React.FunctionComponent<{\n  level: LEVELS;\n  appStore?: AppStore;\n  description?: string;\n}> = inject('appStore')(props => {\n  const levelOfEvidence = level2LevelOfEvidence(props.level);\n\n  function getLevelDescription() {\n    if (props.description) {\n      return <span>{props.description}</span>;\n    }\n    const match: InfoLevel | undefined = _.find(\n      props.appStore!.appInfo.result.levels,\n      (level: InfoLevel) => level.levelOfEvidence === levelOfEvidence\n    );\n    return match ? (\n      <div style={{ maxWidth: 300 }}>\n        {ReactHtmlParser(match.htmlDescription)}\n      </div>\n    ) : (\n      ''\n    );\n  }\n\n  return (\n    <DefaultTooltip overlay={getLevelDescription()}>\n      <span>{props.children}</span>\n    </DefaultTooltip>\n  );\n});\n","import {\n  Article,\n  Citations,\n  TreatmentDrug,\n} from 'app/shared/api/generated/OncoKbAPI';\nimport _ from 'lodash';\nimport React, { ReactNode } from 'react';\nimport {\n  AMPLIFICATION,\n  APP_LOCAL_DATE_FORMAT,\n  APP_LOCAL_DATETIME_FORMAT_Z,\n  APP_TIMESTAMP_FORMAT,\n  DELETION,\n  FUSIONS,\n  GAIN_OF_FUNCTION_MUTATIONS,\n  GENERAL_ONCOGENICITY,\n  LEVEL_PRIORITY,\n  LEVEL_TYPES,\n  LEVELS,\n  LOSS_OF_FUNCTION_MUTATIONS,\n  ONCOGENIC_MUTATIONS,\n  ONCOGENICITY,\n  ONCOGENICITY_CLASS_NAMES,\n  ONCOKB,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n  SHORTEN_TEXT_FROM_LIST_THRESHOLD,\n  SWITCH_OF_FUNCTION_MUTATIONS,\n  TABLE_COLUMN_KEY,\n  TRUNCATING_MUTATIONS,\n} from 'app/config/constants';\nimport classnames from 'classnames';\nimport {\n  Alteration,\n  EnsemblGene,\n  Evidence,\n  TumorType,\n} from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport {\n  citationsSortMethod,\n  defaultSortMethod,\n  mutationEffectSortMethod,\n  oncogenicitySortMethod,\n  sortByAlteration,\n} from 'app/shared/utils/ReactTableUtils';\nimport { TableCellRenderer } from 'react-table';\nimport { LevelWithDescription } from 'app/components/LevelWithDescription';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport { CitationTooltip } from 'app/components/CitationTooltip';\nimport {\n  AlterationPageLink,\n  GenePageLink,\n  OncoTreeLink,\n  SopPageLink,\n} from 'app/shared/utils/UrlUtils';\nimport moment from 'moment';\nimport InfoIcon from 'app/shared/icons/InfoIcon';\nimport { COLOR_BLUE } from 'app/config/theme';\nimport * as styles from 'app/index.module.scss';\nimport { Version } from 'app/pages/LevelOfEvidencePage';\nimport { Link } from 'react-router-dom';\nimport { LevelOfEvidencePageLink } from 'app/shared/links/LevelOfEvidencePageLink';\n\n// Likely Oncogenic, Predicted Oncogenic will be converted to Oncogenic\n// Likely Neutral will be converted to Neutral\nexport function shortenOncogenicity(oncogenicity: string): string {\n  return GENERAL_ONCOGENICITY[oncogenicity];\n}\n\nexport function shortenTextByCharacters(text: string, cutoff: number) {\n  const shortText = (text || '').trim();\n  if (shortText.length <= cutoff) {\n    return shortText;\n  } else {\n    const separator = ' ';\n    const words = (text || '').slice(0, cutoff).split(separator);\n    words.pop();\n    return words.join(separator);\n  }\n}\n\nexport function getCancerTypeNameFromOncoTreeType(\n  oncoTreeType: TumorType\n): string {\n  return oncoTreeType.subtype || oncoTreeType.mainType || 'NA';\n}\n\nexport function getCancerTypesName(\n  cancerTypes: string[],\n  excludedCancerTypes?: string[]\n): string {\n  let name = cancerTypes.join(', ');\n  if (excludedCancerTypes && excludedCancerTypes.length > 0) {\n    name += ' (excluding ' + excludedCancerTypes.join(', ') + ')';\n  }\n  return name;\n}\n\nexport function getCancerTypesNameFromOncoTreeType(\n  cancerTypes: TumorType[],\n  excludedCancerTypes?: TumorType[]\n): string {\n  return getCancerTypesName(\n    cancerTypes.map(cancerType =>\n      getCancerTypeNameFromOncoTreeType(cancerType)\n    ),\n    (excludedCancerTypes || []).map(cancerType =>\n      getCancerTypeNameFromOncoTreeType(cancerType)\n    )\n  );\n}\n\nexport function trimLevelOfEvidenceSubversion(levelOfEvidence: string) {\n  return _.replace(levelOfEvidence, new RegExp('[AB]'), '');\n}\n\nexport function levelOfEvidence2Level(\n  levelOfEvidence: string | null,\n  trimSubversion = false\n): LEVELS {\n  let level = levelOfEvidence?.replace('LEVEL_', '');\n  if (trimSubversion && level) {\n    level = trimLevelOfEvidenceSubversion(level);\n  }\n  return level as LEVELS;\n}\n\nexport function toggleStrList(element: string, list: string[]) {\n  if (list.includes(element)) {\n    list.splice(list.indexOf(element), 1);\n  } else {\n    list.push(element);\n  }\n  return list;\n}\n\nexport function level2LevelOfEvidence(level: LEVELS) {\n  switch (level) {\n    case LEVELS.Tx3:\n    case LEVELS.Tx3A:\n      return 'LEVEL_3A';\n      break;\n    default:\n      return `LEVEL_${level}`;\n  }\n}\n\nexport function isFdaLevel(level: LEVELS) {\n  switch (level) {\n    case LEVELS.Fda1:\n    case LEVELS.Fda2:\n    case LEVELS.Fda3:\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function getAllAlterationsName(alterations: Alteration[]) {\n  return alterations\n    ? alterations.map(alteration => alteration.name).join(', ')\n    : '';\n}\n\nexport function getAllTumorTypesName(tumorTypes: TumorType[]) {\n  return tumorTypes\n    ? tumorTypes.map(getCancerTypeNameFromOncoTreeType).sort().join(', ')\n    : '';\n}\n\nexport function getDrugNameFromTreatment(drug: TreatmentDrug) {\n  // have to use ignore to escape the actual model structure. The swagger does not reflect the actually json structure\n  // @ts-ignore\n  return drug.drugName;\n}\n\nexport function getTreatmentNameFromEvidence(evidence: Evidence) {\n  return _.sortBy(evidence.treatments, 'priority')\n    .map(treatment =>\n      _.sortBy(treatment.drugs, 'priority')\n        .map(drug => getDrugNameFromTreatment(drug))\n        .join(' + ')\n    )\n    .join(', ');\n}\n\nexport function articles2Citations(articles: Article[]): Citations {\n  return {\n    abstracts: articles\n      .filter(article => !!article.abstract)\n      .map(article => {\n        return {\n          abstract: article.abstract,\n          link: article.link,\n        };\n      }),\n    pmids: articles\n      .filter(article => !!article.pmid)\n      .map(article => article.pmid),\n  };\n}\n\nexport function citationsHasInfo(citations: Citations | null) {\n  if (!citations) {\n    return false;\n  }\n\n  const pmidsSize = citations.pmids ? citations.pmids.length : 0;\n  const abstractsSize = citations.abstracts ? citations.abstracts.length : 0;\n  return pmidsSize + abstractsSize > 0;\n}\n\nfunction getAnnotationLevelClassName(\n  sensitiveLevel: string,\n  resistanceLevel: string\n) {\n  const sensitiveLevelClassName = sensitiveLevel ? `-${sensitiveLevel}` : '';\n  const resistanceLevelClassName = resistanceLevel ? `-${resistanceLevel}` : '';\n\n  if (!sensitiveLevelClassName && !resistanceLevelClassName) {\n    return 'no-level';\n  }\n  return `level${sensitiveLevelClassName}${resistanceLevelClassName}`;\n}\n\nfunction getAnnotationOncogenicityClassName(\n  oncogenicity: string,\n  vus: boolean\n) {\n  const map = ONCOGENICITY_CLASS_NAMES[oncogenicity];\n  if (map) {\n    return map;\n  } else {\n    if (vus) {\n      return 'vus';\n    } else {\n      return 'unknown';\n    }\n  }\n}\n\nexport const OncoKBAnnotationIcon: React.FunctionComponent<{\n  oncogenicity: string;\n  sensitiveLevel: string;\n  resistanceLevel: string;\n  vus: boolean;\n  className?: string;\n}> = props => {\n  return (\n    <i\n      className={classnames(\n        `oncokb annotation-icon ${getAnnotationOncogenicityClassName(\n          props.oncogenicity,\n          props.vus\n        )} ${getAnnotationLevelClassName(\n          props.sensitiveLevel,\n          props.resistanceLevel\n        )}`,\n        props.className\n      )}\n    />\n  );\n};\nexport const OncoKBOncogenicityIcon: React.FunctionComponent<{\n  oncogenicity: string | undefined;\n  isVus: boolean;\n  className?: string;\n}> = props => {\n  let oncogenicity = props.oncogenicity;\n  if (oncogenicity === undefined) {\n    oncogenicity = ONCOGENICITY.UNKNOWN;\n  }\n  return (\n    <span\n      style={{ width: 16, marginTop: -3, marginLeft: 3 }}\n      key={'oncokb-oncogenicity-icone'}\n    >\n      <i\n        className={classnames(\n          `oncokb annotation-icon ${getAnnotationOncogenicityClassName(\n            oncogenicity,\n            props.isVus\n          )} no-level`,\n          props.className\n        )}\n      />\n    </span>\n  );\n};\n\nexport const OncoKBLevelIcon: React.FunctionComponent<{\n  level: LEVELS;\n  withDescription?: boolean;\n}> = ({ level, withDescription = true }) => {\n  const oncokbIcon = <i className={`oncokb icon level-${level}`} />;\n  return withDescription ? (\n    <LevelWithDescription level={level}>{oncokbIcon}</LevelWithDescription>\n  ) : (\n    oncokbIcon\n  );\n};\n\nexport const FdaLevelIcon: React.FunctionComponent<{\n  level: LEVELS;\n  withDescription?: boolean;\n}> = ({ level, withDescription = true }) => {\n  const fdaIcon = (\n    <span\n      className=\"fa-stack\"\n      style={{ fontSize: 9, lineHeight: '18px', margin: '0 3px' }}\n    >\n      <span className=\"fa fa-circle-thin fa-stack-2x\"></span>\n      <strong className=\"fa-stack-1x\" style={{ fontSize: '1.2em' }}>\n        {level.toString().replace('Fda', '')}\n      </strong>\n    </span>\n  );\n\n  let levelDescription = '';\n  switch (level) {\n    case LEVELS.Fda1:\n      levelDescription = 'Companion Diagnostics';\n      break;\n    case LEVELS.Fda2:\n      levelDescription =\n        'Cancer Mutations with Evidence of Clinical Significance';\n      break;\n    case LEVELS.Fda3:\n      levelDescription =\n        'Cancer Mutations with Evidence of Potential Clinical Significance';\n      break;\n    default:\n      break;\n  }\n  return withDescription ? (\n    <LevelWithDescription level={level} description={levelDescription}>\n      {fdaIcon}\n    </LevelWithDescription>\n  ) : (\n    fdaIcon\n  );\n};\n\nexport function getDefaultColumnDefinition<T>(\n  columnKey: TABLE_COLUMN_KEY\n):\n  | {\n      id: string;\n      Header: TableCellRenderer;\n      accessor: string;\n      minWidth: number;\n      width?: number;\n      style?: object;\n      defaultSortDesc: boolean;\n      Cell?: TableCellRenderer;\n      sortMethod?: typeof defaultSortMethod;\n      sortable?: boolean;\n    }\n  | undefined {\n  switch (columnKey) {\n    case TABLE_COLUMN_KEY.HUGO_SYMBOL:\n      return {\n        id: TABLE_COLUMN_KEY.HUGO_SYMBOL,\n        Header: <span>Gene</span>,\n        accessor: 'hugoSymbol',\n        minWidth: 100,\n        defaultSortDesc: false,\n        sortMethod: defaultSortMethod,\n        Cell(props: { original: any }) {\n          return <GenePageLink hugoSymbol={props.original.hugoSymbol} />;\n        },\n      };\n    case TABLE_COLUMN_KEY.ALTERATION:\n      return {\n        id: TABLE_COLUMN_KEY.ALTERATION,\n        Header: <span>Alteration</span>,\n        accessor: 'alteration',\n        minWidth: 100,\n        defaultSortDesc: true,\n        sortMethod: sortByAlteration,\n        Cell(props: { original: any }) {\n          return (\n            <AlterationPageLink\n              hugoSymbol={props.original.hugoSymbol}\n              alteration={props.original.alteration}\n            />\n          );\n        },\n      };\n    case TABLE_COLUMN_KEY.ALTERATIONS:\n      return {\n        id: TABLE_COLUMN_KEY.ALTERATION,\n        Header: <span>Alterations</span>,\n        accessor: 'alterations',\n        style: { whiteSpace: 'normal' },\n        minWidth: 100,\n        defaultSortDesc: false,\n        sortMethod: defaultSortMethod,\n      };\n    case TABLE_COLUMN_KEY.EVIDENCE_CANCER_TYPE:\n      return {\n        id: TABLE_COLUMN_KEY.EVIDENCE_CANCER_TYPE,\n        Header: (\n          <span>\n            Level-associated cancer types{' '}\n            <InfoIcon\n              overlay={\n                <span>\n                  The cancer type is curated using <OncoTreeLink />\n                </span>\n              }\n            />\n          </span>\n        ),\n        accessor: 'cancerTypes',\n        style: { whiteSpace: 'normal' },\n        minWidth: 110,\n        defaultSortDesc: false,\n        sortMethod: defaultSortMethod,\n      };\n    case TABLE_COLUMN_KEY.DRUGS:\n      return {\n        id: TABLE_COLUMN_KEY.DRUGS,\n        Header: <span>Drugs</span>,\n        accessor: 'drugs',\n        style: { whiteSpace: 'normal' },\n        minWidth: 100,\n        defaultSortDesc: false,\n        sortMethod: defaultSortMethod,\n      };\n    case TABLE_COLUMN_KEY.LEVEL:\n      return {\n        id: TABLE_COLUMN_KEY.LEVEL,\n        Header: <span>Level</span>,\n        accessor: 'level',\n        minWidth: 60,\n        width: 60,\n        defaultSortDesc: true,\n        sortMethod(a: LEVELS, b: LEVELS) {\n          return LEVEL_PRIORITY.indexOf(a) - LEVEL_PRIORITY.indexOf(b);\n        },\n        Cell(props: any) {\n          return (\n            <div className={'d-flex justify-content-center'}>\n              <OncoKBLevelIcon\n                level={props.original.level}\n                withDescription={true}\n              />\n            </div>\n          );\n        },\n      };\n    case TABLE_COLUMN_KEY.FDA_LEVEL:\n      return {\n        id: TABLE_COLUMN_KEY.FDA_LEVEL,\n        Header: (\n          <div className={'d-flex justify-content-center'}>\n            <span>FDA Level of Evidence</span>\n            <InfoIcon\n              className={'ml-1'}\n              overlay={\n                <span>\n                  For more information about the FDA Level of Evidence, please\n                  see{' '}\n                  <LevelOfEvidencePageLink levelType={LEVEL_TYPES.FDA}>\n                    <b>HERE</b>\n                  </LevelOfEvidencePageLink>\n                  .\n                </span>\n              }\n            />\n          </div>\n        ),\n        accessor: 'level',\n        width: 250,\n        minWidth: 60,\n        defaultSortDesc: true,\n        sortMethod(a: string, b: string) {\n          return (\n            LEVEL_PRIORITY.indexOf(a.replace('Level ', '') as LEVELS) -\n            LEVEL_PRIORITY.indexOf(b.replace('Level ', '') as LEVELS)\n          );\n        },\n        Cell(props: any) {\n          return (\n            <div className={'d-flex justify-content-center'}>\n              <FdaLevelIcon\n                level={props.original.level}\n                withDescription={true}\n              />\n            </div>\n          );\n        },\n      };\n    case TABLE_COLUMN_KEY.CITATIONS:\n      return {\n        id: TABLE_COLUMN_KEY.CITATIONS,\n        Header: <span>Citations</span>,\n        accessor: 'citations',\n        minWidth: 90,\n        width: 90,\n        defaultSortDesc: false,\n        sortMethod: citationsSortMethod,\n        Cell(props: any) {\n          const numOfReferences =\n            props.original.drugAbstracts.length +\n            props.original.drugPmids.length;\n          return (\n            <div>\n              <DefaultTooltip\n                placement=\"left\"\n                trigger={['hover', 'focus']}\n                overlay={() => (\n                  <CitationTooltip\n                    pmids={props.original.drugPmids}\n                    abstracts={props.original.drugAbstracts}\n                  />\n                )}\n              >\n                <span>{numOfReferences}</span>\n              </DefaultTooltip>\n            </div>\n          );\n        },\n      };\n    case TABLE_COLUMN_KEY.ONCOGENICITY:\n      return {\n        id: TABLE_COLUMN_KEY.ONCOGENICITY,\n        Header: <span>Oncogenic</span>,\n        accessor: 'oncogenic',\n        minWidth: 100,\n        defaultSortDesc: false,\n        sortMethod: oncogenicitySortMethod,\n      };\n    case TABLE_COLUMN_KEY.MUTATION_EFFECT:\n      return {\n        id: TABLE_COLUMN_KEY.MUTATION_EFFECT,\n        Header: <span>Mutation Effect</span>,\n        accessor: 'mutationEffect',\n        minWidth: 100,\n        defaultSortDesc: false,\n        sortMethod: mutationEffectSortMethod,\n      };\n    case TABLE_COLUMN_KEY.DESCRIPTION:\n      return {\n        id: TABLE_COLUMN_KEY.DESCRIPTION,\n        Header: <span>Description</span>,\n        accessor: 'description',\n        minWidth: 100,\n        width: 100,\n        defaultSortDesc: false,\n        sortable: false,\n      };\n    default:\n      return undefined;\n  }\n}\n\nexport function filterByKeyword(\n  value: string | undefined | null,\n  keyword: string\n): boolean {\n  return value ? value.toLowerCase().includes(keyword.trim()) : false;\n}\n\nexport function getRouteFromPath(pathName: string) {\n  const firstSplashIndex = pathName.indexOf('/');\n  return firstSplashIndex === -1\n    ? PAGE_ROUTE.HOME\n    : pathName.substr(pathName.indexOf('/') + 1);\n}\n\nexport function getRedirectLoginState(\n  pathName: string,\n  search: string,\n  hash: string\n) {\n  return {\n    from: { pathname: getRouteFromPath(pathName), search, hash },\n  };\n}\n\nexport function toAppTimestampFormat(utcTime: string | undefined) {\n  if (!utcTime) return '';\n  return moment(utcTime, APP_LOCAL_DATETIME_FORMAT_Z).format(\n    APP_TIMESTAMP_FORMAT\n  );\n}\n\nexport function toAppLocalDateFormat(utcTime: string | undefined) {\n  if (!utcTime) return '';\n  return moment(utcTime, APP_LOCAL_DATETIME_FORMAT_Z).format(\n    APP_LOCAL_DATE_FORMAT\n  );\n}\n\nexport function getMomentInstance(utcTime: string) {\n  return moment(utcTime, APP_LOCAL_DATETIME_FORMAT_Z);\n}\n\nexport function daysDiff(date: string) {\n  const today = moment.utc();\n  const expiration = getMomentInstance(date);\n  return expiration.diff(today, 'days');\n}\n\nexport function secDiff(date: string) {\n  const today = moment.utc();\n  const expiration = getMomentInstance(date);\n  return expiration.diff(today, 'hours');\n}\n\nconst SLASH_HTML_ENTITY_CODE = '%2F';\n\nexport function encodeSlash(content: string | undefined) {\n  return content\n    ? content.replace(new RegExp('/', 'g'), SLASH_HTML_ENTITY_CODE)\n    : content;\n}\n\nexport function decodeSlash(content: string | undefined) {\n  return content\n    ? content.replace(new RegExp(SLASH_HTML_ENTITY_CODE, 'g'), '/')\n    : content;\n}\n\nexport const scrollWidthOffset = (el?: any) => {\n  const yCoordinate =\n    el === undefined ? 0 : el.getBoundingClientRect().top + window.pageYOffset;\n  const yOffset = -80;\n  window.scrollTo({ top: yCoordinate + yOffset, behavior: 'smooth' });\n};\n\nexport function encodeResourceUsageDetailPageURL(endpoint: string) {\n  return endpoint.split('/').join('!');\n}\n\nexport function decodeResourceUsageDetailPageURL(url: string) {\n  return url.split('!').join('/');\n}\n\nexport const concatElements = (\n  list: ReactNode[],\n  separator: string | JSX.Element\n) => {\n  return list.length === 0 ? (\n    <></>\n  ) : (\n    list.reduce((prev, curr) => [prev, separator, curr])\n  );\n};\n\nexport const concatElementsByComma = (list: ReactNode[]) => {\n  return concatElements(list, ', ');\n};\n\nexport function getShortenTextFromList(data: JSX.Element[] | string[]) {\n  if (data.length > SHORTEN_TEXT_FROM_LIST_THRESHOLD) {\n    return (\n      <span>\n        {data[0]} and{' '}\n        <DefaultTooltip\n          overlay={\n            <div style={{ maxWidth: '400px' }}>\n              {concatElementsByComma(data)}\n            </div>\n          }\n          overlayStyle={{\n            opacity: 1,\n          }}\n          placement=\"right\"\n          destroyTooltipOnHide={true}\n        >\n          <span\n            style={{\n              textDecoration: 'underscore',\n              color: COLOR_BLUE,\n            }}\n          >\n            {data.length - 1} others\n          </span>\n        </DefaultTooltip>\n      </span>\n    );\n  } else {\n    return concatElementsByComma(data);\n  }\n}\n\nexport function getShortenPmidsFromList(pmidList: string[]) {\n  const pmidLinkouts = pmidList.map(pmid => (\n    <DefaultTooltip overlay={<CitationTooltip pmids={[pmid]} abstracts={[]} />}>\n      <span className={styles.linkOutText}>{pmid}</span>\n    </DefaultTooltip>\n  ));\n\n  if (pmidList.length > SHORTEN_TEXT_FROM_LIST_THRESHOLD) {\n    return (\n      <span>\n        <span>{pmidLinkouts[0]}</span> and{' '}\n        <DefaultTooltip\n          overlay={<CitationTooltip pmids={pmidList.slice(1)} abstracts={[]} />}\n          overlayStyle={{\n            opacity: 1,\n          }}\n          placement=\"right\"\n          destroyTooltipOnHide={true}\n        >\n          <span\n            style={{\n              textDecoration: 'underscore',\n              color: COLOR_BLUE,\n            }}\n          >\n            {pmidList.length - 1} others\n          </span>\n        </DefaultTooltip>\n      </span>\n    );\n  } else {\n    return concatElementsByComma(pmidLinkouts);\n  }\n}\n\nexport function getGenePageLinks(genes: string): ReactNode {\n  return concatElementsByComma(\n    genes.split(',').map(gene => <GenePageLink hugoSymbol={gene.trim()} />)\n  );\n}\n\nexport function isPositionalAlteration(\n  proteinStart: number,\n  proteinEnd: number,\n  consequence: string\n) {\n  if (proteinStart && proteinEnd && consequence) {\n    return proteinStart === proteinEnd && consequence === 'NA';\n  } else {\n    return false;\n  }\n}\n\nexport function getYouTubeLink(type: 'embed' | 'regular', videoId: string) {\n  return `https://www.youtube.com/${\n    type === 'embed' ? 'embed/' : 'watch?v='\n  }${videoId}`;\n}\n\nexport function getBilibiliLink(videoId: string) {\n  return `//player.bilibili.com/player.html?aid=${videoId}`;\n}\n\nexport interface IAlteration {\n  alteration: string;\n  name: string;\n}\n\nexport const isCategoricalAlteration = (alteration: string) => {\n  const categoricalAlterations = [\n    ONCOGENIC_MUTATIONS,\n    FUSIONS,\n    TRUNCATING_MUTATIONS,\n    GAIN_OF_FUNCTION_MUTATIONS,\n    LOSS_OF_FUNCTION_MUTATIONS,\n    SWITCH_OF_FUNCTION_MUTATIONS,\n  ];\n  return (\n    alteration &&\n    categoricalAlterations.filter(alt =>\n      alteration.toLowerCase().startsWith(alt.toLowerCase())\n    ).length > 0\n  );\n};\n\n/**\n *\n * @param alteration Alteration, either in string or in IAlteration\n * @param showNameDiff show alteration when name is different. Default: false\n */\nexport function getAlterationName(\n  alteration: IAlteration | string,\n  showNameDiff?: boolean\n): string {\n  const alt: string =\n    typeof alteration === 'string' ? alteration : alteration.alteration;\n  const name: string =\n    typeof alteration === 'string' ? alteration : alteration.name;\n  const isCategoricalAlt = isCategoricalAlteration(alt);\n  const hasExclusionArm = alt.includes('{');\n  if (\n    !showNameDiff ||\n    alt === name ||\n    isCategoricalAlt ||\n    hasExclusionArm ||\n    name.includes(alt)\n  ) {\n    return name;\n  } else {\n    return `${name} (${alt})`;\n  }\n}\n\nexport const getGeneCoordinates = (ensemblGenes: EnsemblGene[]) => {\n  return _.sortBy(ensemblGenes, ensemblGene => ensemblGene.referenceGenome)\n    .map(\n      ensemblGene =>\n        `${ensemblGene.referenceGenome}, Chr${ensemblGene.chromosome}:${ensemblGene.start}-${ensemblGene.end}`\n    )\n    .join('; ');\n};\n\nexport const getCategoricalAlterationDescription = (\n  hugoSymbol: string,\n  alteration: string,\n  oncogene?: boolean,\n  tsg?: boolean\n) => {\n  const geneLink = (\n    <GenePageLink hugoSymbol={hugoSymbol}>the {hugoSymbol} gene</GenePageLink>\n  );\n  let content;\n  switch (alteration) {\n    case AMPLIFICATION:\n      content = (\n        <span>\n          Defined as focal copy number amplification that results in an increase\n          in the gene copy number of {geneLink}.\n        </span>\n      );\n      break;\n    case DELETION:\n      content = (\n        <span>\n          Defined as copy number loss resulting in partial or whole deletion of{' '}\n          {geneLink}.\n        </span>\n      );\n      break;\n    case FUSIONS:\n      content = (\n        <span>\n          Defined as deletion or chromosomal translocation events arising within{' '}\n          {geneLink} that result in a functional fusion event which preserves an\n          intact {hugoSymbol} kinase domain.\n        </span>\n      );\n      break;\n    case TRUNCATING_MUTATIONS:\n      content = (\n        <span>\n          Defined as nonsense, frameshift, or splice-site mutations within{' '}\n          {geneLink} that are predicted to shorten the coding sequence of gene.\n        </span>\n      );\n      break;\n    default:\n      break;\n  }\n  if (alteration.startsWith(ONCOGENIC_MUTATIONS)) {\n    let prefix =\n      'Defined as point mutations, rearrangements/fusions or copy number alterations within';\n    if (oncogene && !tsg) {\n      prefix = 'Defined as point mutations or rearrangements/fusions within';\n    } else if (!oncogene && tsg) {\n      prefix =\n        'Defined as point mutations, rearrangements/fusions or gene deletions within';\n    }\n    content = (\n      <span>\n        {prefix} {geneLink} considered \"oncogenic\", \"likely oncogenic\" or\n        \"resistance\" as defined by{' '}\n        <SopPageLink version={2.2}>\n          {ONCOKB_TM} Curation Standard Operating Protocol v2.2, Chapter 2,\n          Sub-Protocol 2.5\n        </SopPageLink>\n        .\n      </span>\n    );\n  }\n\n  return content;\n};\n\nexport const isOncogenic = (oncogenicity: string) => {\n  switch (oncogenicity) {\n    case ONCOGENICITY.ONCOGENIC:\n    case ONCOGENICITY.LIKELY_ONCOGENIC:\n    case ONCOGENICITY.RESISTANCE:\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport const getPageTitle = (mainContent: string, withPostFix = true) => {\n  const content = [];\n  if (mainContent) {\n    content.push(mainContent);\n    if (withPostFix) {\n      if (!mainContent.includes(ONCOKB)) {\n        content.push(ONCOKB_TM);\n      }\n    }\n  } else {\n    content.push(ONCOKB_TM);\n  }\n  return `${content.join(' | ')}`;\n};\n\nexport const convertObjectArrayToDelimitedString = (\n  array: Array<object>,\n  delimiter = '\\t'\n) => {\n  if (array.length < 1) {\n    return '';\n  }\n\n  const rows = [];\n\n  // Add header using the keys of the object\n  rows.push(Object.keys(array[0]).join(delimiter));\n\n  for (const e of array) {\n    rows.push(Object.values(e).join(delimiter));\n  }\n  return rows.join('\\n');\n};\n","import { getNCBIlink } from 'cbioportal-frontend-commons';\nimport * as React from 'react';\nimport styles from './citationListGroupItem.module.scss';\nimport stripHtml from 'string-strip-html';\n\ntype PmidItemProps = {\n  title: string;\n  author: string;\n  source: string;\n  date: string;\n  pmid: string;\n};\n\nconst LESS_THAN_ENTITY = '&lt;';\nconst GREATER_THAN_ENTITY = '&gt;';\n\nfunction trimOffHtmlTagsByEntity(htmlStr: string) {\n  // was trying to use negative lookahead but that seems only work in looking for a whole string, not multiple groups\n  return htmlStr\n    .split(LESS_THAN_ENTITY)\n    .map((substr, index) => {\n      const texts = substr.split(GREATER_THAN_ENTITY);\n      return texts.length > 1 ? texts[1] : texts[0];\n    })\n    .join('');\n}\n\nexport default class PmidItem extends React.Component<PmidItemProps> {\n  render() {\n    return (\n      <li key={this.props.pmid} className={styles.listGroupItem}>\n        <a\n          href={getNCBIlink(`/pubmed/${this.props.pmid}`)}\n          className={styles.listGroupItemTitle}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <b>{trimOffHtmlTagsByEntity(this.props.title)}</b>\n        </a>\n        <div className={styles.listGroupItemContent}>\n          <span>\n            {this.props.author} {this.props.source}. {this.props.date}\n          </span>\n          <span>PMID: {this.props.pmid}</span>\n        </div>\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport { Row, Col, Button, Form, Tab, Tabs } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport { DownloadButton } from 'app/components/downloadButton/DownloadButton';\nimport {\n  PAGE_TITLE,\n  IMG_MAX_WIDTH,\n  LEVEL_TYPES,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n} from 'app/config/constants';\nimport DocumentTitle from 'react-document-title';\nimport { inject, observer } from 'mobx-react';\nimport {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n} from 'mobx';\nimport * as QueryString from 'query-string';\nimport { RouterStore } from 'mobx-react-router';\nimport autobind from 'autobind-decorator';\nimport mainStyles from '../index.module.scss';\nimport { ElementType } from 'app/components/SimpleTable';\nimport WindowStore from 'app/store/WindowStore';\nimport { Linkout } from 'app/shared/links/Linkout';\nimport OptimizedImage from 'app/shared/image/OptimizedImage';\nimport { getPageTitle } from 'app/shared/utils/Utils';\n\ntype LevelOfEvidencePageProps = {\n  routing: RouterStore;\n  windowStore: WindowStore;\n};\n\n// the level content should be all uppercase\nexport enum Version {\n  V1 = 'V1',\n  V2 = 'V2',\n  FDA = 'FDA',\n  FDA_NGS = 'FDA_NGS',\n  AAC = 'AAC',\n  DX = 'DX',\n  PX = 'PX',\n}\n\nexport enum TabKey {\n  V2 = PAGE_ROUTE.V2,\n  DX = PAGE_ROUTE.DX,\n  PX = PAGE_ROUTE.PX,\n  FDA_NGS = PAGE_ROUTE.FDA_NGS,\n}\n\nconst TAB_TITLES = {\n  [Version.V1]: 'Therapeutic Levels',\n  [Version.V2]: 'Therapeutic Levels',\n  [Version.AAC]: 'Therapeutic Levels',\n  [Version.DX]: 'Diagnostic Levels',\n  [Version.PX]: 'Prognostic Levels',\n  [Version.FDA_NGS]: 'FDA Levels',\n};\n\nexport const LEVEL_TYPE_TO_VERSION: { [key in LEVEL_TYPES]: Version } = {\n  [LEVEL_TYPES.TX]: Version.V2,\n  [LEVEL_TYPES.DX]: Version.DX,\n  [LEVEL_TYPES.PX]: Version.PX,\n  [LEVEL_TYPES.FDA]: Version.FDA_NGS,\n};\n\nconst DEFAULT_LEVEL_FILE_NAME = 'LevelsOfEvidence';\nconst AAC_CHECKBOX_ID = 'loe-aac-checkbox';\nconst ALLOWED_VERSIONS: string[] = [\n  Version.V2,\n  Version.V1,\n  Version.AAC,\n  Version.DX,\n  Version.PX,\n  Version.FDA,\n  Version.FDA_NGS,\n];\nconst V2_RELATED_LEVELS = [Version.V2, Version.FDA, Version.AAC];\n\nconst LEVEL_NAME: { [key in Version]: ElementType } = {\n  [Version.V1]: `${ONCOKB_TM} Therapeutic Level of Evidence V1`,\n  [Version.V2]: `${ONCOKB_TM} Therapeutic Level of Evidence V2`,\n  [Version.FDA]: 'FDA Levels of Evidence',\n  [Version.FDA_NGS]: 'FDA Levels of Evidence',\n  [Version.AAC]: 'AMP/ASCO/CAP Consensus Recommendation',\n  [Version.DX]: `${ONCOKB_TM} Diagnostic Levels of Evidence`,\n  [Version.PX]: `${ONCOKB_TM} Prognostic Levels of Evidence`,\n};\n\nconst LEVEL_TITLE: { [key in Version]: ElementType } = {\n  [Version.V1]: <>{LEVEL_NAME[Version.V1]}</>,\n  [Version.V2]: <>{LEVEL_NAME[Version.V2]}</>,\n  [Version.FDA]: (\n    <>\n      Mapping between the {ONCOKB_TM} Levels of Evidence and the{' '}\n      {LEVEL_NAME[Version.FDA]}\n    </>\n  ),\n  [Version.FDA_NGS]: <></>,\n  [Version.AAC]: (\n    <>\n      Mapping between the {ONCOKB_TM} Levels of Evidence and the{' '}\n      {LEVEL_NAME[Version.AAC]}\n    </>\n  ),\n  [Version.DX]: <>{LEVEL_NAME[Version.DX]}</>,\n  [Version.PX]: <>{LEVEL_NAME[Version.PX]}</>,\n};\nconst LEVEL_SUBTITLE: { [key in Version]: ElementType } = {\n  [Version.V1]: (\n    <>Click here to see Therapeutic Levels of Evidence {Version.V2}</>\n  ),\n  [Version.V2]: (\n    <>Click here to see Therapeutic Levels of Evidence {Version.V1}</>\n  ),\n  [Version.AAC]: <></>,\n  [Version.DX]: <></>,\n  [Version.PX]: <></>,\n  [Version.FDA]: <></>,\n  [Version.FDA_NGS]: <></>,\n};\n\nconst LEVEL_FILE_NAME: { [key in Version]: string } = {\n  [Version.V1]: DEFAULT_LEVEL_FILE_NAME,\n  [Version.V2]: DEFAULT_LEVEL_FILE_NAME,\n  [Version.FDA]: `Mapping_OncoKB_and_FDA_LOfE`,\n  [Version.AAC]: `Mapping_OncoKB_and_AMP_ASCO_CAP_LOfE`,\n  [Version.DX]: DEFAULT_LEVEL_FILE_NAME,\n  [Version.PX]: DEFAULT_LEVEL_FILE_NAME,\n  [Version.FDA_NGS]:\n    'CDRH’s-Approach-to-Tumor-Profiling-Next-Generation-Sequencing-Tests',\n};\n\nconst VERSION_TO_PAGE: { [key in Version]?: PAGE_ROUTE } = {\n  [Version.V2]: PAGE_ROUTE[Version.V2],\n  [Version.DX]: PAGE_ROUTE[Version.DX],\n  [Version.PX]: PAGE_ROUTE[Version.PX],\n  [Version.FDA_NGS]: PAGE_ROUTE[Version.FDA_NGS],\n};\n\nconst PAGE_TO_VERSION: { [key in PAGE_ROUTE]?: Version } = {\n  [PAGE_ROUTE.V2]: Version.V2,\n  [PAGE_ROUTE.DX]: Version.DX,\n  [PAGE_ROUTE.PX]: Version.PX,\n  [PAGE_ROUTE.FDA_NGS]: Version.FDA_NGS,\n};\n\n@inject('routing', 'windowStore')\n@observer\nexport default class LevelOfEvidencePage extends React.Component<\n  LevelOfEvidencePageProps,\n  any\n> {\n  @observable version: Version = Version.V2;\n  pathname: string = window.location.pathname;\n\n  readonly reactions: IReactionDisposer[] = [];\n\n  redirectToNewPage = (version: Version) => {\n    const newPath = VERSION_TO_PAGE[version.toUpperCase()];\n    if (newPath) {\n      this.props.routing.history.push(newPath);\n    }\n\n    if (window.location.pathname === PAGE_ROUTE.V2) {\n      window.location.hash = QueryString.stringify({\n        version: version.toUpperCase(),\n      });\n    }\n  };\n\n  getVersionFromPathname() {\n    const versionKey: string =\n      Object.keys(PAGE_ROUTE).find(\n        key => PAGE_ROUTE[key] === window.location.pathname\n      ) ?? '';\n\n    const version = Version[versionKey] ?? this.version;\n    this.toggleVersion(version);\n    this.pathname = window.location.pathname;\n    return version;\n  }\n\n  constructor(props: Readonly<LevelOfEvidencePageProps>) {\n    super(props);\n\n    if (Object.keys(PAGE_TO_VERSION).includes(window.location.pathname)) {\n      this.version = PAGE_TO_VERSION[window.location.pathname];\n    }\n\n    this.reactions.push(\n      reaction(\n        () => [props.routing.location.hash],\n        ([hash]) => {\n          const queryStrings = QueryString.parse(hash) as { version: Version };\n          if (queryStrings.version) {\n            if (ALLOWED_VERSIONS.includes(queryStrings.version.toUpperCase())) {\n              this.version = queryStrings.version;\n            }\n          }\n        },\n        { fireImmediately: true }\n      ),\n      reaction(\n        () => this.version,\n        newVersion => {\n          return this.redirectToNewPage(newVersion);\n        }\n      )\n    );\n  }\n\n  componentWillUnmount(): void {\n    this.reactions.forEach(componentReaction => componentReaction());\n  }\n\n  getSubTitle(version: Version) {\n    switch (version) {\n      case Version.V1:\n      case Version.V2:\n        return (\n          <span\n            onClick={() =>\n              this.toggleVersion(\n                V2_RELATED_LEVELS.includes(version) ? Version.V1 : Version.V2\n              )\n            }\n            className={mainStyles.btnLinkText}\n          >\n            Click here to see {`${LEVEL_NAME[Version.V2]}`}\n          </span>\n        );\n      default:\n        return <></>;\n    }\n  }\n\n  @autobind\n  @action\n  toggleVersion(version: Version) {\n    this.version = version;\n  }\n\n  @computed\n  get activeKey() {\n    switch (this.version) {\n      case Version.DX:\n        return Version.DX;\n      case Version.PX:\n        return Version.PX;\n      case Version.FDA_NGS:\n        return Version.FDA_NGS;\n      default:\n        return Version.V2;\n    }\n  }\n\n  render() {\n    const tabs: any[] = [];\n    Object.keys(TabKey).forEach(version => {\n      tabs.push(\n        <Tab\n          eventKey={Version[version]}\n          title={TAB_TITLES[version]}\n          key={version}\n        >\n          <Row className=\"mt-2\">\n            <Col className=\"col-auto mr-auto d-flex align-content-center\">\n              {V2_RELATED_LEVELS.includes(this.version) && (\n                <span className={'d-flex align-items-center form-check'}>\n                  <Form.Group>\n                    {[Version.FDA, Version.AAC].map(versionCheck => (\n                      <Form.Check\n                        label={`Show mapping to ${LEVEL_NAME[versionCheck]}`}\n                        type=\"checkbox\"\n                        onChange={() =>\n                          this.toggleVersion(\n                            this.version === versionCheck\n                              ? Version.V2\n                              : versionCheck\n                          )\n                        }\n                        name=\"mapping-to-other-levels\"\n                        id={`mapping-to-other-levels-${versionCheck}`}\n                        key={`mapping-to-other-levels-${versionCheck}`}\n                        checked={this.version === versionCheck}\n                      />\n                    ))}\n                  </Form.Group>\n                </span>\n              )}\n            </Col>\n            <Col className={'col-auto'}>\n              {this.version !== Version.FDA_NGS && (\n                <Button\n                  size={'sm'}\n                  className={classnames('ml-1')}\n                  href={`content/files/levelOfEvidence/${this.version}/${\n                    LEVEL_FILE_NAME[this.version]\n                  }.ppt`}\n                >\n                  <i className={'fa fa-cloud-download mr-1'} />\n                  Download Slide\n                </Button>\n              )}\n              <DownloadButton\n                className={classnames('ml-1 btn-sm')}\n                href={`content/files/levelOfEvidence/${this.version}/${\n                  LEVEL_FILE_NAME[this.version]\n                }.pdf`}\n              >\n                Download PDF\n              </DownloadButton>\n            </Col>\n          </Row>\n          <Row className={'justify-content-md-center mt-5'}>\n            <Col className={'col-md-auto text-center'}>\n              <h4>{LEVEL_TITLE[this.version]}</h4>\n              <div>\n                <span\n                  onClick={() =>\n                    this.toggleVersion(\n                      V2_RELATED_LEVELS.includes(this.version)\n                        ? Version.V1\n                        : Version.V2\n                    )\n                  }\n                  className={mainStyles.btnLinkText}\n                >\n                  {LEVEL_SUBTITLE[this.version]}\n                </span>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col className={'d-md-flex justify-content-center mt-2'}>\n              <div\n                style={{\n                  maxWidth: [\n                    Version.AAC,\n                    Version.FDA,\n                    Version.V1,\n                    Version.V2,\n                  ].includes(this.version)\n                    ? undefined\n                    : IMG_MAX_WIDTH,\n                }}\n              >\n                <OptimizedImage\n                  style={{ width: '100%' }}\n                  progressiveLoading\n                  src={`content/images/level_${this.version}.png`}\n                />\n                {this.version === Version.AAC ? (\n                  <div className=\"text-right\">\n                    <span\n                      style={{\n                        marginRight: this.props.windowStore.isLargeScreen\n                          ? '130px'\n                          : '35px',\n                      }}\n                    >\n                      <sup>1</sup>{' '}\n                      <Linkout link=\"https://www.sciencedirect.com/science/article/pii/S1525157816302239?via%3Dihub\">\n                        Li, MM et al., J Mol Diagn 2017\n                      </Linkout>\n                    </span>\n                  </div>\n                ) : null}\n              </div>\n            </Col>\n          </Row>\n        </Tab>\n      );\n    });\n\n    return (\n      <DocumentTitle title={getPageTitle(PAGE_TITLE[this.version])}>\n        <Row className=\"justify-content-center\">\n          <Col lg={10}>\n            <div className=\"levels-of-evidence\">\n              <>\n                <Tabs\n                  defaultActiveKey={this.activeKey}\n                  activeKey={this.activeKey}\n                  id=\"level-type-tabs\"\n                  onSelect={k => this.toggleVersion(Version[k || Version.V2])}\n                >\n                  {tabs}\n                </Tabs>\n              </>\n            </div>\n          </Col>\n        </Row>\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ArticleAbstract } from 'app/shared/api/generated/OncoKbAPI';\nimport styles from './citationListGroupItem.module.scss';\n\nexport default class ArticleAbstractItem extends React.Component<\n  ArticleAbstract\n> {\n  render() {\n    let content = <b>{this.props.abstract}</b>;\n    if (this.props.link) {\n      content = (\n        <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {content}\n        </a>\n      );\n    }\n    return (\n      <li\n        key={`abstract_${this.props.abstract}`}\n        className={styles.listGroupItem}\n      >\n        <span className={styles.listGroupItemTitle}>{content}</span>\n      </li>\n    );\n  }\n}\n","import React, { CSSProperties } from 'react';\nimport { observer } from 'mobx-react';\nimport { remoteData } from 'cbioportal-frontend-commons';\nimport request from 'superagent';\nimport LoadingIndicator from 'app/components/loadingIndicator/LoadingIndicator';\nimport { ArticleAbstract } from 'app/shared/api/generated/OncoKbAPI';\nimport _ from 'lodash';\nimport PmidItem from 'app/components/PmidItem';\nimport ArticleAbstractItem from 'app/components/ArticleAbstractItem';\nimport { TOOLTIP_MAX_HEIGHT } from 'app/config/constants';\n\n@observer\nexport class CitationTooltip extends React.Component<\n  { pmids: string[]; abstracts: ArticleAbstract[]; style?: CSSProperties },\n  {}\n> {\n  readonly citationContent = remoteData<any>({\n    invoke: async () => {\n      const result = await request.get(\n        'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&retmode=json&id=' +\n          this.props.pmids.join(',')\n      );\n      return Promise.resolve(result.body);\n    },\n  });\n\n  findContent(pmid: string) {\n    return this.citationContent.result.result[pmid];\n  }\n\n  getPmidItems() {\n    return this.props.pmids.map(pmid => {\n      const data = this.findContent(pmid);\n      return data ? (\n        <PmidItem\n          key={pmid}\n          title={data.title}\n          author={\n            _.isArray(data.authors) && data.authors.length > 0\n              ? data.authors[0].name + ' et al.'\n              : 'Unknown'\n          }\n          source={data.source}\n          date={new Date(data.pubdate).getFullYear().toString()}\n          pmid={data.uid}\n        />\n      ) : null;\n    });\n  }\n\n  render() {\n    const style = {\n      maxHeight: TOOLTIP_MAX_HEIGHT,\n      overflowY: 'scroll',\n      ...this.props.style,\n    } as CSSProperties;\n    return (\n      <div>\n        {this.citationContent.isPending ? (\n          <LoadingIndicator isLoading={true} />\n        ) : (\n          <div style={style}>\n            {this.getPmidItems()}\n            {this.props.abstracts.map(abstract => (\n              <ArticleAbstractItem\n                key={abstract.abstract}\n                abstract={abstract.abstract}\n                link={abstract.link}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { RCTooltip } from 'rc-tooltip';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\ntype IconType = 'info' | 'question';\nconst InfoIcon: React.FunctionComponent<{\n  overlay?:\n    | (() => React.ReactChild)\n    | React.ReactChild\n    | React.ReactFragment\n    | React.ReactPortal;\n  overlayClassName?: string;\n  placement?: RCTooltip.Placement;\n  style?: React.CSSProperties;\n  type?: IconType;\n  className?: string;\n}> = props => {\n  function getIcon() {\n    const style = {\n      ...props.style,\n    };\n    switch (props.type) {\n      case 'question':\n        return (\n          <i\n            className={`fa fa-question-circle-o ${props.className}`}\n            style={style}\n          ></i>\n        );\n      case 'info':\n      default:\n        return (\n          <span\n            className={`fa-stack ${props.className}`}\n            style={{\n              fontSize: '0.5rem',\n              ...style,\n            }}\n          >\n            <i className=\"fa fa-circle-thin fa-stack-2x\"></i>\n            <i className=\"fa fa-info fa-stack-1x\"></i>\n          </span>\n        );\n        break;\n    }\n  }\n\n  return (\n    <DefaultTooltip\n      overlay={props.overlay ? props.overlay : <span></span>}\n      overlayClassName={props.overlayClassName}\n      placement={props.placement}\n      disabled={!props.overlay}\n    >\n      {getIcon()}\n    </DefaultTooltip>\n  );\n};\nexport default InfoIcon;\n","import React from 'react';\nimport styles from './DownloadButton.module.scss';\n\ninterface IDownloadButton {\n  href: string;\n  className?: string;\n  size?: 'sm' | 'lg';\n  download?: string | boolean; // We can override the default filename by providing a string\n}\n\n// Naturally the Button component has href property which will convert the component to a A tag\n// But in the scenario downloading PDF file, we need to specify the download property\nexport const DownloadButton: React.FunctionComponent<IDownloadButton> = props => {\n  const { href, download, className, size } = props;\n  const buttonSizeClassName = size ? `btn-${size}` : '';\n  return (\n    <a\n      href={href}\n      download={download || true}\n      className={`btn btn-primary ${buttonSizeClassName} ${className} ${styles.aTag}`}\n    >\n      <i className={'fa fa-cloud-download mr-1'} />\n      {props.children}\n    </a>\n  );\n};\n","import {\n  LEVEL_TYPES,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n  PAGE_TITLE,\n} from 'app/config/constants';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Version } from 'app/pages/LevelOfEvidencePage';\n\nconst getLevelPageLink = (levelType: LEVEL_TYPES, version?: Version) => {\n  let levelLink = '';\n  switch (levelType) {\n    case LEVEL_TYPES.TX:\n      levelLink = PAGE_ROUTE.V2;\n      break;\n    case LEVEL_TYPES.DX:\n      levelLink = PAGE_ROUTE.DX;\n      break;\n    case LEVEL_TYPES.PX:\n      levelLink = PAGE_ROUTE.PX;\n      break;\n    case LEVEL_TYPES.FDA:\n      levelLink = PAGE_ROUTE.FDA_NGS;\n      break;\n    default:\n      break;\n  }\n  if (version) {\n    levelLink = `${levelLink}#version=${version}`;\n  }\n  return levelLink;\n};\n\nconst getDefaultLinkContent = (levelType: LEVEL_TYPES, version?: Version) => {\n  let content = '';\n  switch (levelType) {\n    case LEVEL_TYPES.TX:\n      content = PAGE_TITLE.V2;\n      if (version) {\n        switch (version) {\n          case Version.AAC:\n            content = PAGE_TITLE.AAC;\n            break;\n          case Version.FDA:\n            content = PAGE_TITLE.FDA;\n            break;\n          case Version.V1:\n            content = PAGE_TITLE.V1;\n            break;\n          default:\n            break;\n        }\n      }\n      break;\n    case LEVEL_TYPES.DX:\n      content = PAGE_TITLE.V2;\n      break;\n    case LEVEL_TYPES.PX:\n      content = PAGE_TITLE.V2;\n      break;\n    case LEVEL_TYPES.FDA:\n      content = PAGE_TITLE.FDA_NGS;\n      break;\n    default:\n      content = 'level of evidence';\n      break;\n  }\n  return content;\n};\n\nexport const LevelOfEvidencePageLink: React.FunctionComponent<{\n  levelType: LEVEL_TYPES;\n  version?: Version;\n}> = props => {\n  return (\n    <Link to={getLevelPageLink(props.levelType, props.version)}>\n      {props.children ? (\n        props.children\n      ) : (\n        <span>{getDefaultLinkContent(props.levelType, props.version)}</span>\n      )}\n    </Link>\n  );\n};\n","import React from 'react';\nimport {\n  getShortenPmidsFromList,\n  getShortenTextFromList,\n} from 'app/shared/utils/Utils';\n\nexport const PMIDLink: React.FunctionComponent<{ pmids: string }> = props => {\n  return (\n    <span>\n      PMID:{' '}\n      <a\n        href={`https://pubmed.ncbi.nlm.nih.gov/?term=${props.pmids\n          .split(/[ |,]/g)\n          .join(' ')}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{ whiteSpace: 'nowrap' }}\n      >\n        {props.pmids}\n      </a>\n    </span>\n  );\n};\n\nexport const PMIDShortLink: React.FunctionComponent<{\n  pmids: string;\n}> = props => {\n  const pmidList = props.pmids\n    .split(/,|\\s/)\n    .filter(pmid => pmid)\n    .map(pmid => pmid.trim());\n  return <span>PMID(s): {getShortenPmidsFromList(pmidList)}</span>;\n};\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport {\n  DEFAULT_REFERENCE_GENOME,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n  REFERENCE_GENOME,\n  REGEXP,\n  REGEXP_LINK,\n  SOP_LINK,\n  YOUTUBE_VIDEO_IDS,\n} from 'app/config/constants';\nimport _ from 'lodash';\nimport { PMIDLink } from 'app/shared/links/PMIDLink';\nimport reactStringReplace from 'react-string-replace';\nimport { ReactNodeArray } from 'prop-types';\nimport {\n  encodeSlash,\n  getAlterationName,\n  getYouTubeLink,\n  IAlteration,\n} from 'app/shared/utils/Utils';\nimport { Linkout } from 'app/shared/links/Linkout';\nimport ExternalLinkIcon from 'app/shared/icons/ExternalLinkIcon';\nimport {\n  AlterationPageHashQueries,\n  AlterationPageSearchQueries,\n  GenePageHashQueries,\n  GenePageSearchQueries,\n} from 'app/shared/route/types';\nimport * as QueryString from 'querystring';\nimport { LEVEL_TYPE_TO_VERSION, Version } from 'app/pages/LevelOfEvidencePage';\nimport { YEAR_END_SUMMARY_RANGE } from 'app/pages/aboutGroup/AboutPageNavTab';\n\nexport const getGenePageLink = (props: {\n  hugoSymbol: string;\n  searchQueries?: GenePageSearchQueries;\n  hashQueries?: GenePageHashQueries;\n}): string => {\n  let pageLink = `${PAGE_ROUTE.GENE_HEADER}/${props.hugoSymbol}`;\n  if (props.searchQueries && Object.keys(props.searchQueries).length > 0) {\n    pageLink = `${pageLink}?${QueryString.stringify(props.searchQueries)}`;\n  }\n  if (props.hashQueries) {\n    pageLink = `${pageLink}#${QueryString.stringify(props.hashQueries)}`;\n  }\n  return pageLink;\n};\n\nexport const GenePageLink: React.FunctionComponent<{\n  hugoSymbol: string;\n  highlightContent?: boolean;\n  searchQueries?: GenePageSearchQueries;\n  hashQueries?: GenePageHashQueries;\n  onClick?: () => void;\n}> = props => {\n  const highlightContent =\n    props.highlightContent === undefined ? true : props.highlightContent;\n  const pageLink = getGenePageLink({\n    hugoSymbol: props.hugoSymbol,\n    searchQueries: props.searchQueries,\n    hashQueries: props.hashQueries,\n  });\n  return (\n    <Link\n      style={{ color: highlightContent ? undefined : 'black' }}\n      to={pageLink}\n      onClick={props.onClick}\n    >\n      {props.children ? props.children : props.hugoSymbol}\n    </Link>\n  );\n};\n\nexport const getAlterationPageLink = (props: {\n  hugoSymbol: string;\n  alteration: IAlteration | string;\n  alterationRefGenomes?: REFERENCE_GENOME[];\n  cancerType?: string;\n  searchQueries?: AlterationPageSearchQueries;\n  hashQueries?: AlterationPageHashQueries;\n}): string => {\n  let pageLink = `${PAGE_ROUTE.GENE_HEADER}/${props.hugoSymbol}/${\n    typeof props.alteration === 'string'\n      ? props.alteration\n      : props.alteration.name\n  }`;\n  if (props.cancerType) {\n    pageLink = `${pageLink}/${encodeSlash(props.cancerType)}`;\n  }\n  const sq = props.searchQueries || {};\n\n  // Prop alterationRefGenomes is just a convinient way to process reference genomes when it's a list.\n  if (!sq.refGenome && props.alterationRefGenomes) {\n    if (!props.alterationRefGenomes.includes(DEFAULT_REFERENCE_GENOME)) {\n      sq.refGenome = props.alterationRefGenomes[0];\n    }\n  }\n  if (Object.keys(sq).length > 0) {\n    pageLink = `${pageLink}?${QueryString.stringify(sq)}`;\n  }\n  if (props.hashQueries) {\n    pageLink = `${pageLink}#${QueryString.stringify(props.hashQueries)}`;\n  }\n  return pageLink;\n};\n\nexport const AlterationPageLink: React.FunctionComponent<{\n  hugoSymbol: string;\n  alteration: IAlteration | string;\n  alterationRefGenomes?: REFERENCE_GENOME[];\n  cancerType?: string;\n  searchQueries?: AlterationPageSearchQueries;\n  hashQueries?: AlterationPageHashQueries;\n  showGene?: boolean;\n  onClick?: () => void;\n}> = props => {\n  const alterationName = getAlterationName(props.alteration, true);\n  const pageLink = getAlterationPageLink({\n    hugoSymbol: props.hugoSymbol,\n    alteration: props.alteration,\n    alterationRefGenomes: props.alterationRefGenomes,\n    cancerType: props.cancerType,\n    searchQueries: props.searchQueries,\n    hashQueries: props.hashQueries,\n  });\n  return (\n    <>\n      <Link to={pageLink} onClick={props.onClick}>\n        {props.children\n          ? props.children\n          : props.showGene\n          ? `${props.hugoSymbol} ${alterationName}`\n          : alterationName}\n      </Link>\n    </>\n  );\n};\n\nexport const getGenomicPageLocation = (props: {\n  rootRoute: PAGE_ROUTE.GENOMIC_CHANGE | PAGE_ROUTE.HGVSG;\n  query: string;\n  refGenome?: REFERENCE_GENOME;\n  cancerType?: string;\n}): any => {\n  const location = {\n    pathname: `${props.rootRoute}/${props.query}`,\n    search: {} as any,\n  };\n  if (props.refGenome) {\n    location.search.refGenome = props.refGenome;\n  }\n  if (props.cancerType) {\n    location.search.tumorType = encodeSlash(props.cancerType);\n  }\n  return location;\n};\n\nexport const getGenomicPageLink = (props: {\n  rootRoute: PAGE_ROUTE.GENOMIC_CHANGE | PAGE_ROUTE.HGVSG;\n  query: string;\n  refGenome?: REFERENCE_GENOME;\n  cancerType?: string;\n}): string => {\n  const location = getGenomicPageLocation(props);\n  let pageLink = location.pathname;\n  if (Object.keys(location.search).length > 0) {\n    pageLink = `${pageLink}?${QueryString.stringify(location.search)}`;\n  }\n  return pageLink;\n};\n\nexport const TumorTypePageLink: React.FunctionComponent<{\n  hugoSymbol: string;\n  alteration: string;\n  tumorType: string;\n  content?: string;\n}> = props => {\n  return (\n    <Link\n      to={`${PAGE_ROUTE.GENE_HEADER}/${props.hugoSymbol}/${encodeSlash(\n        props.alteration\n      )}/${encodeSlash(props.tumorType)}`}\n    >\n      {props.content ? props.content : props.tumorType}\n    </Link>\n  );\n};\n\nexport const MSILink: React.FunctionComponent<{}> = () => {\n  return (\n    <AlterationPageLink hugoSymbol={'Other Biomarkers'} alteration={'MSI-H'}>\n      microsatellite instability high (MSI-H)\n    </AlterationPageLink>\n  );\n};\n\nexport const CitationLink: React.FunctionComponent<{\n  content: string;\n}> = props => {\n  const regexps = [REGEXP.PMID, REGEXP.NCTID];\n  let contentWithLink: ReactNodeArray = [props.content];\n  _.forEach(regexps, regexp => {\n    contentWithLink = reactStringReplace(\n      contentWithLink,\n      new RegExp(regexp, 'ig'),\n      (match, i) => {\n        switch (regexp) {\n          case REGEXP.PMID: {\n            return <PMIDLink pmids={match} />;\n            break;\n          }\n          case REGEXP.NCTID:\n            return (\n              <a\n                href={`${REGEXP_LINK[regexp]}${match}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                ${match}\n              </a>\n            );\n            break;\n          default:\n            return match;\n            break;\n        }\n      }\n    );\n  });\n  return <div>{contentWithLink}</div>;\n};\n\nexport const OncoTreeLink: React.FunctionComponent<{}> = props => {\n  return (\n    <Linkout link={'http://oncotree.info'}>\n      OncoTree <ExternalLinkIcon />\n    </Linkout>\n  );\n};\n\nexport const WebinarLink: React.FunctionComponent<{}> = props => {\n  return (\n    <span>\n      <Linkout\n        link={getYouTubeLink('regular', YOUTUBE_VIDEO_IDS.WEBINAR_INTRO)}\n      >\n        YouTube.com\n      </Linkout>{' '}\n      or{' '}\n      <Linkout link={'https://www.bilibili.com/video/BV1pZ4y1s7ou'}>\n        bilibili.com\n      </Linkout>\n    </span>\n  );\n};\n\nexport const getActionableGenesPageLink = (\n  levels?: string,\n  sections?: string\n) => {\n  const hashes = [];\n  if (levels) {\n    hashes.push(`levels=${levels}`);\n  }\n  if (sections) {\n    hashes.push(`sections=${sections}`);\n  }\n  return `${PAGE_ROUTE.ACTIONABLE_GENE}${\n    hashes.length > 0 ? '#' : ''\n  }${hashes.join('&')}`;\n};\n\nexport const SopPageLink: React.FunctionComponent<{\n  version?: number;\n}> = props => {\n  let link = SOP_LINK;\n  let defaultContent = `${ONCOKB_TM} SOP`;\n  if (props.version) {\n    link += `/?version=v${props.version}`;\n    defaultContent += ` v${props.version}`;\n  }\n  return <Linkout link={link}>{props.children || defaultContent}</Linkout>;\n};\n\nexport const TrialActivationPageLink: React.FunctionComponent<{\n  trialActivationKey: string;\n  onRedirect?: () => void;\n}> = props => {\n  return (\n    <Link\n      to={`${PAGE_ROUTE.ACCOUNT_ACTIVE_TRIAL_FINISH}?key=${props.trialActivationKey}`}\n      onClick={props.onRedirect}\n    >\n      Go to trial license agreement\n    </Link>\n  );\n};\n\nexport const getAccountActivationLink = (\n  activationKey: string,\n  login: string\n) => {\n  return `${PAGE_ROUTE.ACCOUNT_VERIFY}?key=${activationKey}&login=${login}`;\n};\nexport const getPasswordResetLink = (resetKey: string) => {\n  return `${PAGE_ROUTE.ACCOUNT_PASSWORD_RESET_FINISH}?key=${resetKey}`;\n};\n\nexport const YearEndReviewPageLink: React.FunctionComponent<{\n  year?: typeof YEAR_END_SUMMARY_RANGE[number];\n}> = props => {\n  const link = `${PAGE_ROUTE.YEAR_END_SUMMARY}${\n    props.year ? '#' + props.year : ''\n  }`;\n  return <Link to={link}>{props.children}</Link>;\n};\n","import * as React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport MskccLogo from './MskccLogo';\n\nimport styles from './Footer.module.scss';\nimport { CitationText } from 'app/components/CitationText';\nimport classnames from 'classnames';\nimport { ContactLink } from 'app/shared/links/ContactLink';\nimport { API_DOCUMENT_LINK, PAGE_ROUTE } from 'app/config/constants';\nimport { Linkout } from 'app/shared/links/Linkout';\nimport ExternalLinkIcon from 'app/shared/icons/ExternalLinkIcon';\nimport { OncoTreeLink } from 'app/shared/utils/UrlUtils';\n\nclass Footer extends React.Component<{ lastDataUpdate: string }> {\n  public get externalLinks() {\n    return (\n      <>\n        <div className={'mb-2'}>\n          Please review the{' '}\n          <b>\n            <Link to={PAGE_ROUTE.TERMS}>terms of use</Link>\n          </b>{' '}\n          before continuing.\n        </div>\n        <div className={'mb-2'}>\n          <CitationText highlightLinkout={true} boldLinkout />\n        </div>\n        <div className={classnames(styles.footerAList, 'mb-2')}>\n          <a\n            href=\"https://www.mskcc.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            MSK <ExternalLinkIcon />\n          </a>\n          <a\n            href=\"https://www.mskcc.org/research-areas/programs-centers/molecular-oncology\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            CMO <ExternalLinkIcon />\n          </a>\n          <a\n            href=\"https://www.cbioportal.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            cBioPortal <ExternalLinkIcon />\n          </a>\n          <OncoTreeLink />\n        </div>\n      </>\n    );\n  }\n\n  public get internalLinks() {\n    return (\n      <>\n        <div className={classnames(styles.footerAList)}>\n          <Link to={PAGE_ROUTE.TERMS}>Terms of Use</Link>\n          <ContactLink emailSubject={'Contact us'}>Contact Us</ContactLink>\n          <a\n            href=\"https://twitter.com/OncoKB\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Twitter\n          </a>\n          <Linkout link={API_DOCUMENT_LINK}>API</Linkout>\n        </div>\n        <div className={classnames(styles.footerAList)}>\n          <Link to={PAGE_ROUTE.NEWS}>\n            Last data update: {this.props.lastDataUpdate}\n          </Link>\n        </div>\n      </>\n    );\n  }\n\n  public render() {\n    return (\n      <footer className={classnames('footer', styles.footer)}>\n        <Container>\n          <Row className=\"text-center mb-2\">\n            <Col>{this.externalLinks}</Col>\n          </Row>\n          <Row className=\"text-center\">\n            <Col\n              lg\n              md={12}\n              className={\n                'd-flex flex-column justify-content-center align-items-center my-1'\n              }\n            >\n              {this.internalLinks}\n            </Col>\n            <Col\n              lg\n              md={12}\n              className={\n                'd-flex flex-column justify-content-center align-items-center my-1'\n              }\n            >\n              <MskccLogo imageHeight={50} />\n            </Col>\n            <Col\n              lg\n              md={12}\n              className={\n                'd-flex flex-column justify-content-center align-items-center my-1'\n              }\n            >\n              <div>\n                &copy; {new Date().getFullYear()} Memorial Sloan Kettering\n                Cancer Center\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\nimport DropdownItem from 'react-bootstrap/DropdownItem';\n\nexport interface IMenuItem {\n  icon: string;\n  to: string;\n  id?: string;\n}\n\nexport default class MenuItem extends React.Component<IMenuItem> {\n  render() {\n    const { to, icon, id, children } = this.props;\n\n    return (\n      <DropdownItem as={Link} to={to} id={id} style={{ lineHeight: '2.75rem' }}>\n        <i className={`fa fa-${icon} fa-fw mr-1`} /> {children}\n      </DropdownItem>\n    );\n  }\n}\n","import React from 'react';\nimport MenuItem from 'app/pages/menus/menu-item';\nimport { observer } from 'mobx-react';\nimport { Dropdown, NavItem } from 'react-bootstrap';\nimport NavLink from 'react-bootstrap/NavLink';\nimport { PAGE_ROUTE, PAGE_TITLE } from 'app/config/constants';\n\nconst AccountMenuItemsAuthenticated: React.FunctionComponent<{\n  isAdmin: boolean;\n}> = props => (\n  <>\n    <MenuItem icon=\"wrench\" to={PAGE_ROUTE.ACCOUNT_SETTINGS}>\n      {PAGE_TITLE.ACCOUNT_SETTINGS}\n    </MenuItem>\n    <MenuItem icon=\"lock\" to={PAGE_ROUTE.ACCOUNT_PASSWORD}>\n      {PAGE_TITLE.ACCOUNT_PASSWORD}\n    </MenuItem>\n    {props.isAdmin ? (\n      <>\n        <MenuItem icon=\"id-card-o\" to={PAGE_ROUTE.ADMIN_USER_DETAILS}>\n          {PAGE_TITLE.ADMIN_USER_DETAILS}\n        </MenuItem>\n        <MenuItem icon=\"envelope\" to={PAGE_ROUTE.ADMIN_SEND_EMAILS}>\n          {PAGE_TITLE.ADMIN_SEND_EMAILS}\n        </MenuItem>\n        <MenuItem icon=\"user-plus\" to={PAGE_ROUTE.ADMIN_CREATE_ACCOUNT}>\n          {PAGE_TITLE.ADMIN_CREATE_ACCOUNT}\n        </MenuItem>\n        <MenuItem icon=\"building\" to={PAGE_ROUTE.ADMIN_COMPANY_DETAILS}>\n          {PAGE_TITLE.ADMIN_COMPANY_DETAILS}\n        </MenuItem>\n        <MenuItem icon=\"bar-chart\" to={PAGE_ROUTE.ADMIN_USAGE_ANALYSIS}>\n          {PAGE_TITLE.ADMIN_USAGE_ANALYSIS}\n        </MenuItem>\n      </>\n    ) : null}\n    <MenuItem icon=\"sign-out\" to={PAGE_ROUTE.LOGOUT}>\n      {PAGE_TITLE.LOGOUT}\n    </MenuItem>\n  </>\n);\n\nconst AccountMenuItems: React.FunctionComponent<{}> = () => (\n  <>\n    <MenuItem id=\"login-item\" icon=\"sign-in\" to={PAGE_ROUTE.LOGIN}>\n      {PAGE_TITLE.LOGIN}\n    </MenuItem>\n    <MenuItem icon=\"sign-in\" to={PAGE_ROUTE.REGISTER}>\n      {PAGE_TITLE.REGISTER}\n    </MenuItem>\n  </>\n);\n\n@observer\nexport default class AccountMenu extends React.Component<{\n  isAuthenticated: boolean;\n  isAdmin: boolean;\n}> {\n  render() {\n    return (\n      <Dropdown as={NavItem}>\n        <Dropdown.Toggle id={'account-menu'} as={NavLink}>\n          <i className={'fa fa-user-o mr-1'} />\n          {PAGE_TITLE.ACCOUNT}\n        </Dropdown.Toggle>\n        <Dropdown.Menu alignRight={true}>\n          {this.props.isAuthenticated ? (\n            <AccountMenuItemsAuthenticated isAdmin={this.props.isAdmin} />\n          ) : (\n            <AccountMenuItems />\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport {\n  action,\n  observable,\n  computed,\n  reaction,\n  IReactionDisposer,\n  toJS,\n} from 'mobx';\nimport * as _ from 'lodash';\nimport styles from './styles.module.scss';\nimport classNames from 'classnames';\nimport { Container } from 'react-bootstrap';\nimport WindowStore from 'app/store/WindowStore';\nimport {\n  DISABLE_BANNER_OPT,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n} from 'app/config/constants';\nimport { Link } from 'react-router-dom';\nimport AppStore from 'app/store/AppStore';\nimport { Linkout } from 'app/shared/links/Linkout';\nimport { COLOR_BLACK, COLOR_WARNING } from 'app/config/theme';\n\nexport interface IUserMessage {\n  dateStart?: number;\n  dateEnd: number;\n  content: JSX.Element;\n  backgroundColor?: string;\n  color?: string;\n  id: string;\n}\n\nfunction makeMessageKey(id: string) {\n  return `oncokbMessageKey-${id}`;\n}\n\n// ADD MESSAGE IN FOLLOWING FORMAT\n// UNIQUE ID IS IMPORTANT B/C WE REMEMBER A MESSAGE HAS BEEN SHOWN\n// BASED ON USERS LOCALSTORAGE\nlet MESSAGE_DATA: IUserMessage[] = [];\n\nif (\n  ['beta.oncokb.org', 'www.oncokb.org', 'localhost'].includes(\n    window.location.hostname\n  )\n) {\n  MESSAGE_DATA = [\n    // ADD MESSAGE IN FOLLOWING FORMAT\n    // UNIQUE ID IS IMPORTANT B/C WE REMEMBER A MESSAGE HAS BEEN SHOWN\n    // BASED ON USERS LOCALSTORAGE\n    {\n      dateEnd: 100000000000000,\n      content: (\n        <div>\n          <span>Check out our latest publication in Cancer Discovery, </span>\n          <Linkout\n            link={\n              'https://aacrjournals.org/cancerdiscovery/article/doi/10.1158/2159-8290.CD-23-0467/729589/Quantifying-the-Expanding-Landscape-of-Clinical'\n            }\n            style={{ color: 'white', textDecoration: 'underline' }}\n          >\n            Quantifying the Expanding Landscape of Clinical Actionability for\n            Patients with Cancer\n          </Linkout>\n          <span>, and visit our new </span>\n          <Link\n            to={PAGE_ROUTE.PO_TX}\n            style={{ color: 'white', textDecoration: 'underline' }}\n          >\n            precision oncology therapies page!\n          </Link>\n        </div>\n      ),\n      id: '2023-precision-oncology-therapies',\n    },\n    {\n      dateEnd: 1,\n      content: (\n        <div>\n          <span>\n            We have a new Scientist/Scientific Writer-Editor position open. Come\n            and join us!{' '}\n          </span>\n          <a\n            className=\"btn btn-primary btn-sm ml-2 user-messager-container-button\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://careers.mskcc.org/vacancies/2022-63146-scientific-writer-editor/\"\n          >\n            Apply Here\n          </a>\n        </div>\n      ),\n      id: '2022_sswe_job_hiring',\n    },\n    {\n      dateEnd: 1,\n      content: (\n        <span>\n          Part of {ONCOKB_TM}’s content is now FDA-recognized. For more details,\n          please see our{' '}\n          <Link\n            to={PAGE_ROUTE.FDA_RECOGNITION}\n            style={{ color: 'white', textDecoration: 'underline' }}\n          >\n            FDA Recognition\n          </Link>{' '}\n          page.\n        </span>\n      ),\n      id: '2021-fda-recognition',\n    },\n    {\n      dateEnd: 1686196800000,\n      content: (\n        <div>\n          Join us at ASCO 2023! Visit our booth (\n          <Linkout\n            link={\n              'https://events.jspargo.com/asco23/Public/EventMap.aspx?ver=html&EventID=729&MapID=906&MapItBoothID=887434&MapItBooth=28161'\n            }\n            style={{ color: 'white', textDecoration: 'underline' }}\n          >\n            #28161\n          </Linkout>\n          ) and our{' '}\n          <Linkout\n            link={'https://meetings.asco.org/abstracts-presentations/219452'}\n            style={{ color: 'white', textDecoration: 'underline' }}\n          >\n            poster\n          </Linkout>{' '}\n          (Mon 06/05, 1pm, Hall A, Poster Bd #171) to meet our team and explore\n          the latest developments from OncoKB™. See you there!\n        </div>\n      ),\n      id: '2023_asco',\n    },\n    {\n      dateEnd: 1686456000000,\n      content: (\n        <div>\n          <b>Attention</b>: We want to inform you of an upcoming infrastructure\n          update that may lead to a temporary service disruption over the\n          weekend, planned <b>June 10th, 10am-12pm EDT</b>.\n          <br />\n          During this period, you may experience intermittent service\n          interruptions, brief outages, or slower response times while accessing\n          our services. Thank you for your understanding and cooperation as we\n          strive to provide you with an improved service experience.\n        </div>\n      ),\n      backgroundColor: COLOR_WARNING,\n      color: COLOR_BLACK,\n      id: 'warning_msg_06102023',\n    },\n  ];\n}\n\ntype UserMessageProps = {\n  dataUrl?: string;\n  show: boolean;\n  windowStore: WindowStore;\n  appStore: AppStore;\n};\n@observer\nexport default class UserMessage extends React.Component<UserMessageProps> {\n  constructor(props: UserMessageProps) {\n    super(props);\n    this.reactions.push(\n      reaction(\n        () => this.showBeVisible,\n        newVal => {\n          this.props.appStore.userMessageBannerEnabled = newVal;\n        },\n        false\n      )\n    );\n    this.messages = this.getMessages();\n  }\n\n  componentWillUnmount(): void {\n    for (const reactionItem of this.reactions) {\n      reactionItem();\n    }\n  }\n\n  readonly reactions: IReactionDisposer[] = [];\n\n  @observable messages: IUserMessage[] = [];\n\n  getMessages() {\n    if (localStorage.getItem(DISABLE_BANNER_OPT) === 'true') {\n      return [];\n    }\n    return _.filter(MESSAGE_DATA, message => {\n      const notYetShown = !localStorage.getItem(makeMessageKey(message.id));\n      const expired = Date.now() > message.dateEnd;\n      return notYetShown && !expired;\n    }).sort((a, b) => a.dateEnd - b.dateEnd);\n  }\n\n  @action\n  markMessageDismissed(messageId: string) {\n    localStorage.setItem(makeMessageKey(messageId), 'shown');\n    this.messages = this.getMessages();\n  }\n\n  @computed\n  get showBeVisible() {\n    return this.props.show && this.messages.length > 0;\n  }\n\n  render() {\n    if (this.showBeVisible) {\n      return toJS(this.messages).map(message => (\n        <div\n          className={styles.message}\n          key={message.id}\n          style={{\n            backgroundColor: message.backgroundColor,\n            color: message.color,\n          }}\n        >\n          <Container\n            fluid={!this.props.windowStore.isXLscreen}\n            className={styles.messageContainer}\n          >\n            <div>{message.content}</div>\n            <i\n              className={classNames(styles.close, 'fa', 'fa-close')}\n              onClick={() => this.markMessageDismissed(message.id)}\n            />\n          </Container>\n        </div>\n      ));\n    } else {\n      return null;\n    }\n  }\n}\n","import { LOCAL_DEV_OPT, DEV_URL } from '../../config/constants';\n\nexport function getClientInstanceURL(url: string) {\n  if (localStorage.getItem(LOCAL_DEV_OPT) === 'true') {\n    return url ? `${DEV_URL}/${url}` : DEV_URL;\n  } else {\n    return url;\n  }\n}\n","import API from './generated/API';\n\nimport { getClientInstanceURL } from '../utils/DevUtils';\n\nconst client = new API(getClientInstanceURL(''));\n\nexport default client;\n","import * as request from \"superagent\";\n\ntype CallbackHandler = (err: any, res ? : request.Response) => void;\nexport type Activation = {\n    'activationDate': string\n\n        'initiatedBy': string\n\n        'initiationDate': string\n\n        'key': string\n\n};\nexport type AdditionalInfoDTO = {\n    'trialAccount': TrialAccount\n\n        'userCompany': UserCompany\n\n};\nexport type CompanyDTO = {\n    'businessContact': string\n\n        'companyDomains': Array < string >\n\n        'companyType': \"PARENT\" | \"BRANCH\" | \"UNKNOWN\"\n\n        'description': string\n\n        'id': number\n\n        'legalContact': string\n\n        'licenseModel': \"FULL\" | \"LIMITED\"\n\n        'licenseStatus': \"TRIAL\" | \"REGULAR\" | \"TRIAL_EXPIRED\" | \"EXPIRED\" | \"UNKNOWN\"\n\n        'licenseType': \"ACADEMIC\" | \"COMMERCIAL\" | \"RESEARCH_IN_COMMERCIAL\" | \"HOSPITAL\"\n\n        'name': string\n\n        'numberOfUsers': number\n\n};\nexport type CompanyDomainDTO = {\n    'id': number\n\n        'name': string\n\n};\nexport type CompanyVM = {\n    'businessContact': string\n\n        'companyDomains': Array < string >\n\n        'companyType': \"PARENT\" | \"BRANCH\" | \"UNKNOWN\"\n\n        'companyUserEmails': Array < string >\n\n        'description': string\n\n        'id': number\n\n        'legalContact': string\n\n        'licenseModel': \"FULL\" | \"LIMITED\"\n\n        'licenseStatus': \"TRIAL\" | \"REGULAR\" | \"TRIAL_EXPIRED\" | \"EXPIRED\" | \"UNKNOWN\"\n\n        'licenseType': \"ACADEMIC\" | \"COMMERCIAL\" | \"RESEARCH_IN_COMMERCIAL\" | \"HOSPITAL\"\n\n        'name': string\n\n        'numberOfUsers': number\n\n};\nexport type Contact = {\n    'email': string\n\n        'phone': string\n\n};\nexport type JSONObject = {};\nexport type KeyAndPasswordVM = {\n    'key': string\n\n        'newPassword': string\n\n};\nexport type KeyAndTermsVM = {\n    'key': string\n\n        'readAndAgreeWithTheTerms': boolean\n\n};\nexport type LicenseAgreement = {\n    'acceptanceDate': string\n\n        'name': string\n\n        'version': string\n\n};\nexport type LoginVM = {\n    'password': string\n\n        'rememberMe': boolean\n\n        'username': string\n\n};\nexport type MailTypeInfo = {\n    'description': string\n\n        'mailType': \"ACTIVATION\" | \"APPROVAL\" | \"REJECTION\" | \"CREATION\" | \"PASSWORD_RESET\" | \"LICENSE_REVIEW_COMMERCIAL\" | \"LICENSE_REVIEW_RESEARCH_COMMERCIAL\" | \"LICENSE_REVIEW_HOSPITAL\" | \"CLARIFY_ACADEMIC_FOR_PROFIT\" | \"CLARIFY_ACADEMIC_NON_INSTITUTE_EMAIL\" | \"CLARIFY_USE_CASE\" | \"CLARIFY_DUPLICATE_USER\" | \"CLARIFY_REGISTRATION_INFO\" | \"LICENSE_OPTIONS\" | \"REJECT_ALUMNI_ADDRESS\" | \"VERIFY_EMAIL_BEFORE_ACCOUNT_EXPIRES\" | \"APPROVAL_ALIGN_LICENSE_WITH_COMPANY\" | \"TRIAL_ACCOUNT_IS_ABOUT_TO_EXPIRE\" | \"TRIAL_ACCOUNT_IS_ACTIVATED\" | \"ACTIVATE_FREE_TRIAL\" | \"TOKEN_HAS_BEEN_EXPOSED\" | \"TOKEN_HAS_BEEN_EXPOSED_USER\" | \"SEARCHING_RESPONSE_STRUCTURE_HAS_CHANGED\" | \"LIST_OF_UNAPPROVED_USERS\" | \"DATA_USAGE_EXCEEDS_THRESHOLD\" | \"TEST\"\n\n};\nexport type ManagedUserVM = {\n    'activated': boolean\n\n        'activationKey': string\n\n        'additionalInfo': AdditionalInfoDTO\n\n        'authorities': Array < string >\n\n        'city': string\n\n        'company': CompanyDTO\n\n        'companyName': string\n\n        'country': string\n\n        'createdBy': string\n\n        'createdDate': string\n\n        'email': string\n\n        'emailVerified': boolean\n\n        'firstName': string\n\n        'id': number\n\n        'imageUrl': string\n\n        'jobTitle': string\n\n        'langKey': string\n\n        'lastModifiedBy': string\n\n        'lastModifiedDate': string\n\n        'lastName': string\n\n        'licenseType': \"ACADEMIC\" | \"COMMERCIAL\" | \"RESEARCH_IN_COMMERCIAL\" | \"HOSPITAL\"\n\n        'login': string\n\n        'needsMskRocReview': boolean\n\n        'notifyUserOnTrialCreation': boolean\n\n        'password': string\n\n        'resetDate': string\n\n        'resetKey': string\n\n        'tokenIsRenewable': boolean\n\n        'tokenValidDays': number\n\n};\nexport type PasswordChangeDTO = {\n    'currentPassword': string\n\n        'newPassword': string\n\n};\nexport type Token = {\n    'creation': string\n\n        'currentUsage': number\n\n        'expiration': string\n\n        'id': number\n\n        'renewable': boolean\n\n        'token': string\n\n        'usageLimit': number\n\n        'user': User\n\n};\nexport type TrialAccount = {\n    'activation': Activation\n\n        'licenseAgreement': LicenseAgreement\n\n};\nexport type UsageSummary = {\n    'day': {}\n\n    'month': {}\n\n    'year': {}\n\n};\nexport type User = {\n    'activated': boolean\n\n        'email': string\n\n        'firstName': string\n\n        'id': number\n\n        'imageUrl': string\n\n        'langKey': string\n\n        'lastName': string\n\n        'login': string\n\n        'resetDate': string\n\n};\nexport type UserCompany = {\n    'anticipatedReports': string\n\n        'businessContact': Contact\n\n        'description': string\n\n        'size': string\n\n        'useCase': string\n\n};\nexport type UserDTO = {\n    'activated': boolean\n\n        'activationKey': string\n\n        'additionalInfo': AdditionalInfoDTO\n\n        'authorities': Array < string >\n\n        'city': string\n\n        'company': CompanyDTO\n\n        'companyName': string\n\n        'country': string\n\n        'createdBy': string\n\n        'createdDate': string\n\n        'email': string\n\n        'emailVerified': boolean\n\n        'firstName': string\n\n        'id': number\n\n        'imageUrl': string\n\n        'jobTitle': string\n\n        'langKey': string\n\n        'lastModifiedBy': string\n\n        'lastModifiedDate': string\n\n        'lastName': string\n\n        'licenseType': \"ACADEMIC\" | \"COMMERCIAL\" | \"RESEARCH_IN_COMMERCIAL\" | \"HOSPITAL\"\n\n        'login': string\n\n        'resetDate': string\n\n        'resetKey': string\n\n};\nexport type UserDetailsDTO = {\n    'additionalInfo': AdditionalInfoDTO\n\n        'address': string\n\n        'city': string\n\n        'companyId': number\n\n        'companyName': string\n\n        'country': string\n\n        'id': number\n\n        'jobTitle': string\n\n        'licenseType': \"ACADEMIC\" | \"COMMERCIAL\" | \"RESEARCH_IN_COMMERCIAL\" | \"HOSPITAL\"\n\n        'userId': number\n\n};\nexport type UserMailsDTO = {\n    'id': number\n\n        'mailType': \"ACTIVATION\" | \"APPROVAL\" | \"REJECTION\" | \"CREATION\" | \"PASSWORD_RESET\" | \"LICENSE_REVIEW_COMMERCIAL\" | \"LICENSE_REVIEW_RESEARCH_COMMERCIAL\" | \"LICENSE_REVIEW_HOSPITAL\" | \"CLARIFY_ACADEMIC_FOR_PROFIT\" | \"CLARIFY_ACADEMIC_NON_INSTITUTE_EMAIL\" | \"CLARIFY_USE_CASE\" | \"CLARIFY_DUPLICATE_USER\" | \"CLARIFY_REGISTRATION_INFO\" | \"LICENSE_OPTIONS\" | \"REJECT_ALUMNI_ADDRESS\" | \"VERIFY_EMAIL_BEFORE_ACCOUNT_EXPIRES\" | \"APPROVAL_ALIGN_LICENSE_WITH_COMPANY\" | \"TRIAL_ACCOUNT_IS_ABOUT_TO_EXPIRE\" | \"TRIAL_ACCOUNT_IS_ACTIVATED\" | \"ACTIVATE_FREE_TRIAL\" | \"TOKEN_HAS_BEEN_EXPOSED\" | \"TOKEN_HAS_BEEN_EXPOSED_USER\" | \"SEARCHING_RESPONSE_STRUCTURE_HAS_CHANGED\" | \"LIST_OF_UNAPPROVED_USERS\" | \"DATA_USAGE_EXCEEDS_THRESHOLD\" | \"TEST\"\n\n        'sentBy': string\n\n        'sentDate': string\n\n        'sentFrom': string\n\n        'userId': number\n\n        'userLogin': string\n\n};\nexport type UserOverviewUsage = {\n    'endpoint': string\n\n        'maxUsage': number\n\n        'noPrivateEndpoint': string\n\n        'noPrivateMaxUsage': number\n\n        'totalUsage': number\n\n        'userEmail': string\n\n        'userId': string\n\n};\nexport type UserUsage = {\n    'company': string\n\n        'jobTitle': string\n\n        'licenseType': string\n\n        'summary': UsageSummary\n\n        'userEmail': string\n\n        'userFirstName': string\n\n        'userLastName': string\n\n};\nexport type VerifyCompanyNameVM = {\n    'companyId': number\n\n        'name': string\n\n};\n\n/**\n * OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n * @class API\n * @param {(string)} [domainOrOptions] - The project domain.\n */\nexport default class API {\n\n    private domain: string = \"\";\n    private errorHandlers: CallbackHandler[] = [];\n\n    constructor(domain ? : string) {\n        if (domain) {\n            this.domain = domain;\n        }\n    }\n\n    getDomain() {\n        return this.domain;\n    }\n\n    addErrorHandler(handler: CallbackHandler) {\n        this.errorHandlers.push(handler);\n    }\n\n    private request(method: string, url: string, body: any, headers: any, queryParameters: any, form: any, reject: CallbackHandler, resolve: CallbackHandler, errorHandlers: CallbackHandler[]) {\n        let req = (new(request as any).Request(method, url) as request.Request)\n            .query(queryParameters);\n        Object.keys(headers).forEach(key => {\n            req.set(key, headers[key]);\n        });\n\n        if (body) {\n            req.send(body);\n        }\n\n        if (typeof(body) === 'object' && !(body.constructor.name === 'Buffer')) {\n            req.set('Content-Type', 'application/json');\n        }\n\n        if (Object.keys(form).length > 0) {\n            req.type('form');\n            req.send(form);\n        }\n\n        req.end((error, response) => {\n            if (error || !response.ok) {\n                reject(error);\n                errorHandlers.forEach(handler => handler(error));\n            } else {\n                resolve(response);\n            }\n        });\n    }\n\n    getAccountUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getAccount\n     * @method\n     * @name API#getAccountUsingGET\n     */\n    getAccountUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getAccount\n     * @method\n     * @name API#getAccountUsingGET\n     */\n    getAccountUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < UserDTO > {\n        return this.getAccountUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    saveAccountUsingPOSTURL(parameters: {\n        'userDto': UserDTO,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * saveAccount\n     * @method\n     * @name API#saveAccountUsingPOST\n     * @param {} userDto - userDTO\n     */\n    saveAccountUsingPOSTWithHttpInfo(parameters: {\n        'userDto': UserDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['userDto'] !== undefined) {\n                body = parameters['userDto'];\n            }\n\n            if (parameters['userDto'] === undefined) {\n                reject(new Error('Missing required  parameter: userDto'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * saveAccount\n     * @method\n     * @name API#saveAccountUsingPOST\n     * @param {} userDto - userDTO\n     */\n    saveAccountUsingPOST(parameters: {\n        'userDto': UserDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.saveAccountUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    finishTrialAccountActivationUsingPOSTURL(parameters: {\n        'keyAndTermsVm': KeyAndTermsVM,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account/active-trial/finish';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * finishTrialAccountActivation\n     * @method\n     * @name API#finishTrialAccountActivationUsingPOST\n     * @param {} keyAndTermsVm - keyAndTermsVM\n     */\n    finishTrialAccountActivationUsingPOSTWithHttpInfo(parameters: {\n        'keyAndTermsVm': KeyAndTermsVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account/active-trial/finish';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['keyAndTermsVm'] !== undefined) {\n                body = parameters['keyAndTermsVm'];\n            }\n\n            if (parameters['keyAndTermsVm'] === undefined) {\n                reject(new Error('Missing required  parameter: keyAndTermsVm'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * finishTrialAccountActivation\n     * @method\n     * @name API#finishTrialAccountActivationUsingPOST\n     * @param {} keyAndTermsVm - keyAndTermsVM\n     */\n    finishTrialAccountActivationUsingPOST(parameters: {\n        'keyAndTermsVm': KeyAndTermsVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < UserDTO > {\n        return this.finishTrialAccountActivationUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getTrialAccountActivationInfoUsingGETURL(parameters: {\n        'key': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account/active-trial/info';\n        if (parameters['key'] !== undefined) {\n            queryParameters['key'] = parameters['key'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getTrialAccountActivationInfo\n     * @method\n     * @name API#getTrialAccountActivationInfoUsingGET\n     * @param {string} key - key\n     */\n    getTrialAccountActivationInfoUsingGETWithHttpInfo(parameters: {\n        'key': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account/active-trial/info';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters['key'] !== undefined) {\n                queryParameters['key'] = parameters['key'];\n            }\n\n            if (parameters['key'] === undefined) {\n                reject(new Error('Missing required  parameter: key'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getTrialAccountActivationInfo\n     * @method\n     * @name API#getTrialAccountActivationInfoUsingGET\n     * @param {string} key - key\n     */\n    getTrialAccountActivationInfoUsingGET(parameters: {\n        'key': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < UserDTO > {\n        return this.getTrialAccountActivationInfoUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    initiateTrialAccountActivationUsingPOSTURL(parameters: {\n        'login': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account/active-trial/init';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * initiateTrialAccountActivation\n     * @method\n     * @name API#initiateTrialAccountActivationUsingPOST\n     * @param {} login - login\n     */\n    initiateTrialAccountActivationUsingPOSTWithHttpInfo(parameters: {\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account/active-trial/init';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['login'] !== undefined) {\n                body = parameters['login'];\n            }\n\n            if (parameters['login'] === undefined) {\n                reject(new Error('Missing required  parameter: login'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * initiateTrialAccountActivation\n     * @method\n     * @name API#initiateTrialAccountActivationUsingPOST\n     * @param {} login - login\n     */\n    initiateTrialAccountActivationUsingPOST(parameters: {\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < UserDTO > {\n        return this.initiateTrialAccountActivationUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    changePasswordUsingPOSTURL(parameters: {\n        'passwordChangeDto': PasswordChangeDTO,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account/change-password';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * changePassword\n     * @method\n     * @name API#changePasswordUsingPOST\n     * @param {} passwordChangeDto - passwordChangeDto\n     */\n    changePasswordUsingPOSTWithHttpInfo(parameters: {\n        'passwordChangeDto': PasswordChangeDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account/change-password';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['passwordChangeDto'] !== undefined) {\n                body = parameters['passwordChangeDto'];\n            }\n\n            if (parameters['passwordChangeDto'] === undefined) {\n                reject(new Error('Missing required  parameter: passwordChangeDto'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * changePassword\n     * @method\n     * @name API#changePasswordUsingPOST\n     * @param {} passwordChangeDto - passwordChangeDto\n     */\n    changePasswordUsingPOST(parameters: {\n        'passwordChangeDto': PasswordChangeDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.changePasswordUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    generateResetKeyUsingPOSTURL(parameters: {\n        'login': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account/generate-reset-key';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * generateResetKey\n     * @method\n     * @name API#generateResetKeyUsingPOST\n     * @param {} login - login\n     */\n    generateResetKeyUsingPOSTWithHttpInfo(parameters: {\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account/generate-reset-key';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['login'] !== undefined) {\n                body = parameters['login'];\n            }\n\n            if (parameters['login'] === undefined) {\n                reject(new Error('Missing required  parameter: login'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * generateResetKey\n     * @method\n     * @name API#generateResetKeyUsingPOST\n     * @param {} login - login\n     */\n    generateResetKeyUsingPOST(parameters: {\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < UserDTO > {\n        return this.generateResetKeyUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    resendVerificationUsingPOSTURL(parameters: {\n        'loginVm': LoginVM,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account/resend-verification';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * resendVerification\n     * @method\n     * @name API#resendVerificationUsingPOST\n     * @param {} loginVm - loginVM\n     */\n    resendVerificationUsingPOSTWithHttpInfo(parameters: {\n        'loginVm': LoginVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account/resend-verification';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['loginVm'] !== undefined) {\n                body = parameters['loginVm'];\n            }\n\n            if (parameters['loginVm'] === undefined) {\n                reject(new Error('Missing required  parameter: loginVm'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * resendVerification\n     * @method\n     * @name API#resendVerificationUsingPOST\n     * @param {} loginVm - loginVM\n     */\n    resendVerificationUsingPOST(parameters: {\n        'loginVm': LoginVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.resendVerificationUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    finishPasswordResetUsingPOSTURL(parameters: {\n        'keyAndPassword': KeyAndPasswordVM,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account/reset-password/finish';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * finishPasswordReset\n     * @method\n     * @name API#finishPasswordResetUsingPOST\n     * @param {} keyAndPassword - keyAndPassword\n     */\n    finishPasswordResetUsingPOSTWithHttpInfo(parameters: {\n        'keyAndPassword': KeyAndPasswordVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account/reset-password/finish';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['keyAndPassword'] !== undefined) {\n                body = parameters['keyAndPassword'];\n            }\n\n            if (parameters['keyAndPassword'] === undefined) {\n                reject(new Error('Missing required  parameter: keyAndPassword'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * finishPasswordReset\n     * @method\n     * @name API#finishPasswordResetUsingPOST\n     * @param {} keyAndPassword - keyAndPassword\n     */\n    finishPasswordResetUsingPOST(parameters: {\n        'keyAndPassword': KeyAndPasswordVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.finishPasswordResetUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    requestPasswordResetUsingPOSTURL(parameters: {\n        'mail': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account/reset-password/init';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * requestPasswordReset\n     * @method\n     * @name API#requestPasswordResetUsingPOST\n     * @param {} mail - mail\n     */\n    requestPasswordResetUsingPOSTWithHttpInfo(parameters: {\n        'mail': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account/reset-password/init';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['mail'] !== undefined) {\n                body = parameters['mail'];\n            }\n\n            if (parameters['mail'] === undefined) {\n                reject(new Error('Missing required  parameter: mail'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * requestPasswordReset\n     * @method\n     * @name API#requestPasswordResetUsingPOST\n     * @param {} mail - mail\n     */\n    requestPasswordResetUsingPOST(parameters: {\n        'mail': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.requestPasswordResetUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getTokensUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account/tokens';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getTokens\n     * @method\n     * @name API#getTokensUsingGET\n     */\n    getTokensUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account/tokens';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getTokens\n     * @method\n     * @name API#getTokensUsingGET\n     */\n    getTokensUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < Token >\n        > {\n            return this.getTokensUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    createTokenUsingPOSTURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account/tokens';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * createToken\n     * @method\n     * @name API#createTokenUsingPOST\n     */\n    createTokenUsingPOSTWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account/tokens';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * createToken\n     * @method\n     * @name API#createTokenUsingPOST\n     */\n    createTokenUsingPOST(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < Token > {\n        return this.createTokenUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    deleteTokenUsingDELETEURL(parameters: {\n        'token': Token,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/account/tokens';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * deleteToken\n     * @method\n     * @name API#deleteTokenUsingDELETE\n     * @param {} token - token\n     */\n    deleteTokenUsingDELETEWithHttpInfo(parameters: {\n        'token': Token,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/account/tokens';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters['token'] !== undefined) {\n                body = parameters['token'];\n            }\n\n            if (parameters['token'] === undefined) {\n                reject(new Error('Missing required  parameter: token'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('DELETE', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * deleteToken\n     * @method\n     * @name API#deleteTokenUsingDELETE\n     * @param {} token - token\n     */\n    deleteTokenUsingDELETE(parameters: {\n        'token': Token,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.deleteTokenUsingDELETEWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    activateAccountUsingGETURL(parameters: {\n        'key': string,\n        'login': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/activate';\n        if (parameters['key'] !== undefined) {\n            queryParameters['key'] = parameters['key'];\n        }\n\n        if (parameters['login'] !== undefined) {\n            queryParameters['login'] = parameters['login'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * activateAccount\n     * @method\n     * @name API#activateAccountUsingGET\n     * @param {string} key - key\n     * @param {string} login - login\n     */\n    activateAccountUsingGETWithHttpInfo(parameters: {\n        'key': string,\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/activate';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters['key'] !== undefined) {\n                queryParameters['key'] = parameters['key'];\n            }\n\n            if (parameters['key'] === undefined) {\n                reject(new Error('Missing required  parameter: key'));\n                return;\n            }\n\n            if (parameters['login'] !== undefined) {\n                queryParameters['login'] = parameters['login'];\n            }\n\n            if (parameters['login'] === undefined) {\n                reject(new Error('Missing required  parameter: login'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * activateAccount\n     * @method\n     * @name API#activateAccountUsingGET\n     * @param {string} key - key\n     * @param {string} login - login\n     */\n    activateAccountUsingGET(parameters: {\n        'key': string,\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < boolean > {\n        return this.activateAccountUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    isAuthenticatedUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/authenticate';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * isAuthenticated\n     * @method\n     * @name API#isAuthenticatedUsingGET\n     */\n    isAuthenticatedUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/authenticate';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * isAuthenticated\n     * @method\n     * @name API#isAuthenticatedUsingGET\n     */\n    isAuthenticatedUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < string > {\n        return this.isAuthenticatedUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    authorizeUsingPOSTURL(parameters: {\n        'loginVm': LoginVM,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/authenticate';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * authorize\n     * @method\n     * @name API#authorizeUsingPOST\n     * @param {} loginVm - loginVM\n     */\n    authorizeUsingPOSTWithHttpInfo(parameters: {\n        'loginVm': LoginVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/authenticate';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['loginVm'] !== undefined) {\n                body = parameters['loginVm'];\n            }\n\n            if (parameters['loginVm'] === undefined) {\n                reject(new Error('Missing required  parameter: loginVm'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * authorize\n     * @method\n     * @name API#authorizeUsingPOST\n     * @param {} loginVm - loginVM\n     */\n    authorizeUsingPOST(parameters: {\n        'loginVm': LoginVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < string > {\n        return this.authorizeUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getAllCompaniesUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/companies';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getAllCompanies\n     * @method\n     * @name API#getAllCompaniesUsingGET\n     */\n    getAllCompaniesUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/companies';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getAllCompanies\n     * @method\n     * @name API#getAllCompaniesUsingGET\n     */\n    getAllCompaniesUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < CompanyDTO >\n        > {\n            return this.getAllCompaniesUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    createCompanyUsingPOSTURL(parameters: {\n        'companyDto': CompanyDTO,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/companies';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * createCompany\n     * @method\n     * @name API#createCompanyUsingPOST\n     * @param {} companyDto - companyDTO\n     */\n    createCompanyUsingPOSTWithHttpInfo(parameters: {\n        'companyDto': CompanyDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/companies';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['companyDto'] !== undefined) {\n                body = parameters['companyDto'];\n            }\n\n            if (parameters['companyDto'] === undefined) {\n                reject(new Error('Missing required  parameter: companyDto'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * createCompany\n     * @method\n     * @name API#createCompanyUsingPOST\n     * @param {} companyDto - companyDTO\n     */\n    createCompanyUsingPOST(parameters: {\n        'companyDto': CompanyDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < CompanyDTO > {\n        return this.createCompanyUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    updateCompanyUsingPUTURL(parameters: {\n        'companyVm': CompanyVM,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/companies';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * updateCompany\n     * @method\n     * @name API#updateCompanyUsingPUT\n     * @param {} companyVm - companyVM\n     */\n    updateCompanyUsingPUTWithHttpInfo(parameters: {\n        'companyVm': CompanyVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/companies';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['companyVm'] !== undefined) {\n                body = parameters['companyVm'];\n            }\n\n            if (parameters['companyVm'] === undefined) {\n                reject(new Error('Missing required  parameter: companyVm'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('PUT', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * updateCompany\n     * @method\n     * @name API#updateCompanyUsingPUT\n     * @param {} companyVm - companyVM\n     */\n    updateCompanyUsingPUT(parameters: {\n        'companyVm': CompanyVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < CompanyDTO > {\n        return this.updateCompanyUsingPUTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getCompanyByNameUsingGETURL(parameters: {\n        'name': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/companies/lookup';\n        if (parameters['name'] !== undefined) {\n            queryParameters['name'] = parameters['name'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getCompanyByName\n     * @method\n     * @name API#getCompanyByNameUsingGET\n     * @param {string} name - name\n     */\n    getCompanyByNameUsingGETWithHttpInfo(parameters: {\n        'name': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/companies/lookup';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters['name'] !== undefined) {\n                queryParameters['name'] = parameters['name'];\n            }\n\n            if (parameters['name'] === undefined) {\n                reject(new Error('Missing required  parameter: name'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getCompanyByName\n     * @method\n     * @name API#getCompanyByNameUsingGET\n     * @param {string} name - name\n     */\n    getCompanyByNameUsingGET(parameters: {\n        'name': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < CompanyDTO > {\n        return this.getCompanyByNameUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    verifyCompanyNameUsingPOSTURL(parameters: {\n        'verificationInfo': VerifyCompanyNameVM,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/companies/verify-name';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * verifyCompanyName\n     * @method\n     * @name API#verifyCompanyNameUsingPOST\n     * @param {} verificationInfo - verificationInfo\n     */\n    verifyCompanyNameUsingPOSTWithHttpInfo(parameters: {\n        'verificationInfo': VerifyCompanyNameVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/companies/verify-name';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['verificationInfo'] !== undefined) {\n                body = parameters['verificationInfo'];\n            }\n\n            if (parameters['verificationInfo'] === undefined) {\n                reject(new Error('Missing required  parameter: verificationInfo'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * verifyCompanyName\n     * @method\n     * @name API#verifyCompanyNameUsingPOST\n     * @param {} verificationInfo - verificationInfo\n     */\n    verifyCompanyNameUsingPOST(parameters: {\n        'verificationInfo': VerifyCompanyNameVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < boolean > {\n        return this.verifyCompanyNameUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getCompanyUsingGETURL(parameters: {\n        'id': number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/companies/{id}';\n\n        path = path.replace('{id}', parameters['id'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getCompany\n     * @method\n     * @name API#getCompanyUsingGET\n     * @param {integer} id - id\n     */\n    getCompanyUsingGETWithHttpInfo(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/companies/{id}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{id}', parameters['id'] + '');\n\n            if (parameters['id'] === undefined) {\n                reject(new Error('Missing required  parameter: id'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getCompany\n     * @method\n     * @name API#getCompanyUsingGET\n     * @param {integer} id - id\n     */\n    getCompanyUsingGET(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < CompanyDTO > {\n        return this.getCompanyUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getCompanyUsersUsingGETURL(parameters: {\n        'id': number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/companies/{id}/users';\n\n        path = path.replace('{id}', parameters['id'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getCompanyUsers\n     * @method\n     * @name API#getCompanyUsersUsingGET\n     * @param {integer} id - id\n     */\n    getCompanyUsersUsingGETWithHttpInfo(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/companies/{id}/users';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{id}', parameters['id'] + '');\n\n            if (parameters['id'] === undefined) {\n                reject(new Error('Missing required  parameter: id'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getCompanyUsers\n     * @method\n     * @name API#getCompanyUsersUsingGET\n     * @param {integer} id - id\n     */\n    getCompanyUsersUsingGET(parameters: {\n            'id': number,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < UserDTO >\n        > {\n            return this.getCompanyUsersUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    getAllCompanyDomainsUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/company-domains';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getAllCompanyDomains\n     * @method\n     * @name API#getAllCompanyDomainsUsingGET\n     */\n    getAllCompanyDomainsUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/company-domains';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getAllCompanyDomains\n     * @method\n     * @name API#getAllCompanyDomainsUsingGET\n     */\n    getAllCompanyDomainsUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < CompanyDomainDTO >\n        > {\n            return this.getAllCompanyDomainsUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    createCompanyDomainUsingPOSTURL(parameters: {\n        'companyDomainDto': CompanyDomainDTO,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/company-domains';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * createCompanyDomain\n     * @method\n     * @name API#createCompanyDomainUsingPOST\n     * @param {} companyDomainDto - companyDomainDTO\n     */\n    createCompanyDomainUsingPOSTWithHttpInfo(parameters: {\n        'companyDomainDto': CompanyDomainDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/company-domains';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['companyDomainDto'] !== undefined) {\n                body = parameters['companyDomainDto'];\n            }\n\n            if (parameters['companyDomainDto'] === undefined) {\n                reject(new Error('Missing required  parameter: companyDomainDto'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * createCompanyDomain\n     * @method\n     * @name API#createCompanyDomainUsingPOST\n     * @param {} companyDomainDto - companyDomainDTO\n     */\n    createCompanyDomainUsingPOST(parameters: {\n        'companyDomainDto': CompanyDomainDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < CompanyDomainDTO > {\n        return this.createCompanyDomainUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    updateCompanyDomainUsingPUTURL(parameters: {\n        'companyDomainDto': CompanyDomainDTO,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/company-domains';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * updateCompanyDomain\n     * @method\n     * @name API#updateCompanyDomainUsingPUT\n     * @param {} companyDomainDto - companyDomainDTO\n     */\n    updateCompanyDomainUsingPUTWithHttpInfo(parameters: {\n        'companyDomainDto': CompanyDomainDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/company-domains';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['companyDomainDto'] !== undefined) {\n                body = parameters['companyDomainDto'];\n            }\n\n            if (parameters['companyDomainDto'] === undefined) {\n                reject(new Error('Missing required  parameter: companyDomainDto'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('PUT', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * updateCompanyDomain\n     * @method\n     * @name API#updateCompanyDomainUsingPUT\n     * @param {} companyDomainDto - companyDomainDTO\n     */\n    updateCompanyDomainUsingPUT(parameters: {\n        'companyDomainDto': CompanyDomainDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < CompanyDomainDTO > {\n        return this.updateCompanyDomainUsingPUTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    verifyCompanyDomainUsingPOSTURL(parameters: {\n        'companyId' ? : number,\n        'names': Array < string > ,\n            $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/company-domains/verify';\n        if (parameters['companyId'] !== undefined) {\n            queryParameters['companyId'] = parameters['companyId'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * verifyCompanyDomain\n     * @method\n     * @name API#verifyCompanyDomainUsingPOST\n     * @param {integer} companyId - companyId\n     * @param {} names - names\n     */\n    verifyCompanyDomainUsingPOSTWithHttpInfo(parameters: {\n        'companyId' ? : number,\n        'names': Array < string > ,\n            $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/company-domains/verify';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['companyId'] !== undefined) {\n                queryParameters['companyId'] = parameters['companyId'];\n            }\n\n            if (parameters['names'] !== undefined) {\n                body = parameters['names'];\n            }\n\n            if (parameters['names'] === undefined) {\n                reject(new Error('Missing required  parameter: names'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * verifyCompanyDomain\n     * @method\n     * @name API#verifyCompanyDomainUsingPOST\n     * @param {integer} companyId - companyId\n     * @param {} names - names\n     */\n    verifyCompanyDomainUsingPOST(parameters: {\n            'companyId' ? : number,\n            'names': Array < string > ,\n                $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < CompanyDomainDTO >\n        > {\n            return this.verifyCompanyDomainUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    getCompanyDomainUsingGETURL(parameters: {\n        'id': number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/company-domains/{id}';\n\n        path = path.replace('{id}', parameters['id'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getCompanyDomain\n     * @method\n     * @name API#getCompanyDomainUsingGET\n     * @param {integer} id - id\n     */\n    getCompanyDomainUsingGETWithHttpInfo(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/company-domains/{id}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{id}', parameters['id'] + '');\n\n            if (parameters['id'] === undefined) {\n                reject(new Error('Missing required  parameter: id'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getCompanyDomain\n     * @method\n     * @name API#getCompanyDomainUsingGET\n     * @param {integer} id - id\n     */\n    getCompanyDomainUsingGET(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < CompanyDomainDTO > {\n        return this.getCompanyDomainUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    deleteCompanyDomainUsingDELETEURL(parameters: {\n        'id': number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/company-domains/{id}';\n\n        path = path.replace('{id}', parameters['id'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * deleteCompanyDomain\n     * @method\n     * @name API#deleteCompanyDomainUsingDELETE\n     * @param {integer} id - id\n     */\n    deleteCompanyDomainUsingDELETEWithHttpInfo(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/company-domains/{id}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{id}', parameters['id'] + '');\n\n            if (parameters['id'] === undefined) {\n                reject(new Error('Missing required  parameter: id'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('DELETE', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * deleteCompanyDomain\n     * @method\n     * @name API#deleteCompanyDomainUsingDELETE\n     * @param {integer} id - id\n     */\n    deleteCompanyDomainUsingDELETE(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.deleteCompanyDomainUsingDELETEWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    checkExposedTokensUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/cronjob/check-exposed-tokens';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * checkExposedTokens\n     * @method\n     * @name API#checkExposedTokensUsingGET\n     */\n    checkExposedTokensUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/cronjob/check-exposed-tokens';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * checkExposedTokens\n     * @method\n     * @name API#checkExposedTokensUsingGET\n     */\n    checkExposedTokensUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < any > {\n        return this.checkExposedTokensUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    checkTrialAccountsUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/cronjob/check-trial-accounts';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * checkTrialAccounts\n     * @method\n     * @name API#checkTrialAccountsUsingGET\n     */\n    checkTrialAccountsUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/cronjob/check-trial-accounts';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * checkTrialAccounts\n     * @method\n     * @name API#checkTrialAccountsUsingGET\n     */\n    checkTrialAccountsUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < any > {\n        return this.checkTrialAccountsUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    emailUnapprovedUsersListUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/cronjob/email-unapproved-users-list';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * emailUnapprovedUsersList\n     * @method\n     * @name API#emailUnapprovedUsersListUsingGET\n     */\n    emailUnapprovedUsersListUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/cronjob/email-unapproved-users-list';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * emailUnapprovedUsersList\n     * @method\n     * @name API#emailUnapprovedUsersListUsingGET\n     */\n    emailUnapprovedUsersListUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < any > {\n        return this.emailUnapprovedUsersListUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    generateTokensUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/cronjob/generate-tokens';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * generateTokens\n     * @method\n     * @name API#generateTokensUsingGET\n     */\n    generateTokensUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/cronjob/generate-tokens';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * generateTokens\n     * @method\n     * @name API#generateTokensUsingGET\n     */\n    generateTokensUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < any > {\n        return this.generateTokensUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    moveTokenStatsToS3UsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/cronjob/move-token-stats-to-s3';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * moveTokenStatsToS3\n     * @method\n     * @name API#moveTokenStatsToS3UsingGET\n     */\n    moveTokenStatsToS3UsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/cronjob/move-token-stats-to-s3';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * moveTokenStatsToS3\n     * @method\n     * @name API#moveTokenStatsToS3UsingGET\n     */\n    moveTokenStatsToS3UsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < any > {\n        return this.moveTokenStatsToS3UsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    removeNotActivatedUsersUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/cronjob/remove-not-activate-users';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * removeNotActivatedUsers\n     * @method\n     * @name API#removeNotActivatedUsersUsingGET\n     */\n    removeNotActivatedUsersUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/cronjob/remove-not-activate-users';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * removeNotActivatedUsers\n     * @method\n     * @name API#removeNotActivatedUsersUsingGET\n     */\n    removeNotActivatedUsersUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < any > {\n        return this.removeNotActivatedUsersUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    removeOldAuditEventsUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/cronjob/remove-old-audit-events';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * removeOldAuditEvents\n     * @method\n     * @name API#removeOldAuditEventsUsingGET\n     */\n    removeOldAuditEventsUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/cronjob/remove-old-audit-events';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * removeOldAuditEvents\n     * @method\n     * @name API#removeOldAuditEventsUsingGET\n     */\n    removeOldAuditEventsUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < any > {\n        return this.removeOldAuditEventsUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    tokensRenewCheckUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/cronjob/renew-tokens';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * tokensRenewCheck\n     * @method\n     * @name API#tokensRenewCheckUsingGET\n     */\n    tokensRenewCheckUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/cronjob/renew-tokens';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * tokensRenewCheck\n     * @method\n     * @name API#tokensRenewCheckUsingGET\n     */\n    tokensRenewCheckUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < any > {\n        return this.tokensRenewCheckUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    sendFeedbackMailsUsingPOSTURL(parameters: {\n        'description': string,\n        'from': string,\n        'subject': string,\n        'userName': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/mails/feedback';\n        if (parameters['description'] !== undefined) {\n            queryParameters['description'] = parameters['description'];\n        }\n\n        if (parameters['from'] !== undefined) {\n            queryParameters['from'] = parameters['from'];\n        }\n\n        if (parameters['subject'] !== undefined) {\n            queryParameters['subject'] = parameters['subject'];\n        }\n\n        if (parameters['userName'] !== undefined) {\n            queryParameters['userName'] = parameters['userName'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * sendFeedbackMails\n     * @method\n     * @name API#sendFeedbackMailsUsingPOST\n     * @param {string} description - description\n     * @param {string} from - from\n     * @param {string} subject - subject\n     * @param {string} userName - userName\n     */\n    sendFeedbackMailsUsingPOSTWithHttpInfo(parameters: {\n        'description': string,\n        'from': string,\n        'subject': string,\n        'userName': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/mails/feedback';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['description'] !== undefined) {\n                queryParameters['description'] = parameters['description'];\n            }\n\n            if (parameters['description'] === undefined) {\n                reject(new Error('Missing required  parameter: description'));\n                return;\n            }\n\n            if (parameters['from'] !== undefined) {\n                queryParameters['from'] = parameters['from'];\n            }\n\n            if (parameters['from'] === undefined) {\n                reject(new Error('Missing required  parameter: from'));\n                return;\n            }\n\n            if (parameters['subject'] !== undefined) {\n                queryParameters['subject'] = parameters['subject'];\n            }\n\n            if (parameters['subject'] === undefined) {\n                reject(new Error('Missing required  parameter: subject'));\n                return;\n            }\n\n            if (parameters['userName'] !== undefined) {\n                queryParameters['userName'] = parameters['userName'];\n            }\n\n            if (parameters['userName'] === undefined) {\n                reject(new Error('Missing required  parameter: userName'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * sendFeedbackMails\n     * @method\n     * @name API#sendFeedbackMailsUsingPOST\n     * @param {string} description - description\n     * @param {string} from - from\n     * @param {string} subject - subject\n     * @param {string} userName - userName\n     */\n    sendFeedbackMailsUsingPOST(parameters: {\n        'description': string,\n        'from': string,\n        'subject': string,\n        'userName': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.sendFeedbackMailsUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getMailsFromUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/mails/from';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getMailsFrom\n     * @method\n     * @name API#getMailsFromUsingGET\n     */\n    getMailsFromUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/mails/from';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getMailsFrom\n     * @method\n     * @name API#getMailsFromUsingGET\n     */\n    getMailsFromUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < string >\n        > {\n            return this.getMailsFromUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    getMailsTypesUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/mails/types';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getMailsTypes\n     * @method\n     * @name API#getMailsTypesUsingGET\n     */\n    getMailsTypesUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/mails/types';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getMailsTypes\n     * @method\n     * @name API#getMailsTypesUsingGET\n     */\n    getMailsTypesUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < MailTypeInfo >\n        > {\n            return this.getMailsTypesUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    sendUserMailsUsingPOSTURL(parameters: {\n        'by': string,\n        'cc' ? : string,\n        'from': string,\n        'mailType': \"ACTIVATION\" | \"APPROVAL\" | \"REJECTION\" | \"CREATION\" | \"PASSWORD_RESET\" | \"LICENSE_REVIEW_COMMERCIAL\" | \"LICENSE_REVIEW_RESEARCH_COMMERCIAL\" | \"LICENSE_REVIEW_HOSPITAL\" | \"CLARIFY_ACADEMIC_FOR_PROFIT\" | \"CLARIFY_ACADEMIC_NON_INSTITUTE_EMAIL\" | \"CLARIFY_USE_CASE\" | \"CLARIFY_DUPLICATE_USER\" | \"CLARIFY_REGISTRATION_INFO\" | \"LICENSE_OPTIONS\" | \"REJECT_ALUMNI_ADDRESS\" | \"VERIFY_EMAIL_BEFORE_ACCOUNT_EXPIRES\" | \"APPROVAL_ALIGN_LICENSE_WITH_COMPANY\" | \"TRIAL_ACCOUNT_IS_ABOUT_TO_EXPIRE\" | \"TRIAL_ACCOUNT_IS_ACTIVATED\" | \"ACTIVATE_FREE_TRIAL\" | \"TOKEN_HAS_BEEN_EXPOSED\" | \"TOKEN_HAS_BEEN_EXPOSED_USER\" | \"SEARCHING_RESPONSE_STRUCTURE_HAS_CHANGED\" | \"LIST_OF_UNAPPROVED_USERS\" | \"DATA_USAGE_EXCEEDS_THRESHOLD\" | \"TEST\",\n        'to': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/mails/users';\n        if (parameters['by'] !== undefined) {\n            queryParameters['by'] = parameters['by'];\n        }\n\n        if (parameters['cc'] !== undefined) {\n            queryParameters['cc'] = parameters['cc'];\n        }\n\n        if (parameters['from'] !== undefined) {\n            queryParameters['from'] = parameters['from'];\n        }\n\n        if (parameters['mailType'] !== undefined) {\n            queryParameters['mailType'] = parameters['mailType'];\n        }\n\n        if (parameters['to'] !== undefined) {\n            queryParameters['to'] = parameters['to'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * sendUserMails\n     * @method\n     * @name API#sendUserMailsUsingPOST\n     * @param {string} by - by\n     * @param {string} cc - cc\n     * @param {string} from - from\n     * @param {string} mailType - mailType\n     * @param {string} to - to\n     */\n    sendUserMailsUsingPOSTWithHttpInfo(parameters: {\n        'by': string,\n        'cc' ? : string,\n        'from': string,\n        'mailType': \"ACTIVATION\" | \"APPROVAL\" | \"REJECTION\" | \"CREATION\" | \"PASSWORD_RESET\" | \"LICENSE_REVIEW_COMMERCIAL\" | \"LICENSE_REVIEW_RESEARCH_COMMERCIAL\" | \"LICENSE_REVIEW_HOSPITAL\" | \"CLARIFY_ACADEMIC_FOR_PROFIT\" | \"CLARIFY_ACADEMIC_NON_INSTITUTE_EMAIL\" | \"CLARIFY_USE_CASE\" | \"CLARIFY_DUPLICATE_USER\" | \"CLARIFY_REGISTRATION_INFO\" | \"LICENSE_OPTIONS\" | \"REJECT_ALUMNI_ADDRESS\" | \"VERIFY_EMAIL_BEFORE_ACCOUNT_EXPIRES\" | \"APPROVAL_ALIGN_LICENSE_WITH_COMPANY\" | \"TRIAL_ACCOUNT_IS_ABOUT_TO_EXPIRE\" | \"TRIAL_ACCOUNT_IS_ACTIVATED\" | \"ACTIVATE_FREE_TRIAL\" | \"TOKEN_HAS_BEEN_EXPOSED\" | \"TOKEN_HAS_BEEN_EXPOSED_USER\" | \"SEARCHING_RESPONSE_STRUCTURE_HAS_CHANGED\" | \"LIST_OF_UNAPPROVED_USERS\" | \"DATA_USAGE_EXCEEDS_THRESHOLD\" | \"TEST\",\n        'to': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/mails/users';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['by'] !== undefined) {\n                queryParameters['by'] = parameters['by'];\n            }\n\n            if (parameters['by'] === undefined) {\n                reject(new Error('Missing required  parameter: by'));\n                return;\n            }\n\n            if (parameters['cc'] !== undefined) {\n                queryParameters['cc'] = parameters['cc'];\n            }\n\n            if (parameters['from'] !== undefined) {\n                queryParameters['from'] = parameters['from'];\n            }\n\n            if (parameters['from'] === undefined) {\n                reject(new Error('Missing required  parameter: from'));\n                return;\n            }\n\n            if (parameters['mailType'] !== undefined) {\n                queryParameters['mailType'] = parameters['mailType'];\n            }\n\n            if (parameters['mailType'] === undefined) {\n                reject(new Error('Missing required  parameter: mailType'));\n                return;\n            }\n\n            if (parameters['to'] !== undefined) {\n                queryParameters['to'] = parameters['to'];\n            }\n\n            if (parameters['to'] === undefined) {\n                reject(new Error('Missing required  parameter: to'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * sendUserMails\n     * @method\n     * @name API#sendUserMailsUsingPOST\n     * @param {string} by - by\n     * @param {string} cc - cc\n     * @param {string} from - from\n     * @param {string} mailType - mailType\n     * @param {string} to - to\n     */\n    sendUserMailsUsingPOST(parameters: {\n        'by': string,\n        'cc' ? : string,\n        'from': string,\n        'mailType': \"ACTIVATION\" | \"APPROVAL\" | \"REJECTION\" | \"CREATION\" | \"PASSWORD_RESET\" | \"LICENSE_REVIEW_COMMERCIAL\" | \"LICENSE_REVIEW_RESEARCH_COMMERCIAL\" | \"LICENSE_REVIEW_HOSPITAL\" | \"CLARIFY_ACADEMIC_FOR_PROFIT\" | \"CLARIFY_ACADEMIC_NON_INSTITUTE_EMAIL\" | \"CLARIFY_USE_CASE\" | \"CLARIFY_DUPLICATE_USER\" | \"CLARIFY_REGISTRATION_INFO\" | \"LICENSE_OPTIONS\" | \"REJECT_ALUMNI_ADDRESS\" | \"VERIFY_EMAIL_BEFORE_ACCOUNT_EXPIRES\" | \"APPROVAL_ALIGN_LICENSE_WITH_COMPANY\" | \"TRIAL_ACCOUNT_IS_ABOUT_TO_EXPIRE\" | \"TRIAL_ACCOUNT_IS_ACTIVATED\" | \"ACTIVATE_FREE_TRIAL\" | \"TOKEN_HAS_BEEN_EXPOSED\" | \"TOKEN_HAS_BEEN_EXPOSED_USER\" | \"SEARCHING_RESPONSE_STRUCTURE_HAS_CHANGED\" | \"LIST_OF_UNAPPROVED_USERS\" | \"DATA_USAGE_EXCEEDS_THRESHOLD\" | \"TEST\",\n        'to': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < string > {\n        return this.sendUserMailsUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    registerAccountUsingPOSTURL(parameters: {\n        'managedUserVm': ManagedUserVM,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/register';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * registerAccount\n     * @method\n     * @name API#registerAccountUsingPOST\n     * @param {} managedUserVm - managedUserVM\n     */\n    registerAccountUsingPOSTWithHttpInfo(parameters: {\n        'managedUserVm': ManagedUserVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/register';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['managedUserVm'] !== undefined) {\n                body = parameters['managedUserVm'];\n            }\n\n            if (parameters['managedUserVm'] === undefined) {\n                reject(new Error('Missing required  parameter: managedUserVm'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * registerAccount\n     * @method\n     * @name API#registerAccountUsingPOST\n     * @param {} managedUserVm - managedUserVM\n     */\n    registerAccountUsingPOST(parameters: {\n        'managedUserVm': ManagedUserVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.registerAccountUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getAllTokensUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/tokens';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getAllTokens\n     * @method\n     * @name API#getAllTokensUsingGET\n     */\n    getAllTokensUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/tokens';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getAllTokens\n     * @method\n     * @name API#getAllTokensUsingGET\n     */\n    getAllTokensUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < Token >\n        > {\n            return this.getAllTokensUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    createTokenUsingPOST_1URL(parameters: {\n        'token': Token,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/tokens';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * createToken\n     * @method\n     * @name API#createTokenUsingPOST_1\n     * @param {} token - token\n     */\n    createTokenUsingPOST_1WithHttpInfo(parameters: {\n        'token': Token,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/tokens';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['token'] !== undefined) {\n                body = parameters['token'];\n            }\n\n            if (parameters['token'] === undefined) {\n                reject(new Error('Missing required  parameter: token'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * createToken\n     * @method\n     * @name API#createTokenUsingPOST_1\n     * @param {} token - token\n     */\n    createTokenUsingPOST_1(parameters: {\n        'token': Token,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < Token > {\n        return this.createTokenUsingPOST_1WithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    updateTokenUsingPUTURL(parameters: {\n        'token': Token,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/tokens';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * updateToken\n     * @method\n     * @name API#updateTokenUsingPUT\n     * @param {} token - token\n     */\n    updateTokenUsingPUTWithHttpInfo(parameters: {\n        'token': Token,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/tokens';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['token'] !== undefined) {\n                body = parameters['token'];\n            }\n\n            if (parameters['token'] === undefined) {\n                reject(new Error('Missing required  parameter: token'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('PUT', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * updateToken\n     * @method\n     * @name API#updateTokenUsingPUT\n     * @param {} token - token\n     */\n    updateTokenUsingPUT(parameters: {\n        'token': Token,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < Token > {\n        return this.updateTokenUsingPUTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getTokenUsingGETURL(parameters: {\n        'uuid': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/tokens/{uuid}';\n\n        path = path.replace('{uuid}', parameters['uuid'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getToken\n     * @method\n     * @name API#getTokenUsingGET\n     * @param {string} uuid - uuid\n     */\n    getTokenUsingGETWithHttpInfo(parameters: {\n        'uuid': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/tokens/{uuid}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{uuid}', parameters['uuid'] + '');\n\n            if (parameters['uuid'] === undefined) {\n                reject(new Error('Missing required  parameter: uuid'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getToken\n     * @method\n     * @name API#getTokenUsingGET\n     * @param {string} uuid - uuid\n     */\n    getTokenUsingGET(parameters: {\n        'uuid': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < Token > {\n        return this.getTokenUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    resourceDetailGetUsingGETURL(parameters: {\n        'endpoint': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/usage/resources';\n        if (parameters['endpoint'] !== undefined) {\n            queryParameters['endpoint'] = parameters['endpoint'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * resourceDetailGet\n     * @method\n     * @name API#resourceDetailGetUsingGET\n     * @param {string} endpoint - endpoint\n     */\n    resourceDetailGetUsingGETWithHttpInfo(parameters: {\n        'endpoint': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/usage/resources';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters['endpoint'] !== undefined) {\n                queryParameters['endpoint'] = parameters['endpoint'];\n            }\n\n            if (parameters['endpoint'] === undefined) {\n                reject(new Error('Missing required  parameter: endpoint'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * resourceDetailGet\n     * @method\n     * @name API#resourceDetailGetUsingGET\n     * @param {string} endpoint - endpoint\n     */\n    resourceDetailGetUsingGET(parameters: {\n        'endpoint': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < UsageSummary > {\n        return this.resourceDetailGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    resourceUsageGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/usage/summary/resources';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * resourceUsageGet\n     * @method\n     * @name API#resourceUsageGetUsingGET\n     */\n    resourceUsageGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/usage/summary/resources';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * resourceUsageGet\n     * @method\n     * @name API#resourceUsageGetUsingGET\n     */\n    resourceUsageGetUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < UsageSummary > {\n        return this.resourceUsageGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    userOverviewUsageGetUsingGETURL(parameters: {\n        'companyId' ? : number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/usage/summary/users';\n        if (parameters['companyId'] !== undefined) {\n            queryParameters['companyId'] = parameters['companyId'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * userOverviewUsageGet\n     * @method\n     * @name API#userOverviewUsageGetUsingGET\n     * @param {integer} companyId - companyId\n     */\n    userOverviewUsageGetUsingGETWithHttpInfo(parameters: {\n        'companyId' ? : number,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/usage/summary/users';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters['companyId'] !== undefined) {\n                queryParameters['companyId'] = parameters['companyId'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * userOverviewUsageGet\n     * @method\n     * @name API#userOverviewUsageGetUsingGET\n     * @param {integer} companyId - companyId\n     */\n    userOverviewUsageGetUsingGET(parameters: {\n            'companyId' ? : number,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < UserOverviewUsage >\n        > {\n            return this.userOverviewUsageGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    userUsageGetUsingGETURL(parameters: {\n        'userId': number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/usage/users/{userId}';\n\n        path = path.replace('{userId}', parameters['userId'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * userUsageGet\n     * @method\n     * @name API#userUsageGetUsingGET\n     * @param {integer} userId - userId\n     */\n    userUsageGetUsingGETWithHttpInfo(parameters: {\n        'userId': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/usage/users/{userId}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{userId}', parameters['userId'] + '');\n\n            if (parameters['userId'] === undefined) {\n                reject(new Error('Missing required  parameter: userId'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * userUsageGet\n     * @method\n     * @name API#userUsageGetUsingGET\n     * @param {integer} userId - userId\n     */\n    userUsageGetUsingGET(parameters: {\n        'userId': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < UserUsage > {\n        return this.userUsageGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getAllUserDetailsUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/user-details';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getAllUserDetails\n     * @method\n     * @name API#getAllUserDetailsUsingGET\n     */\n    getAllUserDetailsUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/user-details';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getAllUserDetails\n     * @method\n     * @name API#getAllUserDetailsUsingGET\n     */\n    getAllUserDetailsUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < UserDetailsDTO >\n        > {\n            return this.getAllUserDetailsUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    createUserDetailsUsingPOSTURL(parameters: {\n        'userDetailsDto': UserDetailsDTO,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/user-details';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * createUserDetails\n     * @method\n     * @name API#createUserDetailsUsingPOST\n     * @param {} userDetailsDto - userDetailsDTO\n     */\n    createUserDetailsUsingPOSTWithHttpInfo(parameters: {\n        'userDetailsDto': UserDetailsDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/user-details';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['userDetailsDto'] !== undefined) {\n                body = parameters['userDetailsDto'];\n            }\n\n            if (parameters['userDetailsDto'] === undefined) {\n                reject(new Error('Missing required  parameter: userDetailsDto'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * createUserDetails\n     * @method\n     * @name API#createUserDetailsUsingPOST\n     * @param {} userDetailsDto - userDetailsDTO\n     */\n    createUserDetailsUsingPOST(parameters: {\n        'userDetailsDto': UserDetailsDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < UserDetailsDTO > {\n        return this.createUserDetailsUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    updateUserDetailsUsingPUTURL(parameters: {\n        'userDetailsDto': UserDetailsDTO,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/user-details';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * updateUserDetails\n     * @method\n     * @name API#updateUserDetailsUsingPUT\n     * @param {} userDetailsDto - userDetailsDTO\n     */\n    updateUserDetailsUsingPUTWithHttpInfo(parameters: {\n        'userDetailsDto': UserDetailsDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/user-details';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['userDetailsDto'] !== undefined) {\n                body = parameters['userDetailsDto'];\n            }\n\n            if (parameters['userDetailsDto'] === undefined) {\n                reject(new Error('Missing required  parameter: userDetailsDto'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('PUT', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * updateUserDetails\n     * @method\n     * @name API#updateUserDetailsUsingPUT\n     * @param {} userDetailsDto - userDetailsDTO\n     */\n    updateUserDetailsUsingPUT(parameters: {\n        'userDetailsDto': UserDetailsDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < UserDetailsDTO > {\n        return this.updateUserDetailsUsingPUTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getUserDetailsUsingGETURL(parameters: {\n        'id': number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/user-details/{id}';\n\n        path = path.replace('{id}', parameters['id'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getUserDetails\n     * @method\n     * @name API#getUserDetailsUsingGET\n     * @param {integer} id - id\n     */\n    getUserDetailsUsingGETWithHttpInfo(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/user-details/{id}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{id}', parameters['id'] + '');\n\n            if (parameters['id'] === undefined) {\n                reject(new Error('Missing required  parameter: id'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getUserDetails\n     * @method\n     * @name API#getUserDetailsUsingGET\n     * @param {integer} id - id\n     */\n    getUserDetailsUsingGET(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < UserDetailsDTO > {\n        return this.getUserDetailsUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    deleteUserDetailsUsingDELETEURL(parameters: {\n        'id': number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/user-details/{id}';\n\n        path = path.replace('{id}', parameters['id'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * deleteUserDetails\n     * @method\n     * @name API#deleteUserDetailsUsingDELETE\n     * @param {integer} id - id\n     */\n    deleteUserDetailsUsingDELETEWithHttpInfo(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/user-details/{id}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{id}', parameters['id'] + '');\n\n            if (parameters['id'] === undefined) {\n                reject(new Error('Missing required  parameter: id'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('DELETE', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * deleteUserDetails\n     * @method\n     * @name API#deleteUserDetailsUsingDELETE\n     * @param {integer} id - id\n     */\n    deleteUserDetailsUsingDELETE(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.deleteUserDetailsUsingDELETEWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getAllUserMailsUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/user-mails';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getAllUserMails\n     * @method\n     * @name API#getAllUserMailsUsingGET\n     */\n    getAllUserMailsUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/user-mails';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getAllUserMails\n     * @method\n     * @name API#getAllUserMailsUsingGET\n     */\n    getAllUserMailsUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < UserMailsDTO >\n        > {\n            return this.getAllUserMailsUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    getUsersUserMailsUsingGETURL(parameters: {\n        'login': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/user-mails/users/{login}';\n\n        path = path.replace('{login}', parameters['login'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getUsersUserMails\n     * @method\n     * @name API#getUsersUserMailsUsingGET\n     * @param {string} login - login\n     */\n    getUsersUserMailsUsingGETWithHttpInfo(parameters: {\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/user-mails/users/{login}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{login}', parameters['login'] + '');\n\n            if (parameters['login'] === undefined) {\n                reject(new Error('Missing required  parameter: login'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getUsersUserMails\n     * @method\n     * @name API#getUsersUserMailsUsingGET\n     * @param {string} login - login\n     */\n    getUsersUserMailsUsingGET(parameters: {\n            'login': string,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < UserMailsDTO >\n        > {\n            return this.getUsersUserMailsUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    deleteUserMailsUsingDELETEURL(parameters: {\n        'id': number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/user-mails/{id}';\n\n        path = path.replace('{id}', parameters['id'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * deleteUserMails\n     * @method\n     * @name API#deleteUserMailsUsingDELETE\n     * @param {integer} id - id\n     */\n    deleteUserMailsUsingDELETEWithHttpInfo(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/user-mails/{id}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{id}', parameters['id'] + '');\n\n            if (parameters['id'] === undefined) {\n                reject(new Error('Missing required  parameter: id'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('DELETE', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * deleteUserMails\n     * @method\n     * @name API#deleteUserMailsUsingDELETE\n     * @param {integer} id - id\n     */\n    deleteUserMailsUsingDELETE(parameters: {\n        'id': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.deleteUserMailsUsingDELETEWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getAllUsersUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/users';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getAllUsers\n     * @method\n     * @name API#getAllUsersUsingGET\n     */\n    getAllUsersUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/users';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getAllUsers\n     * @method\n     * @name API#getAllUsersUsingGET\n     */\n    getAllUsersUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < UserDTO >\n        > {\n            return this.getAllUsersUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    createUserUsingPOSTURL(parameters: {\n        'managedUserVm': ManagedUserVM,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/users';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * createUser\n     * @method\n     * @name API#createUserUsingPOST\n     * @param {} managedUserVm - managedUserVM\n     */\n    createUserUsingPOSTWithHttpInfo(parameters: {\n        'managedUserVm': ManagedUserVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/users';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['managedUserVm'] !== undefined) {\n                body = parameters['managedUserVm'];\n            }\n\n            if (parameters['managedUserVm'] === undefined) {\n                reject(new Error('Missing required  parameter: managedUserVm'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * createUser\n     * @method\n     * @name API#createUserUsingPOST\n     * @param {} managedUserVm - managedUserVM\n     */\n    createUserUsingPOST(parameters: {\n        'managedUserVm': ManagedUserVM,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < User > {\n        return this.createUserUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    updateUserUsingPUTURL(parameters: {\n        'sendEmail': boolean,\n        'unlinkUser': boolean,\n        'userDto': UserDTO,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/users';\n        if (parameters['sendEmail'] !== undefined) {\n            queryParameters['sendEmail'] = parameters['sendEmail'];\n        }\n\n        if (parameters['unlinkUser'] !== undefined) {\n            queryParameters['unlinkUser'] = parameters['unlinkUser'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * updateUser\n     * @method\n     * @name API#updateUserUsingPUT\n     * @param {boolean} sendEmail - sendEmail\n     * @param {boolean} unlinkUser - unlinkUser\n     * @param {} userDto - userDTO\n     */\n    updateUserUsingPUTWithHttpInfo(parameters: {\n        'sendEmail': boolean,\n        'unlinkUser': boolean,\n        'userDto': UserDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/users';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['sendEmail'] !== undefined) {\n                queryParameters['sendEmail'] = parameters['sendEmail'];\n            }\n\n            if (parameters['sendEmail'] === undefined) {\n                reject(new Error('Missing required  parameter: sendEmail'));\n                return;\n            }\n\n            if (parameters['unlinkUser'] !== undefined) {\n                queryParameters['unlinkUser'] = parameters['unlinkUser'];\n            }\n\n            if (parameters['unlinkUser'] === undefined) {\n                reject(new Error('Missing required  parameter: unlinkUser'));\n                return;\n            }\n\n            if (parameters['userDto'] !== undefined) {\n                body = parameters['userDto'];\n            }\n\n            if (parameters['userDto'] === undefined) {\n                reject(new Error('Missing required  parameter: userDto'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('PUT', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * updateUser\n     * @method\n     * @name API#updateUserUsingPUT\n     * @param {boolean} sendEmail - sendEmail\n     * @param {boolean} unlinkUser - unlinkUser\n     * @param {} userDto - userDTO\n     */\n    updateUserUsingPUT(parameters: {\n        'sendEmail': boolean,\n        'unlinkUser': boolean,\n        'userDto': UserDTO,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < UserDTO > {\n        return this.updateUserUsingPUTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getAuthoritiesUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/users/authorities';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getAuthorities\n     * @method\n     * @name API#getAuthoritiesUsingGET\n     */\n    getAuthoritiesUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/users/authorities';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getAuthorities\n     * @method\n     * @name API#getAuthoritiesUsingGET\n     */\n    getAuthoritiesUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < string >\n        > {\n            return this.getAuthoritiesUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    getNonCompanyUserEmailsUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/users/non-company-emails';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getNonCompanyUserEmails\n     * @method\n     * @name API#getNonCompanyUserEmailsUsingGET\n     */\n    getNonCompanyUserEmailsUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/users/non-company-emails';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getNonCompanyUserEmails\n     * @method\n     * @name API#getNonCompanyUserEmailsUsingGET\n     */\n    getNonCompanyUserEmailsUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < string >\n        > {\n            return this.getNonCompanyUserEmailsUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    getAllRegisteredUsersUsingGETURL(parameters: {\n        'offset' ? : number,\n        'page' ? : number,\n        'pageNumber' ? : number,\n        'pageSize' ? : number,\n        'paged' ? : boolean,\n        'size' ? : number,\n        'sort' ? : Array < string > ,\n            'sortSorted' ? : boolean,\n            'sortUnsorted' ? : boolean,\n            'unpaged' ? : boolean,\n            $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/users/registered';\n        if (parameters['offset'] !== undefined) {\n            queryParameters['offset'] = parameters['offset'];\n        }\n\n        if (parameters['page'] !== undefined) {\n            queryParameters['page'] = parameters['page'];\n        }\n\n        if (parameters['pageNumber'] !== undefined) {\n            queryParameters['pageNumber'] = parameters['pageNumber'];\n        }\n\n        if (parameters['pageSize'] !== undefined) {\n            queryParameters['pageSize'] = parameters['pageSize'];\n        }\n\n        if (parameters['paged'] !== undefined) {\n            queryParameters['paged'] = parameters['paged'];\n        }\n\n        if (parameters['size'] !== undefined) {\n            queryParameters['size'] = parameters['size'];\n        }\n\n        if (parameters['sort'] !== undefined) {\n            queryParameters['sort'] = parameters['sort'];\n        }\n\n        if (parameters['sortSorted'] !== undefined) {\n            queryParameters['sort.sorted'] = parameters['sortSorted'];\n        }\n\n        if (parameters['sortUnsorted'] !== undefined) {\n            queryParameters['sort.unsorted'] = parameters['sortUnsorted'];\n        }\n\n        if (parameters['unpaged'] !== undefined) {\n            queryParameters['unpaged'] = parameters['unpaged'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getAllRegisteredUsers\n     * @method\n     * @name API#getAllRegisteredUsersUsingGET\n     * @param {integer} offset - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {integer} page - Page number of the requested page\n     * @param {integer} pageNumber - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {integer} pageSize - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {boolean} paged - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {integer} size - Size of a page\n     * @param {array} sort - Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param {boolean} sortSorted - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {boolean} sortUnsorted - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {boolean} unpaged - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     */\n    getAllRegisteredUsersUsingGETWithHttpInfo(parameters: {\n        'offset' ? : number,\n        'page' ? : number,\n        'pageNumber' ? : number,\n        'pageSize' ? : number,\n        'paged' ? : boolean,\n        'size' ? : number,\n        'sort' ? : Array < string > ,\n            'sortSorted' ? : boolean,\n            'sortUnsorted' ? : boolean,\n            'unpaged' ? : boolean,\n            $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/users/registered';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            if (parameters['offset'] !== undefined) {\n                queryParameters['offset'] = parameters['offset'];\n            }\n\n            if (parameters['page'] !== undefined) {\n                queryParameters['page'] = parameters['page'];\n            }\n\n            if (parameters['pageNumber'] !== undefined) {\n                queryParameters['pageNumber'] = parameters['pageNumber'];\n            }\n\n            if (parameters['pageSize'] !== undefined) {\n                queryParameters['pageSize'] = parameters['pageSize'];\n            }\n\n            if (parameters['paged'] !== undefined) {\n                queryParameters['paged'] = parameters['paged'];\n            }\n\n            if (parameters['size'] !== undefined) {\n                queryParameters['size'] = parameters['size'];\n            }\n\n            if (parameters['sort'] !== undefined) {\n                queryParameters['sort'] = parameters['sort'];\n            }\n\n            if (parameters['sortSorted'] !== undefined) {\n                queryParameters['sort.sorted'] = parameters['sortSorted'];\n            }\n\n            if (parameters['sortUnsorted'] !== undefined) {\n                queryParameters['sort.unsorted'] = parameters['sortUnsorted'];\n            }\n\n            if (parameters['unpaged'] !== undefined) {\n                queryParameters['unpaged'] = parameters['unpaged'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getAllRegisteredUsers\n     * @method\n     * @name API#getAllRegisteredUsersUsingGET\n     * @param {integer} offset - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {integer} page - Page number of the requested page\n     * @param {integer} pageNumber - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {integer} pageSize - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {boolean} paged - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {integer} size - Size of a page\n     * @param {array} sort - Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param {boolean} sortSorted - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {boolean} sortUnsorted - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     * @param {boolean} unpaged - OncoKB™ is a precision oncology knowledge base developed at Memorial Sloan Kettering Cancer Center that contains biological and clinical information about genomic alterations in cancer.\n     */\n    getAllRegisteredUsersUsingGET(parameters: {\n            'offset' ? : number,\n            'page' ? : number,\n            'pageNumber' ? : number,\n            'pageSize' ? : number,\n            'paged' ? : boolean,\n            'size' ? : number,\n            'sort' ? : Array < string > ,\n                'sortSorted' ? : boolean,\n                'sortUnsorted' ? : boolean,\n                'unpaged' ? : boolean,\n                $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < UserDTO >\n        > {\n            return this.getAllRegisteredUsersUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    getUsersTokensUsingPOSTURL(parameters: {\n        'logins': Array < string > ,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/users/tokens';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getUsersTokens\n     * @method\n     * @name API#getUsersTokensUsingPOST\n     * @param {} logins - logins\n     */\n    getUsersTokensUsingPOSTWithHttpInfo(parameters: {\n        'logins': Array < string > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/users/tokens';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['logins'] !== undefined) {\n                body = parameters['logins'];\n            }\n\n            if (parameters['logins'] === undefined) {\n                reject(new Error('Missing required  parameter: logins'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getUsersTokens\n     * @method\n     * @name API#getUsersTokensUsingPOST\n     * @param {} logins - logins\n     */\n    getUsersTokensUsingPOST(parameters: {\n            'logins': Array < string > ,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < Token >\n        > {\n            return this.getUsersTokensUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    getUserUsingGETURL(parameters: {\n        'login': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/users/{login}';\n\n        path = path.replace('{login}', parameters['login'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getUser\n     * @method\n     * @name API#getUserUsingGET\n     * @param {string} login - login\n     */\n    getUserUsingGETWithHttpInfo(parameters: {\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/users/{login}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{login}', parameters['login'] + '');\n\n            if (parameters['login'] === undefined) {\n                reject(new Error('Missing required  parameter: login'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getUser\n     * @method\n     * @name API#getUserUsingGET\n     * @param {string} login - login\n     */\n    getUserUsingGET(parameters: {\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < UserDTO > {\n        return this.getUserUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    deleteUserUsingDELETEURL(parameters: {\n        'login': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/users/{login}';\n\n        path = path.replace('{login}', parameters['login'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * deleteUser\n     * @method\n     * @name API#deleteUserUsingDELETE\n     * @param {string} login - login\n     */\n    deleteUserUsingDELETEWithHttpInfo(parameters: {\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/users/{login}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{login}', parameters['login'] + '');\n\n            if (parameters['login'] === undefined) {\n                reject(new Error('Missing required  parameter: login'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('DELETE', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * deleteUser\n     * @method\n     * @name API#deleteUserUsingDELETE\n     * @param {string} login - login\n     */\n    deleteUserUsingDELETE(parameters: {\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.deleteUserUsingDELETEWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    getUserTokensUsingGETURL(parameters: {\n        'login': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/api/users/{login}/tokens';\n\n        path = path.replace('{login}', parameters['login'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * getUserTokens\n     * @method\n     * @name API#getUserTokensUsingGET\n     * @param {string} login - login\n     */\n    getUserTokensUsingGETWithHttpInfo(parameters: {\n        'login': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/api/users/{login}/tokens';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = '*/*';\n\n            path = path.replace('{login}', parameters['login'] + '');\n\n            if (parameters['login'] === undefined) {\n                reject(new Error('Missing required  parameter: login'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * getUserTokens\n     * @method\n     * @name API#getUserTokensUsingGET\n     * @param {string} login - login\n     */\n    getUserTokensUsingGET(parameters: {\n            'login': string,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < Token >\n        > {\n            return this.getUserTokensUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n}","import { toast } from 'react-toastify';\nimport _ from 'lodash';\nimport { OncoKBError } from 'app/shared/alert/ErrorAlertUtils';\n\nconst getFormattedMessage = (message: string) => {\n  return _.upperFirst(message);\n};\nconst getErrorMessage = (error: OncoKBError, additionalInfo?: string) => {\n  const content: string[] = [];\n  if (additionalInfo) {\n    content.push(additionalInfo);\n  }\n  if (error.response?.body) {\n    if (error.response.body.title) {\n      content.push(error.response.body.title);\n    }\n    if (error.response.body.message) {\n      content.push(error.response.body.message);\n    }\n  } else {\n    content.push(error.message);\n  }\n  return content.map(item => getFormattedMessage(item)).join('\\n');\n};\n\nexport const notifyInfo = (message: string) => {\n  return toast.info(getFormattedMessage(message), {\n    className: 'bg-primary',\n  });\n};\n\nexport const notifySuccess = (message: string) => {\n  return toast.success(getFormattedMessage(message), {\n    className: 'bg-success',\n  });\n};\nexport const notifyWarning = (error: OncoKBError, additionalInfo?: string) => {\n  return toast.warn(getErrorMessage(error, additionalInfo), {\n    className: 'bg-warning',\n  });\n};\nexport const notifyError = (\n  error: Error | OncoKBError,\n  additionalInfo?: string\n) => {\n  return toast.error(getErrorMessage(error, additionalInfo), {\n    className: 'bg-danger',\n  });\n};\n","import * as XRegExp from 'xregexp';\nimport _ from 'lodash';\nimport client from '../api/clientInstance';\nimport { VerifyCompanyNameVM } from '../api/generated/API';\nimport { notifyError } from './NotificationUtils';\nimport pluralize from 'pluralize';\n\nexport const XREGEXP_VALID_LATIN_TEXT = '^[\\\\p{Latin}\\\\p{Common}\\\\s]+$';\n\nconst LATIN_TEXT_PATTER = {\n  value: XRegExp(XREGEXP_VALID_LATIN_TEXT),\n  errorMessage: 'Sorry, we only support Latin letters for now.',\n};\n\n/**\n * Check whether the company name is already in use every 500ms.\n */\nexport const debouncedCompanyNameValidator = _.debounce(\n  (\n    value: string,\n    ctx: any,\n    input: any,\n    cb: (isValid: boolean | string) => void,\n    companyId?: number\n  ) => {\n    // Don't run the validator if empty string or not latin chars\n    if (value.trim() === '' || !XRegExp(XREGEXP_VALID_LATIN_TEXT).test(value)) {\n      cb(false);\n      return;\n    }\n    const info = { name: value.trim(), companyId } as Partial<\n      VerifyCompanyNameVM\n    >;\n    client\n      .verifyCompanyNameUsingPOST({\n        verificationInfo: info as VerifyCompanyNameVM,\n      })\n      .then(isValid => {\n        isValid ? cb(true) : cb('Company name in use!');\n      })\n      .catch((error: any) => {\n        cb(false);\n        notifyError(error, 'Error finding company with name');\n      });\n  },\n  500\n);\n\nexport const textValidation = (minLength?: number, maxLength?: number) => {\n  const validation = {\n    pattern: LATIN_TEXT_PATTER,\n  } as any;\n  if (minLength) {\n    validation.minLength = {\n      value: minLength,\n      errorMessage: `Required to be at least ${pluralize(\n        'character',\n        minLength,\n        true\n      )}`,\n    };\n  }\n  if (maxLength) {\n    validation.maxLength = {\n      value: maxLength,\n      errorMessage: `Cannot be longer than ${pluralize(\n        'character',\n        maxLength,\n        true\n      )}`,\n    };\n  }\n  return validation;\n};\n\nexport const TEXT_VAL = textValidation(2, 255);\n\nexport const SHORT_TEXT_VAL = textValidation(2, 50);\n\nexport const EMAIL_VAL = {\n  required: {\n    value: true,\n    errorMessage: 'Your email is required.',\n  },\n  minLength: {\n    value: 5,\n    errorMessage: 'Your email is required to be at least 5 characters.',\n  },\n  maxLength: {\n    value: 254,\n    errorMessage: 'Your email cannot be longer than 50 characters.',\n  },\n};\n\nexport const fieldRequiredValidation = (fieldName: string) => {\n  return {\n    required: {\n      value: true,\n      errorMessage: `The ${fieldName} is required.`,\n    },\n  };\n};\n","import React from 'react';\nimport { AvField, AvForm } from 'availity-reactstrap-validation';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport {\n  Annotation,\n  Feedback,\n  FeedbackType,\n} from 'app/components/feedback/types';\nimport { EMAIL_VAL, TEXT_VAL } from 'app/shared/utils/FormValidationUtils';\n\nexport type FeedbackFormProps = Feedback & {\n  onSubmit: (value: Feedback) => void;\n};\n\nexport function getAnnotationString(annotation?: Annotation) {\n  if (annotation === undefined) {\n    return '';\n  } else if (typeof annotation === 'string') {\n    return annotation;\n  }\n  const content = [\n    annotation.gene,\n    annotation.alteration,\n    annotation.cancerType,\n  ].filter(item => !!item);\n  return content.join(' / ');\n}\n\nexport const FeedbackForm: React.FunctionComponent<FeedbackFormProps> = props => {\n  const defaultModel = {\n    gene: props.annotation ? props.annotation.gene : '',\n    alteration: props.annotation ? props.annotation.alteration : '',\n    cancerType: props.annotation ? props.annotation.cancerType : '',\n    description: props.description,\n    email: props.email,\n    name: props.name,\n  };\n\n  function onSubmit(event: any, values: Feedback) {\n    props.onSubmit(values);\n  }\n\n  return (\n    <AvForm onValidSubmit={onSubmit} model={defaultModel}>\n      <Row className={'mt-2'}>\n        <Col>\n          {props.annotation ? (\n            <>\n              <AvField\n                name=\"gene\"\n                label={'Gene'}\n                type=\"input\"\n                validate={{\n                  required: {\n                    value: true,\n                    errorMessage: 'Required',\n                  },\n                }}\n              />\n              <AvField name=\"alteration\" label={'Alteration'} type=\"input\" />\n              <AvField name=\"cancerType\" label={'Cancer Type'} type=\"input\" />\n            </>\n          ) : null}\n          <AvField\n            name=\"description\"\n            label={\n              props.type === FeedbackType.ANNOTATION\n                ? 'Justification (including references)'\n                : 'Description'\n            }\n            type=\"textarea\"\n            validate={{\n              required: {\n                value: true,\n                errorMessage: 'Required',\n              },\n            }}\n          />\n          <AvField\n            name=\"email\"\n            label={'Email'}\n            type=\"email\"\n            validate={EMAIL_VAL}\n          />\n          <AvField\n            name=\"name\"\n            label={'Name'}\n            type=\"input\"\n            validate={{\n              required: {\n                value: true,\n                errorMessage: 'Your name is required.',\n              },\n              ...TEXT_VAL,\n            }}\n          />\n          <div>\n            Please try to provide your information so we can get back to you\n            when the suggestion is incorporated.\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button id=\"submit-suggestion\" variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Col>\n      </Row>\n    </AvForm>\n  );\n};\n","import React from 'react';\nimport {\n  levelOfEvidence2Level,\n  OncoKBAnnotationIcon,\n} from 'app/shared/utils/Utils';\nimport { Else, If, Then } from 'react-if';\nimport Highlighter from 'react-highlight-words';\nimport styles from './SearchOption.module.scss';\nimport { ExtendedTypeaheadSearchResp } from 'app/pages/HomePage';\nimport classnames from 'classnames';\nimport AppStore from 'app/store/AppStore';\nimport { FeedbackIcon } from 'app/components/feedback/FeedbackIcon';\nimport { FeedbackType } from 'app/components/feedback/types';\nimport {LEVEL_PRIORITY_BY_TYPE, ONCOKB_TM} from 'app/config/constants';\nimport { Alteration } from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport {sortByLevel, sortByLevelWithLevels} from \"app/shared/utils/ReactTableUtils\";\nimport WithSeparator from \"react-with-separator\";\n\nexport enum SearchOptionType {\n  GENE = 'GENE',\n  VARIANT = 'VARIANT',\n  DRUG = 'DRUG',\n  GENOMIC = 'GENOMIC',\n  CANCER_TYPE = 'CANCER_TYPE',\n  TEXT = 'TEXT',\n}\ntype SearchOptionProps = {\n  search: string | undefined;\n  type: SearchOptionType;\n  data: ExtendedTypeaheadSearchResp;\n  appStore: AppStore;\n};\nconst LevelString: React.FunctionComponent<{\n  level: string;\n}> = props => {\n  const level = levelOfEvidence2Level(props.level)\n  return (\n    <>\n      <span\n        className={`oncokb level-${level} text-nowrap`}\n      >\n          Level {level}\n        </span>\n    </>\n  );\n};\nconst GeneSearchOption: React.FunctionComponent<{\n  search: string;\n  data: ExtendedTypeaheadSearchResp;\n}> = props => {\n  return (\n    <>\n      <div className={'d-flex'}>\n        <Highlighter\n          searchWords={[props.search]}\n          textToHighlight={`${props.data.gene.hugoSymbol} (Entrez Gene: ${props.data.gene.entrezGeneId})`}\n        />\n        {props.data.highestSensitiveLevel ||\n        props.data.highestResistanceLevel ? (\n          <span className={classnames(styles.subTitle, 'ml-2')}>\n            <span className={'mr-2'}>Highest level of evidence:</span>\n            <WithSeparator separator={' '}>\n              {props.data.highestSensitiveLevel && (\n                <LevelString\n                  level={props.data.highestSensitiveLevel}\n                />\n              )}\n              {props.data.highestResistanceLevel && (\n                <LevelString\n                  level={props.data.highestResistanceLevel}\n                />\n              )}\n            </WithSeparator>\n          </span>\n        ) : undefined}\n      </div>\n      {props.data.gene.geneAliases.length > 0 ? (\n        <i>\n          <div className={styles.subTitle}>\n            <span>Also known as </span>\n            <Highlighter\n              searchWords={[props.search]}\n              textToHighlight={`${props.data.gene.geneAliases.join(', ')}`}\n            />\n          </div>\n        </i>\n      ) : undefined}\n    </>\n  );\n};\n\nconst AlterationSearchOption: React.FunctionComponent<{\n  search: string;\n  data: ExtendedTypeaheadSearchResp;\n  appStore: AppStore;\n}> = props => {\n  return (\n    <>\n      <div className={'d-flex align-items-center'}>\n        <Highlighter\n          textToHighlight={props.data.gene.hugoSymbol}\n          searchWords={[props.search]}\n        />{' '}\n        /\n        <Highlighter\n          textToHighlight={props.data.alterationsName}\n          searchWords={[props.search]}\n        />\n        <OncoKBAnnotationIcon\n          className={'mb-1 ml-1'}\n          oncogenicity={props.data.oncogenicity}\n          vus={props.data.vus}\n          sensitiveLevel={props.data.highestSensitiveLevel}\n          resistanceLevel={props.data.highestResistanceLevel}\n        />\n        <If condition={!props.data.variantExist}>\n          <span className={'ml-auto'}>\n            <span>Not annotated by {ONCOKB_TM}</span>\n            <FeedbackIcon\n              feedback={{\n                type: FeedbackType.ANNOTATION,\n                annotation: {\n                  gene: props.search,\n                },\n              }}\n              appStore={props.appStore}\n            />\n          </span>\n        </If>\n      </div>\n      {props.data.annotation ? (\n        <div className={styles.subTitle}>\n          <span>{props.data.annotation}</span>\n        </div>\n      ) : undefined}\n    </>\n  );\n};\nconst GenomicSearchOption: React.FunctionComponent<{\n  search: string;\n  data: ExtendedTypeaheadSearchResp;\n  appStore: AppStore;\n}> = props => {\n  return (\n    <>\n      <div className={'d-flex align-items-center'}>\n        Query is annotated as {props.data.gene.hugoSymbol} /{' '}\n        {props.data.alterationsName}\n        <OncoKBAnnotationIcon\n          className={'mb-1 ml-1'}\n          oncogenicity={props.data.oncogenicity}\n          vus={props.data.vus}\n          sensitiveLevel={props.data.highestSensitiveLevel}\n          resistanceLevel={props.data.highestResistanceLevel}\n        />\n      </div>\n      {props.data.annotation ? (\n        <div className={styles.subTitle}>\n          <span>{props.data.annotation}</span>\n        </div>\n      ) : undefined}\n    </>\n  );\n};\n\nconst DrugSearchOption: React.FunctionComponent<{\n  search: string;\n  data: ExtendedTypeaheadSearchResp;\n}> = props => {\n  return (\n    <>\n      <div>\n        <Highlighter\n          searchWords={[props.search]}\n          textToHighlight={props.data.drug.drugName}\n        />\n      </div>\n      <div className={styles.subTitle}>\n        {props.data.highestSensitiveLevel && (\n          <LevelString\n            level={props.data.highestSensitiveLevel}\n          />\n        )}\n        {props.data.highestResistanceLevel && (\n          <LevelString\n            level={props.data.highestResistanceLevel}\n          />\n        )} :{' '}\n        {` ${props.data.gene.hugoSymbol} `}\n        {props.data.variants.length > 1\n          ? `(${props.data.alterationsName})`\n          : ''}\n        {props.data.variants.length === 1 ? props.data.alterationsName : ''}\n        {` ${props.data.tumorTypesName}`}\n      </div>\n    </>\n  );\n};\n\nconst CancerTypeSearchOption: React.FunctionComponent<{\n  search: string;\n  data: ExtendedTypeaheadSearchResp;\n}> = props => {\n  const groupAlterationsByGene = (alterations: Alteration[]) => {\n    const groupedAlterations: { [key: string]: string[] } = {};\n    alterations.forEach(alteration => {\n      const gene = alteration.gene.hugoSymbol;\n      if (!groupedAlterations[gene]) {\n        groupedAlterations[gene] = [];\n      }\n      // Check for parentheses in the alteration name\n      const alterationName = alteration.name.replace(/[()]/g, '').trim();\n      groupedAlterations[gene].push(alterationName);\n    });\n    return groupedAlterations;\n  };\n\n  const renderAlterations = (alterationsByGene: {\n    [key: string]: string[];\n  }) => {\n    const maxElementsToDisplay = 3;\n    const geneKeys = Object.keys(alterationsByGene);\n    // TODO detect key of other biomarkers and change accordingly\n    const totalGenes = geneKeys.length;\n    const genesToDisplay = Math.min(maxElementsToDisplay, totalGenes);\n    // displaying 3 genes\n    return geneKeys.slice(0, genesToDisplay).map((gene, index) => {\n      const geneAlterations = alterationsByGene[gene];\n      const showAndMore = geneAlterations.length > maxElementsToDisplay;\n\n      const displayAlterations = showAndMore\n        ? geneAlterations.slice(0, maxElementsToDisplay).join(', ') +\n          ', and ' +\n          (geneAlterations.length - maxElementsToDisplay).toString() +\n          ' other alterations'\n        : geneAlterations.join(', ');\n\n      const separator = index < genesToDisplay - 1 ? ', ' : '';\n\n      return (\n        <span key={index}>\n          {gene !== 'Other Biomarkers' ? (\n            <>\n              {gene} ({displayAlterations})\n            </>\n          ) : (\n            <>{displayAlterations}</>\n          )}\n          {separator}\n          {totalGenes > maxElementsToDisplay && index === genesToDisplay - 1\n            ? ', and more'\n            : ''}\n        </span>\n      );\n    });\n  };\n\n  return (\n    <>\n      <div>\n        <Highlighter\n          searchWords={[props.search]}\n          textToHighlight={props.data.tumorTypesName}\n        />\n      </div>\n      {props.data.annotationByLevel !== null ? (\n        <div>\n          {Object.keys(props.data.annotationByLevel)\n            .sort((a, b) => sortByLevelWithLevels(a, b, LEVEL_PRIORITY_BY_TYPE))\n            .map(\n              (level) => {\n                const annotation = props.data.annotationByLevel[level]\n                return (\n                  <div className={styles.subTitle} key={`${props.data.tumorTypesName}-${level}`}>\n                    <LevelString\n                      level={level}\n                    />\n                    : {annotation}\n                  </div>\n                )\n              }\n            )}\n        </div>\n      ) : (\n        <div>No evidence found.</div>\n      )}\n    </>\n  );\n};\n\nexport const SearchOption: React.FunctionComponent<SearchOptionProps> = props => {\n  const searchKeyword = props.search ? props.search : '';\n  return (\n    <div className={classnames(styles.match)}>\n      <If condition={props.type === SearchOptionType.GENE}>\n        <Then>\n          <GeneSearchOption search={searchKeyword} data={props.data} />\n        </Then>\n        <Else>\n          <If condition={props.type === SearchOptionType.VARIANT}>\n            <Then>\n              <AlterationSearchOption\n                search={searchKeyword}\n                data={props.data}\n                appStore={props.appStore}\n              />\n            </Then>\n            <Else>\n              <If condition={props.type === SearchOptionType.DRUG}>\n                <Then>\n                  <DrugSearchOption search={searchKeyword} data={props.data} />\n                </Then>\n                <Else>\n                  <If condition={props.type === SearchOptionType.GENOMIC}>\n                    <Then>\n                      <GenomicSearchOption\n                        search={searchKeyword}\n                        data={props.data}\n                        appStore={props.appStore}\n                      />\n                    </Then>\n                    <Else>\n                      <If condition={props.type === SearchOptionType.CANCER_TYPE}>\n                        <Then>\n                          <CancerTypeSearchOption\n                            search={searchKeyword}\n                            data={props.data}\n                          />\n                        </Then>\n                        <Else>\n                          <If condition={props.type === SearchOptionType.TEXT}>\n                            <Then>\n                              <span>{props.data.annotation}</span>\n                            </Then>\n                          </If>\n                        </Else>\n                      </If>\n                    </Else>\n                  </If>\n                </Else>\n              </If>\n            </Else>\n          </If>\n        </Else>\n      </If>\n    </div>\n  );\n};\n","import React from 'react';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport AppStore from 'app/store/AppStore';\nimport { getAnnotationString } from 'app/components/feedback/FeedbackForm';\nimport { Feedback, FeedbackType } from 'app/components/feedback/types';\nimport { ONCOKB_TM } from 'app/config/constants';\n\nexport const FeedbackIcon = (props: {\n  feedback: Feedback;\n  appStore: AppStore;\n}) => {\n  let tooltipOverlay = '';\n  switch (props.feedback.type) {\n    case FeedbackType.ANNOTATION:\n      tooltipOverlay = `Send annotation suggestion for ${getAnnotationString(\n        props.feedback.annotation\n      )} to ${ONCOKB_TM}`;\n      break;\n    case FeedbackType.GENERAL:\n      tooltipOverlay = `Send feedback to ${ONCOKB_TM}`;\n      break;\n    default:\n      break;\n  }\n\n  function onClick() {\n    props.appStore.showFeedbackFormModal = true;\n    props.appStore.feedbackAnnotation = props.feedback;\n  }\n\n  return (\n    <>\n      <DefaultTooltip overlay={tooltipOverlay}>\n        <i\n          className=\"fa fa-envelope-o\"\n          aria-hidden=\"true\"\n          onClick={onClick}\n          style={{ cursor: 'pointer' }}\n        />\n      </DefaultTooltip>\n    </>\n  );\n};\n","export enum AppProfile {\n  PROD = 'PROD',\n  DEV = 'DEV',\n}\n\ntype ServerConfig = {\n  appProfile: AppProfile;\n  token: string;\n  googleAnalyticsProjectId: string;\n  sentryProjectId: string;\n  readonly: boolean;\n  enableAuth: boolean;\n  recaptchaProjectId: string;\n  recaptchaSiteKey: string;\n  recaptchaThreshold: string;\n};\n\ninterface IAppConfig {\n  serverConfig: ServerConfig;\n}\n\nexport const AppConfig: IAppConfig = {\n  serverConfig: (window as any).serverConfig || {},\n};\n","import OncoKbPrivateAPI from './generated/OncoKbPrivateAPI';\nimport { getClientInstanceURL } from '../utils/DevUtils';\n\nconst privateClient = new OncoKbPrivateAPI(getClientInstanceURL('api/private'));\n\nexport default privateClient;\n","import * as request from \"superagent\";\n\ntype CallbackHandler = (err: any, res ? : request.Response) => void;\nexport type AnnotateMutationByGenomicChangeQuery = {\n    'evidenceTypes': Array < \"GENE_SUMMARY\" | \"MUTATION_SUMMARY\" | \"TUMOR_TYPE_SUMMARY\" | \"GENE_TUMOR_TYPE_SUMMARY\" | \"PROGNOSTIC_SUMMARY\" | \"DIAGNOSTIC_SUMMARY\" | \"GENE_BACKGROUND\" | \"ONCOGENIC\" | \"MUTATION_EFFECT\" | \"VUS\" | \"PROGNOSTIC_IMPLICATION\" | \"DIAGNOSTIC_IMPLICATION\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\" >\n\n        'genomicLocation': string\n\n        'id': string\n\n        'referenceGenome': \"GRCh37\" | \"GRCh38\"\n\n        'tumorType': string\n\n};\nexport type UntranslatedRegion = {\n    'end': number\n\n        'start': number\n\n        'strand': number\n\n        'type': string\n\n};\nexport type TreatmentDrug = {\n    'priority': number\n\n        'treatmentDrugId': TreatmentDrugId\n\n};\nexport type Query = {\n    'alteration': string\n\n        'alterationType': string\n\n        'consequence': string\n\n        'entrezGeneId': number\n\n        'hgvs': string\n\n        'hugoSymbol': string\n\n        'id': string\n\n        'proteinEnd': number\n\n        'proteinStart': number\n\n        'referenceGenome': \"GRCh37\" | \"GRCh38\"\n\n        'svType': \"DELETION\" | \"TRANSLOCATION\" | \"DUPLICATION\" | \"INSERTION\" | \"INVERSION\" | \"FUSION\" | \"UNKNOWN\"\n\n        'tumorType': string\n\n};\nexport type MatchVariant = {\n    'alteration': string\n\n        'hugoSymbol': string\n\n};\nexport type Article = {\n    'abstract': string\n\n        'authors': string\n\n        'elocationId': string\n\n        'issue': string\n\n        'journal': string\n\n        'link': string\n\n        'pages': string\n\n        'pmid': string\n\n        'pubDate': string\n\n        'reference': string\n\n        'title': string\n\n        'volume': string\n\n};\nexport type Alteration = {\n    'alteration': string\n\n        'consequence': VariantConsequence\n\n        'gene': Gene\n\n        'name': string\n\n        'proteinEnd': number\n\n        'proteinStart': number\n\n        'refResidues': string\n\n        'referenceGenomes': Array < \"GRCh37\" | \"GRCh38\" >\n\n        'variantResidues': string\n\n};\nexport type DownloadAvailability = {\n    'hasAllActionableVariants': boolean\n\n        'hasAllAnnotatedVariants': boolean\n\n        'hasAllCuratedGenes': boolean\n\n        'hasCancerGeneList': boolean\n\n        'hasReadme': boolean\n\n        'hasSqlDump': boolean\n\n        'version': string\n\n};\nexport type MainNumber = {\n    'alteration': number\n\n        'drug': number\n\n        'gene': number\n\n        'level': Array < MainNumberLevel >\n\n        'tumorType': number\n\n};\nexport type CancerTypeCount = {\n    'cancerType': string\n\n        'count': number\n\n};\nexport type VariantAnnotation = {\n    'alleleExist': boolean\n\n        'background': string\n\n        'dataVersion': string\n\n        'diagnosticImplications': Array < Implication >\n\n        'diagnosticSummary': string\n\n        'geneExist': boolean\n\n        'geneSummary': string\n\n        'highestDiagnosticImplicationLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'highestFdaLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'highestPrognosticImplicationLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'highestResistanceLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'highestSensitiveLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'hotspot': boolean\n\n        'lastUpdate': string\n\n        'mutationEffect': MutationEffectResp\n\n        'oncogenic': string\n\n        'otherSignificantResistanceLevels': Array < \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\" >\n\n        'otherSignificantSensitiveLevels': Array < \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\" >\n\n        'prognosticImplications': Array < Implication >\n\n        'prognosticSummary': string\n\n        'query': Query\n\n        'treatments': Array < IndicatorQueryTreatment >\n\n        'tumorTypeSummary': string\n\n        'tumorTypes': Array < VariantAnnotationTumorType >\n\n        'variantExist': boolean\n\n        'variantSummary': string\n\n        'vue': boolean\n\n        'vus': boolean\n\n};\nexport type AnnotatedVariant = {\n    'entrezGeneId': number\n\n        'gene': string\n\n        'grch37Isoform': string\n\n        'grch37RefSeq': string\n\n        'grch38Isoform': string\n\n        'grch38RefSeq': string\n\n        'mutationEffect': string\n\n        'mutationEffectAbstracts': string\n\n        'mutationEffectPmids': string\n\n        'oncogenicity': string\n\n        'proteinChange': string\n\n        'referenceGenome': string\n\n        'variant': string\n\n};\nexport type Implication = {\n    'abstracts': Array < ArticleAbstract >\n\n        'alterations': Array < string >\n\n        'description': string\n\n        'levelOfEvidence': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'pmids': Array < string >\n\n        'tumorType': TumorType\n\n};\nexport type MainNumberLevel = {\n    'level': string\n\n        'number': number\n\n};\nexport type LevelNumber = {\n    'genes': Array < Gene >\n\n        'level': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n};\nexport type Exon = {\n    'exonEnd': number\n\n        'exonId': string\n\n        'exonStart': number\n\n        'rank': number\n\n        'strand': number\n\n        'version': number\n\n};\nexport type Gene = {\n    'entrezGeneId': number\n\n        'geneAliases': Array < string >\n\n        'genesets': Array < Geneset >\n\n        'grch37Isoform': string\n\n        'grch37RefSeq': string\n\n        'grch38Isoform': string\n\n        'grch38RefSeq': string\n\n        'hugoSymbol': string\n\n        'oncogene': boolean\n\n        'tsg': boolean\n\n};\nexport type TumorType = {\n    'code': string\n\n        'color': string\n\n        'id': number\n\n        'level': number\n\n        'mainType': string\n\n        'subtype': string\n\n        'tissue': string\n\n        'tumorForm': \"SOLID\" | \"LIQUID\" | \"MIXED\"\n\n};\nexport type ClinicalVariant = {\n    'cancerTypes': Array < TumorType >\n\n        'drug': Array < string >\n\n        'drugAbstracts': Array < ArticleAbstract >\n\n        'drugDescription': string\n\n        'drugPmids': Array < string >\n\n        'excludedCancerTypes': Array < TumorType >\n\n        'fdaLevel': string\n\n        'level': string\n\n        'oncogenic': string\n\n        'variant': Alteration\n\n};\nexport type PortalAlteration = {\n    'alterationType': string\n\n        'cancerStudy': string\n\n        'cancerType': string\n\n        'gene': Gene\n\n        'proteinChange': string\n\n        'proteinEndPosition': number\n\n        'proteinStartPosition': number\n\n        'sampleId': string\n\n};\nexport type EnsemblTranscript = {\n    'ccdsId': string\n\n        'exons': Array < Exon >\n\n        'geneId': string\n\n        'hugoSymbols': Array < string >\n\n        'pfamDomains': Array < PfamDomainRange >\n\n        'proteinId': string\n\n        'proteinLength': number\n\n        'refseqMrnaId': string\n\n        'transcriptId': string\n\n        'uniprotId': string\n\n        'utrs': Array < UntranslatedRegion >\n\n};\nexport type TreatmentDrugId = {\n    'drug': Drug\n\n};\nexport type MatchVariantResult = {\n    'query': Query\n\n        'result': Array < MatchVariant >\n\n};\nexport type Evidence = {\n    'additionalInfo': string\n\n        'alterations': Array < Alteration >\n\n        'articles': Array < Article >\n\n        'cancerTypes': Array < TumorType >\n\n        'description': string\n\n        'evidenceType': \"GENE_SUMMARY\" | \"MUTATION_SUMMARY\" | \"TUMOR_TYPE_SUMMARY\" | \"GENE_TUMOR_TYPE_SUMMARY\" | \"PROGNOSTIC_SUMMARY\" | \"DIAGNOSTIC_SUMMARY\" | \"GENE_BACKGROUND\" | \"ONCOGENIC\" | \"MUTATION_EFFECT\" | \"VUS\" | \"PROGNOSTIC_IMPLICATION\" | \"DIAGNOSTIC_IMPLICATION\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\"\n\n        'excludedCancerTypes': Array < TumorType >\n\n        'fdaLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'gene': Gene\n\n        'id': number\n\n        'knownEffect': string\n\n        'lastEdit': string\n\n        'lastReview': string\n\n        'levelOfEvidence': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'liquidPropagationLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'relevantCancerTypes': Array < TumorType >\n\n        'solidPropagationLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'treatments': Array < Treatment >\n\n        'uuid': string\n\n};\nexport type GenomeNexusAnnotatedVariantInfo = {\n    'consequenceTerms': string\n\n        'entrezGeneId': number\n\n        'genomicLocation': string\n\n        'hgvsg': string\n\n        'hgvspShort': string\n\n        'hugoSymbol': string\n\n        'originalVariantQuery': string\n\n        'proteinEnd': number\n\n        'proteinStart': number\n\n        'referenceGenome': \"GRCh37\" | \"GRCh38\"\n\n};\nexport type TypeaheadSearchResp = {\n    'annotation': string\n\n        'annotationByLevel': {}\n\n        'drug': Drug\n\n        'gene': Gene\n\n        'highestResistanceLevel': string\n\n        'highestSensitiveLevel': string\n\n        'link': string\n\n        'oncogenicity': string\n\n        'queryType': \"GENE\" | \"VARIANT\" | \"DRUG\" | \"TEXT\" | \"GENOMIC\" | \"CANCER_TYPE\"\n\n        'tumorTypes': Array < TumorType >\n\n        'variantExist': boolean\n\n        'variants': Array < Alteration >\n\n        'vus': boolean\n\n};\nexport type VariantAnnotationTumorType = {\n    'evidences': Array < Evidence >\n\n        'relevantTumorType': boolean\n\n        'tumorType': TumorType\n\n};\nexport type ArticleAbstract = {\n    'abstract': string\n\n        'link': string\n\n};\nexport type Drug = {\n    'drugName': string\n\n        'ncitCode': string\n\n        'synonyms': Array < string >\n\n        'uuid': string\n\n};\nexport type RelevantCancerTypeQuery = {\n    'code': string\n\n        'mainType': string\n\n};\nexport type TranscriptResult = {\n    'grch37Transcript': EnsemblTranscript\n\n        'grch38Transcript': EnsemblTranscript\n\n        'note': string\n\n};\nexport type MatchVariantRequest = {\n    'oncokbVariants': Array < MatchVariant >\n\n        'queries': Array < Query >\n\n};\nexport type MainType = {\n    'id': number\n\n        'name': string\n\n        'tumorForm': \"SOLID\" | \"LIQUID\" | \"MIXED\"\n\n};\nexport type VariantConsequence = {\n    'description': string\n\n        'isGenerallyTruncating': boolean\n\n        'term': string\n\n};\nexport type TranscriptCoverageFilterResult = {\n    'isCovered': boolean\n\n        'variant': string\n\n};\nexport type EnsemblGene = {\n    'canonical': boolean\n\n        'chromosome': string\n\n        'end': number\n\n        'ensemblGeneId': string\n\n        'referenceGenome': string\n\n        'start': number\n\n        'strand': number\n\n};\nexport type GeneNumber = {\n    'alteration': number\n\n        'gene': Gene\n\n        'highestDiagnosticImplicationLevel': string\n\n        'highestFdaLevel': string\n\n        'highestPrognosticImplicationLevel': string\n\n        'highestResistanceLevel': string\n\n        'highestSensitiveLevel': string\n\n        'tumorType': number\n\n};\nexport type PfamDomainRange = {\n    'pfamDomainEnd': number\n\n        'pfamDomainId': string\n\n        'pfamDomainStart': number\n\n};\nexport type DrugSynonym = {\n    'drug': Drug\n\n        'id': number\n\n        'name': string\n\n};\nexport type IndicatorQueryTreatment = {\n    'abstracts': Array < ArticleAbstract >\n\n        'alterations': Array < string >\n\n        'approvedIndications': Array < string >\n\n        'description': string\n\n        'drugs': Array < Drug >\n\n        'fdaLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'level': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'levelAssociatedCancerType': TumorType\n\n        'levelExcludedCancerTypes': Array < TumorType >\n\n        'pmids': Array < string >\n\n};\nexport type Treatment = {\n    'approvedIndications': Array < string >\n\n        'drugs': Array < TreatmentDrug >\n\n        'priority': number\n\n};\nexport type MutationEffectResp = {\n    'citations': Citations\n\n        'description': string\n\n        'knownEffect': string\n\n};\nexport type AnnotateMutationByHGVSgQuery = {\n    'evidenceTypes': Array < \"GENE_SUMMARY\" | \"MUTATION_SUMMARY\" | \"TUMOR_TYPE_SUMMARY\" | \"GENE_TUMOR_TYPE_SUMMARY\" | \"PROGNOSTIC_SUMMARY\" | \"DIAGNOSTIC_SUMMARY\" | \"GENE_BACKGROUND\" | \"ONCOGENIC\" | \"MUTATION_EFFECT\" | \"VUS\" | \"PROGNOSTIC_IMPLICATION\" | \"DIAGNOSTIC_IMPLICATION\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\" >\n\n        'hgvsg': string\n\n        'id': string\n\n        'referenceGenome': \"GRCh37\" | \"GRCh38\"\n\n        'tumorType': string\n\n};\nexport type BiologicalVariant = {\n    'mutationEffect': string\n\n        'mutationEffectAbstracts': Array < ArticleAbstract >\n\n        'mutationEffectDescription': string\n\n        'mutationEffectPmids': Array < string >\n\n        'oncogenic': string\n\n        'oncogenicAbstracts': Array < ArticleAbstract >\n\n        'oncogenicPmids': Array < string >\n\n        'variant': Alteration\n\n};\nexport type Geneset = {\n    'genes': Array < Gene >\n\n        'id': number\n\n        'name': string\n\n        'uuid': string\n\n};\nexport type Citations = {\n    'abstracts': Array < ArticleAbstract >\n\n        'pmids': Array < string >\n\n};\n\n/**\n * OncoKB, a comprehensive and curated precision oncology knowledge base, offers oncologists detailed, evidence-based information about individual somatic mutations and structural alterations present in patient tumors with the goal of supporting optimal treatment decisions.\n * @class OncoKbPrivateAPI\n * @param {(string)} [domainOrOptions] - The project domain.\n */\nexport default class OncoKbPrivateAPI {\n\n    private domain: string = \"\";\n    private errorHandlers: CallbackHandler[] = [];\n\n    constructor(domain ? : string) {\n        if (domain) {\n            this.domain = domain;\n        }\n    }\n\n    getDomain() {\n        return this.domain;\n    }\n\n    addErrorHandler(handler: CallbackHandler) {\n        this.errorHandlers.push(handler);\n    }\n\n    private request(method: string, url: string, body: any, headers: any, queryParameters: any, form: any, reject: CallbackHandler, resolve: CallbackHandler, errorHandlers: CallbackHandler[]) {\n        let req = (new(request as any).Request(method, url) as request.Request)\n            .query(queryParameters);\n        Object.keys(headers).forEach(key => {\n            req.set(key, headers[key]);\n        });\n\n        if (body) {\n            req.send(body);\n        }\n\n        if (typeof(body) === 'object' && !(body.constructor.name === 'Buffer')) {\n            req.set('Content-Type', 'application/json');\n        }\n\n        if (Object.keys(form).length > 0) {\n            req.type('form');\n            req.send(form);\n        }\n\n        req.end((error, response) => {\n            if (error || !response.ok) {\n                reject(error);\n                errorHandlers.forEach(handler => handler(error));\n            } else {\n                resolve(response);\n            }\n        });\n    }\n\n    cacheGenomeNexusVariantInfoPostUsingPOSTURL(parameters: {\n        'body': Array < GenomeNexusAnnotatedVariantInfo > ,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/cacheGnVariantInfo';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * cache Genome Nexus variant info\n     * @method\n     * @name OncoKbPrivateAPI#cacheGenomeNexusVariantInfoPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    cacheGenomeNexusVariantInfoPostUsingPOSTWithHttpInfo(parameters: {\n        'body': Array < GenomeNexusAnnotatedVariantInfo > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/cacheGnVariantInfo';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * cache Genome Nexus variant info\n     * @method\n     * @name OncoKbPrivateAPI#cacheGenomeNexusVariantInfoPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    cacheGenomeNexusVariantInfoPostUsingPOST(parameters: {\n        'body': Array < GenomeNexusAnnotatedVariantInfo > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < any > {\n        return this.cacheGenomeNexusVariantInfoPostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    fetchGenomeNexusVariantInfoByGenomicChangePostUsingPOSTURL(parameters: {\n        'body': Array < AnnotateMutationByGenomicChangeQuery > ,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/fetchGnVariants/byGenomicChange';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Fetch Genome Nexus variant info by genomic change\n     * @method\n     * @name OncoKbPrivateAPI#fetchGenomeNexusVariantInfoByGenomicChangePostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    fetchGenomeNexusVariantInfoByGenomicChangePostUsingPOSTWithHttpInfo(parameters: {\n        'body': Array < AnnotateMutationByGenomicChangeQuery > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/fetchGnVariants/byGenomicChange';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Fetch Genome Nexus variant info by genomic change\n     * @method\n     * @name OncoKbPrivateAPI#fetchGenomeNexusVariantInfoByGenomicChangePostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    fetchGenomeNexusVariantInfoByGenomicChangePostUsingPOST(parameters: {\n            'body': Array < AnnotateMutationByGenomicChangeQuery > ,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < GenomeNexusAnnotatedVariantInfo >\n        > {\n            return this.fetchGenomeNexusVariantInfoByGenomicChangePostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    fetchGenomeNexusVariantInfoByHGVSgPostUsingPOSTURL(parameters: {\n        'body': Array < AnnotateMutationByHGVSgQuery > ,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/fetchGnVariants/byHGVSg';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Fetch Genome Nexus variant info by HGVSg\n     * @method\n     * @name OncoKbPrivateAPI#fetchGenomeNexusVariantInfoByHGVSgPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    fetchGenomeNexusVariantInfoByHGVSgPostUsingPOSTWithHttpInfo(parameters: {\n        'body': Array < AnnotateMutationByHGVSgQuery > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/fetchGnVariants/byHGVSg';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Fetch Genome Nexus variant info by HGVSg\n     * @method\n     * @name OncoKbPrivateAPI#fetchGenomeNexusVariantInfoByHGVSgPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    fetchGenomeNexusVariantInfoByHGVSgPostUsingPOST(parameters: {\n            'body': Array < AnnotateMutationByHGVSgQuery > ,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < GenomeNexusAnnotatedVariantInfo >\n        > {\n            return this.fetchGenomeNexusVariantInfoByHGVSgPostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    searchDrugGetUsingGETURL(parameters: {\n        'query': string,\n        'limit' ? : number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/search/ncitDrugs';\n        if (parameters['query'] !== undefined) {\n            queryParameters['query'] = parameters['query'];\n        }\n\n        if (parameters['limit'] !== undefined) {\n            queryParameters['limit'] = parameters['limit'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Find NCIT matches based on blur query. This is not for search OncoKB curated drugs. Please use drugs/lookup for that purpose.\n     * @method\n     * @name OncoKbPrivateAPI#searchDrugGetUsingGET\n     * @param {string} query - The search query, it could be drug name, NCIT code\n     * @param {integer} limit - The limit of returned result.\n     */\n    searchDrugGetUsingGETWithHttpInfo(parameters: {\n        'query': string,\n        'limit' ? : number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/search/ncitDrugs';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['query'] !== undefined) {\n                queryParameters['query'] = parameters['query'];\n            }\n\n            if (parameters['query'] === undefined) {\n                reject(new Error('Missing required  parameter: query'));\n                return;\n            }\n\n            if (parameters['limit'] !== undefined) {\n                queryParameters['limit'] = parameters['limit'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Find NCIT matches based on blur query. This is not for search OncoKB curated drugs. Please use drugs/lookup for that purpose.\n     * @method\n     * @name OncoKbPrivateAPI#searchDrugGetUsingGET\n     * @param {string} query - The search query, it could be drug name, NCIT code\n     * @param {integer} limit - The limit of returned result.\n     */\n    searchDrugGetUsingGET(parameters: {\n            'query': string,\n            'limit' ? : number,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < Drug >\n        > {\n            return this.searchDrugGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    searchTreatmentsGetUsingGETURL(parameters: {\n        'gene': string,\n        'level' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/search/treatments';\n        if (parameters['gene'] !== undefined) {\n            queryParameters['gene'] = parameters['gene'];\n        }\n\n        if (parameters['level'] !== undefined) {\n            queryParameters['level'] = parameters['level'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Search to find treatments.\n     * @method\n     * @name OncoKbPrivateAPI#searchTreatmentsGetUsingGET\n     * @param {string} gene - The search query, it could be hugoSymbol or entrezGeneId.\n     * @param {string} level - The level of evidence.\n     */\n    searchTreatmentsGetUsingGETWithHttpInfo(parameters: {\n        'gene': string,\n        'level' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/search/treatments';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['gene'] !== undefined) {\n                queryParameters['gene'] = parameters['gene'];\n            }\n\n            if (parameters['gene'] === undefined) {\n                reject(new Error('Missing required  parameter: gene'));\n                return;\n            }\n\n            if (parameters['level'] !== undefined) {\n                queryParameters['level'] = parameters['level'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Search to find treatments.\n     * @method\n     * @name OncoKbPrivateAPI#searchTreatmentsGetUsingGET\n     * @param {string} gene - The search query, it could be hugoSymbol or entrezGeneId.\n     * @param {string} level - The level of evidence.\n     */\n    searchTreatmentsGetUsingGET(parameters: {\n            'gene': string,\n            'level' ? : string,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < Treatment >\n        > {\n            return this.searchTreatmentsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    searchTypeAheadGetUsingGETURL(parameters: {\n        'query': string,\n        'limit' ? : number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/search/typeahead';\n        if (parameters['query'] !== undefined) {\n            queryParameters['query'] = parameters['query'];\n        }\n\n        if (parameters['limit'] !== undefined) {\n            queryParameters['limit'] = parameters['limit'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Find matches based on blur query.\n     * @method\n     * @name OncoKbPrivateAPI#searchTypeAheadGetUsingGET\n     * @param {string} query - The search query, it could be hugoSymbol, entrezGeneId, variant, or cancer type. At least two characters. Maximum two keywords are supported, separated by space\n     * @param {integer} limit - The limit of returned result.\n     */\n    searchTypeAheadGetUsingGETWithHttpInfo(parameters: {\n        'query': string,\n        'limit' ? : number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/search/typeahead';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['query'] !== undefined) {\n                queryParameters['query'] = parameters['query'];\n            }\n\n            if (parameters['query'] === undefined) {\n                reject(new Error('Missing required  parameter: query'));\n                return;\n            }\n\n            if (parameters['limit'] !== undefined) {\n                queryParameters['limit'] = parameters['limit'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Find matches based on blur query.\n     * @method\n     * @name OncoKbPrivateAPI#searchTypeAheadGetUsingGET\n     * @param {string} query - The search query, it could be hugoSymbol, entrezGeneId, variant, or cancer type. At least two characters. Maximum two keywords are supported, separated by space\n     * @param {integer} limit - The limit of returned result.\n     */\n    searchTypeAheadGetUsingGET(parameters: {\n            'query': string,\n            'limit' ? : number,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < TypeaheadSearchResp >\n        > {\n            return this.searchTypeAheadGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    searchVariantsBiologicalGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/search/variants/biological';\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get annotated variants information for specified gene.\n     * @method\n     * @name OncoKbPrivateAPI#searchVariantsBiologicalGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     */\n    searchVariantsBiologicalGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/search/variants/biological';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get annotated variants information for specified gene.\n     * @method\n     * @name OncoKbPrivateAPI#searchVariantsBiologicalGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     */\n    searchVariantsBiologicalGetUsingGET(parameters: {\n            'hugoSymbol' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < BiologicalVariant >\n        > {\n            return this.searchVariantsBiologicalGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    searchVariantsClinicalGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/search/variants/clinical';\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get list of variant clinical information for specified gene.\n     * @method\n     * @name OncoKbPrivateAPI#searchVariantsClinicalGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     */\n    searchVariantsClinicalGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/search/variants/clinical';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get list of variant clinical information for specified gene.\n     * @method\n     * @name OncoKbPrivateAPI#searchVariantsClinicalGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     */\n    searchVariantsClinicalGetUsingGET(parameters: {\n            'hugoSymbol' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < ClinicalVariant >\n        > {\n            return this.searchVariantsClinicalGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    getTranscriptUsingGETURL(parameters: {\n        'hugoSymbol': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/transcripts/{hugoSymbol}';\n\n        path = path.replace('{hugoSymbol}', parameters['hugoSymbol'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get transcript info in both GRCh37 and 38.\n     * @method\n     * @name OncoKbPrivateAPI#getTranscriptUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     */\n    getTranscriptUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/transcripts/{hugoSymbol}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            path = path.replace('{hugoSymbol}', parameters['hugoSymbol'] + '');\n\n            if (parameters['hugoSymbol'] === undefined) {\n                reject(new Error('Missing required  parameter: hugoSymbol'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get transcript info in both GRCh37 and 38.\n     * @method\n     * @name OncoKbPrivateAPI#getTranscriptUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     */\n    getTranscriptUsingGET(parameters: {\n        'hugoSymbol': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < TranscriptResult > {\n        return this.getTranscriptUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    utilDataAvailabilityGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/data/availability';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get information about what files are available by data version\n     * @method\n     * @name OncoKbPrivateAPI#utilDataAvailabilityGetUsingGET\n     */\n    utilDataAvailabilityGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/data/availability';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get information about what files are available by data version\n     * @method\n     * @name OncoKbPrivateAPI#utilDataAvailabilityGetUsingGET\n     */\n    utilDataAvailabilityGetUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < DownloadAvailability >\n        > {\n            return this.utilDataAvailabilityGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilDataReadmeGetUsingGETURL(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/data/readme';\n        if (parameters['version'] !== undefined) {\n            queryParameters['version'] = parameters['version'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get readme info for specific data release version\n     * @method\n     * @name OncoKbPrivateAPI#utilDataReadmeGetUsingGET\n     * @param {string} version - version\n     */\n    utilDataReadmeGetUsingGETWithHttpInfo(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/data/readme';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'text/plain';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['version'] !== undefined) {\n                queryParameters['version'] = parameters['version'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get readme info for specific data release version\n     * @method\n     * @name OncoKbPrivateAPI#utilDataReadmeGetUsingGET\n     * @param {string} version - version\n     */\n    utilDataReadmeGetUsingGET(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < string > {\n        return this.utilDataReadmeGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    utilDataSqlDumpGetUsingGETURL(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/data/sqlDump';\n        if (parameters['version'] !== undefined) {\n            queryParameters['version'] = parameters['version'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * utilDataSqlDumpGet\n     * @method\n     * @name OncoKbPrivateAPI#utilDataSqlDumpGetUsingGET\n     * @param {string} version - version\n     */\n    utilDataSqlDumpGetUsingGETWithHttpInfo(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/data/sqlDump';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/gz';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['version'] !== undefined) {\n                queryParameters['version'] = parameters['version'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * utilDataSqlDumpGet\n     * @method\n     * @name OncoKbPrivateAPI#utilDataSqlDumpGetUsingGET\n     * @param {string} version - version\n     */\n    utilDataSqlDumpGetUsingGET(parameters: {\n            'version' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < string >\n        > {\n            return this.utilDataSqlDumpGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsEnsemblGenesGetUsingGETURL(parameters: {\n        'entrezGeneId': number,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/ensembleGenes';\n        if (parameters['entrezGeneId'] !== undefined) {\n            queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get the list of Ensembl genes.\n     * @method\n     * @name OncoKbPrivateAPI#utilsEnsemblGenesGetUsingGET\n     * @param {integer} entrezGeneId - Gene entrez id\n     */\n    utilsEnsemblGenesGetUsingGETWithHttpInfo(parameters: {\n        'entrezGeneId': number,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/ensembleGenes';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['entrezGeneId'] !== undefined) {\n                queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n            }\n\n            if (parameters['entrezGeneId'] === undefined) {\n                reject(new Error('Missing required  parameter: entrezGeneId'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get the list of Ensembl genes.\n     * @method\n     * @name OncoKbPrivateAPI#utilsEnsemblGenesGetUsingGET\n     * @param {integer} entrezGeneId - Gene entrez id\n     */\n    utilsEnsemblGenesGetUsingGET(parameters: {\n            'entrezGeneId': number,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < EnsemblGene >\n        > {\n            return this.utilsEnsemblGenesGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsEvidencesByLevelsGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/evidences/levels';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get the list of evidences by levels.\n     * @method\n     * @name OncoKbPrivateAPI#utilsEvidencesByLevelsGetUsingGET\n     */\n    utilsEvidencesByLevelsGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/evidences/levels';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get the list of evidences by levels.\n     * @method\n     * @name OncoKbPrivateAPI#utilsEvidencesByLevelsGetUsingGET\n     */\n    utilsEvidencesByLevelsGetUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < {} > {\n        return this.utilsEvidencesByLevelsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    utilFilterGenomicChangeBasedOnCoveragePostUsingPOSTURL(parameters: {\n        'body': Array < AnnotateMutationByGenomicChangeQuery > ,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/filterGenomicChangeBasedOnCoverage';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Filter genomic change based on oncokb coverage\n     * @method\n     * @name OncoKbPrivateAPI#utilFilterGenomicChangeBasedOnCoveragePostUsingPOST\n     * @param {} body - List of queries.\n     */\n    utilFilterGenomicChangeBasedOnCoveragePostUsingPOSTWithHttpInfo(parameters: {\n        'body': Array < AnnotateMutationByGenomicChangeQuery > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/filterGenomicChangeBasedOnCoverage';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Filter genomic change based on oncokb coverage\n     * @method\n     * @name OncoKbPrivateAPI#utilFilterGenomicChangeBasedOnCoveragePostUsingPOST\n     * @param {} body - List of queries.\n     */\n    utilFilterGenomicChangeBasedOnCoveragePostUsingPOST(parameters: {\n            'body': Array < AnnotateMutationByGenomicChangeQuery > ,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < string >\n        > {\n            return this.utilFilterGenomicChangeBasedOnCoveragePostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilFilterHgvsgBasedOnCoveragePostUsingPOSTURL(parameters: {\n        'body': Array < AnnotateMutationByHGVSgQuery > ,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/filterHgvsgBasedOnCoverage';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Filter HGVSg based on oncokb coverage\n     * @method\n     * @name OncoKbPrivateAPI#utilFilterHgvsgBasedOnCoveragePostUsingPOST\n     * @param {} body - List of queries.\n     */\n    utilFilterHgvsgBasedOnCoveragePostUsingPOSTWithHttpInfo(parameters: {\n        'body': Array < AnnotateMutationByHGVSgQuery > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/filterHgvsgBasedOnCoverage';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Filter HGVSg based on oncokb coverage\n     * @method\n     * @name OncoKbPrivateAPI#utilFilterHgvsgBasedOnCoveragePostUsingPOST\n     * @param {} body - List of queries.\n     */\n    utilFilterHgvsgBasedOnCoveragePostUsingPOST(parameters: {\n            'body': Array < AnnotateMutationByHGVSgQuery > ,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < string >\n        > {\n            return this.utilFilterHgvsgBasedOnCoveragePostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsHotspotMutationGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        'variant' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/isHotspot';\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters['variant'] !== undefined) {\n            queryParameters['variant'] = parameters['variant'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Determine whether variant is hotspot mutation.\n     * @method\n     * @name OncoKbPrivateAPI#utilsHotspotMutationGetUsingGET\n     * @param {string} hugoSymbol - Gene hugo symbol\n     * @param {string} variant - Variant name\n     */\n    utilsHotspotMutationGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        'variant' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/isHotspot';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters['variant'] !== undefined) {\n                queryParameters['variant'] = parameters['variant'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Determine whether variant is hotspot mutation.\n     * @method\n     * @name OncoKbPrivateAPI#utilsHotspotMutationGetUsingGET\n     * @param {string} hugoSymbol - Gene hugo symbol\n     * @param {string} variant - Variant name\n     */\n    utilsHotspotMutationGetUsingGET(parameters: {\n        'hugoSymbol' ? : string,\n        'variant' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < boolean > {\n        return this.utilsHotspotMutationGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    validateVariantExampleGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        'referenceGenome' ? : string,\n        'variant' ? : string,\n        'examples' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/match/variant';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Check if the genomic example will be mapped to OncoKB variant.\n     * @method\n     * @name OncoKbPrivateAPI#validateVariantExampleGetUsingGET\n     * @param {} hugoSymbol - Gene Hugo Symbol\n     * @param {} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {} variant - The OncoKB variant\n     * @param {} examples - The genomic examples.\n     */\n    validateVariantExampleGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        'referenceGenome' ? : string,\n        'variant' ? : string,\n        'examples' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/match/variant';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                body = parameters['hugoSymbol'];\n            }\n\n            if (parameters['referenceGenome'] !== undefined) {\n                body = parameters['referenceGenome'];\n            }\n\n            if (parameters['variant'] !== undefined) {\n                body = parameters['variant'];\n            }\n\n            if (parameters['examples'] !== undefined) {\n                body = parameters['examples'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Check if the genomic example will be mapped to OncoKB variant.\n     * @method\n     * @name OncoKbPrivateAPI#validateVariantExampleGetUsingGET\n     * @param {} hugoSymbol - Gene Hugo Symbol\n     * @param {} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {} variant - The OncoKB variant\n     * @param {} examples - The genomic examples.\n     */\n    validateVariantExampleGetUsingGET(parameters: {\n        'hugoSymbol' ? : string,\n        'referenceGenome' ? : string,\n        'variant' ? : string,\n        'examples' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < {} > {\n        return this.validateVariantExampleGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    validateVariantExamplePostUsingPOSTURL(parameters: {\n        'body': MatchVariantRequest,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/match/variant';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Check which OncoKB variants can be mapped on genomic examples.\n     * @method\n     * @name OncoKbPrivateAPI#validateVariantExamplePostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    validateVariantExamplePostUsingPOSTWithHttpInfo(parameters: {\n        'body': MatchVariantRequest,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/match/variant';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Check which OncoKB variants can be mapped on genomic examples.\n     * @method\n     * @name OncoKbPrivateAPI#validateVariantExamplePostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    validateVariantExamplePostUsingPOST(parameters: {\n            'body': MatchVariantRequest,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < MatchVariantResult >\n        > {\n            return this.validateVariantExamplePostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilMutationMapperDataGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/mutationMapperData';\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * utilMutationMapperDataGet\n     * @method\n     * @name OncoKbPrivateAPI#utilMutationMapperDataGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     */\n    utilMutationMapperDataGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/mutationMapperData';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * utilMutationMapperDataGet\n     * @method\n     * @name OncoKbPrivateAPI#utilMutationMapperDataGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     */\n    utilMutationMapperDataGetUsingGET(parameters: {\n            'hugoSymbol' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < PortalAlteration >\n        > {\n            return this.utilMutationMapperDataGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsNumbersGeneGetUsingGETURL(parameters: {\n        'hugoSymbol': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/numbers/gene/{hugoSymbol}';\n\n        path = path.replace('{hugoSymbol}', parameters['hugoSymbol'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get gene related numbers\n     * @method\n     * @name OncoKbPrivateAPI#utilsNumbersGeneGetUsingGET\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation.\n     */\n    utilsNumbersGeneGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/numbers/gene/{hugoSymbol}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            path = path.replace('{hugoSymbol}', parameters['hugoSymbol'] + '');\n\n            if (parameters['hugoSymbol'] === undefined) {\n                reject(new Error('Missing required  parameter: hugoSymbol'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get gene related numbers\n     * @method\n     * @name OncoKbPrivateAPI#utilsNumbersGeneGetUsingGET\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation.\n     */\n    utilsNumbersGeneGetUsingGET(parameters: {\n        'hugoSymbol': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < GeneNumber > {\n        return this.utilsNumbersGeneGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    utilsNumbersGenesGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/numbers/genes/';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get gene related numbers of all genes. This is for main page word cloud.\n     * @method\n     * @name OncoKbPrivateAPI#utilsNumbersGenesGetUsingGET\n     */\n    utilsNumbersGenesGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/numbers/genes/';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get gene related numbers of all genes. This is for main page word cloud.\n     * @method\n     * @name OncoKbPrivateAPI#utilsNumbersGenesGetUsingGET\n     */\n    utilsNumbersGenesGetUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < GeneNumber >\n        > {\n            return this.utilsNumbersGenesGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsNumbersLevelsGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/numbers/levels/';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get gene related numbers of all genes. This is for main page word cloud.\n     * @method\n     * @name OncoKbPrivateAPI#utilsNumbersLevelsGetUsingGET\n     */\n    utilsNumbersLevelsGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/numbers/levels/';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get gene related numbers of all genes. This is for main page word cloud.\n     * @method\n     * @name OncoKbPrivateAPI#utilsNumbersLevelsGetUsingGET\n     */\n    utilsNumbersLevelsGetUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < LevelNumber >\n        > {\n            return this.utilsNumbersLevelsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsNumbersMainGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/numbers/main/';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get numbers served for the main page dashboard.\n     * @method\n     * @name OncoKbPrivateAPI#utilsNumbersMainGetUsingGET\n     */\n    utilsNumbersMainGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/numbers/main/';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get numbers served for the main page dashboard.\n     * @method\n     * @name OncoKbPrivateAPI#utilsNumbersMainGetUsingGET\n     */\n    utilsNumbersMainGetUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < MainNumber > {\n        return this.utilsNumbersMainGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    utilPortalAlterationSampleCountGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/portalAlterationSampleCount';\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * utilPortalAlterationSampleCountGet\n     * @method\n     * @name OncoKbPrivateAPI#utilPortalAlterationSampleCountGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     */\n    utilPortalAlterationSampleCountGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/portalAlterationSampleCount';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * utilPortalAlterationSampleCountGet\n     * @method\n     * @name OncoKbPrivateAPI#utilPortalAlterationSampleCountGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     */\n    utilPortalAlterationSampleCountGetUsingGET(parameters: {\n            'hugoSymbol' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < CancerTypeCount >\n        > {\n            return this.utilPortalAlterationSampleCountGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilRelevantAlterationsGetUsingGETURL(parameters: {\n        'referenceGenome' ? : string,\n        'entrezGeneId' ? : number,\n        'alteration' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/relevantAlterations';\n        if (parameters['referenceGenome'] !== undefined) {\n            queryParameters['referenceGenome'] = parameters['referenceGenome'];\n        }\n\n        if (parameters['entrezGeneId'] !== undefined) {\n            queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n        }\n\n        if (parameters['alteration'] !== undefined) {\n            queryParameters['alteration'] = parameters['alteration'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get the list of relevant alterations\n     * @method\n     * @name OncoKbPrivateAPI#utilRelevantAlterationsGetUsingGET\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {integer} entrezGeneId - alteration\n     * @param {string} alteration - alteration\n     */\n    utilRelevantAlterationsGetUsingGETWithHttpInfo(parameters: {\n        'referenceGenome' ? : string,\n        'entrezGeneId' ? : number,\n        'alteration' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/relevantAlterations';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['referenceGenome'] !== undefined) {\n                queryParameters['referenceGenome'] = parameters['referenceGenome'];\n            }\n\n            if (parameters['entrezGeneId'] !== undefined) {\n                queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n            }\n\n            if (parameters['alteration'] !== undefined) {\n                queryParameters['alteration'] = parameters['alteration'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get the list of relevant alterations\n     * @method\n     * @name OncoKbPrivateAPI#utilRelevantAlterationsGetUsingGET\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {integer} entrezGeneId - alteration\n     * @param {string} alteration - alteration\n     */\n    utilRelevantAlterationsGetUsingGET(parameters: {\n            'referenceGenome' ? : string,\n            'entrezGeneId' ? : number,\n            'alteration' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < Alteration >\n        > {\n            return this.utilRelevantAlterationsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilRelevantCancerTypesPostUsingPOSTURL(parameters: {\n        'levelOfEvidence' ? : \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\",\n        'body': Array < RelevantCancerTypeQuery > ,\n            $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/relevantCancerTypes';\n        if (parameters['levelOfEvidence'] !== undefined) {\n            queryParameters['levelOfEvidence'] = parameters['levelOfEvidence'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get the list of relevant tumor types.\n     * @method\n     * @name OncoKbPrivateAPI#utilRelevantCancerTypesPostUsingPOST\n     * @param {string} levelOfEvidence - Level of Evidence\n     * @param {} body - List of queries.\n     */\n    utilRelevantCancerTypesPostUsingPOSTWithHttpInfo(parameters: {\n        'levelOfEvidence' ? : \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\",\n        'body': Array < RelevantCancerTypeQuery > ,\n            $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/relevantCancerTypes';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['levelOfEvidence'] !== undefined) {\n                queryParameters['levelOfEvidence'] = parameters['levelOfEvidence'];\n            }\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get the list of relevant tumor types.\n     * @method\n     * @name OncoKbPrivateAPI#utilRelevantCancerTypesPostUsingPOST\n     * @param {string} levelOfEvidence - Level of Evidence\n     * @param {} body - List of queries.\n     */\n    utilRelevantCancerTypesPostUsingPOST(parameters: {\n            'levelOfEvidence' ? : \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\",\n            'body': Array < RelevantCancerTypeQuery > ,\n                $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < TumorType >\n        > {\n            return this.utilRelevantCancerTypesPostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilRelevantTumorTypesGetUsingGETURL(parameters: {\n        'tumorType' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/relevantTumorTypes';\n        if (parameters['tumorType'] !== undefined) {\n            queryParameters['tumorType'] = parameters['tumorType'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get the list of relevant tumor types.\n     * @method\n     * @name OncoKbPrivateAPI#utilRelevantTumorTypesGetUsingGET\n     * @param {string} tumorType - OncoTree tumor type name/main type/code\n     */\n    utilRelevantTumorTypesGetUsingGETWithHttpInfo(parameters: {\n        'tumorType' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/relevantTumorTypes';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['tumorType'] !== undefined) {\n                queryParameters['tumorType'] = parameters['tumorType'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get the list of relevant tumor types.\n     * @method\n     * @name OncoKbPrivateAPI#utilRelevantTumorTypesGetUsingGET\n     * @param {string} tumorType - OncoTree tumor type name/main type/code\n     */\n    utilRelevantTumorTypesGetUsingGET(parameters: {\n            'tumorType' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < TumorType >\n        > {\n            return this.utilRelevantTumorTypesGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsSuggestedVariantsGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/suggestedVariants';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get All Suggested Variants.\n     * @method\n     * @name OncoKbPrivateAPI#utilsSuggestedVariantsGetUsingGET\n     */\n    utilsSuggestedVariantsGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/suggestedVariants';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get All Suggested Variants.\n     * @method\n     * @name OncoKbPrivateAPI#utilsSuggestedVariantsGetUsingGET\n     */\n    utilsSuggestedVariantsGetUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < AnnotatedVariant >\n        > {\n            return this.utilsSuggestedVariantsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsTumorTypesGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/tumorTypes';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get the full list of TumorTypes.\n     * @method\n     * @name OncoKbPrivateAPI#utilsTumorTypesGetUsingGET\n     */\n    utilsTumorTypesGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/tumorTypes';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get the full list of TumorTypes.\n     * @method\n     * @name OncoKbPrivateAPI#utilsTumorTypesGetUsingGET\n     */\n    utilsTumorTypesGetUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < TumorType >\n        > {\n            return this.utilsTumorTypesGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilUpdateTranscriptGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'grch37Isoform' ? : string,\n        'grch37RefSeq' ? : string,\n        'grch38Isoform' ? : string,\n        'grch38RefSeq' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/updateTranscript';\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters['entrezGeneId'] !== undefined) {\n            queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n        }\n\n        if (parameters['grch37Isoform'] !== undefined) {\n            queryParameters['grch37Isoform'] = parameters['grch37Isoform'];\n        }\n\n        if (parameters['grch37RefSeq'] !== undefined) {\n            queryParameters['grch37RefSeq'] = parameters['grch37RefSeq'];\n        }\n\n        if (parameters['grch38Isoform'] !== undefined) {\n            queryParameters['grch38Isoform'] = parameters['grch38Isoform'];\n        }\n\n        if (parameters['grch38RefSeq'] !== undefined) {\n            queryParameters['grch38RefSeq'] = parameters['grch38RefSeq'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * utilUpdateTranscriptGet\n     * @method\n     * @name OncoKbPrivateAPI#utilUpdateTranscriptGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     * @param {integer} entrezGeneId - entrezGeneId\n     * @param {string} grch37Isoform - grch37Isoform\n     * @param {string} grch37RefSeq - grch37RefSeq\n     * @param {string} grch38Isoform - grch38Isoform\n     * @param {string} grch38RefSeq - grch38RefSeq\n     */\n    utilUpdateTranscriptGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'grch37Isoform' ? : string,\n        'grch37RefSeq' ? : string,\n        'grch38Isoform' ? : string,\n        'grch38RefSeq' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/updateTranscript';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters['entrezGeneId'] !== undefined) {\n                queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n            }\n\n            if (parameters['grch37Isoform'] !== undefined) {\n                queryParameters['grch37Isoform'] = parameters['grch37Isoform'];\n            }\n\n            if (parameters['grch37RefSeq'] !== undefined) {\n                queryParameters['grch37RefSeq'] = parameters['grch37RefSeq'];\n            }\n\n            if (parameters['grch38Isoform'] !== undefined) {\n                queryParameters['grch38Isoform'] = parameters['grch38Isoform'];\n            }\n\n            if (parameters['grch38RefSeq'] !== undefined) {\n                queryParameters['grch38RefSeq'] = parameters['grch38RefSeq'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * utilUpdateTranscriptGet\n     * @method\n     * @name OncoKbPrivateAPI#utilUpdateTranscriptGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     * @param {integer} entrezGeneId - entrezGeneId\n     * @param {string} grch37Isoform - grch37Isoform\n     * @param {string} grch37RefSeq - grch37RefSeq\n     * @param {string} grch38Isoform - grch38Isoform\n     * @param {string} grch38RefSeq - grch38RefSeq\n     */\n    utilUpdateTranscriptGetUsingGET(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'grch37Isoform' ? : string,\n        'grch37RefSeq' ? : string,\n        'grch38Isoform' ? : string,\n        'grch38RefSeq' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < any > {\n        return this.utilUpdateTranscriptGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    utilValidateTranscriptUpdateGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'grch37Isoform' ? : string,\n        'grch38Isoform' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/validateTranscriptUpdate';\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters['entrezGeneId'] !== undefined) {\n            queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n        }\n\n        if (parameters['grch37Isoform'] !== undefined) {\n            queryParameters['grch37Isoform'] = parameters['grch37Isoform'];\n        }\n\n        if (parameters['grch38Isoform'] !== undefined) {\n            queryParameters['grch38Isoform'] = parameters['grch38Isoform'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * utilValidateTranscriptUpdateGet\n     * @method\n     * @name OncoKbPrivateAPI#utilValidateTranscriptUpdateGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     * @param {integer} entrezGeneId - entrezGeneId\n     * @param {string} grch37Isoform - grch37Isoform\n     * @param {string} grch38Isoform - grch38Isoform\n     */\n    utilValidateTranscriptUpdateGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'grch37Isoform' ? : string,\n        'grch38Isoform' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/validateTranscriptUpdate';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'text/plain';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters['entrezGeneId'] !== undefined) {\n                queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n            }\n\n            if (parameters['grch37Isoform'] !== undefined) {\n                queryParameters['grch37Isoform'] = parameters['grch37Isoform'];\n            }\n\n            if (parameters['grch38Isoform'] !== undefined) {\n                queryParameters['grch38Isoform'] = parameters['grch38Isoform'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * utilValidateTranscriptUpdateGet\n     * @method\n     * @name OncoKbPrivateAPI#utilValidateTranscriptUpdateGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     * @param {integer} entrezGeneId - entrezGeneId\n     * @param {string} grch37Isoform - grch37Isoform\n     * @param {string} grch38Isoform - grch38Isoform\n     */\n    utilValidateTranscriptUpdateGetUsingGET(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'grch37Isoform' ? : string,\n        'grch38Isoform' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < string > {\n        return this.utilValidateTranscriptUpdateGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    validateTrialsUsingGETURL(parameters: {\n        'nctIds' ? : Array < string > ,\n            $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/validation/trials';\n        if (parameters['nctIds'] !== undefined) {\n            queryParameters['nctIds'] = parameters['nctIds'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Check if clinical trials are valid or not by nctId.\n     * @method\n     * @name OncoKbPrivateAPI#validateTrialsUsingGET\n     * @param {array} nctIds - NCTID list\n     */\n    validateTrialsUsingGETWithHttpInfo(parameters: {\n        'nctIds' ? : Array < string > ,\n            $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/validation/trials';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['nctIds'] !== undefined) {\n                queryParameters['nctIds'] = parameters['nctIds'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Check if clinical trials are valid or not by nctId.\n     * @method\n     * @name OncoKbPrivateAPI#validateTrialsUsingGET\n     * @param {array} nctIds - NCTID list\n     */\n    validateTrialsUsingGET(parameters: {\n        'nctIds' ? : Array < string > ,\n            $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < {} > {\n        return this.validateTrialsUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    utilVariantAnnotationGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'referenceGenome' ? : string,\n        'alteration' ? : string,\n        'hgvsg' ? : string,\n        'genomicChange' ? : string,\n        'tumorType' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/variantAnnotation';\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters['entrezGeneId'] !== undefined) {\n            queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n        }\n\n        if (parameters['referenceGenome'] !== undefined) {\n            queryParameters['referenceGenome'] = parameters['referenceGenome'];\n        }\n\n        if (parameters['alteration'] !== undefined) {\n            queryParameters['alteration'] = parameters['alteration'];\n        }\n\n        if (parameters['hgvsg'] !== undefined) {\n            queryParameters['hgvsg'] = parameters['hgvsg'];\n        }\n\n        if (parameters['genomicChange'] !== undefined) {\n            queryParameters['genomicChange'] = parameters['genomicChange'];\n        }\n\n        if (parameters['tumorType'] !== undefined) {\n            queryParameters['tumorType'] = parameters['tumorType'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get all the info for the query\n     * @method\n     * @name OncoKbPrivateAPI#utilVariantAnnotationGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     * @param {integer} entrezGeneId - entrezGeneId\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} alteration - Alteration\n     * @param {string} hgvsg - HGVS genomic format. Example: 7:g.140453136A>T\n     * @param {string} genomicChange - Genomic change format. Example: 7,140453136,140453136,A,T\n     * @param {string} tumorType - OncoTree tumor type name/main type/code\n     */\n    utilVariantAnnotationGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'referenceGenome' ? : string,\n        'alteration' ? : string,\n        'hgvsg' ? : string,\n        'genomicChange' ? : string,\n        'tumorType' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/variantAnnotation';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters['entrezGeneId'] !== undefined) {\n                queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n            }\n\n            if (parameters['referenceGenome'] !== undefined) {\n                queryParameters['referenceGenome'] = parameters['referenceGenome'];\n            }\n\n            if (parameters['alteration'] !== undefined) {\n                queryParameters['alteration'] = parameters['alteration'];\n            }\n\n            if (parameters['hgvsg'] !== undefined) {\n                queryParameters['hgvsg'] = parameters['hgvsg'];\n            }\n\n            if (parameters['genomicChange'] !== undefined) {\n                queryParameters['genomicChange'] = parameters['genomicChange'];\n            }\n\n            if (parameters['tumorType'] !== undefined) {\n                queryParameters['tumorType'] = parameters['tumorType'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get all the info for the query\n     * @method\n     * @name OncoKbPrivateAPI#utilVariantAnnotationGetUsingGET\n     * @param {string} hugoSymbol - hugoSymbol\n     * @param {integer} entrezGeneId - entrezGeneId\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} alteration - Alteration\n     * @param {string} hgvsg - HGVS genomic format. Example: 7:g.140453136A>T\n     * @param {string} genomicChange - Genomic change format. Example: 7,140453136,140453136,A,T\n     * @param {string} tumorType - OncoTree tumor type name/main type/code\n     */\n    utilVariantAnnotationGetUsingGET(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'referenceGenome' ? : string,\n        'alteration' ? : string,\n        'hgvsg' ? : string,\n        'genomicChange' ? : string,\n        'tumorType' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < VariantAnnotation > {\n        return this.utilVariantAnnotationGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n}","import * as React from 'react';\nimport { Table } from 'react-bootstrap';\n\nexport type ElementType = JSX.Element | string;\nexport type SimpleTableCell = { key: string; content: ElementType };\nexport type SimpleTableRow = { key: string; content: SimpleTableCell[] };\nexport type SimpleTableRows = SimpleTableRow[];\nexport type SimpleTableColumn = {\n  size?: number;\n  content?: ElementType;\n  name: string;\n};\nexport type SimpleTableProps = {\n  columns?: SimpleTableColumn[];\n  rows: SimpleTableRows;\n  tableClassName?: string;\n  theadClassName?: string;\n  tbodyClassName?: string;\n};\n\nexport const SimpleTable = (props: SimpleTableProps) => {\n  const getRow = (row: SimpleTableRow) => {\n    return row.content\n      ? row.content.map(cell => {\n          return <td key={cell.key}>{cell.content}</td>;\n        })\n      : null;\n  };\n  return (\n    <div className={'table-responsive'}>\n      <Table className={props.tableClassName}>\n        {props.columns && (\n          <thead className={props.theadClassName}>\n            <tr>\n              {props.columns.map(column => (\n                <th\n                  key={column.name}\n                  style={column.size ? { width: column.size } : undefined}\n                >\n                  {column.content ? column.content : column.name}\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody className={props.tbodyClassName}>\n          {props.rows.map(row => (\n            <tr key={row.key}>{getRow(row)}</tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n","import React from 'react';\nimport {Button} from 'react-bootstrap';\n\nimport InfoIcon from \"app/shared/icons/InfoIcon\";\nimport {SimpleTable} from \"app/components/SimpleTable\";\n\nimport styles from './index.module.scss';\n\nexport interface ISearchInfoIcon {\n  onSelectQuery: (query: string) => void\n}\n\nexport default class SearchInfoIcon extends React.Component<ISearchInfoIcon, any> {\n\n  constructor(props: Readonly<ISearchInfoIcon>) {\n    super(props);\n  }\n\n  getQueryLink = (content: string) => {\n    return (\n      <Button variant='link' size={'sm'} style={{padding: 0}} onClick={() => this.props.onSelectQuery(content)}>\n        {content}\n      </Button>\n    )\n  }\n  getOverlay = () => {\n    return (\n      <>\n        <SimpleTable\n          tableClassName={styles.simpleTable}\n          columns={[{\n            name: 'Query Type'\n          }, {\n            name: 'Example'\n          }]}\n          rows={[\n            {\n              key: 'gene',\n              content: [{key: 'gene-0', content: 'Gene'}, {\n                key: 'gene-1',\n                content: this.getQueryLink('BRAF')\n              }]\n            }, {\n              key: 'alteration',\n              content: [{key: 'alteration-0', content: 'Alteration'}, {\n                key: 'alteration-1',\n                content: this.getQueryLink('BRAF V600E')\n              }]\n            }, {\n              key: 'cancerType',\n              content: [{key: 'cancerType-0', content: 'Cancer Type'}, {\n                key: 'cancerType-1',\n                content: this.getQueryLink('Melanoma')\n              }]\n            }, {\n              key: 'drug',\n              content: [{key: 'drug-0', content: 'Drug'}, {\n                key: 'drug-1',\n                content: this.getQueryLink('Vemurafenib')\n              }]\n            }, {\n              key: 'hgvsg',\n              content: [{key: 'hgvsg-0', content: 'HGVSg'}, {\n                key: 'hgvsg-1',\n                content: this.getQueryLink('7:g.140453136A>T')\n              }]\n            }, {\n              key: 'gc',\n              content: [{key: 'gc-0', content: 'Genomic Change'}, {\n                key: 'gc-1',\n                content: this.getQueryLink('7,140453136,140453136,A,T')\n              }]\n            }\n          ]}\n        />\n        <div style={{fontStyle: 'italic'}}>\n          <div>Notes:</div>\n          <div>\n            <ul style={{marginBottom: 0}}>\n              <li>The search box supports blurry search</li>\n              <li>HGVSg and GC searches default to GRCh37. To search variants in GRCh38, please add GRCh38 as\n                prefix.\n                Example: {this.getQueryLink('grch38:7:g.140753336A>T')}, {this.getQueryLink('grch38:7,140753336,140753336,A,T')}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <InfoIcon\n        type={'info'}\n        placement={'top'}\n        overlay={this.getOverlay()}\n        overlayClassName={'oncokb-search-overlay'}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { ExtendedTypeaheadSearchResp } from 'app/pages/HomePage';\nimport Select from 'react-select';\nimport {\n  SearchOption,\n  SearchOptionType,\n} from 'app/components/searchOption/SearchOption';\nimport { components } from 'react-select';\nimport { RouterStore } from 'mobx-react-router';\nimport oncokbPrivateClient from 'app/shared/api/oncokbPrivateClientInstance';\nimport {\n  getAllAlterationsName,\n  getAllTumorTypesName,\n} from 'app/shared/utils/Utils';\nimport { inject, observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport _ from 'lodash';\nimport AppStore from 'app/store/AppStore';\nimport SearchInfoIcon from 'app/components/oncokbSearch/SearchInfoIcon';\nimport { remoteData } from 'cbioportal-frontend-commons';\n\ninterface IOncoKBSearch {\n  routing?: RouterStore;\n  styles?: CSSRule;\n  appStore?: AppStore;\n}\n\n@inject('routing', 'appStore')\n@observer\nexport default class OncoKBSearch extends React.Component<IOncoKBSearch, {}> {\n  @observable keyword: string;\n  @observable selectInput: string;\n  @observable selectedOption: ExtendedTypeaheadSearchResp | null;\n\n  private timeout: any;\n\n  readonly options = remoteData<ExtendedTypeaheadSearchResp[]>({\n    invoke: async () => {\n      try {\n        return _.reduce(\n          await oncokbPrivateClient.searchTypeAheadGetUsingGET({\n            query: this.keyword,\n            limit: 20,\n          }),\n          (acc, result) => {\n            acc.push({\n              tumorTypesName: getAllTumorTypesName(result.tumorTypes),\n              alterationsName: getAllAlterationsName(result.variants),\n              ...result,\n            });\n            return acc;\n          },\n          [] as ExtendedTypeaheadSearchResp[]\n        );\n      } catch (error) {\n        const errorOptions: ExtendedTypeaheadSearchResp[] = [];\n        if (error) {\n          const errorContent = [];\n          if (error.name) {\n            errorContent.push(error.name);\n          }\n          if (error.message) {\n            errorContent.push(error.message);\n          }\n          errorOptions.push({\n            queryType: 'TEXT',\n            annotation: `Error on fetching result ${errorContent.join(' ')}`,\n          } as ExtendedTypeaheadSearchResp);\n        }\n        return errorOptions;\n      }\n    },\n  });\n\n  private debouncedUpdate = (searchTerm: string) => {\n    this.selectInput = searchTerm;\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.keyword = searchTerm;\n    }, 500);\n  };\n\n  render() {\n    const Option: React.FunctionComponent<any> = (props: any) => {\n      return (\n        <>\n          <components.Option {...props}>\n            <SearchOption\n              search={this.keyword}\n              type={props.data.queryType as SearchOptionType}\n              data={props.data}\n              appStore={this.props.appStore!}\n            >\n              <components.Option {...props} />\n            </SearchOption>\n          </components.Option>\n        </>\n      );\n    };\n    const NoOptionsMessage: React.FunctionComponent<any> = (props: any) => {\n      if (this.keyword) {\n        return (\n          <components.Option {...props}>\n            <span>No result found</span>\n          </components.Option>\n        );\n      } else {\n        return null;\n      }\n    };\n\n    return (\n      <div className={'d-flex align-items-center'}>\n        <div className={'flex-grow-1'}>\n          <Select\n            placeholder=\"Search Gene / Alteration / Cancer Type / Drug / Genomic Variant\"\n            components={{\n              Option,\n              DropdownIndicator: () => null,\n              IndicatorSeparator: () => null,\n              NoOptionsMessage,\n            }}\n            styles={{\n              input(styles) {\n                return {\n                  ...styles,\n                  lineHeight: '30px',\n                };\n              },\n              placeholder(styles) {\n                return {\n                  ...styles,\n                  width: '90%',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  lineHeight: '30px',\n                  textAlign: 'center',\n                };\n              },\n            }}\n            defaultOptions={[] as ExtendedTypeaheadSearchResp[]}\n            menuIsOpen={!!this.keyword}\n            isClearable={true}\n            value={this.selectedOption}\n            onChange={(value: ExtendedTypeaheadSearchResp, props) => {\n              if (value) {\n                this.keyword = '';\n                this.selectInput = '';\n                // We need to update the history in the onchange event so when user hits the enter key after search, it would work\n                this.props.routing!.history.push(value.link);\n              }\n            }}\n            closeMenuOnSelect={false}\n            inputValue={this.selectInput}\n            onInputChange={this.debouncedUpdate}\n            isLoading={this.options.isPending}\n            options={this.options.isPending ? [] : this.options.result}\n            // do not filter any option, that's down through the server side\n            filterOption={() => true}\n          />\n        </div>\n        <div className={'ml-2'}>\n          <SearchInfoIcon\n            onSelectQuery={newQuery => {\n              this.selectInput = newQuery;\n              this.keyword = newQuery;\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { Storage } from 'react-jhipster';\nimport { AppConfig } from 'app/appConfig';\nimport AppStore from 'app/store/AppStore';\nimport App from 'app/App';\nimport stores from 'app/App';\n\nexport const AUTH_UER_TOKEN_KEY = 'oncokb-user-token';\nexport const AUTH_WEBSITE_TOKEN_KEY = 'oncokb-website-token';\nexport const RECAPCHA_TOKEN_KEY = 'g-recaptcha-response';\n\nexport const getPublicWebsiteToken = () => {\n  return Storage.session.get(AUTH_WEBSITE_TOKEN_KEY);\n};\n\nexport const setPublicWebsiteToken = (pubWebToken: string) => {\n  Storage.session.set(AUTH_WEBSITE_TOKEN_KEY, pubWebToken);\n};\n\nexport const getStoredToken = () => {\n  return Storage.local.get(AUTH_UER_TOKEN_KEY) || getPublicWebsiteToken();\n};\n\nexport const setRecaptchaToken = (recaptchaToken: string) => {\n  Storage.session.set(RECAPCHA_TOKEN_KEY, recaptchaToken);\n};\n\nexport const getStoredRecaptchaToken = () => {\n  return Storage.session.get(RECAPCHA_TOKEN_KEY);\n};\n\nexport const assignPublicToken = () => {\n  // Inject the public website token to storage\n  if (AppConfig.serverConfig.token) {\n    setPublicWebsiteToken(AppConfig.serverConfig.token);\n  }\n};\n\nexport function initializeAPIClients() {\n  // we need to set the domain of our api clients\n  // add POST caching\n}\n","type OncoKBErrorResponseBody = {\n  type: string;\n  title: string;\n  status: number;\n  detail: string;\n  path: string;\n  message: string;\n  trialActivationKey?: string;\n};\ntype OncoKBResponse = Response & {\n  body?: OncoKBErrorResponseBody;\n};\n\nexport type OncoKBError = Error & {\n  response?: OncoKBResponse;\n};\n\nexport const getErrorMessage = (error: OncoKBError) => {\n  let errorMessage = error.message;\n  if (error.response && error.response.body) {\n    if (error.response.body.detail) {\n      errorMessage = error.response.body.detail;\n    } else if (error.response.body.title) {\n      errorMessage = error.response.body.title;\n    }\n  }\n  return errorMessage;\n};\n","import {\n  observable,\n  action,\n  computed,\n  IReactionDisposer,\n  reaction,\n} from 'mobx';\nimport { Storage } from 'react-jhipster';\nimport autobind from 'autobind-decorator';\nimport client from 'app/shared/api/clientInstance';\nimport { Token, UserDTO } from 'app/shared/api/generated/API';\nimport * as _ from 'lodash';\nimport { TOKEN_ABOUT_2_EXPIRE_NOTICE_IN_DAYS } from 'app/config/constants';\nimport {\n  getPublicWebsiteToken,\n  getStoredToken,\n  AUTH_UER_TOKEN_KEY,\n} from 'app/indexUtils';\nimport { notifyError } from 'app/shared/utils/NotificationUtils';\nimport { OncoKBError } from 'app/shared/alert/ErrorAlertUtils';\nimport { daysDiff } from 'app/shared/utils/Utils';\n\nexport const ACTION_TYPES = {\n  LOGIN: 'authentication/LOGIN',\n  GET_SESSION: 'authentication/GET_SESSION',\n  LOGOUT: 'authentication/LOGOUT',\n  CLEAR_AUTH: 'authentication/CLEAR_AUTH',\n  ERROR_MESSAGE: 'authentication/ERROR_MESSAGE',\n};\n\nexport enum ACCOUNT_STATUS {\n  REGULAR,\n  ABOUT_2_EXPIRED,\n  TRIAL_ABOUT_2_EXPIRED,\n  TRIAL_EXPIRED,\n  EXPIRED,\n}\n\nclass AuthenticationStore {\n  @observable loading = false;\n  @observable loginSuccess = false;\n  @observable loginError: OncoKBError | undefined; // Errors returned from server side\n  @observable showModalLogin = false;\n  @observable errorMessage = ''; // Errors returned from server side\n  @observable redirectMessage = '';\n  @observable idToken = '';\n  @observable logoutUrl = '';\n  @observable account: UserDTO | undefined;\n  @observable tokens: Token[] = [];\n\n  @observable userName = '';\n  @observable password = '';\n\n  readonly reactions: IReactionDisposer[] = [];\n\n  constructor() {\n    const existedToken = getStoredToken();\n    if (existedToken) {\n      this.idToken = existedToken;\n      if (this.idToken !== getPublicWebsiteToken()) {\n        this.getAccount();\n      }\n    }\n  }\n\n  @action\n  getAccount() {\n    return new Promise((resolve, reject) => {\n      client\n        .getAccountUsingGET({})\n        .then(account => {\n          this.account = account;\n          this.getAccountTokens();\n          resolve();\n        })\n        .catch(error => {\n          this.updateIdToken('');\n          notifyError(\n            new Error(\n              'There an issue fetching your account information, please send an email to contact@oncokb.org.'\n            )\n          );\n          reject(error);\n        });\n    });\n  }\n\n  @autobind\n  @action\n  getAccountTokens() {\n    return new Promise((resolve, reject) => {\n      client\n        .getTokensUsingGET({})\n        .then(tokens => {\n          this.tokens = tokens;\n          resolve(tokens);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  @autobind\n  @action\n  generateIdToken() {\n    return new Promise((resolve, reject) => {\n      client\n        .createTokenUsingPOST({})\n        .then((token: Token) => {\n          this.getAccountTokens()\n            .then(() => {\n              resolve(token);\n            })\n            .catch(error => {\n              reject(error);\n            });\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  @action\n  deleteToken(token: Token) {\n    return new Promise((resolve, reject) => {\n      client\n        .deleteTokenUsingDELETE({\n          token,\n        })\n        .then(() => {\n          if (token.token === this.idToken) {\n            if (this.tokens.length > 1) {\n              const match = _.find(\n                this.tokens,\n                (tokenItem: Token) => tokenItem.token !== this.idToken\n              );\n              if (match !== undefined) {\n                this.updateIdToken(match.token);\n              }\n            }\n          }\n          this.getAccountTokens()\n            .then((tokens: Token[]) => {\n              this.tokens = tokens;\n              resolve();\n            })\n            .catch(error => {\n              reject(error);\n            });\n        })\n        .catch((error: Error) => {\n          reject(error);\n        });\n    });\n  }\n\n  @computed\n  get isAuthenticated() {\n    return !!this.idToken;\n  }\n\n  @computed\n  get isUserAuthenticated() {\n    return this.isAuthenticated && this.account !== undefined;\n  }\n\n  @computed\n  get accountStatus() {\n    const tokenValid = this.tokens.filter(\n      token => new Date(token.expiration).getDate() <= Date.now()\n    );\n    const isTrialAccount =\n      this.tokens.filter(token => token.renewable).length < 1;\n    if (tokenValid.length > 0) {\n      const tokenAbout2Expire = this.tokens.filter(\n        token =>\n          daysDiff(token.expiration) <= TOKEN_ABOUT_2_EXPIRE_NOTICE_IN_DAYS\n      );\n      if (tokenAbout2Expire.length === tokenValid.length) {\n        return isTrialAccount\n          ? ACCOUNT_STATUS.TRIAL_ABOUT_2_EXPIRED\n          : ACCOUNT_STATUS.ABOUT_2_EXPIRED;\n      } else {\n        return ACCOUNT_STATUS.REGULAR;\n      }\n    } else {\n      return isTrialAccount\n        ? ACCOUNT_STATUS.TRIAL_EXPIRED\n        : ACCOUNT_STATUS.EXPIRED;\n    }\n  }\n\n  @autobind\n  @action\n  public login(username: string, password: string) {\n    this.loading = true;\n    client\n      .authorizeUsingPOST({\n        loginVm: {\n          username,\n          password,\n          rememberMe: false,\n        },\n      })\n      .then(this.loginSuccessCallback, this.loginErrorCallback);\n  }\n\n  @action.bound\n  loginSuccessCallback(result: string) {\n    const uuid = result;\n    this.updateIdToken(uuid);\n\n    // we should fetch the account info when the user is successfully logged in.\n    this.getAccount().finally(() => {\n      this.loginSuccess = true;\n      this.loading = false;\n      this.loginError = undefined;\n    });\n  }\n\n  @action\n  updateIdToken(newToken: string) {\n    Storage.local.set(AUTH_UER_TOKEN_KEY, newToken);\n    this.idToken = newToken;\n  }\n\n  @action.bound\n  loginErrorCallback(error: OncoKBError) {\n    this.loginSuccess = false;\n    this.loginError = error;\n    this.loading = false;\n  }\n\n  public clearAuthToken() {\n    if (Storage.local.get(AUTH_UER_TOKEN_KEY)) {\n      Storage.local.remove(AUTH_UER_TOKEN_KEY);\n    }\n    if (Storage.session.get(AUTH_UER_TOKEN_KEY)) {\n      Storage.session.remove(AUTH_UER_TOKEN_KEY);\n    }\n  }\n\n  @autobind\n  @action\n  public logout() {\n    // Remove user's token\n    this.clearAuthToken();\n    // Remove the account info as well\n    this.account = undefined;\n    // Revert back to public website token\n    this.idToken = getPublicWebsiteToken();\n  }\n\n  destroy() {\n    for (const item of this.reactions) {\n      item();\n    }\n  }\n}\n\nexport default AuthenticationStore;\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport styles from './styles.module.scss';\nimport { Container } from 'react-bootstrap';\nimport WindowStore from 'app/store/WindowStore';\nimport AuthenticationStore, {\n  ACCOUNT_STATUS,\n} from 'app/store/AuthenticationStore';\nimport { ContactLink } from 'app/shared/links/ContactLink';\nimport { computed } from 'mobx';\n\n@observer\nexport default class AccountMessage extends React.Component<\n  {\n    windowStore: WindowStore;\n    authStore: AuthenticationStore;\n  },\n  {}\n> {\n  @computed\n  get showAccountMessage() {\n    return (\n      this.props.authStore.accountStatus ===\n        ACCOUNT_STATUS.TRIAL_ABOUT_2_EXPIRED &&\n      this.props.authStore.isAuthenticated\n    );\n  }\n\n  render() {\n    return this.showAccountMessage ? (\n      <div className={styles.message}>\n        <Container\n          fluid={!this.props.windowStore.isXLscreen}\n          className={styles.messageContainer}\n        >\n          <div>\n            <i className={'fa fa-warning'}></i>\n            <span>\n              Your free trial is about to expire. Please reach out to{' '}\n              <ContactLink emailSubject={'Apply full Account'} /> for a full\n              account.\n            </span>\n          </div>\n        </Container>\n      </div>\n    ) : null;\n  }\n}\n","import * as React from 'react';\nimport { Container, Nav, Navbar } from 'react-bootstrap';\nimport oncokbImg from 'oncokb-styles/dist/images/logo/oncokb-white.svg';\nimport { observer } from 'mobx-react';\nimport WindowStore from 'app/store/WindowStore';\nimport { RouterStore } from 'mobx-react-router';\nimport { withRouter } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport AccountMenu from 'app/pages/menus/account';\nimport { action, observable } from 'mobx';\nimport {\n  MSK_LOGO_ICON_CUTOFF,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n  PAGE_TITLE,\n} from 'app/config/constants';\nimport UserMessage from 'app/components/userMessager/UserMessage';\nimport OncoKBSearch from 'app/components/oncokbSearch/OncoKBSearch';\nimport classnames from 'classnames';\nimport autobind from 'autobind-decorator';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport AccountMessage from 'app/components/accountMessage/AccountMessage';\nimport MskccLogo from 'app/components/MskccLogo';\nimport AppStore from 'app/store/AppStore';\nimport OptimizedImage from 'app/shared/image/OptimizedImage';\nimport { AppConfig } from 'app/appConfig';\nimport { Location } from 'history';\n\nexport interface IHeaderProps {\n  isUserAuthenticated: boolean;\n  isAdmin: boolean;\n  ribbonEnv: string;\n  isInProduction: boolean;\n  isSwaggerEnabled: boolean;\n  windowStore: WindowStore;\n  authStore: AuthenticationStore;\n  routing: RouterStore;\n  appStore: AppStore;\n}\n\ntype SubpageLink = {\n  title: string;\n  link: string;\n  matchedPaths?: PAGE_ROUTE[];\n};\n\nconst checkIfNavLinkIsActive = (\n  title: string,\n  location: Location,\n  subPages: SubpageLink[]\n) => {\n  const currentPage: SubpageLink | undefined = subPages.find(\n    page => page.title === title\n  );\n\n  if (!currentPage) return false;\n  const currentLink = currentPage.matchedPaths?.find(link =>\n    location.pathname.includes(link)\n  );\n\n  if (currentLink) return true;\n  return false;\n};\n\n// @ts-ignore\n@withRouter\n@observer\nclass Header extends React.Component<IHeaderProps> {\n  private subPages: SubpageLink[] = [\n    {\n      title: 'Levels of Evidence',\n      link: PAGE_ROUTE.V2,\n      matchedPaths: [\n        PAGE_ROUTE.V2,\n        PAGE_ROUTE.DX,\n        PAGE_ROUTE.PX,\n        PAGE_ROUTE.FDA_NGS,\n      ],\n    },\n    { title: 'Actionable Genes', link: PAGE_ROUTE.ACTIONABLE_GENE },\n    { title: 'Precision Oncology Therapies', link: PAGE_ROUTE.PO_TX },\n    { title: 'Cancer Genes', link: PAGE_ROUTE.CANCER_GENES },\n    {\n      title: 'API / License',\n      link: PAGE_ROUTE.API_ACCESS,\n      matchedPaths: [\n        PAGE_ROUTE.API_ACCESS,\n        PAGE_ROUTE.TERMS,\n        PAGE_ROUTE.REGISTER,\n      ],\n    },\n    {\n      title: 'About',\n      link: PAGE_ROUTE.ABOUT,\n      matchedPaths: [\n        PAGE_ROUTE.ABOUT,\n        PAGE_ROUTE.TEAM,\n        PAGE_ROUTE.FDA_RECOGNITION,\n        PAGE_ROUTE.SOP,\n        PAGE_ROUTE.YEAR_END_SUMMARY,\n      ],\n    },\n    { title: 'News', link: PAGE_ROUTE.NEWS },\n    { title: 'FAQ', link: PAGE_ROUTE.FAQ_ACCESS },\n  ];\n\n  @observable isNavExpanded = false;\n  @observable searchBarIsHovered = false;\n  private searchBarIsHoveredTimeout: number;\n\n  @action.bound\n  toggleNav() {\n    this.isNavExpanded = !this.isNavExpanded;\n  }\n\n  @action\n  closeNav(event: any) {\n    if (event.target.text !== PAGE_TITLE.ACCOUNT) {\n      this.isNavExpanded = false;\n    }\n  }\n\n  getLink(page: SubpageLink) {\n    return (\n      <NavLink\n        to={page.link}\n        key={page.title}\n        className={'mr-auto nav-item'}\n        isActive={(match, location) => {\n          if (\n            match ||\n            checkIfNavLinkIsActive(page.title, location, this.subPages)\n          )\n            return true;\n          return false;\n        }}\n      >\n        {page.title}\n      </NavLink>\n    );\n  }\n\n  @autobind\n  @action\n  updateSearchBarHover(status: boolean, timeout: number) {\n    if (this.searchBarIsHoveredTimeout) {\n      window.clearTimeout(this.searchBarIsHoveredTimeout);\n    }\n    this.searchBarIsHoveredTimeout = window.setTimeout(\n      () => (this.searchBarIsHovered = status),\n      timeout\n    );\n  }\n\n  @autobind\n  @action\n  enterSearchBar() {\n    this.updateSearchBarHover(true, 100);\n  }\n\n  @autobind\n  @action\n  leaveSearchBar() {\n    this.updateSearchBarHover(false, 500);\n  }\n\n  public render() {\n    return (\n      <>\n        <UserMessage\n          windowStore={this.props.windowStore}\n          show={true}\n          appStore={this.props.appStore}\n        />\n        <AccountMessage\n          windowStore={this.props.windowStore}\n          authStore={this.props.authStore}\n        />\n        <header className=\"sticky-top header\">\n          <Navbar\n            bg=\"oncokb\"\n            expand=\"lg\"\n            className=\"navbar-dark main-navbar\"\n            expanded={this.isNavExpanded}\n          >\n            <Container fluid={!this.props.windowStore.isLargeScreen}>\n              <Navbar.Brand>\n                <NavLink to={PAGE_ROUTE.HOME}>\n                  <OptimizedImage height={30} src={oncokbImg} alt={ONCOKB_TM} />\n                </NavLink>\n              </Navbar.Brand>\n              <Navbar.Toggle onClick={this.toggleNav} />\n              <Navbar.Collapse onClick={(event: any) => this.closeNav(event)}>\n                <Nav className=\"mr-auto\">\n                  {this.subPages.map(page => this.getLink(page))}\n                </Nav>\n                <Nav>\n                  {!this.isNavExpanded && (\n                    <>\n                      {this.searchBarIsHovered && (\n                        <span\n                          className={classnames(\n                            'position-relative',\n                            'nav-item'\n                          )}\n                          onMouseEnter={this.enterSearchBar}\n                          onMouseLeave={this.leaveSearchBar}\n                          onBlur={this.leaveSearchBar}\n                        >\n                          <span\n                            className={'position-absolute'}\n                            style={{ width: 500, right: 0, color: 'black' }}\n                          >\n                            <OncoKBSearch />\n                          </span>\n                        </span>\n                      )}\n                      {!this.searchBarIsHovered && (\n                        <Nav.Item\n                          style={{ paddingRight: 0 }}\n                          onMouseEnter={this.enterSearchBar}\n                          onMouseLeave={this.leaveSearchBar}\n                          onBlur={this.leaveSearchBar}\n                        >\n                          <i className={'fa fa-search'}></i>\n                        </Nav.Item>\n                      )}\n                    </>\n                  )}\n                  {AppConfig.serverConfig.enableAuth && (\n                    <AccountMenu\n                      isAuthenticated={this.props.isUserAuthenticated}\n                      isAdmin={this.props.isAdmin}\n                    />\n                  )}\n                  <Nav.Item style={{ paddingRight: 0 }}>\n                    <MskccLogo\n                      imageHeight={35}\n                      size={\n                        this.props.windowStore.isLargeScreen &&\n                        this.props.windowStore.size.width <=\n                          MSK_LOGO_ICON_CUTOFF\n                          ? 'sm'\n                          : 'lg'\n                      }\n                    />\n                  </Nav.Item>\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\ninterface IErrorBoundaryProps {\n  readonly children: JSX.Element | JSX.Element[];\n}\n\ninterface IErrorBoundaryState {\n  readonly error: any;\n  readonly errorInfo: any;\n}\n\nclass ErrorBoundary extends React.Component<\n  IErrorBoundaryProps,\n  IErrorBoundaryState\n> {\n  readonly state: IErrorBoundaryState = {\n    error: undefined,\n    errorInfo: undefined,\n  };\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    if (errorInfo) {\n      const errorDetails =\n        process.env.NODE_ENV === 'development' ? (\n          <details className=\"preserve-space\">\n            {error && error.toString()}\n            <br />\n            {errorInfo.componentStack}\n          </details>\n        ) : undefined;\n      return (\n        <div>\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\n          {errorDetails}\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Route, RouteProps, RouteComponentProps } from 'react-router-dom';\nimport ErrorBoundary from 'app/shared/error/error-boundary';\n\nexport const ErrorBoundaryRoute = ({\n  component,\n  render,\n  ...rest\n}: RouteProps) => {\n  const encloseInErrorBoundary = (props: RouteComponentProps) => (\n    <ErrorBoundary>\n      {render ? <>{render(props)}</> : React.createElement(component!, props)}\n    </ErrorBoundary>\n  );\n\n  if (!component && !render)\n    throw new Error(\n      `A component needs to be specified for path ${(rest as any).path}`\n    );\n\n  return <Route {...rest} render={encloseInErrorBoundary} />;\n};\n\nexport default ErrorBoundaryRoute;\n","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\n\nconst SmallPageContainer: React.FunctionComponent<{\n  size?: 'sm' | 'lg';\n  className?: string;\n}> = props => {\n  return (\n    <Row className={`justify-content-center ${props.className}`}>\n      <Col lg={props.size ? (props.size === 'sm' ? '6' : '8') : '6'}>\n        {props.children}\n      </Col>\n    </Row>\n  );\n};\nexport default SmallPageContainer;\n","import { Button, ButtonProps } from 'react-bootstrap';\nimport LoadingIndicator from '../../components/loadingIndicator/LoadingIndicator';\nimport React from 'react';\n\nexport const LoadingButton: React.FunctionComponent<\n  {\n    loading: boolean;\n  } & ButtonProps &\n    React.HTMLAttributes<HTMLButtonElement>\n> = props => {\n  const { loading, ...rest } = props;\n  return (\n    <Button {...rest}>\n      {loading ? (\n        <LoadingIndicator isLoading={true} color=\"white\" />\n      ) : (\n        props.children\n      )}\n    </Button>\n  );\n};\n","import { ONCOKB_TM } from 'app/config/constants';\n\nexport const UNAUTHORIZED_NOT_ACTIVATED_ENDS_WITH = 'not activated';\nexport const UNAUTHORIZED_EXPIRED = 'Your account has expired';\nexport const UNAUTHORIZED_TRIAL_ACCOUNT_EXPIRED =\n  'Your trial account has expired';\nexport const UNAUTHORIZED_NOT_APPROVED_ENDS_WITH = 'not approved';\nexport const UNAUTHORIZED_LICENSE_AGREEMENT_NOT_ACCEPTED = `You have not accepted the ${ONCOKB_TM} trial license agreement`;\n","import { AppConfig } from 'app/appConfig';\nimport * as Sentry from '@sentry/react';\n\n/* eslint no-console: 0 */\n\ndeclare global {\n  interface Window {\n    grecaptcha: any;\n  }\n}\n\nconst loadReCaptcha = (siteKey: string) => {\n  const script = document.createElement('script');\n  script.src = `https://www.google.com/recaptcha/enterprise.js?render=${siteKey}`;\n  document.body.appendChild(script);\n};\n\nexport default class ReCAPTCHA {\n  siteKey: string;\n\n  constructor() {\n    this.siteKey = AppConfig.serverConfig.recaptchaSiteKey;\n    if (this.siteKey !== '' && this.siteKey !== null) {\n      loadReCaptcha(this.siteKey);\n    } else {\n      console.log('Recaptcha is not enabled. Site key not added.');\n    }\n  }\n\n  async getToken(): Promise<string> {\n    let token = '';\n    if (this.siteKey !== '' && this.siteKey !== null) {\n      await window.grecaptcha.enterprise\n        .execute(this.siteKey)\n        .then((res: string) => {\n          token = res;\n        })\n        .catch((error: Error) => {\n          if (AppConfig.serverConfig?.sentryProjectId) {\n            Sentry.captureException(error);\n          }\n        });\n    }\n    return token;\n  }\n}\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport { RouterStore } from 'mobx-react-router';\nimport { inject, observer } from 'mobx-react';\nimport { action, computed, observable } from 'mobx';\nimport SmallPageContainer from 'app/components/SmallPageContainer';\nimport { AvField, AvForm } from 'availity-reactstrap-validation';\nimport { Alert, Col, Row } from 'react-bootstrap';\nimport { LoadingButton } from 'app/shared/button/LoadingButton';\nimport {\n  UNAUTHORIZED_EXPIRED,\n  UNAUTHORIZED_LICENSE_AGREEMENT_NOT_ACCEPTED,\n  UNAUTHORIZED_NOT_ACTIVATED_ENDS_WITH,\n} from 'app/shared/api/errorMessages';\nimport { getErrorMessage } from 'app/shared/alert/ErrorAlertUtils';\nimport client from 'app/shared/api/clientInstance';\nimport { LoginVM } from 'app/shared/api/generated/API';\nimport {\n  PAGE_ROUTE,\n  TOKEN_ABOUT_2_EXPIRE_NOTICE_IN_DAYS,\n} from 'app/config/constants';\nimport { TrialActivationPageLink } from 'app/shared/utils/UrlUtils';\nimport { AppConfig } from 'app/appConfig';\nimport ReCAPTCHA from 'app/shared/recaptcha/recaptcha';\nimport { setRecaptchaToken } from 'app/indexUtils';\nexport interface ILoginProps {\n  authenticationStore: AuthenticationStore;\n  routing: RouterStore;\n}\n\n@inject('authenticationStore', 'routing')\n@observer\nexport default class LoginPage extends React.Component<ILoginProps> {\n  @observable savedCredential: LoginVM;\n\n  @observable resendingVerification = false;\n  @observable resendVerificationMessage: string;\n\n  recaptcha = new ReCAPTCHA();\n\n  resentEmail = async () => {\n    this.resendingVerification = true;\n    const token: string = await this.recaptcha.getToken();\n    setRecaptchaToken(token);\n    client\n      .resendVerificationUsingPOST({\n        loginVm: this.savedCredential,\n      })\n      .then(\n        () => {\n          this.resendVerificationMessage = 'Email sent';\n        },\n        error => {\n          this.resendVerificationMessage = `There is an error: ${error.message}`;\n        }\n      )\n      .finally(() => {\n        this.resendingVerification = false;\n      });\n  };\n\n  @computed get showResendInfo() {\n    if (this.props.authenticationStore.loginError) {\n      const errorMessage = getErrorMessage(\n        this.props.authenticationStore.loginError\n      );\n      return [\n        UNAUTHORIZED_NOT_ACTIVATED_ENDS_WITH,\n        UNAUTHORIZED_EXPIRED,\n      ].some(str => errorMessage.endsWith(str));\n    } else {\n      return false;\n    }\n  }\n\n  @computed\n  get trialActivationLink() {\n    if (this.props.authenticationStore.loginError) {\n      const errorMessage = getErrorMessage(\n        this.props.authenticationStore.loginError\n      );\n      if (errorMessage.endsWith(UNAUTHORIZED_LICENSE_AGREEMENT_NOT_ACCEPTED)) {\n        const trialActivationKey = this.props.authenticationStore.loginError\n          .response?.body.trialActivationKey;\n        if (trialActivationKey) {\n          return (\n            <TrialActivationPageLink\n              trialActivationKey={trialActivationKey}\n              onRedirect={() =>\n                (this.props.authenticationStore.loginError = undefined)\n              }\n            />\n          );\n        }\n      }\n    }\n    return null;\n  }\n\n  @action\n  handleLogin = (\n    event: any,\n    errors: any,\n    { email, password }: { email: string; password: string }\n  ) => {\n    this.savedCredential = {\n      username: email,\n      password,\n      rememberMe: false,\n    };\n    this.props.authenticationStore.login(email, password);\n  };\n\n  render() {\n    const { from } = this.props.routing.location.state || {\n      from: { pathname: '/', search: location.search },\n    };\n    if (\n      !AppConfig.serverConfig.enableAuth ||\n      this.props.authenticationStore.isUserAuthenticated\n    ) {\n      return <Redirect to={from} />;\n    }\n    return (\n      <SmallPageContainer>\n        <AvForm onSubmit={this.handleLogin}>\n          <Row>\n            <Col md=\"12\">\n              {this.props.authenticationStore.loginError ? (\n                <>\n                  <Alert variant={'danger'}>\n                    <div>\n                      {getErrorMessage(\n                        this.props.authenticationStore.loginError\n                      )}\n                      <div>{this.trialActivationLink}</div>\n                    </div>\n                  </Alert>\n                  {this.showResendInfo && (\n                    <>\n                      <Alert variant={'info'}>\n                        We have emailed you a verification link. Did not receive\n                        the verification email?{' '}\n                        <LoadingButton\n                          variant=\"primary\"\n                          size={'sm'}\n                          onClick={this.resentEmail}\n                          loading={this.resendingVerification}\n                        >\n                          <span>Resend email</span>\n                        </LoadingButton>\n                      </Alert>\n                      {this.resendVerificationMessage && (\n                        <Alert variant={'info'}>\n                          {this.resendVerificationMessage}\n                        </Alert>\n                      )}\n                    </>\n                  )}\n                </>\n              ) : null}\n            </Col>\n            <Col md=\"12\">\n              <AvField\n                name=\"email\"\n                label=\"Email\"\n                placeholder=\"Your email address\"\n                type=\"text\"\n                required\n                autoFocus\n              />\n              <AvField\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                placeholder=\"Your password\"\n                required\n                errorMessage=\"Password cannot be empty\"\n              />\n            </Col>\n          </Row>\n          <div className=\"mt-1\">&nbsp;</div>\n          <Alert variant=\"warning\">\n            <Link to={PAGE_ROUTE.ACCOUNT_PASSWORD_RESET_REQUEST}>\n              Did you forget your password?\n            </Link>\n          </Alert>\n          <Alert variant=\"warning\">\n            <span>You don&apos;t have an account yet?</span>{' '}\n            <Link to={PAGE_ROUTE.REGISTER}>Register a new account</Link>\n          </Alert>\n          <LoadingButton\n            variant=\"primary\"\n            type=\"submit\"\n            loading={this.props.authenticationStore.loading}\n          >\n            <span>Log in</span>\n          </LoadingButton>\n        </AvForm>\n      </SmallPageContainer>\n    );\n  }\n}\n","import React from 'react';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport { inject } from 'mobx-react';\nimport { observable, action } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { Redirect } from 'react-router-dom';\nimport { Row } from 'react-bootstrap';\nimport { PAGE_ROUTE } from 'app/config/constants';\n\n@inject('authenticationStore')\n@observer\nexport class Logout extends React.Component<{\n  authenticationStore: AuthenticationStore;\n}> {\n  @observable redirect = false;\n\n  @action toggleRedirect = () => (this.redirect = !this.redirect);\n\n  componentDidMount() {\n    this.props.authenticationStore.logout();\n    setTimeout(this.toggleRedirect, 1000);\n  }\n\n  render() {\n    const logoutUrl = this.props.authenticationStore.logoutUrl;\n    if (logoutUrl) {\n      // if Keycloak, logoutUrl has protocol/openid-connect in it\n      window.location.href = logoutUrl.includes('/protocol')\n        ? logoutUrl + '?redirect_uri=' + window.location.origin\n        : logoutUrl +\n          '?id_token_hint=' +\n          this.props.authenticationStore.idToken +\n          '&post_logout_redirect_uri=' +\n          window.location.origin;\n    }\n\n    if (this.redirect) {\n      return <Redirect to={PAGE_ROUTE.HOME} />;\n    } else {\n      return (\n        <Row className=\"justify-content-center\">\n          <h4>Logged out successfully!</h4>\n        </Row>\n      );\n    }\n  }\n}\n","export function isAuthorized(\n  userAuthorities: string[],\n  hasAnyAuthorities: string[]\n) {\n  if (userAuthorities && userAuthorities.length !== 0) {\n    if (hasAnyAuthorities.length === 0) {\n      return true;\n    }\n    return hasAnyAuthorities.some(auth => userAuthorities.includes(auth));\n  }\n  return false;\n}\n","import React from 'react';\nimport {\n  Route,\n  Redirect,\n  RouteProps,\n  RouteComponentProps,\n} from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport ErrorBoundary from 'app/shared/error/error-boundary';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport { RouterStore } from 'mobx-react-router';\nimport { PAGE_ROUTE } from 'app/config/constants';\nimport { isAuthorized } from 'app/shared/auth/AuthUtils';\nimport { getRedirectLoginState } from 'app/shared/utils/Utils';\nimport { AppConfig } from 'app/appConfig';\n\nexport interface IPrivateRouteProps extends RouteProps {\n  authenticationStore: AuthenticationStore;\n  routing: RouterStore;\n  hasAnyAuthorities?: string[];\n}\n\nexport const PrivateRoute = observer(\n  ({\n    component,\n    render,\n    authenticationStore,\n    hasAnyAuthorities,\n    routing,\n    ...rest\n  }: IPrivateRouteProps) => {\n    const userAuthorities = authenticationStore.account\n      ? authenticationStore.account.authorities\n      : [];\n    const userIsAuthorized = hasAnyAuthorities\n      ? isAuthorized(userAuthorities, hasAnyAuthorities)\n      : true;\n    const checkAuthorities = (props: RouteComponentProps) => {\n      return userIsAuthorized ? (\n        <ErrorBoundary>\n          {render ? (\n            <>{render(props)}</>\n          ) : (\n            React.createElement(component!, props)\n          )}\n        </ErrorBoundary>\n      ) : (\n        <div className=\"insufficient-authority\">\n          <div className=\"alert alert-danger\">\n            You are not authorized to access this page.\n          </div>\n        </div>\n      );\n    };\n\n    const renderRedirect = (props: RouteComponentProps) => {\n      if (authenticationStore.isUserAuthenticated) {\n        return checkAuthorities(props);\n      } else {\n        return (\n          <Redirect\n            to={{\n              state: getRedirectLoginState(\n                routing.location.pathname,\n                routing.location.search,\n                routing.location.hash\n              ),\n              pathname: AppConfig.serverConfig.enableAuth\n                ? PAGE_ROUTE.LOGIN\n                : PAGE_ROUTE.HOME,\n            }}\n          />\n        );\n      }\n    };\n\n    if (!component && !render)\n      throw new Error(\n        `A component needs to be specified for private route for path ${\n          (rest as any).path\n        }`\n      );\n\n    return <Route {...rest} render={renderRedirect} />;\n  }\n);\n","import React from 'react';\nimport styles from './HighlightLinkButton.module.scss';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nexport const HighlightLinkButton: React.FunctionComponent<{\n  href?: string;\n}> = props => {\n  const component = !props.href ? (\n    <span className={classnames('btn', styles.highlight, styles.withoutHref)}>\n      {props.children}\n    </span>\n  ) : (\n    <span className={classnames('btn', styles.highlight, styles.withHref)}>\n      <Link to={props.href}>{props.children}</Link>\n    </span>\n  );\n  return component;\n};\n","import React from 'react';\nimport { HighlightLinkButton } from 'app/components/highlightLinkButton/HighlightLinkButton';\nimport LoadingIndicator, {\n  LoaderSize,\n} from 'app/components/loadingIndicator/LoadingIndicator';\nimport { COLOR_BLUE } from 'app/config/theme';\n\ntype HomePageNumberProps = {\n  number: number;\n  title: string;\n  href?: string;\n  isLoading?: boolean;\n};\nexport const HomePageNumber: React.FunctionComponent<HomePageNumberProps> = props => {\n  return (\n    <div className=\"d-flex flex-column align-items-center\">\n      <HighlightLinkButton href={props.href}>\n        {props.isLoading ? (\n          <LoadingIndicator isLoading size={LoaderSize.SMALL} />\n        ) : (\n          <span>{props.number}</span>\n        )}\n      </HighlightLinkButton>\n      <span className=\"mt-1\">{props.title}</span>\n    </div>\n  );\n};\n","import React, { CSSProperties } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { LEVEL_BUTTON_DESCRIPTION, LEVELS } from 'app/config/constants';\nimport pluralize from 'pluralize';\nimport * as styles from './LevelButton.module.scss';\nimport classnames from 'classnames';\nimport { inject } from 'mobx-react';\nimport { RouterStore } from 'mobx-react-router';\nimport { FdaLevelIcon, OncoKBLevelIcon } from 'app/shared/utils/Utils';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport WithSeparator from 'react-with-separator';\nimport LoadingIndicator, {\n  LoaderSize,\n} from 'app/components/loadingIndicator/LoadingIndicator';\n\ntype LevelButtonProps = {\n  level: LEVELS;\n  routing?: RouterStore;\n  title?: string;\n  numOfGenes: number;\n  description: string;\n  onClick?: () => void;\n  className?: string;\n  style?: CSSProperties;\n  active?: boolean;\n  href?: string;\n  disabled?: boolean;\n  disabledTooltip?: string | JSX.Element;\n  isLoading?: boolean;\n};\n\nexport const LevelButton = inject('routing')((props: LevelButtonProps) => {\n  const onClick = () => {\n    if (props.href) {\n      props.routing!.history.push(props.href);\n    }\n    if (props.onClick) {\n      props.onClick();\n    }\n  };\n  const buttonDisabled =\n    props.disabled === undefined ? props.numOfGenes === 0 : props.disabled;\n\n  return (\n    <DefaultTooltip\n      overlay={() => props.disabledTooltip}\n      placement=\"bottom\"\n      disabled={!buttonDisabled || !props.disabledTooltip}\n    >\n      <div>\n        <Button\n          variant=\"light\"\n          onClick={onClick}\n          active={props.active}\n          href={props.href}\n          disabled={buttonDisabled}\n          style={props.style}\n          className={classnames(\n            props.href ? styles.levelButtonLink : styles.levelButton,\n            props.className,\n            'font-medium'\n          )}\n        >\n          <div\n            className={classnames(\n              `oncokb level-${props.level} d-flex justify-content-center align-items-center`,\n              styles.levelName\n            )}\n          >\n            {props.level.startsWith('Fda') ? (\n              <FdaLevelIcon level={props.level} withDescription={true} />\n            ) : (\n              <OncoKBLevelIcon level={props.level} withDescription={true} />\n            )}\n            <span className={'ml-1 mr-3'}>\n              {props.title ? props.title : `Level ${props.level}`}\n            </span>\n          </div>\n          <div className={styles.levelDescription}>{props.description}</div>\n          {props.isLoading ? (\n            <LoadingIndicator isLoading size={LoaderSize.SMALL} />\n          ) : (\n            <div\n              className={classnames(\n                `oncokb level-${props.level}`,\n                styles.geneNumber\n              )}\n            >{`${props.numOfGenes} ${pluralize(\n              'Gene',\n              props.numOfGenes\n            )}`}</div>\n          )}\n        </Button>\n      </div>\n    </DefaultTooltip>\n  );\n});\n","import React from 'react';\nimport _ from 'lodash';\nimport { Linkout } from 'app/shared/links/Linkout';\nimport { PMIDLink } from 'app/shared/links/PMIDLink';\nimport { concatElements, concatElementsByComma } from 'app/shared/utils/Utils';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport * as styles from 'app/index.module.scss';\nimport { ONCOKB_TM } from 'app/config/constants';\n\nconst DrugLabel: React.FunctionComponent<{ drug: any }> = props => {\n  const drugLabelText = `drug label ${\n    props.drug.drugLabelDate ? props.drug.drugLabelDate : ''\n  }`;\n  return props.drug.drugLabel ? (\n    <Linkout link={props.drug.drugLabel}>{drugLabelText}</Linkout>\n  ) : (\n    <span className={styles.linkOutText}>{drugLabelText}</span>\n  );\n};\n\nfunction hasDrugLabelInfo(treatment: any, drugs: any) {\n  return _.some(treatment.drugs, drug => _.has(drugs, drug));\n}\n\nfunction getTreatmentDrugLabels(treatment: any, drugs: any) {\n  if (treatment.drugs.length > 1) {\n    return (\n      <DefaultTooltip\n        overlay={\n          <>\n            {treatment.drugs.map((drug: any) => (\n              <div>\n                {drug}: <DrugLabel drug={drugs[drug]} />\n              </div>\n            ))}\n          </>\n        }\n      >\n        <span className={styles.linkOutText}>drug label</span>\n      </DefaultTooltip>\n    );\n  } else {\n    return <DrugLabel drug={drugs[treatment.drugs[0]]} />;\n  }\n}\nexport function getReferenceCell(data: any) {\n  let treatments: JSX.Element[] = [];\n  _.each(data.treatments, (treatment: any) => {\n    const treatmentName = treatment.drugs.join('+');\n    const fdaText = 'FDA-approval announcement';\n    const fdaElement = treatment.fdaApproval ? (\n      <Linkout link={treatment.fdaApproval}>{fdaText}</Linkout>\n    ) : (\n      <span>{fdaText}</span>\n    );\n\n    if (treatment.fdaApproval) {\n      treatments.push(\n        <div key={treatmentName}>\n          {treatmentName}: {fdaElement}{' '}\n          {hasDrugLabelInfo(treatment, data.drugs) ? (\n            <span>and {getTreatmentDrugLabels(treatment, data.drugs)}</span>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    } else {\n      treatments.push(\n        <div key={treatmentName}>\n          {treatmentName}:\n          {hasDrugLabelInfo(treatment, data.drugs) ? (\n            <span> {getTreatmentDrugLabels(treatment, data.drugs)}</span>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    }\n  });\n\n  const uniqueDrugsInTreatment = _.uniq(\n    _.reduce(\n      data.treatments,\n      (acc, next) => {\n        acc = acc.concat(next.drugs);\n        return acc;\n      },\n      []\n    )\n  );\n  const drugsNotInTreatmentList = _.filter(\n    _.keys(data.drugs),\n    drug => !_.includes(uniqueDrugsInTreatment, drug)\n  );\n  treatments = treatments.concat(\n    drugsNotInTreatmentList.map(drug => (\n      <div>\n        {drug}: <DrugLabel drug={data.drugs[drug]} />\n      </div>\n    ))\n  );\n  const renderContent = [];\n\n  if (treatments.length > 0) renderContent.push(<div>{treatments}</div>);\n\n  if (data.pmids)\n    renderContent.push(\n      <div>\n        <PMIDLink pmids={data.pmids} />\n      </div>\n    );\n\n  if (data.abstractList.length > 0)\n    renderContent.push(\n      <div>\n        Abstract(s):{' '}\n        {concatElementsByComma(\n          data.abstractList.map((abstract: any) => (\n            <Linkout link={abstract.link}>{abstract.abstract}</Linkout>\n          ))\n        )}\n      </div>\n    );\n\n  if (data.nccn) renderContent.push(<div>{data.nccn}</div>);\n  return (\n    <div key={data.alteration}>{concatElements(renderContent, <br />)}</div>\n  );\n}\n\nexport const FDA_L1_DISABLED_BTN_TOOLTIP = `Since ${ONCOKB_TM} does not include any CDx claims prescriptive for a specific therapeutic product, by definition, no variants in ${ONCOKB_TM} are considered FDA Level 1.`;\n","import * as React from 'react';\nimport { action, IReactionDisposer, observable, reaction } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport { remoteData } from 'cbioportal-frontend-commons';\nimport classnames from 'classnames';\nimport oncokbPrivateClient from '../shared/api/oncokbPrivateClientInstance';\nimport {\n  Gene,\n  LevelNumber,\n  TypeaheadSearchResp,\n} from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { HomePageNumber } from 'app/components/HomePageNumber';\nimport pluralize from 'pluralize';\nimport {\n  FdaRecognitionDisclaimer,\n  LEVEL_BUTTON_DESCRIPTION,\n  LEVEL_CLASSIFICATION,\n  LEVEL_TYPE_NAMES,\n  LEVEL_TYPES,\n  LEVELS,\n  PAGE_ROUTE,\n} from 'app/config/constants';\nimport { LevelButton } from 'app/components/levelButton/LevelButton';\nimport { levelOfEvidence2Level } from 'app/shared/utils/Utils';\nimport { RouterStore } from 'mobx-react-router';\nimport { CitationText } from 'app/components/CitationText';\nimport _ from 'lodash';\nimport AppStore from 'app/store/AppStore';\nimport OncoKBSearch from 'app/components/oncokbSearch/OncoKBSearch';\nimport autobind from 'autobind-decorator';\nimport * as QueryString from 'query-string';\nimport { FDA_L1_DISABLED_BTN_TOOLTIP } from 'app/pages/genePage/FdaUtils';\nimport { COLOR_DARK_BLUE } from 'app/config/theme';\nimport WindowStore from 'app/store/WindowStore';\n\ninterface IHomeProps {\n  content: string;\n  routing: RouterStore;\n  appStore: AppStore;\n  windowStore: WindowStore;\n}\n\nexport type ExtendedTypeaheadSearchResp = TypeaheadSearchResp & {\n  alterationsName: string;\n  tumorTypesName: string;\n};\n\n@inject('routing', 'appStore', 'windowStore')\n@observer\nclass HomePage extends React.Component<IHomeProps, {}> {\n  @observable keyword = '';\n  @observable levelTypeSelected = LEVEL_TYPES.TX;\n  private levelGadgets = this.generateLevelGadgets();\n\n  readonly reactions: IReactionDisposer[] = [];\n\n  updateLocationHash = (newSelectedType: LEVEL_TYPES) => {\n    window.location.hash = QueryString.stringify({\n      levelType: newSelectedType,\n    });\n  };\n\n  constructor(props: Readonly<IHomeProps>) {\n    super(props);\n    this.reactions.push(\n      reaction(\n        () => [props.routing.location.hash],\n        ([hash]) => {\n          const queryStrings = QueryString.parse(hash) as {\n            levelType: LEVEL_TYPES;\n          };\n          if (queryStrings.levelType) {\n            this.levelTypeSelected = queryStrings.levelType;\n          }\n        },\n        { fireImmediately: true }\n      ),\n      reaction(\n        () => this.levelTypeSelected,\n        newSelectedType => this.updateLocationHash(newSelectedType)\n      )\n    );\n  }\n\n  componentWillUnmount(): void {\n    this.reactions.forEach(componentReaction => componentReaction());\n  }\n\n  generateLevelGadgets() {\n    const levelGadgets: {\n      title?: string;\n      description: string;\n      level: LEVELS;\n      linkoutLevel: string;\n      combinedLevels: LEVELS[];\n    }[] = [];\n    for (const level in LEVELS) {\n      if (LEVELS[level]) {\n        switch (LEVELS[level]) {\n          case LEVELS.R1:\n            levelGadgets.push({\n              level: LEVELS.R1,\n              description: 'Resistance',\n              title: `Level ${LEVELS.R1}/${LEVELS.R2}`,\n              linkoutLevel: `${LEVELS.R1},${LEVELS.R2}`,\n              combinedLevels: [LEVELS.R1, LEVELS.R2],\n            });\n            break;\n          case LEVELS.R2:\n            break;\n          case LEVELS.Tx3A:\n            break;\n          case LEVELS.Tx3B:\n            break;\n          default:\n            levelGadgets.push({\n              level: LEVELS[level],\n              description: LEVEL_BUTTON_DESCRIPTION[LEVELS[level]],\n              linkoutLevel: LEVELS[level],\n              combinedLevels: [LEVELS[level]],\n            });\n        }\n      }\n    }\n    return levelGadgets;\n  }\n\n  readonly levelNumbers = remoteData<{ [level: string]: LevelNumber }>({\n    await: () => [],\n    async invoke() {\n      const levelNumber = await oncokbPrivateClient.utilsNumbersLevelsGetUsingGET(\n        {}\n      );\n      return Promise.resolve(\n        _.reduce(\n          levelNumber,\n          (acc, next) => {\n            acc[levelOfEvidence2Level(next.level, true)] = next;\n            return acc;\n          },\n          {} as { [level: string]: LevelNumber }\n        )\n      );\n    },\n    default: {},\n  });\n\n  getLevelGenes(levels: string[]) {\n    return _.uniq(\n      _.reduce(\n        levels,\n        (acc, level) => {\n          acc.push(\n            ...(this.levelNumbers.result[level]\n              ? this.levelNumbers.result[level].genes\n              : [])\n          );\n          return acc;\n        },\n        [] as Gene[]\n      ).map(gene => gene.hugoSymbol)\n    );\n  }\n\n  getLevelNumber(levels: LEVELS[]) {\n    return this.getLevelGenes(levels).length;\n  }\n\n  @autobind\n  @action\n  handleLevelTypeButton(type: any) {\n    this.levelTypeSelected = type;\n  }\n\n  public render() {\n    const levelTypeButtons = [];\n    for (const key in LEVEL_TYPES) {\n      if (LEVEL_TYPES[key]) {\n        levelTypeButtons.push(\n          <Button\n            key={`button-tab-${LEVEL_TYPES[key]}`}\n            className=\"my-2\"\n            variant={\n              this.levelTypeSelected === LEVEL_TYPES[key] ? 'primary' : 'light'\n            }\n            size={'lg'}\n            onClick={() => this.handleLevelTypeButton(LEVEL_TYPES[key])}\n          >\n            {LEVEL_TYPE_NAMES[LEVEL_TYPES[key]]} Levels\n          </Button>\n        );\n      }\n    }\n    return (\n      <div className=\"home\">\n        <Row className=\"mb-5\">\n          <Col\n            md={8}\n            className={'mx-auto d-flex flex-column align-items-center '}\n          >\n            <div\n              className=\"text-center font-bold\"\n              style={{ fontSize: '3.5em', color: COLOR_DARK_BLUE }}\n            >\n              Welcome to OncoKB\n              <sup\n                style={{\n                  fontSize: '0.5rem',\n                  verticalAlign: 'text-top',\n                  top: '0.7rem',\n                }}\n              >\n                TM\n              </sup>\n            </div>\n            <div className=\"text-center\" style={{ fontSize: '2em' }}>\n              MSK's Precision Oncology Knowledge Base\n            </div>\n            <div className=\"text-center\" style={{ fontSize: '1.4em' }}>\n              An FDA-Recognized Human Genetic Variant Database<span>&#42;</span>\n            </div>\n          </Col>\n        </Row>\n        <Row className=\"mb-5\">\n          <Col md={8} className={'mx-auto'}>\n            <Row>\n              <Col xs={12} md={6} lg={3}>\n                <HomePageNumber\n                  isLoading={this.props.appStore.mainNumbers.isPending}\n                  href={'/cancerGenes'}\n                  number={this.props.appStore.mainNumbers.result.gene}\n                  title={`${pluralize(\n                    'Gene',\n                    this.props.appStore.mainNumbers.result.gene\n                  )}`}\n                />\n              </Col>\n              <Col xs={12} md={6} lg={3}>\n                <HomePageNumber\n                  isLoading={this.props.appStore.mainNumbers.isPending}\n                  href={PAGE_ROUTE.ACTIONABLE_GENE}\n                  number={this.props.appStore.mainNumbers.result.alteration}\n                  title={`${pluralize(\n                    'Alteration',\n                    this.props.appStore.mainNumbers.result.alteration\n                  )}`}\n                />\n              </Col>\n              <Col xs={12} md={6} lg={3}>\n                <HomePageNumber\n                  isLoading={this.props.appStore.mainNumbers.isPending}\n                  href={PAGE_ROUTE.ACTIONABLE_GENE}\n                  number={this.props.appStore.mainNumbers.result.tumorType}\n                  title={`${pluralize(\n                    'Cancer Type',\n                    this.props.appStore.mainNumbers.result.tumorType\n                  )}`}\n                />\n              </Col>\n              <Col xs={12} md={6} lg={3}>\n                <HomePageNumber\n                  isLoading={this.props.appStore.mainNumbers.isPending}\n                  href={PAGE_ROUTE.ACTIONABLE_GENE}\n                  number={this.props.appStore.mainNumbers.result.drug}\n                  title={`${pluralize(\n                    'Drug',\n                    this.props.appStore.mainNumbers.result.drug\n                  )}`}\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"mb-5\">\n          <Col md={8} className={'mx-auto'}>\n            <OncoKBSearch />\n          </Col>\n        </Row>\n        <Row className=\"mb-2\">\n          <Col xs={0} lg={2}></Col>\n          <Col xs={12} lg={8}>\n            <div\n              className={classnames(\n                'd-flex justify-content-around',\n                this.props.windowStore.isMDScreen ? undefined : 'flex-column'\n              )}\n              style={{ width: '100%' }}\n            >\n              {levelTypeButtons}\n            </div>\n          </Col>\n          <Col xs={0} lg={2}></Col>\n        </Row>\n        <Row className=\"my-3 d-flex d-flex justify-content-between\">\n          <Col\n            xs={0}\n            lg={this.levelTypeSelected === LEVEL_TYPES.TX ? 1 : 1}\n          ></Col>\n          {this.levelGadgets.map(\n            levelGadget =>\n              ((this.levelTypeSelected === LEVEL_TYPES.DX &&\n                LEVEL_CLASSIFICATION[levelGadget.level] === LEVEL_TYPES.DX) ||\n                (this.levelTypeSelected === LEVEL_TYPES.PX &&\n                  LEVEL_CLASSIFICATION[levelGadget.level] === LEVEL_TYPES.PX) ||\n                (this.levelTypeSelected === LEVEL_TYPES.TX &&\n                  LEVEL_CLASSIFICATION[levelGadget.level] === LEVEL_TYPES.TX) ||\n                (this.levelTypeSelected === LEVEL_TYPES.FDA &&\n                  LEVEL_CLASSIFICATION[levelGadget.level] ===\n                    LEVEL_TYPES.FDA)) && (\n                <Col\n                  xs={12}\n                  sm={6}\n                  lg={this.levelTypeSelected === LEVEL_TYPES.TX ? 2 : 3}\n                  key={levelGadget.level}\n                  style={{ minHeight: 125 }}\n                >\n                  <LevelButton\n                    key={`${levelGadget.level}-button`}\n                    level={levelGadget.level}\n                    disabledTooltip={\n                      levelGadget.level === LEVELS.Fda1\n                        ? FDA_L1_DISABLED_BTN_TOOLTIP\n                        : ''\n                    }\n                    numOfGenes={this.getLevelNumber(levelGadget.combinedLevels)}\n                    description={levelGadget.description}\n                    title={\n                      LEVEL_CLASSIFICATION[levelGadget.level] ===\n                      LEVEL_TYPES.FDA\n                        ? `FDA Level ${levelGadget.level\n                            .toString()\n                            .replace('Fda', '')}`\n                        : levelGadget.title\n                    }\n                    className=\"mb-2\"\n                    style={{\n                      lineHeight:\n                        levelGadget.level === LEVELS.Px3 ? '35px' : undefined,\n                    }}\n                    href={`${PAGE_ROUTE.ACTIONABLE_GENE}#levels=${\n                      levelGadget.linkoutLevel\n                    }&sections=${LEVEL_CLASSIFICATION[levelGadget.level]}`}\n                    isLoading={this.levelNumbers.isPending}\n                  />\n                </Col>\n              )\n          )}\n          <Col\n            xs={0}\n            lg={this.levelTypeSelected === LEVEL_TYPES.TX ? 1 : 1}\n          ></Col>\n        </Row>\n        <Row className=\"mb-3\">\n          <Col className={'text-center'}>\n            <div className={'font-bold'}>\n              Powered by the clinical expertise of Memorial Sloan Kettering\n              Cancer Center\n            </div>\n            <div>\n              <CitationText boldLinkout={true} />\n            </div>\n            <div>\n              <FdaRecognitionDisclaimer enableLink />\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport ReactTable, { Column, TableProps } from 'react-table';\nimport { observer } from 'mobx-react';\nimport { observable, computed } from 'mobx';\n\nexport type SearchColumn<T> = Column<T> & {\n  onFilter?: (data: T, keyword: string) => boolean;\n};\n\ninterface ITableWithSearchBox<T> extends Partial<TableProps<T>> {\n  data: T[];\n  disableSearch?: boolean;\n  fixedHeight?: boolean;\n  showPagination?: boolean;\n  pageSize?: number;\n  minRows?: number;\n  columns: SearchColumn<T>[];\n  loading?: boolean;\n  filters?: React.FunctionComponent;\n  className?: string;\n}\n\n@observer\nexport default class OncoKBTable<T> extends React.Component<\n  ITableWithSearchBox<T>,\n  {}\n> {\n  @observable searchKeyword = '';\n\n  public static defaultProps = {\n    disableSearch: false,\n    showPagination: false,\n    searchIconClassName: 'fa fa-search',\n  };\n\n  @computed\n  get filteredData() {\n    return this.props.data.filter((item: T) => {\n      const filterableColumns = this.props.columns.filter(\n        column => !!column.onFilter\n      );\n      if (filterableColumns.length > 0) {\n        return filterableColumns\n          .map(column => column.onFilter!(item, this.searchKeyword))\n          .includes(true);\n      } else {\n        return true;\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.filters === undefined && this.props.disableSearch ? (\n          <></>\n        ) : (\n          <div className=\"row\">\n            <div className=\"col-auto\">\n              {this.props.filters === undefined ? (\n                <></>\n              ) : (\n                <this.props.filters />\n              )}\n            </div>\n            <div className=\"col-sm\">\n              {this.props.disableSearch ? (\n                <></>\n              ) : (\n                <div className=\"d-flex\">\n                  <div className=\"ml-auto\">\n                    <input\n                      onChange={(event: any) => {\n                        this.searchKeyword = event.target.value.toLowerCase();\n                      }}\n                      className=\"form-control input-sm\"\n                      type=\"text\"\n                      placeholder=\"Search ...\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        <div className=\"mt-2\">\n          <ReactTable\n            {...this.props}\n            showPagination={this.props.showPagination}\n            className={`-striped -highlight oncokbReactTable ${\n              this.props.fixedHeight ? 'fixedHeight' : ''\n            } ${this.props.className}`}\n            data={this.filteredData}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import OncoKbAPI from './generated/OncoKbAPI';\nimport { getClientInstanceURL } from '../utils/DevUtils';\n\nconst client = new OncoKbAPI(getClientInstanceURL('api/v1'));\n\nexport default client;\n","import * as request from \"superagent\";\n\ntype CallbackHandler = (err: any, res ? : request.Response) => void;\nexport type AnnotateMutationByGenomicChangeQuery = {\n    'evidenceTypes': Array < \"GENE_SUMMARY\" | \"MUTATION_SUMMARY\" | \"TUMOR_TYPE_SUMMARY\" | \"GENE_TUMOR_TYPE_SUMMARY\" | \"PROGNOSTIC_SUMMARY\" | \"DIAGNOSTIC_SUMMARY\" | \"GENE_BACKGROUND\" | \"ONCOGENIC\" | \"MUTATION_EFFECT\" | \"VUS\" | \"PROGNOSTIC_IMPLICATION\" | \"DIAGNOSTIC_IMPLICATION\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\" >\n\n        'genomicLocation': string\n\n        'id': string\n\n        'referenceGenome': \"GRCh37\" | \"GRCh38\"\n\n        'tumorType': string\n\n};\nexport type TreatmentDrug = {\n    'priority': number\n\n        'treatmentDrugId': TreatmentDrugId\n\n};\nexport type Query = {\n    'alteration': string\n\n        'alterationType': string\n\n        'consequence': string\n\n        'entrezGeneId': number\n\n        'hgvs': string\n\n        'hugoSymbol': string\n\n        'id': string\n\n        'proteinEnd': number\n\n        'proteinStart': number\n\n        'referenceGenome': \"GRCh37\" | \"GRCh38\"\n\n        'svType': \"DELETION\" | \"TRANSLOCATION\" | \"DUPLICATION\" | \"INSERTION\" | \"INVERSION\" | \"FUSION\" | \"UNKNOWN\"\n\n        'tumorType': string\n\n};\nexport type Article = {\n    'abstract': string\n\n        'authors': string\n\n        'elocationId': string\n\n        'issue': string\n\n        'journal': string\n\n        'link': string\n\n        'pages': string\n\n        'pmid': string\n\n        'pubDate': string\n\n        'reference': string\n\n        'title': string\n\n        'volume': string\n\n};\nexport type Alteration = {\n    'alteration': string\n\n        'consequence': VariantConsequence\n\n        'gene': Gene\n\n        'name': string\n\n        'proteinEnd': number\n\n        'proteinStart': number\n\n        'refResidues': string\n\n        'referenceGenomes': Array < \"GRCh37\" | \"GRCh38\" >\n\n        'variantResidues': string\n\n};\nexport type AnnotatedVariant = {\n    'entrezGeneId': number\n\n        'gene': string\n\n        'grch37Isoform': string\n\n        'grch37RefSeq': string\n\n        'grch38Isoform': string\n\n        'grch38RefSeq': string\n\n        'mutationEffect': string\n\n        'mutationEffectAbstracts': string\n\n        'mutationEffectPmids': string\n\n        'oncogenicity': string\n\n        'proteinChange': string\n\n        'referenceGenome': string\n\n        'variant': string\n\n};\nexport type SemVer = {\n    'major': number\n\n        'minor': number\n\n        'patch': number\n\n        'stable': boolean\n\n        'suffixTokens': Array < string >\n\n        'version': string\n\n};\nexport type Implication = {\n    'abstracts': Array < ArticleAbstract >\n\n        'alterations': Array < string >\n\n        'description': string\n\n        'levelOfEvidence': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'pmids': Array < string >\n\n        'tumorType': TumorType\n\n};\nexport type TumorType = {\n    'children': {}\n\n    'code': string\n\n        'color': string\n\n        'id': number\n\n        'level': number\n\n        'mainType': MainType\n\n        'name': string\n\n        'parent': string\n\n        'tissue': string\n\n        'tumorForm': \"SOLID\" | \"LIQUID\" | \"MIXED\"\n\n};\nexport type Gene = {\n    'entrezGeneId': number\n\n        'geneAliases': Array < string >\n\n        'genesets': Array < Geneset >\n\n        'grch37Isoform': string\n\n        'grch37RefSeq': string\n\n        'grch38Isoform': string\n\n        'grch38RefSeq': string\n\n        'hugoSymbol': string\n\n        'oncogene': boolean\n\n        'tsg': boolean\n\n};\nexport type Version = {\n    'date': string\n\n        'version': string\n\n};\nexport type TreatmentDrugId = {\n    'drug': Drug\n\n};\nexport type GeneEvidence = {\n    'articles': Array < Article >\n\n        'desc': string\n\n        'evidenceId': number\n\n        'evidenceType': \"GENE_SUMMARY\" | \"MUTATION_SUMMARY\" | \"TUMOR_TYPE_SUMMARY\" | \"GENE_TUMOR_TYPE_SUMMARY\" | \"PROGNOSTIC_SUMMARY\" | \"DIAGNOSTIC_SUMMARY\" | \"GENE_BACKGROUND\" | \"ONCOGENIC\" | \"MUTATION_EFFECT\" | \"VUS\" | \"PROGNOSTIC_IMPLICATION\" | \"DIAGNOSTIC_IMPLICATION\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\"\n\n        'gene': Gene\n\n        'id': string\n\n        'lastEdit': string\n\n        'shortDesc': string\n\n        'status': string\n\n};\nexport type Evidence = {\n    'additionalInfo': string\n\n        'alterations': Array < Alteration >\n\n        'articles': Array < Article >\n\n        'cancerTypes': Array < TumorType >\n\n        'description': string\n\n        'evidenceType': \"GENE_SUMMARY\" | \"MUTATION_SUMMARY\" | \"TUMOR_TYPE_SUMMARY\" | \"GENE_TUMOR_TYPE_SUMMARY\" | \"PROGNOSTIC_SUMMARY\" | \"DIAGNOSTIC_SUMMARY\" | \"GENE_BACKGROUND\" | \"ONCOGENIC\" | \"MUTATION_EFFECT\" | \"VUS\" | \"PROGNOSTIC_IMPLICATION\" | \"DIAGNOSTIC_IMPLICATION\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\"\n\n        'excludedCancerTypes': Array < TumorType >\n\n        'fdaLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'gene': Gene\n\n        'id': number\n\n        'knownEffect': string\n\n        'lastEdit': string\n\n        'lastReview': string\n\n        'levelOfEvidence': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'liquidPropagationLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'relevantCancerTypes': Array < TumorType >\n\n        'solidPropagationLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'treatments': Array < Treatment >\n\n        'uuid': string\n\n};\nexport type AnnotateStructuralVariantQuery = {\n    'evidenceTypes': Array < \"GENE_SUMMARY\" | \"MUTATION_SUMMARY\" | \"TUMOR_TYPE_SUMMARY\" | \"GENE_TUMOR_TYPE_SUMMARY\" | \"PROGNOSTIC_SUMMARY\" | \"DIAGNOSTIC_SUMMARY\" | \"GENE_BACKGROUND\" | \"ONCOGENIC\" | \"MUTATION_EFFECT\" | \"VUS\" | \"PROGNOSTIC_IMPLICATION\" | \"DIAGNOSTIC_IMPLICATION\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\" >\n\n        'functionalFusion': boolean\n\n        'geneA': QueryGene\n\n        'geneB': QueryGene\n\n        'id': string\n\n        'referenceGenome': \"GRCh37\" | \"GRCh38\"\n\n        'structuralVariantType': \"DELETION\" | \"TRANSLOCATION\" | \"DUPLICATION\" | \"INSERTION\" | \"INVERSION\" | \"FUSION\" | \"UNKNOWN\"\n\n        'tumorType': string\n\n};\nexport type IndicatorQueryResp = {\n    'alleleExist': boolean\n\n        'dataVersion': string\n\n        'diagnosticImplications': Array < Implication >\n\n        'diagnosticSummary': string\n\n        'geneExist': boolean\n\n        'geneSummary': string\n\n        'highestDiagnosticImplicationLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'highestFdaLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'highestPrognosticImplicationLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'highestResistanceLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'highestSensitiveLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'hotspot': boolean\n\n        'lastUpdate': string\n\n        'mutationEffect': MutationEffectResp\n\n        'oncogenic': string\n\n        'otherSignificantResistanceLevels': Array < \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\" >\n\n        'otherSignificantSensitiveLevels': Array < \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\" >\n\n        'prognosticImplications': Array < Implication >\n\n        'prognosticSummary': string\n\n        'query': Query\n\n        'treatments': Array < IndicatorQueryTreatment >\n\n        'tumorTypeSummary': string\n\n        'variantExist': boolean\n\n        'variantSummary': string\n\n        'vus': boolean\n\n};\nexport type ActionableGene = {\n    'abstracts': string\n\n        'cancerType': string\n\n        'drugs': string\n\n        'entrezGeneId': number\n\n        'gene': string\n\n        'grch37Isoform': string\n\n        'grch37RefSeq': string\n\n        'grch38Isoform': string\n\n        'grch38RefSeq': string\n\n        'level': string\n\n        'pmids': string\n\n        'proteinChange': string\n\n        'referenceGenome': string\n\n        'variant': string\n\n};\nexport type ArticleAbstract = {\n    'abstract': string\n\n        'link': string\n\n};\nexport type InfoLevel = {\n    'colorHex': string\n\n        'description': string\n\n        'htmlDescription': string\n\n        'levelOfEvidence': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n};\nexport type Drug = {\n    'drugName': string\n\n        'ncitCode': string\n\n};\nexport type CuratedGene = {\n    'background': string\n\n        'entrezGeneId': number\n\n        'grch37Isoform': string\n\n        'grch37RefSeq': string\n\n        'grch38Isoform': string\n\n        'grch38RefSeq': string\n\n        'highestResistancLevel': string\n\n        'highestResistanceLevel': string\n\n        'highestSensitiveLevel': string\n\n        'hugoSymbol': string\n\n        'oncogene': boolean\n\n        'summary': string\n\n        'tsg': boolean\n\n};\nexport type EvidenceQueryRes = {\n    'alleles': Array < Alteration >\n\n        'alterations': Array < Alteration >\n\n        'evidences': Array < Evidence >\n\n        'exactMatchedAlteration': Alteration\n\n        'exactMatchedTumorType': TumorType\n\n        'gene': Gene\n\n        'id': string\n\n        'levelOfEvidences': Array < \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\" >\n\n        'oncoTreeTypes': Array < TumorType >\n\n        'query': Query\n\n};\nexport type Trial = {\n    'arms': Array < Arms >\n\n        'briefTitle': string\n\n        'currentTrialStatus': string\n\n        'isUSTrial': boolean\n\n        'nctId': string\n\n        'principalInvestigator': string\n\n};\nexport type QueryGene = {\n    'entrezGeneId': number\n\n        'hugoSymbol': string\n\n};\nexport type CancerTypesQuery = {\n    'cancerTypes': Array < string >\n\n};\nexport type CancerGene = {\n    'entrezGeneId': number\n\n        'foundation': boolean\n\n        'foundationHeme': boolean\n\n        'geneAliases': Array < string >\n\n        'grch37Isoform': string\n\n        'grch37RefSeq': string\n\n        'grch38Isoform': string\n\n        'grch38RefSeq': string\n\n        'hugoSymbol': string\n\n        'mSKHeme': boolean\n\n        'mSKImpact': boolean\n\n        'occurrenceCount': number\n\n        'oncogene': boolean\n\n        'oncokbAnnotated': boolean\n\n        'sangerCGC': boolean\n\n        'tsg': boolean\n\n        'vogelstein': boolean\n\n};\nexport type Arms = {\n    'armDescription': string\n\n        'drugs': Array < Drug >\n\n};\nexport type MainType = {\n    'id': number\n\n        'name': string\n\n        'tumorForm': \"SOLID\" | \"LIQUID\" | \"MIXED\"\n\n};\nexport type OncoKBInfo = {\n    'apiVersion': SemVer\n\n        'appVersion': SemVer\n\n        'dataVersion': Version\n\n        'levels': Array < InfoLevel >\n\n        'ncitVersion': string\n\n        'oncoTreeVersion': string\n\n        'publicInstance': boolean\n\n};\nexport type VariantConsequence = {\n    'description': string\n\n        'isGenerallyTruncating': boolean\n\n        'term': string\n\n};\nexport type AnnotateMutationByProteinChangeQuery = {\n    'alteration': string\n\n        'consequence': string\n\n        'evidenceTypes': Array < \"GENE_SUMMARY\" | \"MUTATION_SUMMARY\" | \"TUMOR_TYPE_SUMMARY\" | \"GENE_TUMOR_TYPE_SUMMARY\" | \"PROGNOSTIC_SUMMARY\" | \"DIAGNOSTIC_SUMMARY\" | \"GENE_BACKGROUND\" | \"ONCOGENIC\" | \"MUTATION_EFFECT\" | \"VUS\" | \"PROGNOSTIC_IMPLICATION\" | \"DIAGNOSTIC_IMPLICATION\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\" >\n\n        'gene': QueryGene\n\n        'id': string\n\n        'proteinEnd': number\n\n        'proteinStart': number\n\n        'referenceGenome': \"GRCh37\" | \"GRCh38\"\n\n        'tumorType': string\n\n};\nexport type IndicatorQueryTreatment = {\n    'abstracts': Array < ArticleAbstract >\n\n        'alterations': Array < string >\n\n        'approvedIndications': Array < string >\n\n        'description': string\n\n        'drugs': Array < Drug >\n\n        'fdaLevel': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'level': \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\"\n\n        'levelAssociatedCancerType': TumorType\n\n        'levelExcludedCancerTypes': Array < TumorType >\n\n        'pmids': Array < string >\n\n};\nexport type ResponseEntity = {\n    'body': {}\n\n    'statusCode': \"100\" | \"101\" | \"102\" | \"103\" | \"200\" | \"201\" | \"202\" | \"203\" | \"204\" | \"205\" | \"206\" | \"207\" | \"208\" | \"226\" | \"300\" | \"301\" | \"302\" | \"302\" | \"303\" | \"304\" | \"305\" | \"307\" | \"308\" | \"400\" | \"401\" | \"402\" | \"403\" | \"404\" | \"405\" | \"406\" | \"407\" | \"408\" | \"409\" | \"410\" | \"411\" | \"412\" | \"413\" | \"413\" | \"414\" | \"414\" | \"415\" | \"416\" | \"417\" | \"418\" | \"419\" | \"420\" | \"421\" | \"422\" | \"423\" | \"424\" | \"426\" | \"428\" | \"429\" | \"431\" | \"500\" | \"501\" | \"502\" | \"503\" | \"504\" | \"505\" | \"506\" | \"507\" | \"508\" | \"509\" | \"510\" | \"511\"\n\n};\nexport type Treatment = {\n    'approvedIndications': Array < string >\n\n        'drugs': Array < TreatmentDrug >\n\n        'priority': number\n\n};\nexport type EvidenceQueries = {\n    'evidenceTypes': string\n\n        'highestLevelOnly': boolean\n\n        'levels': Array < \"LEVEL_1\" | \"LEVEL_2\" | \"LEVEL_3A\" | \"LEVEL_3B\" | \"LEVEL_4\" | \"LEVEL_R1\" | \"LEVEL_R2\" | \"LEVEL_Px1\" | \"LEVEL_Px2\" | \"LEVEL_Px3\" | \"LEVEL_Dx1\" | \"LEVEL_Dx2\" | \"LEVEL_Dx3\" | \"LEVEL_Fda1\" | \"LEVEL_Fda2\" | \"LEVEL_Fda3\" | \"NO\" >\n\n        'queries': Array < Query >\n\n};\nexport type VariantSearchQuery = {\n    'consequence': string\n\n        'entrezGeneId': number\n\n        'hgvs': string\n\n        'hugoSymbol': string\n\n        'proteinEnd': number\n\n        'proteinStart': number\n\n        'referenceGenome': \"GRCh37\" | \"GRCh38\"\n\n        'variant': string\n\n        'variantType': string\n\n};\nexport type MutationEffectResp = {\n    'citations': Citations\n\n        'description': string\n\n        'knownEffect': string\n\n};\nexport type AnnotateCopyNumberAlterationQuery = {\n    'copyNameAlterationType': \"AMPLIFICATION\" | \"DELETION\" | \"GAIN\" | \"LOSS\"\n\n        'evidenceTypes': Array < \"GENE_SUMMARY\" | \"MUTATION_SUMMARY\" | \"TUMOR_TYPE_SUMMARY\" | \"GENE_TUMOR_TYPE_SUMMARY\" | \"PROGNOSTIC_SUMMARY\" | \"DIAGNOSTIC_SUMMARY\" | \"GENE_BACKGROUND\" | \"ONCOGENIC\" | \"MUTATION_EFFECT\" | \"VUS\" | \"PROGNOSTIC_IMPLICATION\" | \"DIAGNOSTIC_IMPLICATION\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\" >\n\n        'gene': QueryGene\n\n        'id': string\n\n        'referenceGenome': \"GRCh37\" | \"GRCh38\"\n\n        'tumorType': string\n\n};\nexport type AnnotateMutationByHGVSgQuery = {\n    'evidenceTypes': Array < \"GENE_SUMMARY\" | \"MUTATION_SUMMARY\" | \"TUMOR_TYPE_SUMMARY\" | \"GENE_TUMOR_TYPE_SUMMARY\" | \"PROGNOSTIC_SUMMARY\" | \"DIAGNOSTIC_SUMMARY\" | \"GENE_BACKGROUND\" | \"ONCOGENIC\" | \"MUTATION_EFFECT\" | \"VUS\" | \"PROGNOSTIC_IMPLICATION\" | \"DIAGNOSTIC_IMPLICATION\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY\" | \"STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY\" | \"INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\" >\n\n        'hgvsg': string\n\n        'id': string\n\n        'referenceGenome': \"GRCh37\" | \"GRCh38\"\n\n        'tumorType': string\n\n};\nexport type Geneset = {\n    'genes': Array < Gene >\n\n        'id': number\n\n        'name': string\n\n        'uuid': string\n\n};\nexport type Citations = {\n    'abstracts': Array < ArticleAbstract >\n\n        'pmids': Array < string >\n\n};\n\n/**\n * These endpoints are for private use only.\n * @class OncoKbAPI\n * @param {(string)} [domainOrOptions] - The project domain.\n */\nexport default class OncoKbAPI {\n\n    private domain: string = \"\";\n    private errorHandlers: CallbackHandler[] = [];\n\n    constructor(domain ? : string) {\n        if (domain) {\n            this.domain = domain;\n        }\n    }\n\n    getDomain() {\n        return this.domain;\n    }\n\n    addErrorHandler(handler: CallbackHandler) {\n        this.errorHandlers.push(handler);\n    }\n\n    private request(method: string, url: string, body: any, headers: any, queryParameters: any, form: any, reject: CallbackHandler, resolve: CallbackHandler, errorHandlers: CallbackHandler[]) {\n        let req = (new(request as any).Request(method, url) as request.Request)\n            .query(queryParameters);\n        Object.keys(headers).forEach(key => {\n            req.set(key, headers[key]);\n        });\n\n        if (body) {\n            req.send(body);\n        }\n\n        if (typeof(body) === 'object' && !(body.constructor.name === 'Buffer')) {\n            req.set('Content-Type', 'application/json');\n        }\n\n        if (Object.keys(form).length > 0) {\n            req.type('form');\n            req.send(form);\n        }\n\n        req.end((error, response) => {\n            if (error || !response.ok) {\n                reject(error);\n                errorHandlers.forEach(handler => handler(error));\n            } else {\n                resolve(response);\n            }\n        });\n    }\n\n    annotateCopyNumberAlterationsGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'copyNameAlterationType': \"AMPLIFICATION\" | \"DELETION\" | \"GAIN\" | \"LOSS\",\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/annotate/copyNumberAlterations';\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters['entrezGeneId'] !== undefined) {\n            queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n        }\n\n        if (parameters['copyNameAlterationType'] !== undefined) {\n            queryParameters['copyNameAlterationType'] = parameters['copyNameAlterationType'];\n        }\n\n        if (parameters['referenceGenome'] !== undefined) {\n            queryParameters['referenceGenome'] = parameters['referenceGenome'];\n        }\n\n        if (parameters['tumorType'] !== undefined) {\n            queryParameters['tumorType'] = parameters['tumorType'];\n        }\n\n        if (parameters['evidenceType'] !== undefined) {\n            queryParameters['evidenceType'] = parameters['evidenceType'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Annotate copy number alteration.\n     * @method\n     * @name OncoKbAPI#annotateCopyNumberAlterationsGetUsingGET\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation. Example: BRAF\n     * @param {integer} entrezGeneId - The entrez gene ID. (Higher priority than hugoSymbol). Example: 673\n     * @param {string} copyNameAlterationType - Copy number alteration type\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} tumorType - OncoTree(http://oncotree.info) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma\n     * @param {string} evidenceType - Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use ',' as separator.\n     */\n    annotateCopyNumberAlterationsGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'copyNameAlterationType': \"AMPLIFICATION\" | \"DELETION\" | \"GAIN\" | \"LOSS\",\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/annotate/copyNumberAlterations';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters['entrezGeneId'] !== undefined) {\n                queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n            }\n\n            if (parameters['copyNameAlterationType'] !== undefined) {\n                queryParameters['copyNameAlterationType'] = parameters['copyNameAlterationType'];\n            }\n\n            if (parameters['copyNameAlterationType'] === undefined) {\n                reject(new Error('Missing required  parameter: copyNameAlterationType'));\n                return;\n            }\n\n            if (parameters['referenceGenome'] !== undefined) {\n                queryParameters['referenceGenome'] = parameters['referenceGenome'];\n            }\n\n            if (parameters['tumorType'] !== undefined) {\n                queryParameters['tumorType'] = parameters['tumorType'];\n            }\n\n            if (parameters['evidenceType'] !== undefined) {\n                queryParameters['evidenceType'] = parameters['evidenceType'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Annotate copy number alteration.\n     * @method\n     * @name OncoKbAPI#annotateCopyNumberAlterationsGetUsingGET\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation. Example: BRAF\n     * @param {integer} entrezGeneId - The entrez gene ID. (Higher priority than hugoSymbol). Example: 673\n     * @param {string} copyNameAlterationType - Copy number alteration type\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} tumorType - OncoTree(http://oncotree.info) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma\n     * @param {string} evidenceType - Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use ',' as separator.\n     */\n    annotateCopyNumberAlterationsGetUsingGET(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'copyNameAlterationType': \"AMPLIFICATION\" | \"DELETION\" | \"GAIN\" | \"LOSS\",\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < IndicatorQueryResp > {\n        return this.annotateCopyNumberAlterationsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    annotateCopyNumberAlterationsPostUsingPOSTURL(parameters: {\n        'body': Array < AnnotateCopyNumberAlterationQuery > ,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/annotate/copyNumberAlterations';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Annotate copy number alterations.\n     * @method\n     * @name OncoKbAPI#annotateCopyNumberAlterationsPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    annotateCopyNumberAlterationsPostUsingPOSTWithHttpInfo(parameters: {\n        'body': Array < AnnotateCopyNumberAlterationQuery > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/annotate/copyNumberAlterations';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Annotate copy number alterations.\n     * @method\n     * @name OncoKbAPI#annotateCopyNumberAlterationsPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    annotateCopyNumberAlterationsPostUsingPOST(parameters: {\n            'body': Array < AnnotateCopyNumberAlterationQuery > ,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < IndicatorQueryResp >\n        > {\n            return this.annotateCopyNumberAlterationsPostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    annotateMutationsByGenomicChangeGetUsingGETURL(parameters: {\n        'genomicLocation': string,\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/annotate/mutations/byGenomicChange';\n        if (parameters['genomicLocation'] !== undefined) {\n            queryParameters['genomicLocation'] = parameters['genomicLocation'];\n        }\n\n        if (parameters['referenceGenome'] !== undefined) {\n            queryParameters['referenceGenome'] = parameters['referenceGenome'];\n        }\n\n        if (parameters['tumorType'] !== undefined) {\n            queryParameters['tumorType'] = parameters['tumorType'];\n        }\n\n        if (parameters['evidenceType'] !== undefined) {\n            queryParameters['evidenceType'] = parameters['evidenceType'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Annotate mutation by genomic change.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByGenomicChangeGetUsingGET\n     * @param {string} genomicLocation - Genomic location. Example: 7,140453136,140453136,A,T\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} tumorType - OncoTree(http://oncotree.info) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma\n     * @param {string} evidenceType - Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use ',' as separator.\n     */\n    annotateMutationsByGenomicChangeGetUsingGETWithHttpInfo(parameters: {\n        'genomicLocation': string,\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/annotate/mutations/byGenomicChange';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['genomicLocation'] !== undefined) {\n                queryParameters['genomicLocation'] = parameters['genomicLocation'];\n            }\n\n            if (parameters['genomicLocation'] === undefined) {\n                reject(new Error('Missing required  parameter: genomicLocation'));\n                return;\n            }\n\n            if (parameters['referenceGenome'] !== undefined) {\n                queryParameters['referenceGenome'] = parameters['referenceGenome'];\n            }\n\n            if (parameters['tumorType'] !== undefined) {\n                queryParameters['tumorType'] = parameters['tumorType'];\n            }\n\n            if (parameters['evidenceType'] !== undefined) {\n                queryParameters['evidenceType'] = parameters['evidenceType'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Annotate mutation by genomic change.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByGenomicChangeGetUsingGET\n     * @param {string} genomicLocation - Genomic location. Example: 7,140453136,140453136,A,T\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} tumorType - OncoTree(http://oncotree.info) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma\n     * @param {string} evidenceType - Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use ',' as separator.\n     */\n    annotateMutationsByGenomicChangeGetUsingGET(parameters: {\n        'genomicLocation': string,\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < IndicatorQueryResp > {\n        return this.annotateMutationsByGenomicChangeGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    annotateMutationsByGenomicChangePostUsingPOSTURL(parameters: {\n        'body': Array < AnnotateMutationByGenomicChangeQuery > ,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/annotate/mutations/byGenomicChange';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Annotate mutations by genomic change.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByGenomicChangePostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    annotateMutationsByGenomicChangePostUsingPOSTWithHttpInfo(parameters: {\n        'body': Array < AnnotateMutationByGenomicChangeQuery > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/annotate/mutations/byGenomicChange';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Annotate mutations by genomic change.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByGenomicChangePostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    annotateMutationsByGenomicChangePostUsingPOST(parameters: {\n            'body': Array < AnnotateMutationByGenomicChangeQuery > ,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < IndicatorQueryResp >\n        > {\n            return this.annotateMutationsByGenomicChangePostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    annotateMutationsByHGVSgGetUsingGETURL(parameters: {\n        'hgvsg': string,\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/annotate/mutations/byHGVSg';\n        if (parameters['hgvsg'] !== undefined) {\n            queryParameters['hgvsg'] = parameters['hgvsg'];\n        }\n\n        if (parameters['referenceGenome'] !== undefined) {\n            queryParameters['referenceGenome'] = parameters['referenceGenome'];\n        }\n\n        if (parameters['tumorType'] !== undefined) {\n            queryParameters['tumorType'] = parameters['tumorType'];\n        }\n\n        if (parameters['evidenceType'] !== undefined) {\n            queryParameters['evidenceType'] = parameters['evidenceType'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Annotate mutation by HGVSg.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByHGVSgGetUsingGET\n     * @param {string} hgvsg - HGVS genomic format. Example: 7:g.140453136A>T\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} tumorType - OncoTree(http://oncotree.info) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma\n     * @param {string} evidenceType - Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use ',' as separator.\n     */\n    annotateMutationsByHGVSgGetUsingGETWithHttpInfo(parameters: {\n        'hgvsg': string,\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/annotate/mutations/byHGVSg';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hgvsg'] !== undefined) {\n                queryParameters['hgvsg'] = parameters['hgvsg'];\n            }\n\n            if (parameters['hgvsg'] === undefined) {\n                reject(new Error('Missing required  parameter: hgvsg'));\n                return;\n            }\n\n            if (parameters['referenceGenome'] !== undefined) {\n                queryParameters['referenceGenome'] = parameters['referenceGenome'];\n            }\n\n            if (parameters['tumorType'] !== undefined) {\n                queryParameters['tumorType'] = parameters['tumorType'];\n            }\n\n            if (parameters['evidenceType'] !== undefined) {\n                queryParameters['evidenceType'] = parameters['evidenceType'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Annotate mutation by HGVSg.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByHGVSgGetUsingGET\n     * @param {string} hgvsg - HGVS genomic format. Example: 7:g.140453136A>T\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} tumorType - OncoTree(http://oncotree.info) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma\n     * @param {string} evidenceType - Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use ',' as separator.\n     */\n    annotateMutationsByHGVSgGetUsingGET(parameters: {\n        'hgvsg': string,\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < IndicatorQueryResp > {\n        return this.annotateMutationsByHGVSgGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    annotateMutationsByHGVSgPostUsingPOSTURL(parameters: {\n        'body': Array < AnnotateMutationByHGVSgQuery > ,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/annotate/mutations/byHGVSg';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Annotate mutations by genomic change.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByHGVSgPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    annotateMutationsByHGVSgPostUsingPOSTWithHttpInfo(parameters: {\n        'body': Array < AnnotateMutationByHGVSgQuery > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/annotate/mutations/byHGVSg';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Annotate mutations by genomic change.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByHGVSgPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    annotateMutationsByHGVSgPostUsingPOST(parameters: {\n            'body': Array < AnnotateMutationByHGVSgQuery > ,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < IndicatorQueryResp >\n        > {\n            return this.annotateMutationsByHGVSgPostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    annotateMutationsByProteinChangeGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'alteration' ? : string,\n        'referenceGenome' ? : string,\n        'consequence' ? : \"feature_truncation\" | \"frameshift_variant\" | \"inframe_deletion\" | \"inframe_insertion\" | \"start_lost\" | \"missense_variant\" | \"splice_region_variant\" | \"stop_gained\" | \"synonymous_variant\" | \"intron_variant\",\n        'proteinStart' ? : number,\n        'proteinEnd' ? : number,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/annotate/mutations/byProteinChange';\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters['entrezGeneId'] !== undefined) {\n            queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n        }\n\n        if (parameters['alteration'] !== undefined) {\n            queryParameters['alteration'] = parameters['alteration'];\n        }\n\n        if (parameters['referenceGenome'] !== undefined) {\n            queryParameters['referenceGenome'] = parameters['referenceGenome'];\n        }\n\n        if (parameters['consequence'] !== undefined) {\n            queryParameters['consequence'] = parameters['consequence'];\n        }\n\n        if (parameters['proteinStart'] !== undefined) {\n            queryParameters['proteinStart'] = parameters['proteinStart'];\n        }\n\n        if (parameters['proteinEnd'] !== undefined) {\n            queryParameters['proteinEnd'] = parameters['proteinEnd'];\n        }\n\n        if (parameters['tumorType'] !== undefined) {\n            queryParameters['tumorType'] = parameters['tumorType'];\n        }\n\n        if (parameters['evidenceType'] !== undefined) {\n            queryParameters['evidenceType'] = parameters['evidenceType'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Annotate mutation by protein change.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByProteinChangeGetUsingGET\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation. Example: BRAF\n     * @param {integer} entrezGeneId - The entrez gene ID. (Higher priority than hugoSymbol). Example: 673\n     * @param {string} alteration - Protein Change. Example: V600E\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} consequence - Consequence. Exacmple: missense_variant\n     * @param {integer} proteinStart - Protein Start. Example: 600\n     * @param {integer} proteinEnd - Protein End. Example: 600\n     * @param {string} tumorType - OncoTree(http://oncotree.info) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma\n     * @param {string} evidenceType - Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use ',' as separator.\n     */\n    annotateMutationsByProteinChangeGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'alteration' ? : string,\n        'referenceGenome' ? : string,\n        'consequence' ? : \"feature_truncation\" | \"frameshift_variant\" | \"inframe_deletion\" | \"inframe_insertion\" | \"start_lost\" | \"missense_variant\" | \"splice_region_variant\" | \"stop_gained\" | \"synonymous_variant\" | \"intron_variant\",\n        'proteinStart' ? : number,\n        'proteinEnd' ? : number,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/annotate/mutations/byProteinChange';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters['entrezGeneId'] !== undefined) {\n                queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n            }\n\n            if (parameters['alteration'] !== undefined) {\n                queryParameters['alteration'] = parameters['alteration'];\n            }\n\n            if (parameters['referenceGenome'] !== undefined) {\n                queryParameters['referenceGenome'] = parameters['referenceGenome'];\n            }\n\n            if (parameters['consequence'] !== undefined) {\n                queryParameters['consequence'] = parameters['consequence'];\n            }\n\n            if (parameters['proteinStart'] !== undefined) {\n                queryParameters['proteinStart'] = parameters['proteinStart'];\n            }\n\n            if (parameters['proteinEnd'] !== undefined) {\n                queryParameters['proteinEnd'] = parameters['proteinEnd'];\n            }\n\n            if (parameters['tumorType'] !== undefined) {\n                queryParameters['tumorType'] = parameters['tumorType'];\n            }\n\n            if (parameters['evidenceType'] !== undefined) {\n                queryParameters['evidenceType'] = parameters['evidenceType'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Annotate mutation by protein change.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByProteinChangeGetUsingGET\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation. Example: BRAF\n     * @param {integer} entrezGeneId - The entrez gene ID. (Higher priority than hugoSymbol). Example: 673\n     * @param {string} alteration - Protein Change. Example: V600E\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} consequence - Consequence. Exacmple: missense_variant\n     * @param {integer} proteinStart - Protein Start. Example: 600\n     * @param {integer} proteinEnd - Protein End. Example: 600\n     * @param {string} tumorType - OncoTree(http://oncotree.info) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma\n     * @param {string} evidenceType - Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use ',' as separator.\n     */\n    annotateMutationsByProteinChangeGetUsingGET(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'alteration' ? : string,\n        'referenceGenome' ? : string,\n        'consequence' ? : \"feature_truncation\" | \"frameshift_variant\" | \"inframe_deletion\" | \"inframe_insertion\" | \"start_lost\" | \"missense_variant\" | \"splice_region_variant\" | \"stop_gained\" | \"synonymous_variant\" | \"intron_variant\",\n        'proteinStart' ? : number,\n        'proteinEnd' ? : number,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < IndicatorQueryResp > {\n        return this.annotateMutationsByProteinChangeGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    annotateMutationsByProteinChangePostUsingPOSTURL(parameters: {\n        'body': Array < AnnotateMutationByProteinChangeQuery > ,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/annotate/mutations/byProteinChange';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Annotate mutations by protein change.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByProteinChangePostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    annotateMutationsByProteinChangePostUsingPOSTWithHttpInfo(parameters: {\n        'body': Array < AnnotateMutationByProteinChangeQuery > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/annotate/mutations/byProteinChange';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Annotate mutations by protein change.\n     * @method\n     * @name OncoKbAPI#annotateMutationsByProteinChangePostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    annotateMutationsByProteinChangePostUsingPOST(parameters: {\n            'body': Array < AnnotateMutationByProteinChangeQuery > ,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < IndicatorQueryResp >\n        > {\n            return this.annotateMutationsByProteinChangePostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    annotateStructuralVariantsGetUsingGETURL(parameters: {\n        'hugoSymbolA' ? : string,\n        'entrezGeneIdA' ? : number,\n        'hugoSymbolB' ? : string,\n        'entrezGeneIdB' ? : number,\n        'structuralVariantType': \"DELETION\" | \"TRANSLOCATION\" | \"DUPLICATION\" | \"INSERTION\" | \"INVERSION\" | \"FUSION\" | \"UNKNOWN\",\n        'isFunctionalFusion': boolean,\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/annotate/structuralVariants';\n        if (parameters['hugoSymbolA'] !== undefined) {\n            queryParameters['hugoSymbolA'] = parameters['hugoSymbolA'];\n        }\n\n        if (parameters['entrezGeneIdA'] !== undefined) {\n            queryParameters['entrezGeneIdA'] = parameters['entrezGeneIdA'];\n        }\n\n        if (parameters['hugoSymbolB'] !== undefined) {\n            queryParameters['hugoSymbolB'] = parameters['hugoSymbolB'];\n        }\n\n        if (parameters['entrezGeneIdB'] !== undefined) {\n            queryParameters['entrezGeneIdB'] = parameters['entrezGeneIdB'];\n        }\n\n        if (parameters['structuralVariantType'] !== undefined) {\n            queryParameters['structuralVariantType'] = parameters['structuralVariantType'];\n        }\n\n        if (parameters['isFunctionalFusion'] !== undefined) {\n            queryParameters['isFunctionalFusion'] = parameters['isFunctionalFusion'];\n        }\n\n        if (parameters['referenceGenome'] !== undefined) {\n            queryParameters['referenceGenome'] = parameters['referenceGenome'];\n        }\n\n        if (parameters['tumorType'] !== undefined) {\n            queryParameters['tumorType'] = parameters['tumorType'];\n        }\n\n        if (parameters['evidenceType'] !== undefined) {\n            queryParameters['evidenceType'] = parameters['evidenceType'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Annotate structural variant.\n     * @method\n     * @name OncoKbAPI#annotateStructuralVariantsGetUsingGET\n     * @param {string} hugoSymbolA - The gene symbol A used in Human Genome Organisation. Example: ABL1\n     * @param {integer} entrezGeneIdA - The entrez gene ID A. (Higher priority than hugoSymbolA) Example: 25\n     * @param {string} hugoSymbolB - The gene symbol B used in Human Genome Organisation.Example: BCR \n     * @param {integer} entrezGeneIdB - The entrez gene ID B. (Higher priority than hugoSymbolB) Example: 613\n     * @param {string} structuralVariantType - Structural variant type\n     * @param {boolean} isFunctionalFusion - Whether is functional fusion\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} tumorType - OncoTree(http://oncotree.info) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma\n     * @param {string} evidenceType - Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use ',' as separator.\n     */\n    annotateStructuralVariantsGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbolA' ? : string,\n        'entrezGeneIdA' ? : number,\n        'hugoSymbolB' ? : string,\n        'entrezGeneIdB' ? : number,\n        'structuralVariantType': \"DELETION\" | \"TRANSLOCATION\" | \"DUPLICATION\" | \"INSERTION\" | \"INVERSION\" | \"FUSION\" | \"UNKNOWN\",\n        'isFunctionalFusion': boolean,\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/annotate/structuralVariants';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbolA'] !== undefined) {\n                queryParameters['hugoSymbolA'] = parameters['hugoSymbolA'];\n            }\n\n            if (parameters['entrezGeneIdA'] !== undefined) {\n                queryParameters['entrezGeneIdA'] = parameters['entrezGeneIdA'];\n            }\n\n            if (parameters['hugoSymbolB'] !== undefined) {\n                queryParameters['hugoSymbolB'] = parameters['hugoSymbolB'];\n            }\n\n            if (parameters['entrezGeneIdB'] !== undefined) {\n                queryParameters['entrezGeneIdB'] = parameters['entrezGeneIdB'];\n            }\n\n            if (parameters['structuralVariantType'] !== undefined) {\n                queryParameters['structuralVariantType'] = parameters['structuralVariantType'];\n            }\n\n            if (parameters['structuralVariantType'] === undefined) {\n                reject(new Error('Missing required  parameter: structuralVariantType'));\n                return;\n            }\n\n            if (parameters['isFunctionalFusion'] !== undefined) {\n                queryParameters['isFunctionalFusion'] = parameters['isFunctionalFusion'];\n            }\n\n            if (parameters['isFunctionalFusion'] === undefined) {\n                reject(new Error('Missing required  parameter: isFunctionalFusion'));\n                return;\n            }\n\n            if (parameters['referenceGenome'] !== undefined) {\n                queryParameters['referenceGenome'] = parameters['referenceGenome'];\n            }\n\n            if (parameters['tumorType'] !== undefined) {\n                queryParameters['tumorType'] = parameters['tumorType'];\n            }\n\n            if (parameters['evidenceType'] !== undefined) {\n                queryParameters['evidenceType'] = parameters['evidenceType'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Annotate structural variant.\n     * @method\n     * @name OncoKbAPI#annotateStructuralVariantsGetUsingGET\n     * @param {string} hugoSymbolA - The gene symbol A used in Human Genome Organisation. Example: ABL1\n     * @param {integer} entrezGeneIdA - The entrez gene ID A. (Higher priority than hugoSymbolA) Example: 25\n     * @param {string} hugoSymbolB - The gene symbol B used in Human Genome Organisation.Example: BCR \n     * @param {integer} entrezGeneIdB - The entrez gene ID B. (Higher priority than hugoSymbolB) Example: 613\n     * @param {string} structuralVariantType - Structural variant type\n     * @param {boolean} isFunctionalFusion - Whether is functional fusion\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} tumorType - OncoTree(http://oncotree.info) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma\n     * @param {string} evidenceType - Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use ',' as separator.\n     */\n    annotateStructuralVariantsGetUsingGET(parameters: {\n        'hugoSymbolA' ? : string,\n        'entrezGeneIdA' ? : number,\n        'hugoSymbolB' ? : string,\n        'entrezGeneIdB' ? : number,\n        'structuralVariantType': \"DELETION\" | \"TRANSLOCATION\" | \"DUPLICATION\" | \"INSERTION\" | \"INVERSION\" | \"FUSION\" | \"UNKNOWN\",\n        'isFunctionalFusion': boolean,\n        'referenceGenome' ? : string,\n        'tumorType' ? : string,\n        'evidenceType' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < IndicatorQueryResp > {\n        return this.annotateStructuralVariantsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    annotateStructuralVariantsPostUsingPOSTURL(parameters: {\n        'body': Array < AnnotateStructuralVariantQuery > ,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/annotate/structuralVariants';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Annotate structural variants.\n     * @method\n     * @name OncoKbAPI#annotateStructuralVariantsPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    annotateStructuralVariantsPostUsingPOSTWithHttpInfo(parameters: {\n        'body': Array < AnnotateStructuralVariantQuery > ,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/annotate/structuralVariants';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Annotate structural variants.\n     * @method\n     * @name OncoKbAPI#annotateStructuralVariantsPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     */\n    annotateStructuralVariantsPostUsingPOST(parameters: {\n            'body': Array < AnnotateStructuralVariantQuery > ,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < IndicatorQueryResp >\n        > {\n            return this.annotateStructuralVariantsPostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    classificationVariantsGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/classification/variants';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get All OncoKB Variant Classification.\n     * @method\n     * @name OncoKbAPI#classificationVariantsGetUsingGET\n     */\n    classificationVariantsGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/classification/variants';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get All OncoKB Variant Classification.\n     * @method\n     * @name OncoKbAPI#classificationVariantsGetUsingGET\n     */\n    classificationVariantsGetUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < string >\n        > {\n            return this.classificationVariantsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    drugsGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/drugs';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get all curated drugs.\n     * @method\n     * @name OncoKbAPI#drugsGetUsingGET\n     */\n    drugsGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/drugs';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get all curated drugs.\n     * @method\n     * @name OncoKbAPI#drugsGetUsingGET\n     */\n    drugsGetUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < Drug >\n        > {\n            return this.drugsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    drugsLookupGetUsingGETURL(parameters: {\n        'name' ? : string,\n        'ncitCode' ? : string,\n        'synonym' ? : string,\n        'exactMatch': boolean,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/drugs/lookup';\n        if (parameters['name'] !== undefined) {\n            queryParameters['name'] = parameters['name'];\n        }\n\n        if (parameters['ncitCode'] !== undefined) {\n            queryParameters['ncitCode'] = parameters['ncitCode'];\n        }\n\n        if (parameters['synonym'] !== undefined) {\n            queryParameters['synonym'] = parameters['synonym'];\n        }\n\n        if (parameters['exactMatch'] !== undefined) {\n            queryParameters['exactMatch'] = parameters['exactMatch'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Search drugs.\n     * @method\n     * @name OncoKbAPI#drugsLookupGetUsingGET\n     * @param {string} name - Drug Name\n     * @param {string} ncitCode - NCI Thesaurus Code\n     * @param {string} synonym - Drug Synonyms\n     * @param {boolean} exactMatch - Exactly Match\n     */\n    drugsLookupGetUsingGETWithHttpInfo(parameters: {\n        'name' ? : string,\n        'ncitCode' ? : string,\n        'synonym' ? : string,\n        'exactMatch': boolean,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/drugs/lookup';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['name'] !== undefined) {\n                queryParameters['name'] = parameters['name'];\n            }\n\n            if (parameters['ncitCode'] !== undefined) {\n                queryParameters['ncitCode'] = parameters['ncitCode'];\n            }\n\n            if (parameters['synonym'] !== undefined) {\n                queryParameters['synonym'] = parameters['synonym'];\n            }\n\n            if (parameters['exactMatch'] !== undefined) {\n                queryParameters['exactMatch'] = parameters['exactMatch'];\n            }\n\n            if (parameters['exactMatch'] === undefined) {\n                reject(new Error('Missing required  parameter: exactMatch'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Search drugs.\n     * @method\n     * @name OncoKbAPI#drugsLookupGetUsingGET\n     * @param {string} name - Drug Name\n     * @param {string} ncitCode - NCI Thesaurus Code\n     * @param {string} synonym - Drug Synonyms\n     * @param {boolean} exactMatch - Exactly Match\n     */\n    drugsLookupGetUsingGET(parameters: {\n            'name' ? : string,\n            'ncitCode' ? : string,\n            'synonym' ? : string,\n            'exactMatch': boolean,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < Drug >\n        > {\n            return this.drugsLookupGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    evidencesUUIDsGetUsingPOSTURL(parameters: {\n        'uuids': Array < string > ,\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/evidences';\n\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get specific evidences.\n     * @method\n     * @name OncoKbAPI#evidencesUUIDsGetUsingPOST\n     * @param {} uuids - Unique identifier list.\n     * @param {string} fields - The fields to be returned.\n     */\n    evidencesUUIDsGetUsingPOSTWithHttpInfo(parameters: {\n        'uuids': Array < string > ,\n        'fields' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/evidences';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['uuids'] !== undefined) {\n                body = parameters['uuids'];\n            }\n\n            if (parameters['uuids'] === undefined) {\n                reject(new Error('Missing required  parameter: uuids'));\n                return;\n            }\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get specific evidences.\n     * @method\n     * @name OncoKbAPI#evidencesUUIDsGetUsingPOST\n     * @param {} uuids - Unique identifier list.\n     * @param {string} fields - The fields to be returned.\n     */\n    evidencesUUIDsGetUsingPOST(parameters: {\n        'uuids': Array < string > ,\n        'fields' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < Evidence > {\n        return this.evidencesUUIDsGetUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    evidencesLookupGetUsingGETURL(parameters: {\n        'entrezGeneId' ? : number,\n        'hugoSymbol' ? : string,\n        'variant' ? : string,\n        'tumorType' ? : string,\n        'consequence' ? : string,\n        'proteinStart' ? : string,\n        'proteinEnd' ? : string,\n        'highestLevelOnly' ? : boolean,\n        'levelOfEvidence' ? : string,\n        'evidenceTypes' ? : string,\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/evidences/lookup';\n        if (parameters['entrezGeneId'] !== undefined) {\n            queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n        }\n\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters['variant'] !== undefined) {\n            queryParameters['variant'] = parameters['variant'];\n        }\n\n        if (parameters['tumorType'] !== undefined) {\n            queryParameters['tumorType'] = parameters['tumorType'];\n        }\n\n        if (parameters['consequence'] !== undefined) {\n            queryParameters['consequence'] = parameters['consequence'];\n        }\n\n        if (parameters['proteinStart'] !== undefined) {\n            queryParameters['proteinStart'] = parameters['proteinStart'];\n        }\n\n        if (parameters['proteinEnd'] !== undefined) {\n            queryParameters['proteinEnd'] = parameters['proteinEnd'];\n        }\n\n        if (parameters['highestLevelOnly'] !== undefined) {\n            queryParameters['highestLevelOnly'] = parameters['highestLevelOnly'];\n        }\n\n        if (parameters['levelOfEvidence'] !== undefined) {\n            queryParameters['levelOfEvidence'] = parameters['levelOfEvidence'];\n        }\n\n        if (parameters['evidenceTypes'] !== undefined) {\n            queryParameters['evidenceTypes'] = parameters['evidenceTypes'];\n        }\n\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Search evidences. Multi-queries are supported.\n     * @method\n     * @name OncoKbAPI#evidencesLookupGetUsingGET\n     * @param {integer} entrezGeneId - The entrez gene ID.\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation.\n     * @param {string} variant - Variant name.\n     * @param {string} tumorType - Tumor type name. OncoTree code is supported.\n     * @param {string} consequence - Consequence. Possible value: feature_truncation, frameshift_variant, inframe_deletion, inframe_insertion, start_lost, missense_variant, splice_region_variant, stop_gained, synonymous_variant\n     * @param {string} proteinStart - Protein Start.\n     * @param {string} proteinEnd - Protein End.\n     * @param {boolean} highestLevelOnly - Only show highest level evidences\n     * @param {string} levelOfEvidence - Separate by comma. LEVEL_1, LEVEL_2A, LEVEL_2B, LEVEL_3A, LEVEL_3B, LEVEL_4, LEVEL_R1, LEVEL_R2, LEVEL_R3\n     * @param {string} evidenceTypes - Separate by comma. Evidence type includes GENE_SUMMARY, GENE_BACKGROUND, MUTATION_SUMMARY, ONCOGENIC, MUTATION_EFFECT, VUS, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, TUMOR_TYPE_SUMMARY, DIAGNOSTIC_SUMMARY, PROGNOSTIC_SUMMARY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\n     * @param {string} fields - The fields to be returned.\n     */\n    evidencesLookupGetUsingGETWithHttpInfo(parameters: {\n        'entrezGeneId' ? : number,\n        'hugoSymbol' ? : string,\n        'variant' ? : string,\n        'tumorType' ? : string,\n        'consequence' ? : string,\n        'proteinStart' ? : string,\n        'proteinEnd' ? : string,\n        'highestLevelOnly' ? : boolean,\n        'levelOfEvidence' ? : string,\n        'evidenceTypes' ? : string,\n        'fields' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/evidences/lookup';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['entrezGeneId'] !== undefined) {\n                queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n            }\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters['variant'] !== undefined) {\n                queryParameters['variant'] = parameters['variant'];\n            }\n\n            if (parameters['tumorType'] !== undefined) {\n                queryParameters['tumorType'] = parameters['tumorType'];\n            }\n\n            if (parameters['consequence'] !== undefined) {\n                queryParameters['consequence'] = parameters['consequence'];\n            }\n\n            if (parameters['proteinStart'] !== undefined) {\n                queryParameters['proteinStart'] = parameters['proteinStart'];\n            }\n\n            if (parameters['proteinEnd'] !== undefined) {\n                queryParameters['proteinEnd'] = parameters['proteinEnd'];\n            }\n\n            if (parameters['highestLevelOnly'] !== undefined) {\n                queryParameters['highestLevelOnly'] = parameters['highestLevelOnly'];\n            }\n\n            if (parameters['levelOfEvidence'] !== undefined) {\n                queryParameters['levelOfEvidence'] = parameters['levelOfEvidence'];\n            }\n\n            if (parameters['evidenceTypes'] !== undefined) {\n                queryParameters['evidenceTypes'] = parameters['evidenceTypes'];\n            }\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Search evidences. Multi-queries are supported.\n     * @method\n     * @name OncoKbAPI#evidencesLookupGetUsingGET\n     * @param {integer} entrezGeneId - The entrez gene ID.\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation.\n     * @param {string} variant - Variant name.\n     * @param {string} tumorType - Tumor type name. OncoTree code is supported.\n     * @param {string} consequence - Consequence. Possible value: feature_truncation, frameshift_variant, inframe_deletion, inframe_insertion, start_lost, missense_variant, splice_region_variant, stop_gained, synonymous_variant\n     * @param {string} proteinStart - Protein Start.\n     * @param {string} proteinEnd - Protein End.\n     * @param {boolean} highestLevelOnly - Only show highest level evidences\n     * @param {string} levelOfEvidence - Separate by comma. LEVEL_1, LEVEL_2A, LEVEL_2B, LEVEL_3A, LEVEL_3B, LEVEL_4, LEVEL_R1, LEVEL_R2, LEVEL_R3\n     * @param {string} evidenceTypes - Separate by comma. Evidence type includes GENE_SUMMARY, GENE_BACKGROUND, MUTATION_SUMMARY, ONCOGENIC, MUTATION_EFFECT, VUS, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, TUMOR_TYPE_SUMMARY, DIAGNOSTIC_SUMMARY, PROGNOSTIC_SUMMARY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE\n     * @param {string} fields - The fields to be returned.\n     */\n    evidencesLookupGetUsingGET(parameters: {\n            'entrezGeneId' ? : number,\n            'hugoSymbol' ? : string,\n            'variant' ? : string,\n            'tumorType' ? : string,\n            'consequence' ? : string,\n            'proteinStart' ? : string,\n            'proteinEnd' ? : string,\n            'highestLevelOnly' ? : boolean,\n            'levelOfEvidence' ? : string,\n            'evidenceTypes' ? : string,\n            'fields' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < Evidence >\n        > {\n            return this.evidencesLookupGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    evidencesLookupPostUsingPOSTURL(parameters: {\n        'body': EvidenceQueries,\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/evidences/lookup';\n\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Search evidences.\n     * @method\n     * @name OncoKbAPI#evidencesLookupPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format. Please use JSON string.\n     * @param {string} fields - The fields to be returned.\n     */\n    evidencesLookupPostUsingPOSTWithHttpInfo(parameters: {\n        'body': EvidenceQueries,\n        'fields' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/evidences/lookup';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Search evidences.\n     * @method\n     * @name OncoKbAPI#evidencesLookupPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format. Please use JSON string.\n     * @param {string} fields - The fields to be returned.\n     */\n    evidencesLookupPostUsingPOST(parameters: {\n            'body': EvidenceQueries,\n            'fields' ? : string,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < EvidenceQueryRes >\n        > {\n            return this.evidencesLookupPostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    evidencesUUIDGetUsingGETURL(parameters: {\n        'uuid': string,\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/evidences/{uuid}';\n\n        path = path.replace('{uuid}', parameters['uuid'] + '');\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get specific evidence.\n     * @method\n     * @name OncoKbAPI#evidencesUUIDGetUsingGET\n     * @param {string} uuid - Unique identifier.\n     * @param {string} fields - The fields to be returned.\n     */\n    evidencesUUIDGetUsingGETWithHttpInfo(parameters: {\n        'uuid': string,\n        'fields' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/evidences/{uuid}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            path = path.replace('{uuid}', parameters['uuid'] + '');\n\n            if (parameters['uuid'] === undefined) {\n                reject(new Error('Missing required  parameter: uuid'));\n                return;\n            }\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get specific evidence.\n     * @method\n     * @name OncoKbAPI#evidencesUUIDGetUsingGET\n     * @param {string} uuid - Unique identifier.\n     * @param {string} fields - The fields to be returned.\n     */\n    evidencesUUIDGetUsingGET(parameters: {\n        'uuid': string,\n        'fields' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < Evidence > {\n        return this.evidencesUUIDGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    genesGetUsingGETURL(parameters: {\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/genes';\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get list of currently curated genes.\n     * @method\n     * @name OncoKbAPI#genesGetUsingGET\n     * @param {string} fields - The fields to be returned.\n     */\n    genesGetUsingGETWithHttpInfo(parameters: {\n        'fields' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/genes';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get list of currently curated genes.\n     * @method\n     * @name OncoKbAPI#genesGetUsingGET\n     * @param {string} fields - The fields to be returned.\n     */\n    genesGetUsingGET(parameters: {\n            'fields' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < Gene >\n        > {\n            return this.genesGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    genesLookupGetUsingGETURL(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'query' ? : string,\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/genes/lookup';\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters['entrezGeneId'] !== undefined) {\n            queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n        }\n\n        if (parameters['query'] !== undefined) {\n            queryParameters['query'] = parameters['query'];\n        }\n\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Search gene.\n     * @method\n     * @name OncoKbAPI#genesLookupGetUsingGET\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation. (Deprecated, use query instead)\n     * @param {integer} entrezGeneId - The entrez gene ID. (Deprecated, use query instead)\n     * @param {string} query - The search query, it could be hugoSymbol or entrezGeneId.\n     * @param {string} fields - The fields to be returned.\n     */\n    genesLookupGetUsingGETWithHttpInfo(parameters: {\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'query' ? : string,\n        'fields' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/genes/lookup';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters['entrezGeneId'] !== undefined) {\n                queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n            }\n\n            if (parameters['query'] !== undefined) {\n                queryParameters['query'] = parameters['query'];\n            }\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Search gene.\n     * @method\n     * @name OncoKbAPI#genesLookupGetUsingGET\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation. (Deprecated, use query instead)\n     * @param {integer} entrezGeneId - The entrez gene ID. (Deprecated, use query instead)\n     * @param {string} query - The search query, it could be hugoSymbol or entrezGeneId.\n     * @param {string} fields - The fields to be returned.\n     */\n    genesLookupGetUsingGET(parameters: {\n            'hugoSymbol' ? : string,\n            'entrezGeneId' ? : number,\n            'query' ? : string,\n            'fields' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < Gene >\n        > {\n            return this.genesLookupGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    genesEntrezGeneIdGetUsingGETURL(parameters: {\n        'entrezGeneId': number,\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/genes/{entrezGeneId}';\n\n        path = path.replace('{entrezGeneId}', parameters['entrezGeneId'] + '');\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get specific gene information.\n     * @method\n     * @name OncoKbAPI#genesEntrezGeneIdGetUsingGET\n     * @param {integer} entrezGeneId - The entrez gene ID.\n     * @param {string} fields - The fields to be returned.\n     */\n    genesEntrezGeneIdGetUsingGETWithHttpInfo(parameters: {\n        'entrezGeneId': number,\n        'fields' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/genes/{entrezGeneId}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            path = path.replace('{entrezGeneId}', parameters['entrezGeneId'] + '');\n\n            if (parameters['entrezGeneId'] === undefined) {\n                reject(new Error('Missing required  parameter: entrezGeneId'));\n                return;\n            }\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get specific gene information.\n     * @method\n     * @name OncoKbAPI#genesEntrezGeneIdGetUsingGET\n     * @param {integer} entrezGeneId - The entrez gene ID.\n     * @param {string} fields - The fields to be returned.\n     */\n    genesEntrezGeneIdGetUsingGET(parameters: {\n        'entrezGeneId': number,\n        'fields' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < Gene > {\n        return this.genesEntrezGeneIdGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    genesEntrezGeneIdEvidencesGetUsingGETURL(parameters: {\n        'entrezGeneId': number,\n        'evidenceTypes' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/genes/{entrezGeneId}/evidences';\n\n        path = path.replace('{entrezGeneId}', parameters['entrezGeneId'] + '');\n        if (parameters['evidenceTypes'] !== undefined) {\n            queryParameters['evidenceTypes'] = parameters['evidenceTypes'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get list of evidences for specific gene.\n     * @method\n     * @name OncoKbAPI#genesEntrezGeneIdEvidencesGetUsingGET\n     * @param {integer} entrezGeneId - The entrez gene ID.\n     * @param {string} evidenceTypes - Separate by comma. Evidence type includes GENE_SUMMARY, GENE_BACKGROUND\n     */\n    genesEntrezGeneIdEvidencesGetUsingGETWithHttpInfo(parameters: {\n        'entrezGeneId': number,\n        'evidenceTypes' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/genes/{entrezGeneId}/evidences';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            path = path.replace('{entrezGeneId}', parameters['entrezGeneId'] + '');\n\n            if (parameters['entrezGeneId'] === undefined) {\n                reject(new Error('Missing required  parameter: entrezGeneId'));\n                return;\n            }\n\n            if (parameters['evidenceTypes'] !== undefined) {\n                queryParameters['evidenceTypes'] = parameters['evidenceTypes'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get list of evidences for specific gene.\n     * @method\n     * @name OncoKbAPI#genesEntrezGeneIdEvidencesGetUsingGET\n     * @param {integer} entrezGeneId - The entrez gene ID.\n     * @param {string} evidenceTypes - Separate by comma. Evidence type includes GENE_SUMMARY, GENE_BACKGROUND\n     */\n    genesEntrezGeneIdEvidencesGetUsingGET(parameters: {\n            'entrezGeneId': number,\n            'evidenceTypes' ? : string,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < GeneEvidence >\n        > {\n            return this.genesEntrezGeneIdEvidencesGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    genesEntrezGeneIdVariantsGetUsingGETURL(parameters: {\n        'entrezGeneId': number,\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/genes/{entrezGeneId}/variants';\n\n        path = path.replace('{entrezGeneId}', parameters['entrezGeneId'] + '');\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get list of variants for specific gene.\n     * @method\n     * @name OncoKbAPI#genesEntrezGeneIdVariantsGetUsingGET\n     * @param {integer} entrezGeneId - The entrez gene ID.\n     * @param {string} fields - The fields to be returned.\n     */\n    genesEntrezGeneIdVariantsGetUsingGETWithHttpInfo(parameters: {\n        'entrezGeneId': number,\n        'fields' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/genes/{entrezGeneId}/variants';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            path = path.replace('{entrezGeneId}', parameters['entrezGeneId'] + '');\n\n            if (parameters['entrezGeneId'] === undefined) {\n                reject(new Error('Missing required  parameter: entrezGeneId'));\n                return;\n            }\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get list of variants for specific gene.\n     * @method\n     * @name OncoKbAPI#genesEntrezGeneIdVariantsGetUsingGET\n     * @param {integer} entrezGeneId - The entrez gene ID.\n     * @param {string} fields - The fields to be returned.\n     */\n    genesEntrezGeneIdVariantsGetUsingGET(parameters: {\n            'entrezGeneId': number,\n            'fields' ? : string,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < Alteration >\n        > {\n            return this.genesEntrezGeneIdVariantsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    genesetsGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/genesets';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get list of currently curated genesets.\n     * @method\n     * @name OncoKbAPI#genesetsGetUsingGET\n     */\n    genesetsGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/genesets';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get list of currently curated genesets.\n     * @method\n     * @name OncoKbAPI#genesetsGetUsingGET\n     */\n    genesetsGetUsingGET(parameters: {\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < Geneset >\n        > {\n            return this.genesetsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    genesetsUuidGetUsingGETURL(parameters: {\n        'uuid': string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/genesets/{uuid}';\n\n        path = path.replace('{uuid}', parameters['uuid'] + '');\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Find geneset by uuid\n     * @method\n     * @name OncoKbAPI#genesetsUuidGetUsingGET\n     * @param {string} uuid - Geneset UUID\n     */\n    genesetsUuidGetUsingGETWithHttpInfo(parameters: {\n        'uuid': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/genesets/{uuid}';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            path = path.replace('{uuid}', parameters['uuid'] + '');\n\n            if (parameters['uuid'] === undefined) {\n                reject(new Error('Missing required  parameter: uuid'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Find geneset by uuid\n     * @method\n     * @name OncoKbAPI#genesetsUuidGetUsingGET\n     * @param {string} uuid - Geneset UUID\n     */\n    genesetsUuidGetUsingGET(parameters: {\n        'uuid': string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < Geneset > {\n        return this.genesetsUuidGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    infoGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/info';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * infoGet\n     * @method\n     * @name OncoKbAPI#infoGetUsingGET\n     */\n    infoGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/info';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * infoGet\n     * @method\n     * @name OncoKbAPI#infoGetUsingGET\n     */\n    infoGetUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < OncoKBInfo > {\n        return this.infoGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    levelsGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/levels';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get all levels.\n     * @method\n     * @name OncoKbAPI#levelsGetUsingGET\n     */\n    levelsGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/levels';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get all levels.\n     * @method\n     * @name OncoKbAPI#levelsGetUsingGET\n     */\n    levelsGetUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < {} > {\n        return this.levelsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    levelsDiagnosticGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/levels/diagnostic';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get all diagnostic levels.\n     * @method\n     * @name OncoKbAPI#levelsDiagnosticGetUsingGET\n     */\n    levelsDiagnosticGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/levels/diagnostic';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get all diagnostic levels.\n     * @method\n     * @name OncoKbAPI#levelsDiagnosticGetUsingGET\n     */\n    levelsDiagnosticGetUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < {} > {\n        return this.levelsDiagnosticGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    levelsPrognosticGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/levels/prognostic';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get all prognostic levels.\n     * @method\n     * @name OncoKbAPI#levelsPrognosticGetUsingGET\n     */\n    levelsPrognosticGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/levels/prognostic';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get all prognostic levels.\n     * @method\n     * @name OncoKbAPI#levelsPrognosticGetUsingGET\n     */\n    levelsPrognosticGetUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < {} > {\n        return this.levelsPrognosticGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    levelsResistanceGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/levels/resistance';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get all resistance levels.\n     * @method\n     * @name OncoKbAPI#levelsResistanceGetUsingGET\n     */\n    levelsResistanceGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/levels/resistance';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get all resistance levels.\n     * @method\n     * @name OncoKbAPI#levelsResistanceGetUsingGET\n     */\n    levelsResistanceGetUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < {} > {\n        return this.levelsResistanceGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    levelsSensitiveGetUsingGETURL(parameters: {\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/levels/sensitive';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get all sensitive levels.\n     * @method\n     * @name OncoKbAPI#levelsSensitiveGetUsingGET\n     */\n    levelsSensitiveGetUsingGETWithHttpInfo(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/levels/sensitive';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get all sensitive levels.\n     * @method\n     * @name OncoKbAPI#levelsSensitiveGetUsingGET\n     */\n    levelsSensitiveGetUsingGET(parameters: {\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < {} > {\n        return this.levelsSensitiveGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    searchGetUsingGETURL(parameters: {\n        'id' ? : string,\n        'referenceGenome' ? : string,\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'variant' ? : string,\n        'variantType' ? : string,\n        'svType' ? : \"DELETION\" | \"TRANSLOCATION\" | \"DUPLICATION\" | \"INSERTION\" | \"INVERSION\" | \"FUSION\" | \"UNKNOWN\",\n        'consequence' ? : string,\n        'proteinStart' ? : number,\n        'proteinEnd' ? : number,\n        'tumorType' ? : string,\n        'levels' ? : string,\n        'highestLevelOnly' ? : boolean,\n        'evidenceType' ? : string,\n        'hgvs' ? : string,\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/search';\n        if (parameters['id'] !== undefined) {\n            queryParameters['id'] = parameters['id'];\n        }\n\n        if (parameters['referenceGenome'] !== undefined) {\n            queryParameters['referenceGenome'] = parameters['referenceGenome'];\n        }\n\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters['entrezGeneId'] !== undefined) {\n            queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n        }\n\n        if (parameters['variant'] !== undefined) {\n            queryParameters['variant'] = parameters['variant'];\n        }\n\n        if (parameters['variantType'] !== undefined) {\n            queryParameters['variantType'] = parameters['variantType'];\n        }\n\n        if (parameters['svType'] !== undefined) {\n            queryParameters['svType'] = parameters['svType'];\n        }\n\n        if (parameters['consequence'] !== undefined) {\n            queryParameters['consequence'] = parameters['consequence'];\n        }\n\n        if (parameters['proteinStart'] !== undefined) {\n            queryParameters['proteinStart'] = parameters['proteinStart'];\n        }\n\n        if (parameters['proteinEnd'] !== undefined) {\n            queryParameters['proteinEnd'] = parameters['proteinEnd'];\n        }\n\n        if (parameters['tumorType'] !== undefined) {\n            queryParameters['tumorType'] = parameters['tumorType'];\n        }\n\n        if (parameters['levels'] !== undefined) {\n            queryParameters['levels'] = parameters['levels'];\n        }\n\n        if (parameters['highestLevelOnly'] !== undefined) {\n            queryParameters['highestLevelOnly'] = parameters['highestLevelOnly'];\n        }\n\n        if (parameters['evidenceType'] !== undefined) {\n            queryParameters['evidenceType'] = parameters['evidenceType'];\n        }\n\n        if (parameters['hgvs'] !== undefined) {\n            queryParameters['hgvs'] = parameters['hgvs'];\n        }\n\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * General search for possible combinations.\n     * @method\n     * @name OncoKbAPI#searchGetUsingGET\n     * @param {string} id - The query ID\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation.\n     * @param {integer} entrezGeneId - The entrez gene ID.\n     * @param {string} variant - Variant name.\n     * @param {string} variantType - Variant type.\n     * @param {string} svType - Structural Variant Type.\n     * @param {string} consequence - Consequence\n     * @param {integer} proteinStart - Protein Start\n     * @param {integer} proteinEnd - Protein End\n     * @param {string} tumorType - Tumor type name. OncoTree code is supported.\n     * @param {string} levels - Level of evidences.\n     * @param {boolean} highestLevelOnly - Only show treatments of highest level\n     * @param {string} evidenceType - Evidence type.\n     * @param {string} hgvs - HGVS varaint. Its priority is higher than entrezGeneId/hugoSymbol + variant combination\n     * @param {string} fields - The fields to be returned.\n     */\n    searchGetUsingGETWithHttpInfo(parameters: {\n        'id' ? : string,\n        'referenceGenome' ? : string,\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'variant' ? : string,\n        'variantType' ? : string,\n        'svType' ? : \"DELETION\" | \"TRANSLOCATION\" | \"DUPLICATION\" | \"INSERTION\" | \"INVERSION\" | \"FUSION\" | \"UNKNOWN\",\n        'consequence' ? : string,\n        'proteinStart' ? : number,\n        'proteinEnd' ? : number,\n        'tumorType' ? : string,\n        'levels' ? : string,\n        'highestLevelOnly' ? : boolean,\n        'evidenceType' ? : string,\n        'hgvs' ? : string,\n        'fields' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/search';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['id'] !== undefined) {\n                queryParameters['id'] = parameters['id'];\n            }\n\n            if (parameters['referenceGenome'] !== undefined) {\n                queryParameters['referenceGenome'] = parameters['referenceGenome'];\n            }\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters['entrezGeneId'] !== undefined) {\n                queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n            }\n\n            if (parameters['variant'] !== undefined) {\n                queryParameters['variant'] = parameters['variant'];\n            }\n\n            if (parameters['variantType'] !== undefined) {\n                queryParameters['variantType'] = parameters['variantType'];\n            }\n\n            if (parameters['svType'] !== undefined) {\n                queryParameters['svType'] = parameters['svType'];\n            }\n\n            if (parameters['consequence'] !== undefined) {\n                queryParameters['consequence'] = parameters['consequence'];\n            }\n\n            if (parameters['proteinStart'] !== undefined) {\n                queryParameters['proteinStart'] = parameters['proteinStart'];\n            }\n\n            if (parameters['proteinEnd'] !== undefined) {\n                queryParameters['proteinEnd'] = parameters['proteinEnd'];\n            }\n\n            if (parameters['tumorType'] !== undefined) {\n                queryParameters['tumorType'] = parameters['tumorType'];\n            }\n\n            if (parameters['levels'] !== undefined) {\n                queryParameters['levels'] = parameters['levels'];\n            }\n\n            if (parameters['highestLevelOnly'] !== undefined) {\n                queryParameters['highestLevelOnly'] = parameters['highestLevelOnly'];\n            }\n\n            if (parameters['evidenceType'] !== undefined) {\n                queryParameters['evidenceType'] = parameters['evidenceType'];\n            }\n\n            if (parameters['hgvs'] !== undefined) {\n                queryParameters['hgvs'] = parameters['hgvs'];\n            }\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * General search for possible combinations.\n     * @method\n     * @name OncoKbAPI#searchGetUsingGET\n     * @param {string} id - The query ID\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation.\n     * @param {integer} entrezGeneId - The entrez gene ID.\n     * @param {string} variant - Variant name.\n     * @param {string} variantType - Variant type.\n     * @param {string} svType - Structural Variant Type.\n     * @param {string} consequence - Consequence\n     * @param {integer} proteinStart - Protein Start\n     * @param {integer} proteinEnd - Protein End\n     * @param {string} tumorType - Tumor type name. OncoTree code is supported.\n     * @param {string} levels - Level of evidences.\n     * @param {boolean} highestLevelOnly - Only show treatments of highest level\n     * @param {string} evidenceType - Evidence type.\n     * @param {string} hgvs - HGVS varaint. Its priority is higher than entrezGeneId/hugoSymbol + variant combination\n     * @param {string} fields - The fields to be returned.\n     */\n    searchGetUsingGET(parameters: {\n        'id' ? : string,\n        'referenceGenome' ? : string,\n        'hugoSymbol' ? : string,\n        'entrezGeneId' ? : number,\n        'variant' ? : string,\n        'variantType' ? : string,\n        'svType' ? : \"DELETION\" | \"TRANSLOCATION\" | \"DUPLICATION\" | \"INSERTION\" | \"INVERSION\" | \"FUSION\" | \"UNKNOWN\",\n        'consequence' ? : string,\n        'proteinStart' ? : number,\n        'proteinEnd' ? : number,\n        'tumorType' ? : string,\n        'levels' ? : string,\n        'highestLevelOnly' ? : boolean,\n        'evidenceType' ? : string,\n        'hgvs' ? : string,\n        'fields' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < IndicatorQueryResp > {\n        return this.searchGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    searchPostUsingPOSTURL(parameters: {\n        'body': EvidenceQueries,\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/search';\n\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * General search for possible combinations.\n     * @method\n     * @name OncoKbAPI#searchPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     * @param {string} fields - The fields to be returned.\n     */\n    searchPostUsingPOSTWithHttpInfo(parameters: {\n        'body': EvidenceQueries,\n        'fields' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/search';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * General search for possible combinations.\n     * @method\n     * @name OncoKbAPI#searchPostUsingPOST\n     * @param {} body - List of queries. Please see swagger.json for request body format.\n     * @param {string} fields - The fields to be returned.\n     */\n    searchPostUsingPOST(parameters: {\n            'body': EvidenceQueries,\n            'fields' ? : string,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < IndicatorQueryResp >\n        > {\n            return this.searchPostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    trialsMatchingGetUsingGETURL(parameters: {\n        'oncoTreeCode': string,\n        'treatment' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/trials';\n        if (parameters['oncoTreeCode'] !== undefined) {\n            queryParameters['oncoTreeCode'] = parameters['oncoTreeCode'];\n        }\n\n        if (parameters['treatment'] !== undefined) {\n            queryParameters['treatment'] = parameters['treatment'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Return a list of trials using OncoTree Code and/or treatment\n     * @method\n     * @name OncoKbAPI#trialsMatchingGetUsingGET\n     * @param {string} oncoTreeCode - oncoTreeCode\n     * @param {string} treatment - treatment\n     */\n    trialsMatchingGetUsingGETWithHttpInfo(parameters: {\n        'oncoTreeCode': string,\n        'treatment' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/trials';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['oncoTreeCode'] !== undefined) {\n                queryParameters['oncoTreeCode'] = parameters['oncoTreeCode'];\n            }\n\n            if (parameters['oncoTreeCode'] === undefined) {\n                reject(new Error('Missing required  parameter: oncoTreeCode'));\n                return;\n            }\n\n            if (parameters['treatment'] !== undefined) {\n                queryParameters['treatment'] = parameters['treatment'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Return a list of trials using OncoTree Code and/or treatment\n     * @method\n     * @name OncoKbAPI#trialsMatchingGetUsingGET\n     * @param {string} oncoTreeCode - oncoTreeCode\n     * @param {string} treatment - treatment\n     */\n    trialsMatchingGetUsingGET(parameters: {\n            'oncoTreeCode': string,\n            'treatment' ? : string,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < Trial >\n        > {\n            return this.trialsMatchingGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    trialsGetByCancerTypesUsingPOSTURL(parameters: {\n        'body': CancerTypesQuery,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/trials/cancerTypes';\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Return a list of trials using cancer types\n     * @method\n     * @name OncoKbAPI#trialsGetByCancerTypesUsingPOST\n     * @param {} body - body\n     */\n    trialsGetByCancerTypesUsingPOSTWithHttpInfo(parameters: {\n        'body': CancerTypesQuery,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/trials/cancerTypes';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Return a list of trials using cancer types\n     * @method\n     * @name OncoKbAPI#trialsGetByCancerTypesUsingPOST\n     * @param {} body - body\n     */\n    trialsGetByCancerTypesUsingPOST(parameters: {\n        'body': CancerTypesQuery,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < {} > {\n        return this.trialsGetByCancerTypesUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    utilsAllActionableVariantsGetUsingGETURL(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/allActionableVariants';\n        if (parameters['version'] !== undefined) {\n            queryParameters['version'] = parameters['version'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get All Actionable Variants.\n     * @method\n     * @name OncoKbAPI#utilsAllActionableVariantsGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsAllActionableVariantsGetUsingGETWithHttpInfo(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/allActionableVariants';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['version'] !== undefined) {\n                queryParameters['version'] = parameters['version'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get All Actionable Variants.\n     * @method\n     * @name OncoKbAPI#utilsAllActionableVariantsGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsAllActionableVariantsGetUsingGET(parameters: {\n            'version' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < ActionableGene >\n        > {\n            return this.utilsAllActionableVariantsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsAllActionableVariantsTxtGetUsingGETURL(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/allActionableVariants.txt';\n        if (parameters['version'] !== undefined) {\n            queryParameters['version'] = parameters['version'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get All Actionable Variants in text file.\n     * @method\n     * @name OncoKbAPI#utilsAllActionableVariantsTxtGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsAllActionableVariantsTxtGetUsingGETWithHttpInfo(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/allActionableVariants.txt';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'text/plain';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['version'] !== undefined) {\n                queryParameters['version'] = parameters['version'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get All Actionable Variants in text file.\n     * @method\n     * @name OncoKbAPI#utilsAllActionableVariantsTxtGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsAllActionableVariantsTxtGetUsingGET(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < string > {\n        return this.utilsAllActionableVariantsTxtGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    utilsAllAnnotatedVariantsGetUsingGETURL(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/allAnnotatedVariants';\n        if (parameters['version'] !== undefined) {\n            queryParameters['version'] = parameters['version'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get All Annotated Variants.\n     * @method\n     * @name OncoKbAPI#utilsAllAnnotatedVariantsGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsAllAnnotatedVariantsGetUsingGETWithHttpInfo(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/allAnnotatedVariants';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['version'] !== undefined) {\n                queryParameters['version'] = parameters['version'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get All Annotated Variants.\n     * @method\n     * @name OncoKbAPI#utilsAllAnnotatedVariantsGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsAllAnnotatedVariantsGetUsingGET(parameters: {\n            'version' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < AnnotatedVariant >\n        > {\n            return this.utilsAllAnnotatedVariantsGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsAllAnnotatedVariantsTxtGetUsingGETURL(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/allAnnotatedVariants.txt';\n        if (parameters['version'] !== undefined) {\n            queryParameters['version'] = parameters['version'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get All Annotated Variants in text file.\n     * @method\n     * @name OncoKbAPI#utilsAllAnnotatedVariantsTxtGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsAllAnnotatedVariantsTxtGetUsingGETWithHttpInfo(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/allAnnotatedVariants.txt';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'text/plain';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['version'] !== undefined) {\n                queryParameters['version'] = parameters['version'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get All Annotated Variants in text file.\n     * @method\n     * @name OncoKbAPI#utilsAllAnnotatedVariantsTxtGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsAllAnnotatedVariantsTxtGetUsingGET(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < string > {\n        return this.utilsAllAnnotatedVariantsTxtGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    utilsAllCuratedGenesGetUsingGETURL(parameters: {\n        'version' ? : string,\n        'includeEvidence' ? : boolean,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/allCuratedGenes';\n        if (parameters['version'] !== undefined) {\n            queryParameters['version'] = parameters['version'];\n        }\n\n        if (parameters['includeEvidence'] !== undefined) {\n            queryParameters['includeEvidence'] = parameters['includeEvidence'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get list of genes OncoKB curated\n     * @method\n     * @name OncoKbAPI#utilsAllCuratedGenesGetUsingGET\n     * @param {string} version - The data version\n     * @param {boolean} includeEvidence - Include gene summary and background\n     */\n    utilsAllCuratedGenesGetUsingGETWithHttpInfo(parameters: {\n        'version' ? : string,\n        'includeEvidence' ? : boolean,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/allCuratedGenes';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['version'] !== undefined) {\n                queryParameters['version'] = parameters['version'];\n            }\n\n            if (parameters['includeEvidence'] !== undefined) {\n                queryParameters['includeEvidence'] = parameters['includeEvidence'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get list of genes OncoKB curated\n     * @method\n     * @name OncoKbAPI#utilsAllCuratedGenesGetUsingGET\n     * @param {string} version - The data version\n     * @param {boolean} includeEvidence - Include gene summary and background\n     */\n    utilsAllCuratedGenesGetUsingGET(parameters: {\n            'version' ? : string,\n            'includeEvidence' ? : boolean,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < CuratedGene >\n        > {\n            return this.utilsAllCuratedGenesGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsAllCuratedGenesTxtGetUsingGETURL(parameters: {\n        'version' ? : string,\n        'includeEvidence' ? : boolean,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/allCuratedGenes.txt';\n        if (parameters['version'] !== undefined) {\n            queryParameters['version'] = parameters['version'];\n        }\n\n        if (parameters['includeEvidence'] !== undefined) {\n            queryParameters['includeEvidence'] = parameters['includeEvidence'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get list of genes OncoKB curated in text file.\n     * @method\n     * @name OncoKbAPI#utilsAllCuratedGenesTxtGetUsingGET\n     * @param {string} version - The data version\n     * @param {boolean} includeEvidence - Include gene summary and background\n     */\n    utilsAllCuratedGenesTxtGetUsingGETWithHttpInfo(parameters: {\n        'version' ? : string,\n        'includeEvidence' ? : boolean,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/allCuratedGenes.txt';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'text/plain';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['version'] !== undefined) {\n                queryParameters['version'] = parameters['version'];\n            }\n\n            if (parameters['includeEvidence'] !== undefined) {\n                queryParameters['includeEvidence'] = parameters['includeEvidence'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get list of genes OncoKB curated in text file.\n     * @method\n     * @name OncoKbAPI#utilsAllCuratedGenesTxtGetUsingGET\n     * @param {string} version - The data version\n     * @param {boolean} includeEvidence - Include gene summary and background\n     */\n    utilsAllCuratedGenesTxtGetUsingGET(parameters: {\n        'version' ? : string,\n        'includeEvidence' ? : boolean,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < string > {\n        return this.utilsAllCuratedGenesTxtGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    utilsCancerGeneListGetUsingGETURL(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/cancerGeneList';\n        if (parameters['version'] !== undefined) {\n            queryParameters['version'] = parameters['version'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get cancer gene list\n     * @method\n     * @name OncoKbAPI#utilsCancerGeneListGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsCancerGeneListGetUsingGETWithHttpInfo(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/cancerGeneList';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['version'] !== undefined) {\n                queryParameters['version'] = parameters['version'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get cancer gene list\n     * @method\n     * @name OncoKbAPI#utilsCancerGeneListGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsCancerGeneListGetUsingGET(parameters: {\n            'version' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < CancerGene >\n        > {\n            return this.utilsCancerGeneListGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    utilsCancerGeneListTxtGetUsingGETURL(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/utils/cancerGeneList.txt';\n        if (parameters['version'] !== undefined) {\n            queryParameters['version'] = parameters['version'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Get cancer gene list in text file.\n     * @method\n     * @name OncoKbAPI#utilsCancerGeneListTxtGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsCancerGeneListTxtGetUsingGETWithHttpInfo(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/utils/cancerGeneList.txt';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'text/plain';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['version'] !== undefined) {\n                queryParameters['version'] = parameters['version'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Get cancer gene list in text file.\n     * @method\n     * @name OncoKbAPI#utilsCancerGeneListTxtGetUsingGET\n     * @param {string} version - The data version\n     */\n    utilsCancerGeneListTxtGetUsingGET(parameters: {\n        'version' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < string > {\n        return this.utilsCancerGeneListTxtGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n            return response.body;\n        });\n    };\n    variantsLookupGetUsingGETURL(parameters: {\n        'entrezGeneId' ? : number,\n        'hugoSymbol' ? : string,\n        'variant' ? : string,\n        'referenceGenome' ? : string,\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/variants/lookup';\n        if (parameters['entrezGeneId'] !== undefined) {\n            queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n        }\n\n        if (parameters['hugoSymbol'] !== undefined) {\n            queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n        }\n\n        if (parameters['variant'] !== undefined) {\n            queryParameters['variant'] = parameters['variant'];\n        }\n\n        if (parameters['referenceGenome'] !== undefined) {\n            queryParameters['referenceGenome'] = parameters['referenceGenome'];\n        }\n\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Search for matched variants.\n     * @method\n     * @name OncoKbAPI#variantsLookupGetUsingGET\n     * @param {integer} entrezGeneId - The entrez gene ID. entrezGeneId is prioritize than hugoSymbol if both parameters have been defined\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation.\n     * @param {string} variant - variant name.\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} fields - The fields to be returned.\n     */\n    variantsLookupGetUsingGETWithHttpInfo(parameters: {\n        'entrezGeneId' ? : number,\n        'hugoSymbol' ? : string,\n        'variant' ? : string,\n        'referenceGenome' ? : string,\n        'fields' ? : string,\n        $queryParameters ? : any,\n            $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/variants/lookup';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['entrezGeneId'] !== undefined) {\n                queryParameters['entrezGeneId'] = parameters['entrezGeneId'];\n            }\n\n            if (parameters['hugoSymbol'] !== undefined) {\n                queryParameters['hugoSymbol'] = parameters['hugoSymbol'];\n            }\n\n            if (parameters['variant'] !== undefined) {\n                queryParameters['variant'] = parameters['variant'];\n            }\n\n            if (parameters['referenceGenome'] !== undefined) {\n                queryParameters['referenceGenome'] = parameters['referenceGenome'];\n            }\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('GET', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Search for matched variants.\n     * @method\n     * @name OncoKbAPI#variantsLookupGetUsingGET\n     * @param {integer} entrezGeneId - The entrez gene ID. entrezGeneId is prioritize than hugoSymbol if both parameters have been defined\n     * @param {string} hugoSymbol - The gene symbol used in Human Genome Organisation.\n     * @param {string} variant - variant name.\n     * @param {string} referenceGenome - Reference genome, either GRCh37 or GRCh38. The default is GRCh37\n     * @param {string} fields - The fields to be returned.\n     */\n    variantsLookupGetUsingGET(parameters: {\n            'entrezGeneId' ? : number,\n            'hugoSymbol' ? : string,\n            'variant' ? : string,\n            'referenceGenome' ? : string,\n            'fields' ? : string,\n            $queryParameters ? : any,\n                $domain ? : string\n        }): Promise < Array < Alteration >\n        > {\n            return this.variantsLookupGetUsingGETWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n    variantsLookupPostUsingPOSTURL(parameters: {\n        'body': Array < VariantSearchQuery > ,\n        'fields' ? : string,\n        $queryParameters ? : any\n    }): string {\n        let queryParameters: any = {};\n        let path = '/variants/lookup';\n\n        if (parameters['fields'] !== undefined) {\n            queryParameters['fields'] = parameters['fields'];\n        }\n\n        if (parameters.$queryParameters) {\n            Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                var parameter = parameters.$queryParameters[parameterName];\n                queryParameters[parameterName] = parameter;\n            });\n        }\n        let keys = Object.keys(queryParameters);\n        return this.domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '');\n    };\n\n    /**\n     * Search for variants.\n     * @method\n     * @name OncoKbAPI#variantsLookupPostUsingPOST\n     * @param {} body - List of queries.\n     * @param {string} fields - The fields to be returned.\n     */\n    variantsLookupPostUsingPOSTWithHttpInfo(parameters: {\n        'body': Array < VariantSearchQuery > ,\n        'fields' ? : string,\n        $queryParameters ? : any,\n        $domain ? : string\n    }): Promise < request.Response > {\n        const domain = parameters.$domain ? parameters.$domain : this.domain;\n        const errorHandlers = this.errorHandlers;\n        const request = this.request;\n        let path = '/variants/lookup';\n        let body: any;\n        let queryParameters: any = {};\n        let headers: any = {};\n        let form: any = {};\n        return new Promise(function(resolve, reject) {\n            headers['Accept'] = 'application/json';\n            headers['Content-Type'] = 'application/json';\n\n            if (parameters['body'] !== undefined) {\n                body = parameters['body'];\n            }\n\n            if (parameters['body'] === undefined) {\n                reject(new Error('Missing required  parameter: body'));\n                return;\n            }\n\n            if (parameters['fields'] !== undefined) {\n                queryParameters['fields'] = parameters['fields'];\n            }\n\n            if (parameters.$queryParameters) {\n                Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\n                    var parameter = parameters.$queryParameters[parameterName];\n                    queryParameters[parameterName] = parameter;\n                });\n            }\n\n            request('POST', domain + path, body, headers, queryParameters, form, reject, resolve, errorHandlers);\n\n        });\n    };\n\n    /**\n     * Search for variants.\n     * @method\n     * @name OncoKbAPI#variantsLookupPostUsingPOST\n     * @param {} body - List of queries.\n     * @param {string} fields - The fields to be returned.\n     */\n    variantsLookupPostUsingPOST(parameters: {\n            'body': Array < VariantSearchQuery > ,\n            'fields' ? : string,\n            $queryParameters ? : any,\n            $domain ? : string\n        }): Promise < Array < Array < {} >\n        >\n        > {\n            return this.variantsLookupPostUsingPOSTWithHttpInfo(parameters).then(function(response: request.Response) {\n                return response.body;\n            });\n        };\n}","import { ButtonProps } from 'react-bootstrap';\nimport React from 'react';\nimport classnames from 'classnames';\nimport fileDownload from 'js-file-download';\nimport { observer, inject } from 'mobx-react';\nimport { observable, action } from 'mobx';\nimport { LoadingButton } from 'app/shared/button/LoadingButton';\nimport _ from 'lodash';\n\nexport interface IDownloadButtonWithPromise extends ButtonProps {\n  getDownloadData: () => Promise<string | Blob | string[]>;\n  fileName: string;\n  mime?: string;\n  buttonText: string;\n  className?: string;\n}\n\n@observer\nexport class DownloadButtonWithPromise extends React.Component<\n  IDownloadButtonWithPromise\n> {\n  @observable downloading = false;\n\n  @action\n  onClick = () => {\n    this.downloading = true;\n    this.props\n      .getDownloadData()\n      .then(data => {\n        if (_.isArray(data)) {\n          data = data.join('');\n        }\n        fileDownload(data, this.props.fileName, this.props.mime);\n      })\n      .catch(error => {})\n      .finally(() => {\n        this.downloading = false;\n      });\n  };\n\n  render() {\n    const { buttonText, getDownloadData, fileName, ...rest } = this.props;\n    return (\n      <LoadingButton\n        onClick={this.onClick}\n        loading={this.downloading}\n        {...rest}\n      >\n        <>\n          <i className={'fa fa-cloud-download mr-1'} />\n          {buttonText}\n        </>\n      </LoadingButton>\n    );\n  }\n}\n","import React from 'react';\n\nconst GeneAliasesDescription: React.FunctionComponent<{\n  geneAliases: string[];\n}> = props => {\n  return <span>{`Also known as ${props.geneAliases.join(', ')}`}</span>;\n};\nexport default GeneAliasesDescription;\n","import React from 'react';\nimport { DefaultTooltip, remoteData } from 'cbioportal-frontend-commons';\nimport { CancerGene, CuratedGene } from 'app/shared/api/generated/OncoKbAPI';\nimport { inject, observer } from 'mobx-react';\nimport { defaultSortMethod } from 'app/shared/utils/ReactTableUtils';\nimport { GenePageLink } from 'app/shared/utils/UrlUtils';\nimport { Col, Row } from 'react-bootstrap';\nimport * as _ from 'lodash';\nimport OncoKBTable, {\n  SearchColumn,\n} from 'app/components/oncokbTable/OncoKBTable';\nimport {\n  filterByKeyword,\n  getDefaultColumnDefinition,\n  getPageTitle,\n} from 'app/shared/utils/Utils';\nimport {\n  PAGE_TITLE,\n  MSK_IMPACT_TM,\n  ONCOKB_TM,\n  TABLE_COLUMN_KEY,\n} from 'app/config/constants';\nimport AppStore from 'app/store/AppStore';\nimport oncokbClient from 'app/shared/api/oncokbClientInstance';\nimport DocumentTitle from 'react-document-title';\nimport { DownloadButtonWithPromise } from 'app/components/downloadButtonWithPromise/DownloadButtonWithPromise';\nimport { FeedbackIcon } from 'app/components/feedback/FeedbackIcon';\nimport { FeedbackType } from 'app/components/feedback/types';\nimport WithSeparator from 'react-with-separator';\nimport GeneAliasesDescription from 'app/shared/texts/GeneAliasesDescription';\nimport CommonInfoIcon from 'app/shared/icons/InfoIcon';\n\nconst InfoIcon = (props: { overlay: string | JSX.Element }) => {\n  return (\n    <CommonInfoIcon\n      overlay={props.overlay}\n      type=\"question\"\n      className={'ml-2'}\n    />\n  );\n};\n\nconst getGeneType = (isOncogene: boolean, isTsg: boolean) => {\n  if (isOncogene) {\n    if (isTsg) {\n      return 'Oncogene/TSG';\n    } else {\n      return 'Oncogene';\n    }\n  } else if (isTsg) {\n    return 'TSG';\n  }\n  return '';\n};\n\nconst getPanelGeneCount = (\n  data: ExtendCancerGene[],\n  key: keyof ExtendCancerGene\n) => {\n  return data.filter(cancerGene => cancerGene[key]).length;\n};\n\ntype ExtendCancerGene = CancerGene & {\n  numOfSources: number;\n  annotated: boolean;\n  geneType: string;\n};\n\n@inject('appStore')\n@observer\nexport default class CancerGenesPage extends React.Component<{\n  appStore: AppStore;\n}> {\n  private fetchedDate = '11/17/2020';\n\n  private columns: SearchColumn<ExtendCancerGene>[] = [\n    {\n      ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.HUGO_SYMBOL),\n      onFilter: (data: ExtendCancerGene, keyword) =>\n        filterByKeyword(data.hugoSymbol, keyword) ||\n        filterByKeyword(data.geneAliases.join(', '), keyword),\n      Cell(props: { original: ExtendCancerGene }) {\n        const hugoInfo = [\n          props.original.annotated ? (\n            <GenePageLink hugoSymbol={props.original.hugoSymbol} />\n          ) : (\n            `${props.original.hugoSymbol}`\n          ),\n        ];\n        if (\n          props.original.geneAliases &&\n          props.original.geneAliases.length > 0\n        ) {\n          hugoInfo.push(\n            <CommonInfoIcon\n              overlay={\n                <GeneAliasesDescription\n                  geneAliases={props.original.geneAliases}\n                />\n              }\n            />\n          );\n        }\n        return <WithSeparator separator={' '}>{hugoInfo}</WithSeparator>;\n      },\n    },\n    {\n      id: 'oncokbAnnotated',\n      Header: (\n        <span>\n          {ONCOKB_TM}\n          <br />\n          Annotated\n        </span>\n      ),\n      accessor: 'oncokbAnnotated',\n      style: { textAlign: 'center' },\n      minWidth: 100,\n      sortMethod: defaultSortMethod,\n      Cell: (props: { original: ExtendCancerGene }) => {\n        return props.original.oncokbAnnotated ? (\n          <i className=\"fa fa-check\" />\n        ) : (\n          <FeedbackIcon\n            feedback={{\n              type: FeedbackType.ANNOTATION,\n              annotation: {\n                gene: props.original.hugoSymbol,\n              },\n            }}\n            appStore={this.props.appStore}\n          />\n        );\n      },\n    },\n    {\n      id: 'geneType',\n      Header: (\n        <>\n          <span>Oncogene/TSG</span>\n          <InfoIcon overlay={`As categorised by ${ONCOKB_TM}`} />\n        </>\n      ),\n      minWidth: 140,\n      accessor: 'geneType',\n      onFilter: (data: ExtendCancerGene, keyword) =>\n        filterByKeyword(data.geneType, keyword),\n      sortMethod: (a: string, b: string) => a.localeCompare(b),\n    },\n    {\n      id: 'mSKImpact',\n      Header: (props: {\n        original: ExtendCancerGene;\n        data: ExtendCancerGene[];\n      }) => (\n        <>\n          <span>{MSK_IMPACT_TM}</span>\n          <InfoIcon\n            overlay={\n              <span>\n                Gene is part of the{' '}\n                <a\n                  href=\"https://www.mskcc.org/msk-impact\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {MSK_IMPACT_TM} panel\n                </a>{' '}\n                ({getPanelGeneCount(props.data, 'mSKImpact')} genes,{' '}\n                {this.fetchedDate})\n              </span>\n            }\n          />\n        </>\n      ),\n      minWidth: 120,\n      accessor: 'mSKImpact',\n      style: { textAlign: 'center' },\n      sortable: true,\n      Cell(props: { original: ExtendCancerGene }) {\n        return props.original.mSKImpact ? <i className=\"fa fa-check\" /> : '';\n      },\n    },\n    {\n      id: 'mSKHeme',\n      Header: (props: {\n        original: ExtendCancerGene;\n        data: ExtendCancerGene[];\n      }) => (\n        <>\n          <span>\n            {MSK_IMPACT_TM}\n            <br />\n            Heme\n          </span>\n          <InfoIcon\n            overlay={\n              <span>\n                Gene is part of the{' '}\n                <a\n                  href=\"https://www.mskcc.org/msk-impact\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {MSK_IMPACT_TM} Heme and HemePACT panels\n                </a>{' '}\n                ({getPanelGeneCount(props.data, 'mSKHeme')} genes,{' '}\n                {this.fetchedDate})\n              </span>\n            }\n          />\n        </>\n      ),\n      style: { textAlign: 'center' },\n      accessor: 'mSKHeme',\n      minWidth: 120,\n      sortable: true,\n      Cell(props: { original: ExtendCancerGene }) {\n        return props.original.mSKHeme ? <i className=\"fa fa-check\" /> : '';\n      },\n    },\n    {\n      id: 'foundation',\n      Header: (props: {\n        original: ExtendCancerGene;\n        data: ExtendCancerGene[];\n      }) => (\n        <>\n          <span>\n            Foundation One\n            <br />\n            CDx\n          </span>\n          <InfoIcon\n            overlay={\n              <span>\n                Gene is part of the{' '}\n                <a\n                  href=\"https://assets.ctfassets.net/w98cd481qyp0/YqqKHaqQmFeqc5ueQk48w/0a34fcdaa3a71dbe460cdcb01cebe8ad/F1CDx_Technical_Specifications_072020.pdf\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  FoundationOne CDx panel\n                </a>{' '}\n                ({getPanelGeneCount(props.data, 'foundation')} genes,{' '}\n                {this.fetchedDate})\n              </span>\n            }\n          />\n        </>\n      ),\n      style: { textAlign: 'center' },\n      accessor: 'foundation',\n      minWidth: 100,\n      sortable: true,\n      Cell(props: { original: ExtendCancerGene }) {\n        return props.original.foundation ? <i className=\"fa fa-check\" /> : '';\n      },\n    },\n    {\n      id: 'foundationHeme',\n      Header: (props: {\n        original: ExtendCancerGene;\n        data: ExtendCancerGene[];\n      }) => (\n        <>\n          <span>\n            Foundation One\n            <br />\n            Heme\n          </span>\n          <InfoIcon\n            overlay={\n              <span>\n                Gene is part of the{' '}\n                <a\n                  href=\"https://assets.ctfassets.net/w98cd481qyp0/42r1cTE8VR4137CaHrsaen/baf91080cb3d78a52ada10c6358fa130/FoundationOne_Heme_Technical_Specifications.pdf\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  FoundationOne Heme panel\n                </a>{' '}\n                ({getPanelGeneCount(props.data, 'foundationHeme')} genes,{' '}\n                {this.fetchedDate})\n              </span>\n            }\n          />\n        </>\n      ),\n      minWidth: 120,\n      style: { textAlign: 'center' },\n      accessor: 'foundationHeme',\n      sortable: true,\n      Cell(props: { original: ExtendCancerGene }) {\n        return props.original.foundationHeme ? (\n          <i className=\"fa fa-check\" />\n        ) : (\n          ''\n        );\n      },\n    },\n    {\n      id: 'vogelstein',\n      Header: (props: {\n        original: ExtendCancerGene;\n        data: ExtendCancerGene[];\n      }) => (\n        <>\n          <span>Vogelstein et al. 2013</span>\n          <InfoIcon\n            overlay={\n              <span>\n                Gene is part of the published{' '}\n                <a\n                  href=\"https://science.sciencemag.org/content/339/6127/1546.full\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Vogelstein et al. Science, 2013\n                </a>{' '}\n                cancer gene list ({getPanelGeneCount(props.data, 'vogelstein')}{' '}\n                genes, 03/29/2013)\n              </span>\n            }\n          />\n        </>\n      ),\n      style: { textAlign: 'center' },\n      minWidth: 110,\n      accessor: 'vogelstein',\n      sortable: true,\n      Cell(props: { original: ExtendCancerGene }) {\n        return props.original.vogelstein ? <i className=\"fa fa-check\" /> : '';\n      },\n    },\n    {\n      id: 'sangerCGC',\n      Header: (props: {\n        original: ExtendCancerGene;\n        data: ExtendCancerGene[];\n      }) => (\n        <>\n          <span>\n            Cancer Gene Census\n            <br />\n            Tier 1\n          </span>\n          <InfoIcon\n            overlay={\n              <span>\n                Gene is part of the{' '}\n                <a\n                  href=\"https://cancer.sanger.ac.uk/cosmic/census?tier=1\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Cancer Gene Census Tier 1\n                </a>{' '}\n                ({getPanelGeneCount(props.data, 'sangerCGC')} genes, v92 - 27th\n                August 2020)\n              </span>\n            }\n          />\n        </>\n      ),\n      style: { textAlign: 'center' },\n      minWidth: 160,\n      accessor: 'sangerCGC',\n      sortable: true,\n      Cell(props: { original: ExtendCancerGene }) {\n        return props.original.sangerCGC ? <i className=\"fa fa-check\" /> : '';\n      },\n    },\n    {\n      id: 'numOfSources',\n      Header: () => '# of Sources',\n      style: { textAlign: 'center' },\n      sortable: true,\n      onFilter: (data: ExtendCancerGene, keyword) =>\n        filterByKeyword(data.numOfSources.toString(), keyword),\n      accessor: 'numOfSources',\n    },\n  ];\n\n  private readonly cancerGenes = remoteData<CancerGene[]>({\n    await: () => [],\n    async invoke() {\n      return oncokbClient.utilsCancerGeneListGetUsingGET({});\n    },\n    default: [],\n  });\n\n  private readonly annotatedGenes = remoteData<CuratedGene[]>({\n    await: () => [],\n    async invoke() {\n      return oncokbClient.utilsAllCuratedGenesGetUsingGET({});\n    },\n    default: [],\n  });\n\n  private readonly extendedCancerGene = remoteData<ExtendCancerGene[]>({\n    await: () => [this.annotatedGenes, this.cancerGenes],\n    invoke: () => {\n      const annotatedGenes = _.reduce(\n        this.annotatedGenes.result,\n        (acc, next) => {\n          acc[next.entrezGeneId] = true;\n          return acc;\n        },\n        {} as { [entrezGeneId: number]: boolean }\n      );\n      return Promise.resolve(\n        _.reduce(\n          this.cancerGenes.result,\n          (cancerGenesAcc, cancerGene) => {\n            const sourceKeys: (keyof CancerGene)[] = [\n              'oncokbAnnotated',\n              'mSKImpact',\n              'mSKHeme',\n              'foundation',\n              'foundationHeme',\n              'vogelstein',\n              'sangerCGC',\n            ];\n            cancerGenesAcc.push({\n              ...cancerGene,\n              numOfSources: _.reduce(\n                sourceKeys,\n                (numOfSourcesAcc, next) => {\n                  if (cancerGene[next]) {\n                    numOfSourcesAcc++;\n                  }\n                  return numOfSourcesAcc;\n                },\n                0\n              ),\n              geneType: getGeneType(cancerGene.oncogene, cancerGene.tsg),\n              annotated: !!annotatedGenes[cancerGene.entrezGeneId],\n              geneAliases: cancerGene.geneAliases,\n            });\n            return cancerGenesAcc;\n          },\n          [] as ExtendCancerGene[]\n        )\n      );\n    },\n    default: [],\n  });\n\n  render() {\n    return (\n      <DocumentTitle title={getPageTitle(PAGE_TITLE.CANCER_GENES)}>\n        <div className=\"cancerGenes\">\n          <Row>\n            <Col className=\"col-auto mr-auto\">\n              <h2>{ONCOKB_TM} Cancer Gene List</h2>\n            </Col>\n            <Col className=\"col-auto\">\n              <DownloadButtonWithPromise\n                fileName=\"cancerGeneList.tsv\"\n                getDownloadData={() =>\n                  oncokbClient.utilsCancerGeneListTxtGetUsingGET({})\n                }\n                buttonText=\"Cancer Gene List\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div>\n                {this.cancerGenes.result.length} genes, last update{' '}\n                {this.props.appStore.appInfo.result.dataVersion.date}\n              </div>\n              <div>\n                The following genes are considered to be cancer genes by{' '}\n                {ONCOKB_TM}, based on their inclusion in various different\n                sequencing panels, the Sanger Cancer Gene Census, or{' '}\n                <a href=\"http://science.sciencemag.org/content/339/6127/1546.full\">\n                  Vogelstein et al. (2013)\n                </a>\n                .\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <OncoKBTable\n                data={this.extendedCancerGene.result}\n                columns={this.columns}\n                showPagination={true}\n                minRows={1}\n                loading={this.extendedCancerGene.isPending}\n                defaultPageSize={10}\n                defaultSorted={[\n                  {\n                    id: 'oncokbAnnotated',\n                    desc: true,\n                  },\n                  {\n                    id: 'numOfSources',\n                    desc: true,\n                  },\n                  {\n                    id: TABLE_COLUMN_KEY.HUGO_SYMBOL,\n                    desc: false,\n                  },\n                ]}\n              />\n            </Col>\n          </Row>\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport { RouterStore } from 'mobx-react-router';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport fileDownload from 'js-file-download';\nimport { PAGE_ROUTE } from 'app/config/constants';\nimport { getRedirectLoginState } from 'app/shared/utils/Utils';\nimport { observer, inject } from 'mobx-react';\nimport { observable, action } from 'mobx';\nimport { LoadingButton } from 'app/shared/button/LoadingButton';\nimport { IDownloadButtonWithPromise } from 'app/components/downloadButtonWithPromise/DownloadButtonWithPromise';\nimport _ from 'lodash';\n\ninterface IAuthDownloadButton extends IDownloadButtonWithPromise {\n  routing?: RouterStore;\n  authenticationStore?: AuthenticationStore;\n}\n\n@inject('authenticationStore', 'routing')\n@observer\nexport class AuthDownloadButton extends React.Component<IAuthDownloadButton> {\n  @observable downloading = false;\n\n  @action\n  onClick = () => {\n    if (this.props.authenticationStore!.isUserAuthenticated) {\n      this.downloading = true;\n      this.props\n        .getDownloadData()\n        .then(data => {\n          if (_.isArray(data)) {\n            data = data.join('');\n          }\n          fileDownload(data, this.props.fileName, this.props.mime);\n        })\n        .catch(error => {})\n        .finally(() => {\n          this.downloading = false;\n        });\n    } else {\n      this.props.routing!.history.push(\n        PAGE_ROUTE.LOGIN,\n        getRedirectLoginState(\n          this.props.routing!.location.pathname,\n          this.props.routing!.location.search,\n          this.props.routing!.location.hash\n        )\n      );\n    }\n  };\n\n  render() {\n    const {\n      routing,\n      authenticationStore,\n      buttonText,\n      getDownloadData,\n      fileName,\n      ...rest\n    } = this.props;\n    return (\n      <LoadingButton\n        onClick={this.onClick}\n        loading={this.downloading}\n        {...rest}\n      >\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <i className={'fa fa-cloud-download mr-1'} />\n          {buttonText}\n        </span>\n      </LoadingButton>\n    );\n  }\n}\n","import { LevelButton } from 'app/components/levelButton/LevelButton';\nimport {\n  ACTIONABLE_GENES_LEVEL_TITLE,\n  COMPONENT_PADDING,\n  LEVEL_BUTTON_DESCRIPTION,\n  LEVEL_CLASSIFICATION,\n  LEVEL_TYPES,\n  LEVELS,\n  ONCOKB_TM,\n} from 'app/config/constants';\nimport React from 'react';\nimport { Button, Col, Collapse, Row } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { FDA_L1_DISABLED_BTN_TOOLTIP } from 'app/pages/genePage/FdaUtils';\nimport { LevelOfEvidencePageLink } from 'app/shared/links/LevelOfEvidencePageLink';\n\ntype LevelSelectionRowProps = {\n  levelType: LEVEL_TYPES;\n  collapseStatus: { [levelType: string]: boolean };\n  levelNumbers: { [level: string]: number };\n  levelSelected: { [level: string]: boolean };\n  updateCollapseStatus: (levelType: LEVEL_TYPES) => void;\n  updateLevelSelection: (level: string) => void;\n  isLoading: boolean;\n};\n\n@observer\nexport default class LevelSelectionRow extends React.Component<\n  LevelSelectionRowProps,\n  any\n> {\n  render() {\n    const levelSelections = [];\n    for (const level in LEVELS) {\n      if (\n        LEVELS[level] &&\n        ![LEVELS.Tx3A, LEVELS.Tx3B].includes(LEVELS[level]) &&\n        LEVEL_CLASSIFICATION[LEVELS[level]] === this.props.levelType\n      ) {\n        levelSelections.push(\n          <Col\n            className={classnames(...COMPONENT_PADDING)}\n            lg={LEVEL_CLASSIFICATION[LEVELS[level]] === LEVEL_TYPES.TX ? 2 : 4}\n            xs={LEVEL_CLASSIFICATION[LEVELS[level]] === LEVEL_TYPES.TX ? 6 : 4}\n            key={LEVELS[level]}\n          >\n            <LevelButton\n              title={\n                this.props.levelType === LEVEL_TYPES.FDA\n                  ? `FDA Level ${level.replace('Fda', '')}`\n                  : ''\n              }\n              level={LEVELS[level]}\n              numOfGenes={this.props.levelNumbers[LEVELS[level]]}\n              description={LEVEL_BUTTON_DESCRIPTION[LEVELS[level]]}\n              active={this.props.levelSelected[LEVELS[level]]}\n              className=\"mb-2\"\n              disabled={this.props.levelNumbers[LEVELS[level]] === 0}\n              disabledTooltip={\n                LEVELS[level] === LEVELS.Fda1 ? FDA_L1_DISABLED_BTN_TOOLTIP : ''\n              }\n              isLoading={this.props.isLoading}\n              onClick={() => this.props.updateLevelSelection(LEVELS[level])}\n            />\n          </Col>\n        );\n      }\n    }\n    return (\n      <>\n        <Row\n          style={{ paddingLeft: '1rem', paddingRight: '1rem' }}\n          className={'mb-2'}\n        >\n          <Button\n            style={{\n              backgroundColor: 'white',\n              border: 0,\n              textAlign: 'left',\n              paddingLeft: 0,\n              boxShadow: 'none',\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}\n            variant=\"light\"\n            onClick={() => {\n              this.props.updateCollapseStatus(this.props.levelType);\n            }}\n            block\n          >\n            <div style={{ flexGrow: 0, marginRight: '0.5em' }}>\n              {this.props.collapseStatus[this.props.levelType] ? (\n                <i className=\"fa fa-minus mr-2\"></i>\n              ) : (\n                <i className=\"fa fa-plus mr-2\"></i>\n              )}\n              <span>{ACTIONABLE_GENES_LEVEL_TITLE[this.props.levelType]}</span>\n            </div>\n            <div\n              style={{\n                flexGrow: 1,\n                height: '0.5px',\n                backgroundColor: 'rgba(0, 0, 0, 0.1)',\n              }}\n            ></div>\n          </Button>\n        </Row>\n        <Collapse in={this.props.collapseStatus[this.props.levelType]}>\n          <div>\n            {this.props.levelType === LEVEL_TYPES.FDA && (\n              <Row>\n                <Col>\n                  <>\n                    <p>\n                      While the intended audience for {ONCOKB_TM} is primarily\n                      clinical oncologists, molecular pathologists and cancer\n                      researchers, tumor profiling next generation sequencing\n                      (NGS) test developers may also rely on human variant\n                      databases, such as {ONCOKB_TM}, for variant information to\n                      support the clinical validity of their tests. Therefore,\n                      to credential the robustness and transparency of databases\n                      involved in variant evaluation, the FDA introduced a\n                      process to recognize human variant databases.\n                    </p>\n                    <p>\n                      Below is the FDA-recognized content in {ONCOKB_TM},\n                      including tumor type-specific alterations and their\n                      corresponding{' '}\n                      <LevelOfEvidencePageLink levelType={LEVEL_TYPES.FDA} />.\n                      The assigned FDA level of evidence is based on these\n                      alterations being tested in Formalin Fixed Paraffin\n                      Embedded (FFPE) specimen types, except in cases where\n                      specimen type is not specified.\n                    </p>\n                  </>\n                </Col>\n              </Row>\n            )}\n            <Row\n              style={{ paddingLeft: '0.5rem', paddingRight: '0.5rem' }}\n              className={'mb-2'}\n            >\n              {levelSelections}\n            </Row>\n          </div>\n        </Collapse>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport Select, { Props as SelectProps } from 'react-select';\nimport { computed } from 'mobx';\nimport _ from 'lodash';\nimport { TumorType } from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport privateClient from 'app/shared/api/oncokbPrivateClientInstance';\nimport { remoteData } from 'cbioportal-frontend-commons';\n\ninterface ICancerTypeSelect extends SelectProps {\n  cancerType?: string;\n}\n\n@observer\nexport default class CancerTypeSelect extends React.Component<\n  ICancerTypeSelect\n> {\n  readonly allCancerTypes = remoteData<TumorType[]>({\n    await: () => [],\n    async invoke() {\n      const result = await privateClient.utilsTumorTypesGetUsingGET({});\n      return result.sort();\n    },\n    default: [],\n  });\n\n  @computed\n  get tumorTypeSelectValue() {\n    if (this.props.cancerType) {\n      const matchedSubtype = _.find(\n        this.allSubtypes,\n        cancerType => cancerType.code === this.props.cancerType\n      );\n      if (matchedSubtype) {\n        return {\n          label: matchedSubtype.subtype,\n          value: matchedSubtype.code,\n        };\n      } else {\n        return {\n          label: this.props.cancerType,\n          value: this.props.cancerType,\n        };\n      }\n    } else {\n      return null;\n    }\n  }\n\n  @computed\n  get allMainTypes() {\n    return _.uniq(\n      this.allCancerTypes.result\n        .filter(cancerType => cancerType.level >= 0)\n        .map(cancerType => cancerType.mainType)\n    ).sort();\n  }\n\n  @computed\n  get allSubtypes() {\n    return _.uniq(\n      this.allCancerTypes.result.filter(cancerType => cancerType.subtype)\n    ).sort();\n  }\n\n  @computed\n  get allTumorTypesOptions() {\n    let cancerTypesGroup = this.allMainTypes.filter(\n      mainType => !mainType.endsWith('NOS')\n    );\n    cancerTypesGroup = cancerTypesGroup.concat(\n      this.allCancerTypes.result\n        .filter(ct => ct.level === -1 && ct.mainType.startsWith('All '))\n        .map(ct => ct.mainType)\n    );\n    return [\n      {\n        label: 'Cancer Type',\n        options: _.uniq(cancerTypesGroup)\n          .sort()\n          .map(cancerType => {\n            return {\n              value: cancerType,\n              label: cancerType,\n            };\n          }),\n      },\n      {\n        label: 'Cancer Type Detailed',\n        options: _.sortBy(_.uniq(this.allSubtypes), 'name').map(cancerType => {\n          return {\n            value: cancerType.code,\n            label: `${cancerType.subtype} (${cancerType.code})`,\n          };\n        }),\n      },\n    ];\n  }\n\n  render() {\n    return (\n      <Select\n        value={this.tumorTypeSelectValue}\n        placeholder=\"Select a cancer type\"\n        options={this.allTumorTypesOptions}\n        formatGroupLabel={data => <span>{data.label}</span>}\n        isClearable={true}\n        {...this.props}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport WithSeparator from 'react-with-separator';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport { COLOR_BLUE } from 'app/config/theme';\n\nconst ShortenTextWithTooltip: React.FunctionComponent<{\n  threshold: number;\n  data: string[] | JSX.Element[];\n}> = props => {\n  if (props.data.length > props.threshold) {\n    return (\n      <>\n        {props.data[0]} and{' '}\n        <DefaultTooltip\n          overlay={\n            <div style={{ maxWidth: '400px' }}>\n              <WithSeparator separator={', '}>\n                {props.data.slice(1)}\n              </WithSeparator>\n            </div>\n          }\n          overlayStyle={{\n            opacity: 1,\n          }}\n          placement=\"right\"\n          destroyTooltipOnHide={true}\n        >\n          <span\n            style={{\n              textDecoration: 'underscore',\n              color: COLOR_BLUE,\n            }}\n          >\n            {props.data.length - 1} other alterations\n          </span>\n        </DefaultTooltip>\n      </>\n    );\n  } else {\n    return <WithSeparator separator={', '}>{props.data}</WithSeparator>;\n  }\n};\nexport default ShortenTextWithTooltip;\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport privateClient from 'app/shared/api/oncokbPrivateClientInstance';\nimport { remoteData } from 'cbioportal-frontend-commons';\nimport {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n} from 'mobx';\nimport {\n  Alteration,\n  Evidence,\n  TumorType,\n} from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport Select from 'react-select';\nimport _ from 'lodash';\nimport {\n  FdaLevelIcon,\n  getCancerTypeNameFromOncoTreeType,\n  getCancerTypesNameFromOncoTreeType,\n  getDefaultColumnDefinition,\n  getDrugNameFromTreatment,\n  getPageTitle,\n  getTreatmentNameFromEvidence,\n  isFdaLevel,\n  levelOfEvidence2Level,\n  OncoKBLevelIcon,\n} from 'app/shared/utils/Utils';\nimport autobind from 'autobind-decorator';\nimport pluralize from 'pluralize';\nimport { sortByLevel } from 'app/shared/utils/ReactTableUtils';\nimport { AlterationPageLink, GenePageLink } from 'app/shared/utils/UrlUtils';\nimport {\n  ANNOTATION_PAGE_TAB_KEYS,\n  COMPONENT_PADDING,\n  DEFAULT_REFERENCE_GENOME,\n  FDA_LEVELS,\n  LEVEL_CLASSIFICATION,\n  LEVEL_TYPES,\n  LEVELS,\n  LG_TABLE_FIXED_HEIGHT,\n  ONCOKB_LEVELS,\n  PAGE_TITLE,\n  QUERY_SEPARATOR_FOR_QUERY_STRING,\n  REFERENCE_GENOME,\n  TABLE_COLUMN_KEY,\n} from 'app/config/constants';\nimport { RouterStore } from 'mobx-react-router';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport * as QueryString from 'query-string';\nimport OncoKBTable from 'app/components/oncokbTable/OncoKBTable';\nimport { AuthDownloadButton } from 'app/components/authDownloadButton/AuthDownloadButton';\nimport DocumentTitle from 'react-document-title';\nimport LevelSelectionRow from './LevelSelectionRow';\nimport CancerTypeSelect from 'app/shared/dropdown/CancerTypeSelect';\nimport {\n  ActionableGenesPageHashQueries,\n  AlterationPageHashQueries,\n  GenePageHashQueries,\n} from 'app/shared/route/types';\nimport AppStore from 'app/store/AppStore';\nimport ShortenTextWithTooltip from 'app/shared/texts/ShortenTextWithTooltip';\n\ntype Treatment = {\n  level: string;\n  fdaLevel: string;\n  hugoSymbol: string;\n  alterations: Alteration[];\n  cancerTypes: TumorType[];\n  excludedCancerTypes: TumorType[];\n  relevantCancerTypes: TumorType[];\n  treatments: {}[];\n  uniqueDrugs: string[];\n  drugs: string;\n};\n\ntype ActionableGenesPageProps = {\n  authenticationStore: AuthenticationStore;\n  routing: RouterStore;\n  appStore: AppStore;\n};\n\ntype EvidencesByLevel = { [level: string]: Evidence[] };\n@inject('routing', 'authenticationStore', 'appStore')\n@observer\nexport default class ActionableGenesPage extends React.Component<\n  ActionableGenesPageProps,\n  any\n> {\n  @observable relevantCancerTypeSearchKeyword = '';\n  @observable drugSearchKeyword = '';\n  @observable geneSearchKeyword = '';\n  @observable refGenome = DEFAULT_REFERENCE_GENOME;\n  @observable levelSelected: {\n    [level in keyof LEVELS]: boolean;\n  } = this.initLevelSelected();\n  @observable collapseStatus: { [key in LEVEL_TYPES]: boolean } = {\n    [LEVEL_TYPES.TX]: true,\n    [LEVEL_TYPES.DX]: false,\n    [LEVEL_TYPES.PX]: false,\n    [LEVEL_TYPES.FDA]: false,\n  };\n  @observable collapseInit = false;\n\n  readonly allMainTypes = remoteData<string[]>({\n    await: () => [],\n    async invoke() {\n      const result = await privateClient.utilsTumorTypesGetUsingGET({});\n      return _.chain(result)\n        .filter(cancerType => cancerType.level >= 0)\n        .map(cancerType => cancerType.mainType)\n        .uniq()\n        .value()\n        .sort();\n    },\n    default: [],\n  });\n\n  readonly evidencesByLevel = remoteData<EvidencesByLevel>({\n    await: () => [],\n    async invoke() {\n      return await privateClient.utilsEvidencesByLevelsGetUsingGET({});\n    },\n    default: {},\n  });\n\n  readonly reactions: IReactionDisposer[] = [];\n\n  constructor(props: Readonly<ActionableGenesPageProps>) {\n    super(props);\n    this.reactions.push(\n      reaction(\n        () => [props.routing.location.hash],\n        ([hash]) => {\n          const queryStrings = QueryString.parse(hash, {\n            arrayFormat: QUERY_SEPARATOR_FOR_QUERY_STRING,\n          }) as ActionableGenesPageHashQueries;\n          if (queryStrings.levels) {\n            this.levelSelected = this.initLevelSelected();\n            (_.isArray(queryStrings.levels)\n              ? queryStrings.levels\n              : [queryStrings.levels]\n            ).forEach(level => {\n              this.levelSelected[level] = true;\n            });\n            if (!this.collapseInit) {\n              (_.isArray(queryStrings.levels)\n                ? queryStrings.levels\n                : [queryStrings.levels]\n              ).forEach(level => {\n                this.collapseStatus[LEVEL_CLASSIFICATION[level]] = true;\n              });\n              this.collapseInit = true;\n            }\n          }\n          if (queryStrings.hugoSymbol) {\n            this.geneSearchKeyword = queryStrings.hugoSymbol;\n          }\n          if (queryStrings.tumorType) {\n            this.relevantCancerTypeSearchKeyword = queryStrings.tumorType;\n          }\n          if (queryStrings.cancerType) {\n            this.relevantCancerTypeSearchKeyword = queryStrings.cancerType;\n          }\n          if (queryStrings.drug) {\n            this.drugSearchKeyword = queryStrings.drug;\n          }\n          if (queryStrings.refGenome) {\n            this.refGenome = queryStrings.refGenome;\n          }\n          if (queryStrings.sections) {\n            const visibleSections = _.isArray(queryStrings.sections)\n              ? queryStrings.sections\n              : [queryStrings.sections];\n            visibleSections.forEach(\n              section => (this.collapseStatus[section] = true)\n            );\n          }\n        },\n        { fireImmediately: true }\n      ),\n      reaction(\n        () => this.hashQueries,\n        newHash => {\n          const parsedHashQueryString = QueryString.stringify(newHash, {\n            arrayFormat: QUERY_SEPARATOR_FOR_QUERY_STRING,\n          });\n          window.location.hash = parsedHashQueryString;\n        },\n        true\n      ),\n      reaction(\n        () => this.collapseStatus[LEVEL_TYPES.FDA],\n        newStatus => {\n          if (newStatus) {\n            this.collapseStatus[LEVEL_TYPES.TX] = false;\n            this.collapseStatus[LEVEL_TYPES.DX] = false;\n            this.collapseStatus[LEVEL_TYPES.PX] = false;\n            this.props.appStore.inFdaRecognizedContent = true;\n            this.clearSelectedLevels('ONCOKB');\n          } else {\n            if (\n              !(\n                this.collapseStatus[LEVEL_TYPES.TX] ||\n                this.collapseStatus[LEVEL_TYPES.DX] ||\n                this.collapseStatus[LEVEL_TYPES.PX]\n              )\n            ) {\n              this.collapseStatus[LEVEL_TYPES.TX] = true;\n              this.clearSelectedLevels('FDA');\n            }\n          }\n        },\n        true\n      ),\n      reaction(\n        () =>\n          this.collapseStatus[LEVEL_TYPES.TX] ||\n          this.collapseStatus[LEVEL_TYPES.DX] ||\n          this.collapseStatus[LEVEL_TYPES.PX],\n        newStatus => {\n          if (newStatus) {\n            this.collapseStatus[LEVEL_TYPES.FDA] = false;\n            FDA_LEVELS.forEach(fdaLevel => {\n              this.levelSelected[fdaLevel] = false;\n            });\n          }\n          if (newStatus && this.props.appStore.inFdaRecognizedContent) {\n            this.props.appStore.showFdaModal = true;\n            this.props.appStore.inFdaRecognizedContent = false;\n          }\n        }\n      )\n    );\n  }\n\n  @action\n  clearSelectedLevels(type: 'FDA' | 'ONCOKB') {\n    (type === 'ONCOKB' ? ONCOKB_LEVELS : FDA_LEVELS).forEach(oncokbLevel => {\n      if (this.levelSelected[oncokbLevel]) {\n        this.levelSelected[oncokbLevel] = false;\n      }\n    });\n  }\n\n  componentWillUnmount(): void {\n    this.reactions.forEach(componentReaction => componentReaction());\n  }\n\n  getTreatments(evidences: Evidence[]) {\n    const treatments: Treatment[] = [];\n    _.forEach(evidences, (item: Evidence) => {\n      const matchedAlterations = item.alterations.filter(alteration =>\n        alteration.referenceGenomes.includes(this.refGenome)\n      );\n      if (matchedAlterations.length > 0) {\n        treatments.push({\n          level: levelOfEvidence2Level(item.levelOfEvidence, true),\n          fdaLevel: levelOfEvidence2Level(item.fdaLevel, true),\n          hugoSymbol: item.gene.hugoSymbol || 'NA',\n          alterations: _.sortBy(matchedAlterations, 'name'),\n          cancerTypes: item.cancerTypes,\n          excludedCancerTypes: item.excludedCancerTypes,\n          relevantCancerTypes: item.relevantCancerTypes,\n          treatments: item.treatments,\n          uniqueDrugs: _.uniq(\n            _.reduce(\n              item.treatments,\n              (acc, treatment) => {\n                const result: string[] = treatment.drugs.map(drug =>\n                  getDrugNameFromTreatment(drug)\n                );\n                return acc.concat(result);\n              },\n              [] as string[]\n            )\n          ),\n          drugs: getTreatmentNameFromEvidence(item),\n        });\n      }\n    });\n    return treatments;\n  }\n\n  initLevelSelected(): { [level in keyof LEVELS]: boolean } {\n    return _.reduce(\n      LEVELS,\n      (acc, level) => {\n        acc[level] = false;\n        return acc;\n      },\n      {} as { [level in keyof LEVELS]: boolean }\n    );\n  }\n\n  @computed\n  get hashQueries() {\n    const queryString: ActionableGenesPageHashQueries = {};\n    if (this.selectedLevels.length > 0) {\n      queryString.levels = this.selectedLevels;\n    }\n    if (this.geneSearchKeyword) {\n      queryString.hugoSymbol = this.geneSearchKeyword;\n    }\n    if (this.relevantCancerTypeSearchKeyword) {\n      queryString.cancerType = this.relevantCancerTypeSearchKeyword;\n    }\n    if (this.drugSearchKeyword) {\n      queryString.drug = this.drugSearchKeyword;\n    }\n    const visibleSections = _.chain(this.collapseStatus)\n      .values()\n      .filter(sectionStatus => sectionStatus)\n      .value();\n    if (visibleSections.length > 0) {\n      const sections: LEVEL_TYPES[] = [];\n      for (const visibleSection in this.collapseStatus) {\n        if (this.collapseStatus[visibleSection]) {\n          sections.push(visibleSection as LEVEL_TYPES);\n        }\n      }\n      queryString.sections = sections;\n    }\n    return queryString;\n  }\n\n  @computed\n  get allTreatments() {\n    if (this.fdaSectionIsOpen) {\n      return this.allFdaTreatments;\n    } else {\n      return this.allOncokbTreatments;\n    }\n  }\n\n  @computed\n  get allOncokbTreatments() {\n    let treatments: Treatment[] = [];\n    _.forEach(this.evidencesByLevel.result, (content, levelOfEvidence) => {\n      treatments = treatments.concat(this.getTreatments(content));\n    });\n    return treatments;\n  }\n\n  @computed\n  get allFdaTreatments() {\n    const treatments: Treatment[] = [];\n    this.allOncokbTreatments\n      .filter(treatment => treatment.fdaLevel)\n      .map(treatment => {\n        treatments.push({\n          ...treatment,\n          level: treatment.fdaLevel,\n        } as Treatment);\n      });\n    return treatments;\n  }\n\n  @computed\n  get filteredTreatments(): Treatment[] {\n    return this.allTreatments.filter(treatment => {\n      let match = true;\n      if (\n        this.geneSearchKeyword &&\n        treatment.hugoSymbol !== this.geneSearchKeyword\n      ) {\n        match = false;\n      }\n      if (\n        this.relevantCancerTypeSearchKeyword &&\n        treatment.relevantCancerTypes.filter(rct => {\n          if (rct.code) {\n            return (\n              rct.code === this.relevantCancerTypeSearchKeyword ||\n              rct.subtype === this.relevantCancerTypeSearchKeyword\n            );\n          } else {\n            return rct.mainType === this.relevantCancerTypeSearchKeyword;\n          }\n        }).length === 0\n      ) {\n        match = false;\n      }\n      if (\n        this.drugSearchKeyword &&\n        !treatment.uniqueDrugs.includes(this.drugSearchKeyword)\n      ) {\n        match = false;\n      }\n      if (\n        this.selectedLevels.length > 0 &&\n        !this.selectedLevels.includes(treatment.level)\n      ) {\n        match = false;\n      }\n      return match;\n    });\n  }\n\n  @computed\n  get noFdaLevelSelected() {\n    return _.intersection(this.selectedLevels, FDA_LEVELS).length === 0;\n  }\n\n  @computed\n  get secondLayerFilterEnabled() {\n    return (\n      !!this.geneSearchKeyword ||\n      !!this.relevantCancerTypeSearchKeyword ||\n      !!this.drugSearchKeyword\n    );\n  }\n\n  @computed\n  get treatmentsAreFiltered() {\n    return this.selectedLevels.length > 0 || this.secondLayerFilterEnabled;\n  }\n\n  @computed\n  get filteredGenes() {\n    return _.uniq(\n      this.filteredTreatments.map(treatment => treatment.hugoSymbol)\n    ).sort();\n  }\n\n  @computed\n  get filteredDrugs() {\n    return _.uniq(\n      _.flatten(this.filteredTreatments.map(treatment => treatment.uniqueDrugs))\n    ).sort();\n  }\n\n  @computed\n  get filteredTumorTypes() {\n    return _.uniq(\n      this.filteredTreatments.map(treatment =>\n        treatment.cancerTypes\n          .map(ct => getCancerTypeNameFromOncoTreeType(ct))\n          .join(', ')\n      )\n    );\n  }\n\n  @computed\n  get levelNumbers() {\n    const levelNumbers = _.reduce(\n      LEVELS,\n      (acc, level) => {\n        acc[level] = [];\n        return acc;\n      },\n      {} as { [level: string]: string[] }\n    );\n\n    // when there is no second layer filtering enabled, we allow to choose multiple levels\n    const treatmentSource = this.secondLayerFilterEnabled\n      ? this.filteredTreatments\n      : this.allTreatments;\n    treatmentSource.map(treatment => {\n      if (levelNumbers[treatment.level]) {\n        levelNumbers[treatment.level].push(treatment.hugoSymbol);\n      }\n    });\n    return _.reduce(\n      levelNumbers,\n      (acc, next, level) => {\n        acc[level] = _.uniq(next).length;\n        return acc;\n      },\n      {} as { [level: string]: number }\n    );\n  }\n\n  @computed\n  get filteredLevels() {\n    return _.uniq(this.filteredTreatments.map(treatment => treatment.level));\n  }\n\n  @computed\n  get data() {\n    return null;\n  }\n\n  @computed\n  get selectedLevels() {\n    return _.reduce(\n      this.levelSelected,\n      (acc, selected, level) => {\n        if (selected) {\n          acc.push(level);\n        }\n        return acc;\n      },\n      [] as string[]\n    );\n  }\n\n  @computed\n  get drugSelectValue() {\n    return this.drugSearchKeyword\n      ? {\n          label: this.drugSearchKeyword,\n          value: this.drugSearchKeyword,\n        }\n      : null;\n  }\n\n  @computed\n  get tumorTypeSelectValue() {\n    return this.relevantCancerTypeSearchKeyword\n      ? {\n          label: this.relevantCancerTypeSearchKeyword,\n          value: this.relevantCancerTypeSearchKeyword,\n        }\n      : null;\n  }\n\n  @computed\n  get geneSelectValue() {\n    return this.geneSearchKeyword\n      ? {\n          label: this.geneSearchKeyword,\n          value: this.geneSearchKeyword,\n        }\n      : null;\n  }\n\n  @autobind\n  @action\n  updateLevelSelection(levelOfEvidence: LEVELS) {\n    this.levelSelected[levelOfEvidence] = !this.levelSelected[levelOfEvidence];\n  }\n\n  @autobind\n  @action\n  updateCollapseStatus(levelType: string) {\n    this.collapseStatus[levelType] = !this.collapseStatus[levelType];\n  }\n\n  @computed\n  get fdaSectionIsOpen() {\n    return !!this.collapseStatus[LEVEL_TYPES.FDA];\n  }\n\n  @computed\n  get oncokbTableKey() {\n    return this.fdaSectionIsOpen ? 'paginated' : 'non-paginated';\n  }\n\n  @autobind\n  @action\n  clearFilters() {\n    this.levelSelected = this.initLevelSelected();\n    this.relevantCancerTypeSearchKeyword = '';\n    this.drugSearchKeyword = '';\n    this.geneSearchKeyword = '';\n  }\n\n  @autobind\n  downloadAssociation() {\n    const header = ['Level', 'Gene', 'Alterations', 'Cancer Types'];\n    if (this.drugRelatedLevelSelected) {\n      header.push('Drugs (for therapeutic implications only)');\n    }\n    const content = [header.join('\\t')];\n    this.filteredTreatments\n      .map(treatment => ({\n        level: treatment.level,\n        hugoSymbol: treatment.hugoSymbol,\n        alterations: treatment.alterations\n          .map(alteration => alteration.name)\n          .sort()\n          .join(', '),\n        tumorType: getCancerTypesNameFromOncoTreeType(\n          treatment.cancerTypes,\n          treatment.excludedCancerTypes\n        ),\n        drugs: treatment.drugs,\n      }))\n      .sort((treatmentA, treatmentB) => {\n        let result = sortByLevel(treatmentA.level, treatmentB.level);\n        if (result === 0) {\n          result = treatmentA.hugoSymbol.localeCompare(treatmentB.hugoSymbol);\n        }\n        if (result === 0) {\n          result = treatmentA.alterations.localeCompare(treatmentB.alterations);\n        }\n        if (result === 0) {\n          result = treatmentA.tumorType.localeCompare(treatmentB.tumorType);\n        }\n        if (result === 0) {\n          result = treatmentA.drugs.localeCompare(treatmentB.drugs);\n        }\n        return result;\n      })\n      .forEach(item => {\n        const row = [\n          item.level,\n          item.hugoSymbol,\n          item.alterations,\n          item.tumorType,\n        ];\n        if (this.drugRelatedLevelSelected) {\n          row.push(item.drugs);\n        }\n        content.push(row.join('\\t'));\n      });\n    return Promise.resolve(content.join('\\n'));\n  }\n\n  getAlterationCell(hugoSymbol: string, alterations: Alteration[]) {\n    const alterationPageHashQueries: AlterationPageHashQueries = {};\n    if (this.fdaSectionIsOpen) {\n      alterationPageHashQueries.tab = ANNOTATION_PAGE_TAB_KEYS.FDA;\n    }\n    const linkedAlts = alterations.map<JSX.Element>(\n      (alteration, index: number) =>\n        alteration.consequence ? (\n          <AlterationPageLink\n            key={index}\n            hugoSymbol={hugoSymbol}\n            alteration={{\n              alteration: alteration.alteration,\n              name: alteration.name,\n            }}\n            alterationRefGenomes={\n              alteration.referenceGenomes as REFERENCE_GENOME[]\n            }\n            hashQueries={alterationPageHashQueries}\n            onClick={() => {\n              if (this.fdaSectionIsOpen) {\n                this.props.appStore.toFdaRecognizedContent = true;\n              }\n            }}\n          />\n        ) : (\n          <span>{alteration.name}</span>\n        )\n    );\n    const shortenTextKey = `${hugoSymbol}-${alterations\n      .map(a => a.alteration)\n      .join('-')}`;\n    return (\n      <ShortenTextWithTooltip\n        key={shortenTextKey}\n        threshold={5}\n        data={linkedAlts}\n      />\n    );\n  }\n\n  @computed\n  get drugRelatedLevelSelected() {\n    if (this.collapseStatus[LEVEL_TYPES.FDA]) {\n      return false;\n    }\n    if (this.selectedLevels.length === 0) {\n      return true;\n    }\n    return (\n      _.intersection(\n        [LEVELS.Tx1, LEVELS.Tx2, LEVELS.Tx3, LEVELS.Tx4, LEVELS.R1, LEVELS.R2],\n        this.selectedLevels\n      ).length > 0\n    );\n  }\n\n  @computed\n  get columns() {\n    const commonColumns = [\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.LEVEL),\n        Header: <span>Level</span>,\n        minWidth: 120,\n        Cell(props: any) {\n          return (\n            <div className={'my-1 d-flex justify-content-center'}>\n              {isFdaLevel(props.original.level) ? (\n                <FdaLevelIcon\n                  level={props.original.level}\n                  withDescription={true}\n                />\n              ) : (\n                <OncoKBLevelIcon\n                  level={props.original.level}\n                  withDescription={true}\n                />\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.HUGO_SYMBOL),\n        style: { whiteSpace: 'normal' },\n        Cell: (props: { original: Treatment }) => {\n          const hashQueries: GenePageHashQueries = {};\n          if (this.fdaSectionIsOpen) {\n            hashQueries.tab = ANNOTATION_PAGE_TAB_KEYS.FDA;\n          }\n          return (\n            <GenePageLink\n              hugoSymbol={props.original.hugoSymbol}\n              hashQueries={hashQueries}\n              onClick={() => {\n                if (this.fdaSectionIsOpen) {\n                  this.props.appStore.toFdaRecognizedContent = true;\n                }\n              }}\n            />\n          );\n        },\n      },\n      {\n        id: TABLE_COLUMN_KEY.ALTERATIONS,\n        Header: <span>Alterations</span>,\n        accessor: 'alterations',\n        minWidth: 200,\n        style: { whiteSpace: 'normal' },\n        defaultSortDesc: false,\n        sortMethod(a: Alteration[], b: Alteration[]) {\n          return a\n            .map(datum => datum.name)\n            .join(', ')\n            .localeCompare(b.map(datum => datum.name).join(', '));\n        },\n        Cell: (props: { original: Treatment }) => {\n          return (\n            <div style={{ display: 'block' }}>\n              {' '}\n              {this.getAlterationCell(\n                props.original.hugoSymbol,\n                props.original.alterations\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.EVIDENCE_CANCER_TYPE),\n        Header: <span>Cancer Types</span>,\n        minWidth: 300,\n        accessor: 'cancerTypes',\n        sortMethod(a: TumorType[], b: TumorType[]) {\n          return getCancerTypesNameFromOncoTreeType(a).localeCompare(\n            getCancerTypesNameFromOncoTreeType(b)\n          );\n        },\n        Cell(props: { original: Treatment }) {\n          return (\n            <span>\n              {getCancerTypesNameFromOncoTreeType(\n                props.original.cancerTypes,\n                props.original.excludedCancerTypes\n              )}\n            </span>\n          );\n        },\n      },\n    ];\n    if (this.drugRelatedLevelSelected) {\n      commonColumns.push({\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.DRUGS),\n        minWidth: 300,\n        style: { whiteSpace: 'normal' },\n        Cell(props: { original: Treatment }) {\n          return <span>{props.original.drugs}</span>;\n        },\n      });\n    }\n    return commonColumns;\n  }\n\n  @computed\n  get oncokbTableProps() {\n    const tableProps = {\n      disableSearch: true,\n      data: this.filteredTreatments,\n      loading: this.evidencesByLevel.isPending,\n      columns: this.columns,\n      defaultPageSize: 10,\n      defaultSorted: [\n        {\n          id: TABLE_COLUMN_KEY.LEVEL,\n          desc: true,\n        },\n        {\n          id: TABLE_COLUMN_KEY.HUGO_SYMBOL,\n          desc: false,\n        },\n        {\n          id: TABLE_COLUMN_KEY.ALTERATIONS,\n          desc: false,\n        },\n        {\n          id: TABLE_COLUMN_KEY.EVIDENCE_CANCER_TYPE,\n          desc: false,\n        },\n        {\n          id: TABLE_COLUMN_KEY.DRUGS,\n          desc: false,\n        },\n      ],\n      showPagination: this.fdaSectionIsOpen,\n      fixedHeight: !this.fdaSectionIsOpen,\n      getTdProps: () => ({\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n        },\n      }),\n    };\n    if (!this.fdaSectionIsOpen) {\n      return {\n        ...tableProps,\n        minRows: Math.round(LG_TABLE_FIXED_HEIGHT / 36) - 1,\n        pageSize:\n          this.filteredTreatments.length === 0\n            ? 1\n            : this.filteredTreatments.length,\n        style: {\n          height: LG_TABLE_FIXED_HEIGHT,\n        },\n      };\n    } else {\n      return tableProps;\n    }\n  }\n\n  getTable() {\n    // We need to render two tables, one with fixed header, one with pagination.\n    // Once page size is specified in the fixed header table, it cannot be overwritten by the defaultPageSize\n    return <OncoKBTable key={this.oncokbTableKey} {...this.oncokbTableProps} />;\n  }\n\n  @computed\n  get filterResult() {\n    const evidencePostFix = this.fdaSectionIsOpen\n      ? `${pluralize('record', this.filteredTreatments.length)}`\n      : `clinical  ${pluralize('implication', this.filteredTreatments.length)}`;\n    return (\n      <>\n        <b>{`Showing ${this.filteredTreatments.length} ${evidencePostFix}`}</b>\n        {` (${this.filteredGenes.length} ${pluralize(\n          'gene',\n          this.filteredGenes.length\n        )},\n                ${this.filteredTumorTypes.length} ${pluralize(\n          'cancer type',\n          this.filteredTumorTypes.length\n        )},\n                ${this.filteredLevels.length} ${pluralize(\n          'level',\n          this.filteredLevels.length\n        )} of evidence)`}\n      </>\n    );\n  }\n\n  render() {\n    const levelSelectionSection = [];\n    for (const key in LEVEL_TYPES) {\n      if (LEVEL_TYPES[key]) {\n        levelSelectionSection.push(\n          <LevelSelectionRow\n            key={key}\n            levelType={LEVEL_TYPES[key]}\n            collapseStatus={this.collapseStatus}\n            levelNumbers={this.levelNumbers}\n            levelSelected={this.levelSelected}\n            updateCollapseStatus={this.updateCollapseStatus}\n            updateLevelSelection={this.updateLevelSelection}\n            isLoading={this.evidencesByLevel.isPending}\n          />\n        );\n      }\n    }\n\n    return (\n      <DocumentTitle title={getPageTitle(PAGE_TITLE.ACTIONABLE_GENES)}>\n        <>\n          {levelSelectionSection}\n          <Row\n            style={{ paddingLeft: '0.5rem', paddingRight: '0.5rem' }}\n            className={'mb-2'}\n          >\n            <Col\n              className={classnames(...COMPONENT_PADDING)}\n              lg={this.drugRelatedLevelSelected ? 4 : 6}\n              xs={12}\n            >\n              <Select\n                value={this.geneSelectValue}\n                placeholder={`${\n                  this.filteredGenes.length\n                } actionable ${pluralize('gene', this.filteredGenes.length)}`}\n                options={this.filteredGenes.map(hugoSymbol => {\n                  return {\n                    value: hugoSymbol,\n                    label: hugoSymbol,\n                  };\n                })}\n                isClearable={true}\n                onChange={(selectedOption: any) =>\n                  (this.geneSearchKeyword = selectedOption\n                    ? selectedOption.label\n                    : '')\n                }\n              />\n            </Col>\n            <Col\n              className={classnames(...COMPONENT_PADDING)}\n              lg={this.drugRelatedLevelSelected ? 4 : 6}\n              xs={12}\n            >\n              <CancerTypeSelect\n                cancerType={this.relevantCancerTypeSearchKeyword}\n                onChange={(selectedOption: any) =>\n                  (this.relevantCancerTypeSearchKeyword = selectedOption\n                    ? selectedOption.value\n                    : '')\n                }\n              />\n            </Col>\n            {this.drugRelatedLevelSelected && (\n              <Col className={classnames(...COMPONENT_PADDING)} lg={4} xs={12}>\n                <Select\n                  value={this.drugSelectValue}\n                  placeholder={`${this.filteredDrugs.length} ${pluralize(\n                    'drug',\n                    this.filteredDrugs.length\n                  )}`}\n                  options={this.filteredDrugs.map(drug => {\n                    return {\n                      value: drug,\n                      label: drug,\n                    };\n                  })}\n                  isClearable={true}\n                  onChange={(selectedOption: any) =>\n                    (this.drugSearchKeyword = selectedOption\n                      ? selectedOption.label\n                      : '')\n                  }\n                />\n              </Col>\n            )}\n          </Row>\n          <Row className={'mb-2'}>\n            <Col className=\"d-flex\">\n              <span>{this.filterResult}</span>\n              <AuthDownloadButton\n                size={'sm'}\n                className={classnames('ml-2')}\n                getDownloadData={this.downloadAssociation}\n                fileName={'oncokb_biomarker_drug_associations.tsv'}\n                buttonText={'Associations'}\n              />\n              {this.treatmentsAreFiltered ? (\n                <Button\n                  variant=\"link\"\n                  size={'sm'}\n                  style={{ whiteSpace: 'nowrap' }}\n                  className={'ml-auto pr-0'}\n                  onClick={this.clearFilters}\n                >\n                  Reset filters\n                </Button>\n              ) : undefined}\n            </Col>\n          </Row>\n          <Row className=\"mt-2\">\n            <Col>{this.getTable()}</Col>\n          </Row>\n        </>\n      </DocumentTitle>\n    );\n  }\n}\n","import {\n  CancerTypeFilter,\n  DataFilter,\n  DataFilterType,\n} from 'react-mutation-mapper';\nimport { OncokbMutation } from 'app/components/oncokbMutationMapper/OncokbMutation';\n\nexport const CANCER_TYPE_FILTER_ID = '_oncoKbCancerTypeFilter_';\nexport const ONCOGENICITY_FILTER_ID = '_oncoKbOncogenicityFilter_';\nexport const ONCOGENICITY_FILTER_TYPE = 'oncoKbOncogenicityFilterType';\n\nexport function findPositionFilter(dataFilters: DataFilter[]) {\n  return dataFilters.find(f => f.type === DataFilterType.POSITION);\n}\n\nexport function findOncogenicityFilter(dataFilters: DataFilter[]) {\n  return dataFilters.find(f => f.id === ONCOGENICITY_FILTER_ID);\n}\n\nexport function applyOncogenicityFilter(\n  filter: DataFilter<string>,\n  mutation: OncokbMutation\n) {\n  return filter.values.includes(mutation.oncogenic);\n}\n\nexport function findCancerTypeFilter(dataFilters: DataFilter[]) {\n  return dataFilters.find(f => f.id === CANCER_TYPE_FILTER_ID);\n}\n\nexport function applyCancerTypeFilter(\n  filter: CancerTypeFilter,\n  mutation: OncokbMutation\n) {\n  return (\n    mutation.cancerType !== undefined &&\n    filter.values.map(f => mutation.cancerType!.includes(f)).includes(true)\n  );\n}\n","import React, { useState } from 'react';\nimport GeneAliasesDescription from 'app/shared/texts/GeneAliasesDescription';\nimport { Col, Row } from 'react-bootstrap';\nimport { Gene } from 'app/shared/api/generated/OncoKbAPI';\nimport { EnsemblGene } from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport {\n  FdaLevelIcon,\n  levelOfEvidence2Level,\n  OncoKBLevelIcon,\n} from 'app/shared/utils/Utils';\nimport WithSeparator from 'react-with-separator';\nimport { LEVELS } from 'app/config/constants';\n\nenum GENE_TYPE_DESC {\n  ONCOGENE = 'Oncogene',\n  TUMOR_SUPPRESSOR = 'Tumor Suppressor',\n}\n\nconst HighestLevelItem: React.FunctionComponent<{\n  level: LEVELS;\n  key?: string;\n}> = props => {\n  let isFdaLevel = false;\n  let levelText = '';\n  switch (props.level) {\n    case LEVELS.Fda1:\n    case LEVELS.Fda2:\n    case LEVELS.Fda3:\n      levelText = `FDA Level ${props.level.replace('Fda', '')}`;\n      isFdaLevel = true;\n      break;\n    default:\n      levelText = `Level ${props.level}`;\n      break;\n  }\n  return (\n    <span className={'d-flex align-items-center'}>\n      <span className={`oncokb level-${props.level}`}>{levelText}</span>\n      {isFdaLevel ? (\n        <FdaLevelIcon level={props.level} />\n      ) : (\n        <OncoKBLevelIcon level={props.level} withDescription />\n      )}\n    </span>\n  );\n};\n\ntype GeneInfoItem = {\n  key: string;\n  element: JSX.Element | string;\n};\n\ntype GeneInfoProps = {\n  gene: Gene;\n  ensemblGenes: EnsemblGene[];\n  highestSensitiveLevel: string | undefined;\n  highestResistanceLevel: string | undefined;\n  highestDiagnosticImplicationLevel?: string | undefined;\n  highestPrognosticImplicationLevel?: string | undefined;\n  highestFdaLevel?: string | undefined;\n};\n\nexport const getHighestLevelStrings = (\n  highestSensitiveLevel: string | undefined,\n  highestResistanceLevel: string | undefined,\n  highestDiagnosticImplicationLevel?: string | undefined,\n  highestPrognosticImplicationLevel?: string | undefined,\n  highestFdaLevel?: string | undefined,\n  separator: string | JSX.Element = ', '\n) => {\n  const levels: React.ReactNode[] = [];\n  if (highestSensitiveLevel) {\n    const level = levelOfEvidence2Level(highestSensitiveLevel, false);\n    levels.push(\n      <HighestLevelItem level={level} key={'highestSensitiveLevel'} />\n    );\n  }\n  if (highestResistanceLevel) {\n    const level = levelOfEvidence2Level(highestResistanceLevel, false);\n    levels.push(\n      <HighestLevelItem level={level} key={'highestResistanceLevel'} />\n    );\n  }\n  if (highestDiagnosticImplicationLevel) {\n    const level = levelOfEvidence2Level(\n      highestDiagnosticImplicationLevel,\n      false\n    );\n    levels.push(\n      <HighestLevelItem\n        level={level}\n        key={'highestDiagnosticImplicationLevel'}\n      />\n    );\n  }\n  if (highestPrognosticImplicationLevel) {\n    const level = levelOfEvidence2Level(\n      highestPrognosticImplicationLevel,\n      false\n    );\n    levels.push(\n      <HighestLevelItem\n        level={level}\n        key={'highestPrognosticImplicationLevel'}\n      />\n    );\n  }\n  if (highestFdaLevel) {\n    const level = levelOfEvidence2Level(highestFdaLevel, false);\n    levels.push(<HighestLevelItem level={level} key={'highestFdaLevel'} />);\n  }\n  return (\n    <WithSeparator\n      separator={<span className=\"mx-1\">·</span>}\n      key={'highest-levels'}\n    >\n      {levels}\n    </WithSeparator>\n  );\n};\n\nconst getGeneTypeSentence = (oncogene: boolean, tsg: boolean) => {\n  const geneTypes = [];\n  if (oncogene) {\n    geneTypes.push(GENE_TYPE_DESC.ONCOGENE);\n  }\n  if (tsg) {\n    geneTypes.push(GENE_TYPE_DESC.TUMOR_SUPPRESSOR);\n  }\n  return geneTypes.join(', ');\n};\n\nconst GeneInfo: React.FunctionComponent<GeneInfoProps> = props => {\n  const gene = props.gene;\n  const info: GeneInfoItem[] = [];\n\n  // gene type\n  if (gene.oncogene || gene.tsg) {\n    info.push({\n      key: 'geneType',\n      element: (\n        <div>\n          <h5>{getGeneTypeSentence(gene.oncogene, gene.tsg)}</h5>\n        </div>\n      ),\n    });\n  }\n\n  // highest LoE\n  if (\n    props.highestResistanceLevel ||\n    props.highestSensitiveLevel ||\n    props.highestDiagnosticImplicationLevel ||\n    props.highestPrognosticImplicationLevel ||\n    props.highestFdaLevel\n  ) {\n    info.push({\n      key: 'loe',\n      element: (\n        <div>\n          <h5 className={'d-flex align-items-center flex-wrap'}>\n            <span className={'mr-2'}>Highest level of evidence:</span>\n            {getHighestLevelStrings(\n              props.highestSensitiveLevel,\n              props.highestResistanceLevel,\n              props.highestDiagnosticImplicationLevel,\n              props.highestPrognosticImplicationLevel,\n              props.highestFdaLevel\n            )}\n          </h5>\n        </div>\n      ),\n    });\n  }\n\n  if (gene.geneAliases.length > 0) {\n    info.push({\n      key: 'aliases',\n      element: (\n        <div>\n          <GeneAliasesDescription geneAliases={gene.geneAliases} />\n        </div>\n      ),\n    });\n  }\n\n  return (\n    <>\n      {info.map(record => (\n        <Row key={record.key}>\n          <Col>{record.element}</Col>\n        </Row>\n      ))}\n    </>\n  );\n};\n\nexport default GeneInfo;\n","import {\n  FdaImplication,\n  TherapeuticImplication,\n} from 'app/store/AnnotationStore';\nimport _ from 'lodash';\nimport { LEVEL_PRIORITY, LEVELS, PAGE_ROUTE } from 'app/config/constants';\nimport { VariantAnnotation } from 'app/shared/api/generated/OncoKbPrivateAPI';\n\nconst getFdaImplicationKey = (fdaImplication: FdaImplication) => {\n  return `${fdaImplication.alteration.alteration}-${fdaImplication.cancerType}`;\n};\nexport const getUniqueFdaImplications = (\n  fdaImplications: FdaImplication[]\n): FdaImplication[] => {\n  const uniqueData: { [key: string]: FdaImplication[] } = _.groupBy(\n    fdaImplications,\n    (fdaImplication: FdaImplication) => {\n      return getFdaImplicationKey(fdaImplication);\n    }\n  );\n  const finalList: FdaImplication[] = [];\n  for (const key in uniqueData) {\n    if (uniqueData[key].length > 0) {\n      finalList.push(\n        _.sortBy(uniqueData[key], fdaImplication => {\n          return LEVEL_PRIORITY.indexOf(fdaImplication.level as LEVELS);\n        })[0]\n      );\n    }\n  }\n  return finalList;\n};\n\nexport const sortTherapeuticImplications = (\n  implications: TherapeuticImplication[],\n  desc = true\n) => {\n  return implications.sort(\n    (a, b) =>\n      (LEVEL_PRIORITY.indexOf(a.level as LEVELS) -\n        LEVEL_PRIORITY.indexOf(b.level as LEVELS)) *\n      (desc ? -1 : 1)\n  );\n};\n\nexport enum SummaryKey {\n  GENE_SUMMARY = 'geneSummary',\n  ALTERATION_SUMMARY = 'variantSummary',\n  TUMOR_TYPE_SUMMARY = 'tumorTypeSummary',\n  DIAGNOSTIC_SUMMARY = 'diagnosticSummary',\n  PROGNOSTIC_SUMMARY = 'prognosticSummary',\n}\n\nconst SUMMARY_TITLE = {\n  [SummaryKey.GENE_SUMMARY]: 'Gene Summary',\n  [SummaryKey.ALTERATION_SUMMARY]: 'Alteration Summary',\n  [SummaryKey.TUMOR_TYPE_SUMMARY]: 'Therapeutic Summary',\n  [SummaryKey.DIAGNOSTIC_SUMMARY]: 'Diagnostic Summary',\n  [SummaryKey.PROGNOSTIC_SUMMARY]: 'Prognostic Summary',\n};\n\nexport const getSummaries = (\n  annotation: VariantAnnotation,\n  orderedSummaries: string[]\n) => {\n  return _.reduce(\n    orderedSummaries,\n    (acc, next) => {\n      if (annotation[next]) {\n        acc.push({\n          key: next,\n          title: SUMMARY_TITLE[next],\n          content: annotation[next],\n        });\n      }\n      return acc;\n    },\n    [] as { key: string; title: string; content: string }[]\n  );\n};\n","import React from 'react';\nimport { MutationEffectResp } from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport {\n  citationsHasInfo,\n  isPositionalAlteration,\n  OncoKBOncogenicityIcon,\n} from 'app/shared/utils/Utils';\nimport { CitationTooltip } from 'app/components/CitationTooltip';\nimport {\n  COLOR_ICON_WITH_INFO,\n  COLOR_ICON_WITHOUT_INFO,\n} from 'app/config/theme';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport WithSeparator from 'react-with-separator';\nimport { MUTATION_EFFECT, ONCOGENICITY } from 'app/config/constants';\nimport { getHighestLevelStrings } from 'app/pages/genePage/GeneInfo';\n\nexport const AlterationInfo: React.FunctionComponent<{\n  isPositionalAlteration: boolean;\n  oncogenicity: string | undefined;\n  mutationEffect: MutationEffectResp | undefined;\n  isVus: boolean;\n  highestSensitiveLevel: string | undefined;\n  highestResistanceLevel: string | undefined;\n  highestDiagnosticImplicationLevel: string | undefined;\n  highestPrognosticImplicationLevel: string | undefined;\n  highestFdaLevel: string | undefined;\n}> = props => {\n  const separator = <span className=\"mx-1\">·</span>;\n  const content = [];\n  const isUnknownOncogenicity =\n    !props.oncogenicity || props.oncogenicity === ONCOGENICITY.UNKNOWN;\n  if (!isUnknownOncogenicity || !props.isPositionalAlteration) {\n    content.push(\n      <span key={'oncogenicityContainer'} style={{ display: 'flex' }}>\n        <span key=\"oncogenicity\">\n          {isUnknownOncogenicity\n            ? `${ONCOGENICITY.UNKNOWN} Oncogenic Effect`\n            : props.oncogenicity}\n        </span>\n        <OncoKBOncogenicityIcon\n          oncogenicity={props.oncogenicity}\n          isVus={props.isVus}\n        />\n      </span>\n    );\n  }\n\n  const showMutationEffect =\n    props.mutationEffect &&\n    (props.mutationEffect.knownEffect !== MUTATION_EFFECT.UNKNOWN ||\n      !props.isPositionalAlteration);\n  if (showMutationEffect) {\n    const hasCitations = citationsHasInfo(props.mutationEffect!.citations);\n    const tooltipOverlay = () => (\n      <CitationTooltip\n        pmids={props.mutationEffect!.citations.pmids}\n        abstracts={props.mutationEffect!.citations.abstracts}\n      />\n    );\n    content.push(\n      <span key=\"mutationEffectContainer\">\n        <span key=\"mutationEffect\">\n          {props.mutationEffect!.knownEffect === MUTATION_EFFECT.UNKNOWN\n            ? `${MUTATION_EFFECT.UNKNOWN} Biological Effect`\n            : props.mutationEffect!.knownEffect}\n        </span>\n        {hasCitations ? (\n          <DefaultTooltip overlay={tooltipOverlay} key=\"mutationEffectTooltip\">\n            <i\n              className=\"fa fa-book mx-1\"\n              style={{\n                fontSize: '0.8em',\n                color: hasCitations\n                  ? COLOR_ICON_WITH_INFO\n                  : COLOR_ICON_WITHOUT_INFO,\n              }}\n            ></i>\n          </DefaultTooltip>\n        ) : null}\n      </span>\n    );\n  }\n  if (\n    props.highestSensitiveLevel ||\n    props.highestResistanceLevel ||\n    props.highestDiagnosticImplicationLevel ||\n    props.highestPrognosticImplicationLevel\n  ) {\n    content.push(\n      getHighestLevelStrings(\n        props.highestSensitiveLevel,\n        props.highestResistanceLevel,\n        props.highestDiagnosticImplicationLevel,\n        props.highestPrognosticImplicationLevel,\n        props.highestFdaLevel,\n        separator\n      )\n    );\n  }\n  return (\n    <div className=\"mt-2\">\n      <h5 className={'d-flex align-items-center flex-wrap'}>\n        <WithSeparator separator={separator}>{content}</WithSeparator>\n      </h5>\n    </div>\n  );\n};\n","import React from 'react';\n\nconst ShowHideToggleIcon: React.FunctionComponent<{\n  show: boolean;\n  onToggle?: () => void;\n}> = props => {\n  return (\n    <i\n      onClick={props.onToggle}\n      className={`fa fa-arrow-circle-o-${props.show ? 'up' : 'down'}`}\n    ></i>\n  );\n};\nexport default ShowHideToggleIcon;\n","import React from 'react';\nimport ShowHideToggleIcon from '../icons/ShowHideToggleIcon';\n\nconst ShowHideText: React.FunctionComponent<{\n  show: boolean;\n  content: string | JSX.Element;\n  title: string | JSX.Element;\n  onClick: () => void;\n  className?: string;\n}> = props => {\n  return (\n    <div className={props.className}>\n      <div\n        style={{ cursor: 'pointer', color: 'grey' }}\n        onClick={() => props.onClick()}\n      >\n        <span>{`${props.show ? 'Hide' : 'Show'} ${props.title}`}</span>{' '}\n        <ShowHideToggleIcon show={props.show} onToggle={() => {}} />\n      </div>\n      {props.show ? props.content : undefined}\n    </div>\n  );\n};\n\nexport default ShowHideText;\n","import React from 'react';\nimport { FeedbackIcon } from 'app/components/feedback/FeedbackIcon';\nimport AppStore from 'app/store/AppStore';\nimport { Annotation, FeedbackType } from 'app/components/feedback/types';\n\nexport const ReportIssue: React.FunctionComponent<{\n  appStore: AppStore;\n  annotation?: Annotation;\n}> = props => {\n  return (\n    <div style={{ fontSize: '0.9rem', color: 'grey' }}>\n      <i>\n        If you notice any mistakes or omissions, please reach out to us.{' '}\n        <FeedbackIcon\n          feedback={{\n            type: FeedbackType.ANNOTATION,\n            annotation: props.annotation,\n          }}\n          appStore={props.appStore}\n        />\n      </i>\n    </div>\n  );\n};\n","import OncoKBTable, {\n  SearchColumn,\n} from 'app/components/oncokbTable/OncoKBTable';\nimport {\n  LG_TABLE_FIXED_HEIGHT,\n  TABLE_COLUMN_KEY,\n  THRESHOLD_TABLE_FIXED_HEIGHT,\n} from 'app/config/constants';\nimport React from 'react';\nimport { SortingRule } from 'react-table';\n\nexport const GenePageTable: React.FunctionComponent<{\n  data: any[];\n  columns: SearchColumn<any>[];\n  isPending: boolean;\n  defaultSorted?: SortingRule[];\n}> = props => {\n  return (\n    <OncoKBTable\n      data={props.data}\n      columns={props.columns}\n      loading={props.isPending}\n      pageSize={props.data.length === 0 ? 1 : props.data.length}\n      style={\n        props.data.length > THRESHOLD_TABLE_FIXED_HEIGHT\n          ? {\n              height: LG_TABLE_FIXED_HEIGHT,\n            }\n          : undefined\n      }\n      fixedHeight={props.data.length > THRESHOLD_TABLE_FIXED_HEIGHT}\n      defaultSorted={\n        props.defaultSorted || [\n          {\n            id: TABLE_COLUMN_KEY.LEVEL,\n            desc: true,\n          },\n          {\n            id: TABLE_COLUMN_KEY.FDA_LEVEL,\n            desc: true,\n          },\n          {\n            id: TABLE_COLUMN_KEY.ALTERATION,\n            desc: false,\n          },\n          {\n            id: TABLE_COLUMN_KEY.EVIDENCE_CANCER_TYPE,\n            desc: false,\n          },\n          {\n            id: TABLE_COLUMN_KEY.DRUGS,\n            desc: false,\n          },\n        ]\n      }\n    />\n  );\n};\n","import { default as URL } from 'url';\n\nexport type QueryParams = {\n  [key: string]: undefined | null | string | string[];\n};\n\nexport type BuildUrlParams = {\n  pathname: string;\n  query?: QueryParams;\n  hash?: string;\n};\n\nexport function getNCBIlink(\n  pathnameOrParams?: BuildUrlParams | string\n): string {\n  const params =\n    typeof pathnameOrParams === 'string'\n      ? { pathname: pathnameOrParams }\n      : pathnameOrParams;\n  return URL.format({\n    protocol: 'https',\n    host: 'www.ncbi.nlm.nih.gov',\n    ...params,\n  });\n}\n","import * as React from 'react';\n\nimport styles from './listGroupItem.module.scss';\nimport { ArticleAbstract } from 'oncokb-ts-api-client';\n\nexport default class ArticleAbstractItem extends React.Component<\n  ArticleAbstract\n> {\n  render() {\n    let content = <span>{this.props.abstract}</span>;\n    if (this.props.link) {\n      content = (\n        <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {content}\n        </a>\n      );\n    }\n    return (\n      <li\n        key={`abstract_${this.props.abstract}`}\n        className={styles['list-group-item']}\n      >\n        <span className={styles['list-group-item-title']}>{content}</span>\n      </li>\n    );\n  }\n}\n","import { getNCBIlink } from '../lib/urls';\nimport * as React from 'react';\n\nimport styles from './listGroupItem.module.scss';\nimport { trimOffHtmlTagEntities } from '../lib/StringUtils';\n\ntype PmidItemProps = {\n  title: string;\n  author: string;\n  source: string;\n  date: string;\n  pmid: string;\n};\n\nexport default class PmidItem extends React.Component<PmidItemProps> {\n  render() {\n    return (\n      <li key={this.props.pmid} className={styles['list-group-item']}>\n        <a\n          className={styles['list-group-item-title']}\n          href={getNCBIlink(`/pubmed/${this.props.pmid}`)}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span>{trimOffHtmlTagEntities(this.props.title)}</span>\n        </a>\n        <div className={styles['list-group-item-content']}>\n          <span>\n            {this.props.author} {this.props.source}. {this.props.date}\n          </span>\n          <span>PMID: {this.props.pmid}</span>\n        </div>\n      </li>\n    );\n  }\n}\n","export const LESS_THAN_HTML_ENTITY = '&lt;';\nexport const GREATER_THAN_HTML_ENTITY = '&gt;';\n\n// This method is only designed to trim off html tags <**> </**>\n// A full solution could be https://www.npmjs.com/package/string-strip-html\n// But there is an issue related to template literals (https://gitlab.com/codsen/codsen/-/issues/31)\nexport function trimOffHtmlTagEntities(str: string) {\n  // I previously explored Regex but does not work really well in multiple matches\n  return (str || '')\n    .split(LESS_THAN_HTML_ENTITY)\n    .map(match => {\n      const elements = match.split(GREATER_THAN_HTML_ENTITY);\n      if (elements.length > 1) {\n        return elements[1];\n      } else {\n        return elements.length === 0 ? '' : elements[0];\n      }\n    })\n    .join('');\n}\n","import { ArticleAbstract } from 'oncokb-ts-api-client';\nimport * as React from 'react';\nimport _ from 'lodash';\n\nimport ArticleAbstractItem from './ArticleAbstractItem';\nimport PmidItem from './PmidItem';\n\nimport styles from './listGroupItem.module.scss';\nimport request from 'superagent';\nimport LoadingIndicator from 'app/components/loadingIndicator/LoadingIndicator';\n\ntype ReferenceListProps = {\n  pmids: number[];\n  abstracts: ArticleAbstract[];\n};\n\nexport const ReferenceList: React.FunctionComponent<ReferenceListProps> = (\n  props: ReferenceListProps\n) => {\n  const [pmidData, setPmidData] = React.useState<{ [uid: string]: any }>({});\n  const [apiCalled, setApiCalled] = React.useState(false);\n\n  let pmidPending = false;\n\n  async function getPmidData(pmids: number[]) {\n    let pubMedRecords;\n    if (!apiCalled) {\n      pmidPending = true;\n      pubMedRecords = await new Promise<any>((resolve, reject) => {\n        request\n          .post(\n            'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&retmode=json'\n          )\n          .type('form')\n          .send({ id: pmids.join(',') })\n          .end((err, res) => {\n            if (!err && res.ok) {\n              const result = JSON.parse(res.text)?.result || {};\n              delete result.uids;\n              resolve(result);\n            } else {\n              reject(err);\n            }\n          });\n      });\n    }\n\n    return pubMedRecords;\n  }\n\n  function isLoading() {\n    let pmidLoaded = Object.keys(pmidData).length === props.pmids.length;\n    if (pmidData && props.pmids && !pmidPending && !pmidLoaded) {\n      pmidPending = true;\n      if (!apiCalled) {\n        const pubmedData = getPmidData(props.pmids)\n          .then(value => {\n            pmidLoaded = Object.keys(value).length >= 1;\n            setPmidData(value);\n            pmidPending = false;\n          })\n          .catch(err => {\n            pmidPending = false;\n            return false;\n          });\n        setApiCalled(true);\n      }\n      return Object.keys(pmidData).length === 0;\n    } else {\n      return false;\n    }\n  }\n\n  if (isLoading()) {\n    // return <i className=\"fa fa-spinner fa-pulse fa-2x\" />;\n    return <LoadingIndicator isLoading={true} />;\n  }\n  const list: JSX.Element[] = [];\n\n  if (Object.keys(pmidData).length === props.pmids.length) {\n    props.pmids.forEach((uid: number) => {\n      const pubmedData = pmidData[uid.toString()];\n      const articleContent = pubmedData ? pubmedData : null;\n\n      if (articleContent) {\n        list.push(\n          <PmidItem\n            title={articleContent.title}\n            author={\n              _.isArray(articleContent.authors) &&\n              articleContent.authors.length > 0\n                ? articleContent.authors[0].name + ' et al.'\n                : 'Unknown'\n            }\n            source={articleContent.source}\n            date={new Date(articleContent.pubdate).getFullYear().toString()}\n            pmid={articleContent.uid}\n          />\n        );\n      }\n    });\n  }\n  props.abstracts.forEach(abstract => {\n    list.push(\n      <ArticleAbstractItem abstract={abstract.abstract} link={abstract.link} />\n    );\n  });\n  return <ul className={styles['no-style-ul']}>{list}</ul>;\n};\n","import Tooltip from 'rc-tooltip';\nimport { getNCBIlink } from '../lib/urls';\nimport * as React from 'react';\n\nimport { ReferenceList } from './ReferenceList';\n\nimport mainStyles from './main.module.scss';\n\n/* eslint-disable react/jsx-no-target-blank */\nexport default class RefComponent extends React.Component<{\n  content: string;\n  componentType: 'tooltip' | 'linkout';\n}> {\n  render() {\n    const parts = this.props.content.split(/pmid|nct|abstract/i);\n\n    if (parts.length < 2) {\n      return <span>{this.props.content}</span>;\n    }\n\n    // Slicing from index 1 to end to rejoin the abstract title and links\n    // when there's the case that they also contain the string 'Abstract'\n    // Example :\n    //     (Abstract: Fakih et al. Abstract# 3003, ASCO 2019.)\n    const abstractParts = parts\n      .slice(1)\n      .join('Abstract')\n      .split(/(?=http)/i);\n    const isAbstract = !(abstractParts.length < 2);\n\n    let abstract = '';\n    let abstractLink = '';\n    const ids = parts[1].match(/[0-9]+/g);\n    let prefix: string | undefined;\n    let link: JSX.Element | undefined;\n\n    if (isAbstract) {\n      abstract = abstractParts[0].replace(/^[:\\s]*/g, '').trim();\n      abstractLink = abstractParts[1].replace(/[\\\\)]*$/g, '').trim();\n      prefix = 'Abstract: ';\n      link = (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={abstractLink}>\n          {`${prefix}${abstract}`}\n        </a>\n      );\n    } else {\n      if (!ids) {\n        return <span>{this.props.content}</span>;\n      }\n\n      if (this.props.content.toLowerCase().includes('pmid')) {\n        prefix = 'PMID: ';\n      } else if (this.props.content.toLowerCase().includes('nct')) {\n        prefix = 'NCT';\n      }\n\n      if (prefix) {\n        link = (\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={getNCBIlink(`/pubmed/${ids.join(',')}`)}\n          >\n            {`${prefix}${ids.join(', ')}`}\n          </a>\n        );\n      }\n    }\n\n    if (this.props.componentType === 'tooltip') {\n      const pmids = isAbstract\n        ? []\n        : ids!.map((id: string) => parseInt(id, 10));\n      const abstracts = isAbstract ? [{ abstract, link: abstractLink }] : [];\n      const tooltipContent = () => (\n        <div className={mainStyles['tooltip-refs']}>\n          <ReferenceList pmids={pmids} abstracts={abstracts} />\n        </div>\n      );\n\n      return (\n        <span key={this.props.content}>\n          {parts[0]}\n          <Tooltip\n            overlay={tooltipContent}\n            placement=\"right\"\n            trigger={['hover', 'focus']}\n            destroyTooltipOnHide={true}\n          >\n            <i className=\"fa fa-book\" style={{ color: 'black' }} />\n          </Tooltip>\n          {`)`}\n        </span>\n      );\n    } else if (link) {\n      return (\n        <span key={this.props.content}>\n          {parts[0]}\n          {link}\n          {`)`}\n        </span>\n      );\n    } else {\n      return <span>{this.props.content}</span>;\n    }\n  }\n}\n","import * as React from 'react';\nimport RefComponent from './RefComponent';\n\ntype SummaryWithRefsProps = {\n  content: string | undefined;\n  type: 'tooltip' | 'linkout';\n};\n\nexport default class SummaryWithRefs extends React.Component<\n  SummaryWithRefsProps\n> {\n  render() {\n    if (!this.props.content) {\n      return <span />;\n    }\n\n    const content: Array<JSX.Element> = [];\n\n    // example delimiters:\n    //     (PMID: 11900253)\n    //     (PMID: 11753428, 16007150, 21467160)\n    //     (cBioPortal, MSKCC, May 2015, PMID: 24718888)\n    //     (NCT1234567)\n    const regex = /(\\(.*?[PMID|NCT|Abstract].*?\\))/i;\n\n    // split the string with delimiters included\n    const parts = this.props.content.split(regex);\n\n    parts.forEach((part: string) => {\n      // if delimiter convert to a JSX component\n      if (part.match(regex)) {\n        content.push(\n          <RefComponent\n            componentType={this.props.type}\n            content={part}\n            key={content.length}\n          />\n        );\n      } else {\n        content.push(<span key={content.length}>{part}</span>);\n      }\n    });\n\n    return <span>{content}</span>;\n  }\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport SummaryWithRefs from './SummaryWithRefs';\nimport styles from '../../../index.module.scss';\nimport classnames from 'classnames';\nimport { shortenTextByCharacters } from 'app/shared/utils/Utils';\nimport { LONG_TEXT_CUTOFF } from 'app/config/constants';\n\nexport const LongText: React.FunctionComponent<{\n  text: string;\n  cutoff?: number;\n}> = props => {\n  const propText = (props.text || '').trim();\n  const cutoff = props.cutoff || LONG_TEXT_CUTOFF;\n  const [expandedText, setExpandedText] = useState(false);\n  const text = expandedText\n    ? propText\n    : shortenTextByCharacters(propText, cutoff);\n  return (\n    <div>\n      <SummaryWithRefs content={text} type={'linkout'} />\n      {expandedText || text.length === propText.length ? undefined : (\n        <>\n          <span className={'mx-2'}>...</span>\n          <span\n            className={styles.linkOutText}\n            onClick={() => setExpandedText(true)}\n          >\n            Show more\n          </span>\n        </>\n      )}\n      {!expandedText ? undefined : (\n        <>\n          <span\n            className={classnames(styles.linkOutText, 'mx-2')}\n            onClick={() => setExpandedText(false)}\n          >\n            Show less\n          </span>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { LEVEL_TYPES, PAGE_ROUTE } from 'app/config/constants';\nimport { Version } from 'app/pages/LevelOfEvidencePage';\nimport { LevelOfEvidencePageLink } from 'app/shared/links/LevelOfEvidencePageLink';\n\nexport const FdaTabDescription: React.FunctionComponent<{\n  hugoSymbol: string;\n}> = props => {\n  return (\n    <span>\n      A list of the tumor type-specific {props.hugoSymbol} alterations and the\n      corresponding{' '}\n      <LevelOfEvidencePageLink levelType={LEVEL_TYPES.FDA}>\n        FDA Level of Evidence\n      </LevelOfEvidencePageLink>{' '}\n      assigning their clinical significance. The assigned{' '}\n      <LevelOfEvidencePageLink levelType={LEVEL_TYPES.TX} version={Version.FDA}>\n        FDA level of evidence\n      </LevelOfEvidencePageLink>{' '}\n      is based on these alterations being tested in Formalin Fixed Paraffin\n      Embedded (FFPE) specimen types, except in cases where specimen type is not\n      specified.\n    </span>\n  );\n};\n","import React from 'react';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\n\nexport const DescriptionTooltip: React.FunctionComponent<{\n  description: JSX.Element;\n}> = props => {\n  return (\n    <DefaultTooltip placement={'right'} overlay={props.description}>\n      <span>\n        <i className=\"fa fa-book\" />\n      </span>\n    </DefaultTooltip>\n  );\n};\n","import React from 'react';\nimport Tabs from 'react-responsive-tabs';\nimport { inject, observer } from 'mobx-react';\nimport autobind from 'autobind-decorator';\nimport { action, observable, computed } from 'mobx';\nimport { Link } from 'react-router-dom';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\n\nimport { ReportIssue } from 'app/components/ReportIssue';\nimport styles from 'app/pages/genePage/GenePage.module.scss';\nimport {\n  ANNOTATION_PAGE_TAB_KEYS,\n  ANNOTATION_PAGE_TAB_NAMES,\n  DEFAULT_MESSAGE_HEME_ONLY_DX,\n  DEFAULT_MESSAGE_HEME_ONLY_PX,\n  LEVEL_TYPES,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n  REFERENCE_GENOME,\n  TABLE_COLUMN_KEY,\n} from 'app/config/constants';\nimport { LevelOfEvidencePageLink } from 'app/shared/links/LevelOfEvidencePageLink';\nimport { BiologicalVariant } from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport { GenePageTable } from 'app/pages/genePage/GenePageTable';\nimport AppStore from 'app/store/AppStore';\nimport { SearchColumn } from 'app/components/oncokbTable/OncoKBTable';\nimport {\n  filterByKeyword,\n  getDefaultColumnDefinition,\n  IAlteration,\n} from 'app/shared/utils/Utils';\nimport { AlterationPageLink } from 'app/shared/utils/UrlUtils';\nimport { Citations } from 'app/shared/api/generated/OncoKbAPI';\nimport { CitationTooltip } from 'app/components/CitationTooltip';\nimport { getTabDefaultActiveKey } from 'app/shared/utils/TempAnnotationUtils';\nimport WindowStore from 'app/store/WindowStore';\nimport { defaultSortMethod } from 'app/shared/utils/ReactTableUtils';\nimport {\n  FdaImplication,\n  TherapeuticImplication,\n} from 'app/store/AnnotationStore';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport SummaryWithRefs from 'app/oncokb-frontend-commons/src/components/SummaryWithRefs';\nimport { LongText } from 'app/oncokb-frontend-commons/src/components/LongText';\nimport { FdaTabDescription } from 'app/pages/annotationPage/TabDescriptor';\nimport { DescriptionTooltip } from './DescriptionTooltip';\n\nexport type Column = {\n  key: ANNOTATION_PAGE_TAB_KEYS;\n};\nexport interface IEvidenceTableTabProps {\n  hugoSymbol: string;\n  alteration?: IAlteration;\n  cancerType?: string;\n  biological: BiologicalVariant[];\n  tx: TherapeuticImplication[];\n  dx: TherapeuticImplication[];\n  px: TherapeuticImplication[];\n  fda: FdaImplication[];\n  selectedTab?: ANNOTATION_PAGE_TAB_KEYS;\n  onChangeTab?: (\n    selectedTabKey: ANNOTATION_PAGE_TAB_KEYS,\n    newTabKey: ANNOTATION_PAGE_TAB_KEYS\n  ) => void;\n  appStore?: AppStore; // it will be injected directly\n  windowStore?: WindowStore; // it will be injected directly\n  authenticationStore?: AuthenticationStore; // it will be injected directly\n}\n\n@inject('windowStore', 'appStore', 'authenticationStore')\n@observer\nexport default class AlterationTableTabs extends React.Component<\n  IEvidenceTableTabProps,\n  any\n> {\n  @observable selectedTab: ANNOTATION_PAGE_TAB_KEYS;\n  @observable defaultSelectedTab: ANNOTATION_PAGE_TAB_KEYS =\n    ANNOTATION_PAGE_TAB_KEYS.BIOLOGICAL;\n\n  constructor(props: any) {\n    super(props);\n    if (props.selectedTab) {\n      this.selectedTab = props.selectedTab;\n      this.defaultSelectedTab = props.selectedTab;\n    }\n  }\n\n  getTabDescription(key: ANNOTATION_PAGE_TAB_KEYS) {\n    if (key === ANNOTATION_PAGE_TAB_KEYS.BIOLOGICAL) {\n      let content: JSX.Element;\n      if (this.props.alteration) {\n        content = (\n          <span>\n            A list of the oncogenic and mutation effects of {ONCOKB_TM} curated\n            alterations that related to {this.props.hugoSymbol}{' '}\n            {this.props.alteration.name}.\n          </span>\n        );\n      } else {\n        content = (\n          <span>\n            A list of the oncogenic and mutation effects of{' '}\n            <b>all {ONCOKB_TM} curated</b> {this.props.hugoSymbol} alterations.\n          </span>\n        );\n      }\n      return content;\n    } else if (key === ANNOTATION_PAGE_TAB_KEYS.TX) {\n      return (\n        <span>\n          A list of the cancer type-specific {this.props.hugoSymbol} alterations\n          that may predict response to a targeted drug and the corresponding{' '}\n          {ONCOKB_TM} level of evidence assigning their level of{' '}\n          <LevelOfEvidencePageLink levelType={LEVEL_TYPES.TX}>\n            clinical actionability\n          </LevelOfEvidencePageLink>\n          .\n        </span>\n      );\n    } else if (key === ANNOTATION_PAGE_TAB_KEYS.DX) {\n      return (\n        <span>\n          A list of diagnostic {this.props.hugoSymbol} alterations and the\n          corresponding{' '}\n          <LevelOfEvidencePageLink levelType={LEVEL_TYPES.DX}>\n            {ONCOKB_TM} diagnostic level of evidence\n          </LevelOfEvidencePageLink>\n          . {DEFAULT_MESSAGE_HEME_ONLY_DX}\n        </span>\n      );\n    } else if (key === ANNOTATION_PAGE_TAB_KEYS.PX) {\n      return (\n        <span>\n          A list of tumor-type specific prognostic {this.props.hugoSymbol}{' '}\n          alterations and the corresponding{' '}\n          <LevelOfEvidencePageLink levelType={LEVEL_TYPES.PX}>\n            {ONCOKB_TM} prognostic level of evidence\n          </LevelOfEvidencePageLink>\n          . {DEFAULT_MESSAGE_HEME_ONLY_PX}\n        </span>\n      );\n    } else if (key === ANNOTATION_PAGE_TAB_KEYS.FDA) {\n      return <FdaTabDescription hugoSymbol={this.props.hugoSymbol} />;\n    }\n    return null;\n  }\n\n  @computed\n  get tabDefaultActiveKey() {\n    return getTabDefaultActiveKey(\n      this.props.tx.length > 0,\n      this.props.dx.length > 0,\n      this.props.px.length > 0,\n      this.props.fda.length > 0,\n      this.defaultSelectedTab\n    );\n  }\n\n  @autobind\n  @action\n  onChangeTab(newTabKey: ANNOTATION_PAGE_TAB_KEYS) {\n    if (this.props.onChangeTab) {\n      this.props.onChangeTab(this.selectedTab, newTabKey);\n    }\n    this.selectedTab = newTabKey;\n  }\n\n  @computed\n  get txHasDescriptions() {\n    return (\n      this.props.tx.filter(implication => !!implication.drugDescription)\n        .length > 0\n    );\n  }\n\n  @computed\n  get tabDescriptionStyle() {\n    return this.props.windowStore && this.props.windowStore.isLargeScreen\n      ? {\n          width: '80%',\n          marginBottom: '-30px',\n          zIndex: 1,\n        }\n      : undefined;\n  }\n\n  @computed\n  get tabs() {\n    const tabs: { title: string; key: ANNOTATION_PAGE_TAB_KEYS }[] = [];\n    if (this.props.biological.length > 0) {\n      tabs.push({\n        key: ANNOTATION_PAGE_TAB_KEYS.BIOLOGICAL,\n        title: `${\n          ANNOTATION_PAGE_TAB_NAMES[ANNOTATION_PAGE_TAB_KEYS.BIOLOGICAL]\n        }`,\n      });\n    }\n    if (this.props.tx.length > 0) {\n      tabs.push({\n        key: ANNOTATION_PAGE_TAB_KEYS.TX,\n        title: `${ANNOTATION_PAGE_TAB_NAMES[ANNOTATION_PAGE_TAB_KEYS.TX]}`,\n      });\n    }\n    if (this.props.dx.length > 0) {\n      tabs.push({\n        key: ANNOTATION_PAGE_TAB_KEYS.DX,\n        title: `${ANNOTATION_PAGE_TAB_NAMES[ANNOTATION_PAGE_TAB_KEYS.DX]}`,\n      });\n    }\n    if (this.props.px.length > 0) {\n      tabs.push({\n        key: ANNOTATION_PAGE_TAB_KEYS.PX,\n        title: `${ANNOTATION_PAGE_TAB_NAMES[ANNOTATION_PAGE_TAB_KEYS.PX]}`,\n      });\n    }\n    if (this.props.fda.length > 0) {\n      tabs.push({\n        key: ANNOTATION_PAGE_TAB_KEYS.FDA,\n        title: `${ANNOTATION_PAGE_TAB_NAMES[ANNOTATION_PAGE_TAB_KEYS.FDA]}`,\n      });\n    }\n    return tabs.map(tab => {\n      return {\n        title: tab.title,\n        getContent: () => {\n          return (\n            <div className={'d-flex flex-column'}>\n              <div style={this.tabDescriptionStyle}>\n                <div>{this.getTabDescription(tab.key)}</div>\n                <ReportIssue\n                  appStore={this.props.appStore!}\n                  annotation={{\n                    gene: this.props.hugoSymbol,\n                    alteration: this.props.alteration?.name,\n                    cancerType: this.props.cancerType,\n                  }}\n                />\n              </div>\n              {this.getTable(tab.key)}\n            </div>\n          );\n        },\n        /* Optional parameters */\n        key: tab.key,\n        tabClassName: styles.tab,\n        panelClassName: styles.panel,\n      };\n    });\n  }\n\n  @computed\n  get therapeuticTableColumns(): SearchColumn<TherapeuticImplication>[] {\n    let descriptionColumn = {\n      ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.DESCRIPTION),\n      Header: (\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <span>Description</span>\n        </div>\n      ),\n      width: 520,\n      Cell(props: { original: TherapeuticImplication }) {\n        return <LongText text={props.original.drugDescription} />;\n      },\n    };\n\n    // Users that are not logged in will see a message to login/register\n    if (\n      !this.props.authenticationStore?.isUserAuthenticated &&\n      this.txHasDescriptions\n    ) {\n      descriptionColumn = {\n        ...descriptionColumn,\n        width: 100,\n        Cell() {\n          return (\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <DescriptionTooltip\n                description={\n                  <span>\n                    Get access to our treatment descriptions by{' '}\n                    <Link to={PAGE_ROUTE.LOGIN}> logging in </Link> or by{' '}\n                    <Link to={PAGE_ROUTE.REGISTER}>registering</Link> an\n                    account.\n                  </span>\n                }\n              />\n            </div>\n          );\n        },\n      };\n    }\n\n    const citationColumn = {\n      ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.CITATIONS),\n      Cell(props: { original: TherapeuticImplication }) {\n        const numOfReferences =\n          props.original.citations.abstracts.length +\n          props.original.citations.pmids.length;\n        return (\n          <DefaultTooltip\n            placement={'left'}\n            overlay={() => (\n              <CitationTooltip\n                pmids={props.original.citations.pmids}\n                abstracts={props.original.citations.abstracts}\n              />\n            )}\n          >\n            <span>{numOfReferences}</span>\n          </DefaultTooltip>\n        );\n      },\n    };\n\n    const therapeuticTableColumns: SearchColumn<TherapeuticImplication>[] = [\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.LEVEL),\n        onFilter: (data: TherapeuticImplication, keyword) =>\n          filterByKeyword(data.level, keyword),\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.ALTERATIONS),\n        Cell(props: { original: TherapeuticImplication }) {\n          return props.original.alterationsView;\n        },\n        onFilter: (data: TherapeuticImplication, keyword) =>\n          filterByKeyword(data.alterations, keyword),\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.EVIDENCE_CANCER_TYPE),\n        Cell(props: { original: TherapeuticImplication }) {\n          return props.original.cancerTypesView;\n        },\n        onFilter: (data: TherapeuticImplication, keyword) =>\n          filterByKeyword(data.cancerTypes, keyword),\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.DRUGS),\n        onFilter: (data: TherapeuticImplication, keyword) =>\n          filterByKeyword(data.drugs, keyword),\n      },\n      ...(this.props.authenticationStore?.isUserAuthenticated &&\n      this.txHasDescriptions\n        ? []\n        : [citationColumn]),\n      ...(this.txHasDescriptions ? [descriptionColumn] : []),\n    ];\n\n    return therapeuticTableColumns;\n  }\n\n  @computed\n  get biologicalTableColumns(): SearchColumn<BiologicalVariant>[] {\n    return [\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.ALTERATION),\n        accessor: 'variant',\n        onFilter: (data: BiologicalVariant, keyword) =>\n          filterByKeyword(data.variant.name, keyword),\n        Cell: (props: { original: BiologicalVariant }) => {\n          return (\n            <>\n              <AlterationPageLink\n                hugoSymbol={this.props.hugoSymbol}\n                alteration={{\n                  alteration: props.original.variant.alteration,\n                  name: props.original.variant.name,\n                }}\n                alterationRefGenomes={\n                  props.original.variant.referenceGenomes as REFERENCE_GENOME[]\n                }\n              />\n            </>\n          );\n        },\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.ONCOGENICITY),\n        onFilter: (data: BiologicalVariant, keyword) =>\n          filterByKeyword(data.oncogenic, keyword),\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.MUTATION_EFFECT),\n        onFilter: (data: BiologicalVariant, keyword) =>\n          filterByKeyword(data.mutationEffect, keyword),\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.DESCRIPTION),\n        accessor(d) {\n          return {\n            abstracts: d.mutationEffectAbstracts,\n            pmids: d.mutationEffectPmids,\n          } as Citations;\n        },\n        Cell(props: { original: BiologicalVariant }) {\n          return (\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              {props.original.mutationEffectDescription ? (\n                <DescriptionTooltip\n                  description={\n                    <SummaryWithRefs\n                      content={props.original.mutationEffectDescription}\n                      type=\"tooltip\"\n                    />\n                  }\n                />\n              ) : undefined}\n            </div>\n          );\n        },\n      },\n    ];\n  }\n\n  @computed\n  get dxpxTableColumns(): SearchColumn<TherapeuticImplication>[] {\n    return [\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.LEVEL),\n        onFilter: (data: TherapeuticImplication, keyword) =>\n          filterByKeyword(data.level, keyword),\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.ALTERATIONS),\n        Cell(props: { original: TherapeuticImplication }) {\n          return props.original.alterationsView;\n        },\n        onFilter: (data: TherapeuticImplication, keyword) =>\n          filterByKeyword(data.alterations, keyword),\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.EVIDENCE_CANCER_TYPE),\n        onFilter: (data: TherapeuticImplication, keyword) =>\n          filterByKeyword(data.cancerTypes, keyword),\n        Cell(props: { original: TherapeuticImplication }) {\n          return props.original.cancerTypesView;\n        },\n        minWidth: 250,\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.CITATIONS),\n        minWidth: 50,\n        Cell(props: { original: TherapeuticImplication }) {\n          const numOfReferences =\n            props.original.citations.abstracts.length +\n            props.original.citations.pmids.length;\n          return (\n            <DefaultTooltip\n              placement={'left'}\n              overlay={() => (\n                <CitationTooltip\n                  pmids={props.original.citations.pmids}\n                  abstracts={props.original.citations.abstracts}\n                />\n              )}\n            >\n              <span>{numOfReferences}</span>\n            </DefaultTooltip>\n          );\n        },\n      },\n    ];\n  }\n\n  @computed\n  get fdaTableColumns() {\n    return [\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.FDA_LEVEL),\n        onFilter: (data: FdaImplication, keyword: string) =>\n          filterByKeyword(data.level, keyword),\n      },\n      {\n        ...getDefaultColumnDefinition(TABLE_COLUMN_KEY.ALTERATION),\n        Cell(props: { original: FdaImplication }) {\n          return props.original.alterationView;\n        },\n      },\n      {\n        id: TABLE_COLUMN_KEY.CANCER_TYPE,\n        Header: <span>Cancer Type</span>,\n        accessor: 'cancerType',\n        style: { whiteSpace: 'normal' },\n        minWidth: 110,\n        defaultSortDesc: false,\n        sortMethod: defaultSortMethod,\n        Cell(props: { original: FdaImplication }) {\n          return props.original.cancerTypeView;\n        },\n        onFilter: (data: FdaImplication, keyword: string) =>\n          filterByKeyword(data.cancerType, keyword),\n      },\n    ];\n  }\n\n  @action\n  getTable(key: ANNOTATION_PAGE_TAB_KEYS) {\n    switch (key) {\n      case ANNOTATION_PAGE_TAB_KEYS.BIOLOGICAL:\n        return (\n          <GenePageTable\n            data={this.props.biological}\n            columns={this.biologicalTableColumns}\n            isPending={false}\n          />\n        );\n      case ANNOTATION_PAGE_TAB_KEYS.TX:\n        return (\n          <GenePageTable\n            data={this.props.tx}\n            columns={this.therapeuticTableColumns}\n            isPending={false}\n          />\n        );\n      case ANNOTATION_PAGE_TAB_KEYS.DX:\n        return (\n          <GenePageTable\n            data={this.props.dx}\n            columns={this.dxpxTableColumns}\n            isPending={false}\n          />\n        );\n      case ANNOTATION_PAGE_TAB_KEYS.PX:\n        return (\n          <GenePageTable\n            data={this.props.px}\n            columns={this.dxpxTableColumns}\n            isPending={false}\n          />\n        );\n      case ANNOTATION_PAGE_TAB_KEYS.FDA:\n        return (\n          <GenePageTable\n            data={this.props.fda}\n            columns={this.fdaTableColumns}\n            isPending={false}\n            defaultSorted={[\n              {\n                id: TABLE_COLUMN_KEY.FDA_LEVEL,\n                desc: true,\n              },\n              {\n                id: TABLE_COLUMN_KEY.ALTERATION,\n                desc: false,\n              },\n              {\n                id: TABLE_COLUMN_KEY.CANCER_TYPE,\n                desc: false,\n              },\n            ]}\n          />\n        );\n      default:\n        return <span />;\n    }\n  }\n\n  render() {\n    return (\n      <Tabs\n        selectedTabKey={\n          this.selectedTab ? this.selectedTab : this.tabDefaultActiveKey\n        }\n        onChange={this.onChangeTab}\n        items={this.tabs}\n        transform={false}\n      />\n    );\n  }\n}\n","import { ANNOTATION_PAGE_TAB_KEYS } from 'app/config/constants';\n\nexport function getTabDefaultActiveKey(\n  hasTxData: boolean,\n  hasDxData: boolean,\n  hasPxData: boolean,\n  hasFdaData: boolean,\n  defaultSelectedTab?: ANNOTATION_PAGE_TAB_KEYS\n) {\n  let defaultTabBasedOnData = ANNOTATION_PAGE_TAB_KEYS.BIOLOGICAL;\n  if (hasTxData) {\n    defaultTabBasedOnData = ANNOTATION_PAGE_TAB_KEYS.TX;\n  } else if (hasDxData) {\n    defaultTabBasedOnData = ANNOTATION_PAGE_TAB_KEYS.DX;\n  } else if (hasPxData) {\n    defaultTabBasedOnData = ANNOTATION_PAGE_TAB_KEYS.PX;\n  }\n\n  switch (defaultSelectedTab) {\n    case ANNOTATION_PAGE_TAB_KEYS.FDA:\n      return hasFdaData ? ANNOTATION_PAGE_TAB_KEYS.FDA : defaultTabBasedOnData;\n    case ANNOTATION_PAGE_TAB_KEYS.TX:\n      return hasTxData ? ANNOTATION_PAGE_TAB_KEYS.TX : defaultTabBasedOnData;\n    case ANNOTATION_PAGE_TAB_KEYS.DX:\n      return hasDxData ? ANNOTATION_PAGE_TAB_KEYS.DX : defaultTabBasedOnData;\n    case ANNOTATION_PAGE_TAB_KEYS.PX:\n      return hasPxData ? ANNOTATION_PAGE_TAB_KEYS.PX : defaultTabBasedOnData;\n    default:\n      return defaultTabBasedOnData;\n  }\n}\n","import React from 'react';\nimport { observer } from 'mobx-react';\n\nimport { OncoTreeLink } from 'app/shared/utils/UrlUtils';\nimport {\n  ANNOTATION_PAGE_TAB_KEYS,\n  DEFAULT_MARGIN_BOTTOM_LG,\n  OTHER_BIOMARKERS,\n} from 'app/config/constants';\nimport styles from 'app/pages/alterationPage/AlterationPage.module.scss';\nimport InfoIcon from 'app/shared/icons/InfoIcon';\nimport { Col, Row } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport { action, computed } from 'mobx';\nimport autobind from 'autobind-decorator';\nimport {\n  BiologicalVariant,\n  VariantAnnotation,\n} from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport {\n  FdaImplication,\n  TherapeuticImplication,\n} from 'app/store/AnnotationStore';\nimport { isCategoricalAlteration } from 'app/shared/utils/Utils';\nimport CancerTypeSelect from 'app/shared/dropdown/CancerTypeSelect';\nimport AlterationTableTabs from 'app/pages/annotationPage/AlterationTableTabs';\nimport { getSummaries, SummaryKey } from 'app/pages/annotationPage/Utils';\nimport AppStore from 'app/store/AppStore';\nimport { Alteration } from 'app/shared/api/generated/OncoKbAPI';\n\nexport type IAlterationView = {\n  appStore?: AppStore;\n  hugoSymbol: string;\n  alteration: string;\n  matchedAlteration: Alteration | undefined;\n  tumorType: string;\n  onChangeTumorType: (newTumorType: string) => void;\n  annotation: VariantAnnotation;\n  biologicalAlterations?: BiologicalVariant[];\n  relevantAlterations?: Alteration[];\n  fdaImplication: FdaImplication[];\n  therapeuticImplications: TherapeuticImplication[];\n  diagnosticImplications: TherapeuticImplication[];\n  prognosticImplications: TherapeuticImplication[];\n  defaultSelectedTab?: ANNOTATION_PAGE_TAB_KEYS;\n  onChangeTab?: (\n    selectedTabKey: ANNOTATION_PAGE_TAB_KEYS,\n    newTabKey: ANNOTATION_PAGE_TAB_KEYS\n  ) => void;\n};\n@observer\nexport default class AlterationView extends React.Component<\n  IAlterationView,\n  {}\n> {\n  @autobind\n  @action\n  updateTumorTypeQuery(selectedOption: any) {\n    this.props.onChangeTumorType(selectedOption ? selectedOption.value : '');\n  }\n\n  @computed\n  get tumorTypeSummaries() {\n    const orderedSummaries = this.props.tumorType\n      ? [\n          SummaryKey.TUMOR_TYPE_SUMMARY,\n          SummaryKey.DIAGNOSTIC_SUMMARY,\n          SummaryKey.PROGNOSTIC_SUMMARY,\n        ]\n      : [];\n    return getSummaries(this.props.annotation, orderedSummaries);\n  }\n\n  @computed get isCategoricalAlteration() {\n    return isCategoricalAlteration(this.props.alteration);\n  }\n\n  @computed\n  get showGeneNameLink() {\n    const lHugo = this.props.hugoSymbol.toLowerCase();\n    const altNameIncludesGene = this.props.alteration\n      .toLowerCase()\n      .includes(lHugo);\n    const isOtherBiomarkers = lHugo === OTHER_BIOMARKERS.toLowerCase();\n    return !altNameIncludesGene && !isOtherBiomarkers;\n  }\n\n  @computed\n  get relevantBiologicalVariants(): BiologicalVariant[] {\n    if (\n      this.isCategoricalAlteration &&\n      this.props.biologicalAlterations &&\n      this.props.relevantAlterations\n    ) {\n      const relevantAltNames = this.props.relevantAlterations.map(\n        alt => alt.alteration\n      );\n      return this.props.biologicalAlterations.filter(variant =>\n        relevantAltNames.includes(variant.variant.alteration)\n      );\n    } else {\n      return [];\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Row className=\"mt-4\">\n          <Col>\n            <div\n              className={`d-flex align-items-center ${DEFAULT_MARGIN_BOTTOM_LG}`}\n            >\n              <span\n                className={classnames(styles.headerTumorTypeSelection, 'mr-2')}\n              >\n                <CancerTypeSelect\n                  styles={{\n                    control: (base, state) => ({\n                      ...base,\n                      height: '30px',\n                      minHeight: '30px',\n                    }),\n                    dropdownIndicator: base => ({\n                      ...base,\n                      padding: 4,\n                    }),\n                    clearIndicator: base => ({\n                      ...base,\n                      padding: 4,\n                    }),\n                    valueContainer: base => ({\n                      ...base,\n                      padding: '0px 6px',\n                    }),\n                    input: base => ({\n                      ...base,\n                      margin: 0,\n                      padding: 0,\n                    }),\n                    menu: base => ({ ...base, zIndex: 10 }),\n                  }}\n                  cancerType={this.props.tumorType}\n                  onChange={(selectedOption: any) =>\n                    this.updateTumorTypeQuery(selectedOption)\n                  }\n                />\n              </span>\n              <InfoIcon\n                overlay={\n                  <span>\n                    For cancer type specific information, please select a cancer\n                    type from the dropdown. The cancer type is curated using{' '}\n                    <OncoTreeLink />\n                  </span>\n                }\n                placement=\"top\"\n              />\n            </div>\n          </Col>\n        </Row>\n        {this.props.tumorType && !this.isCategoricalAlteration ? (\n          <Row>\n            <Col>\n              {this.tumorTypeSummaries.map((summary, index) => {\n                return (\n                  <div\n                    className={DEFAULT_MARGIN_BOTTOM_LG}\n                    key={`summary-${index}`}\n                  >\n                    <h6 className={'mb-0'}>{summary.title}</h6>\n                    {summary.content}\n                  </div>\n                );\n              })}\n            </Col>\n          </Row>\n        ) : null}\n        <Row className=\"mt-2\">\n          <Col>\n            <AlterationTableTabs\n              selectedTab={this.props.defaultSelectedTab}\n              appStore={this.props.appStore}\n              hugoSymbol={this.props.hugoSymbol}\n              alteration={\n                this.props.matchedAlteration\n                  ? {\n                      alteration: this.props.matchedAlteration.alteration,\n                      name: this.props.matchedAlteration.name,\n                    }\n                  : {\n                      alteration: this.props.alteration,\n                      name: this.props.alteration,\n                    }\n              }\n              cancerType={this.props.tumorType}\n              biological={this.relevantBiologicalVariants}\n              tx={this.props.therapeuticImplications}\n              dx={this.props.diagnosticImplications}\n              px={this.props.prognosticImplications}\n              fda={this.props.fdaImplication}\n              onChangeTab={this.props.onChangeTab}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { LongText } from 'app/oncokb-frontend-commons/src/components/LongText';\nimport { Link } from 'react-router-dom';\nimport { PAGE_ROUTE } from 'app/config/constants';\nimport { DescriptionTooltip } from 'app/pages/annotationPage/DescriptionTooltip';\n\nexport const ImplicationDescriptionCell: React.FunctionComponent<{\n  userAuthenticated: boolean;\n  description: string;\n  cutoff?: number;\n}> = props => {\n  if (props.userAuthenticated) {\n    return (\n      <span>\n        <LongText text={props.description} cutoff={props.cutoff} />\n      </span>\n    );\n  } else {\n    return (\n      <DescriptionTooltip\n        description={\n          <span>\n            Get access to our treatment descriptions by{' '}\n            <Link to={PAGE_ROUTE.LOGIN}> logging in </Link> or by{' '}\n            <Link to={PAGE_ROUTE.REGISTER}>registering</Link> an account.\n          </span>\n        }\n      />\n    );\n  }\n};\n","import React from 'react';\nimport { SimpleTable, SimpleTableRow } from 'app/components/SimpleTable';\nimport { LEVELS, LONG_TEXT_CUTOFF_COMPACT } from 'app/config/constants';\nimport { FdaLevelIcon, OncoKBLevelIcon } from 'app/shared/utils/Utils';\nimport { CitationTooltip } from 'app/components/CitationTooltip';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport { Citations } from 'app/shared/api/generated/OncoKbAPI';\nimport { ImplicationDescriptionCell } from 'app/pages/annotationPage/ImplicationDescriptionCell';\nimport { Else, If, Then } from 'react-if';\nimport styles from './index.module.scss';\nimport WindowStore from 'app/store/WindowStore';\nimport { LongText } from 'app/oncokb-frontend-commons/src/components/LongText';\n\nexport type DataType = 'tx' | 'dx' | 'px' | 'fda';\n\nexport interface ITable {\n  userAuthenticated: boolean;\n  type: DataType;\n  hugoSymbol: string;\n  data: ITableRow[];\n  isLargeScreen: boolean;\n}\n\nexport interface ITableRow {\n  level: LEVELS;\n  alterations: string;\n  cancerTypes: string;\n  drugs?: string;\n  citations?: Citations;\n  description?: string;\n}\n\nfunction inCompactView(store: WindowStore) {\n  return !store.isLargeScreen;\n}\n\nfunction getDrugAssociationCellText(\n  hugoSymbol: string,\n  alterations: string,\n  cancerTypes: string\n) {\n  const altNameIncludesHugoSymbol = alterations.includes(hugoSymbol);\n  return `Associated with ${\n    altNameIncludesHugoSymbol ? '' : hugoSymbol\n  } ${alterations} in ${cancerTypes}`;\n}\n\nconst CompactDrugCell: React.FunctionComponent<{\n  hugoSymbol: string;\n  alterations: string;\n  cancerTypes: string;\n  drugs: string;\n}> = props => {\n  return (\n    <div style={{ minWidth: 300 }}>\n      <div>{props.drugs}</div>\n      <div className={'text-secondary'}>\n        {getDrugAssociationCellText(\n          props.hugoSymbol,\n          props.alterations,\n          props.cancerTypes\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction getColumns(\n  userAuthenticated: boolean,\n  type: DataType,\n  hasDescription: boolean\n) {\n  let columns: string[] = [];\n  switch (type) {\n    case 'tx':\n      if (userAuthenticated && hasDescription) {\n        columns = [];\n      } else {\n        columns = [\n          'Level of Evidence',\n          'Drugs',\n          'Alterations',\n          'Level-associated cancer types',\n          'Citations',\n        ];\n        if (hasDescription) {\n          columns.push('Description');\n        }\n      }\n      break;\n    case 'dx':\n    case 'px':\n      columns = [\n        'Level of Evidence',\n        'Alterations',\n        'Level-associated cancer types',\n        'Citations',\n      ];\n      break;\n    case 'fda':\n      columns = ['FDA Level', 'Alterations', 'Level-associated cancer types'];\n      break;\n    default:\n      break;\n  }\n  return columns;\n}\n\nfunction tableHasDescriptionInfo(data: ITableRow[]) {\n  return data.filter(row => !!row.description).length > 0;\n}\n\nfunction getRows(\n  userAuthenticated: boolean,\n  type: DataType,\n  data: ITableRow[]\n) {\n  return data.map((row, index) => {\n    const content = [\n      {\n        key: `${type}-row-${index}-level`,\n        content: (\n          <div>\n            <If condition={type === 'fda'}>\n              <Then>\n                <FdaLevelIcon level={row.level} withDescription />\n              </Then>\n              <Else>\n                <OncoKBLevelIcon level={row.level} withDescription />\n              </Else>\n            </If>\n          </div>\n        ),\n      },\n    ];\n\n    content.push({\n      key: `${type}-row-${index}-alterations}`,\n      content: <span>{row.alterations}</span>,\n    });\n    content.push({\n      key: `${type}-row-${index}-cancerTypes}`,\n      content: <span>{row.cancerTypes}</span>,\n    });\n\n    const numOfReferences = row.citations\n      ? row.citations.abstracts.length + row.citations.pmids.length\n      : 0;\n    if (numOfReferences > 0) {\n      content.push({\n        key: `${type}-row-${index}-citations}`,\n        content: (\n          <DefaultTooltip\n            placement={'left'}\n            overlay={() =>\n              row.citations ? (\n                <CitationTooltip\n                  pmids={row.citations.pmids}\n                  abstracts={row.citations.abstracts}\n                />\n              ) : undefined\n            }\n          >\n            <span>{numOfReferences}</span>\n          </DefaultTooltip>\n        ),\n      });\n    }\n    return {\n      key: `${type}-row-${index}`,\n      content,\n    };\n  });\n}\n\nfunction getCompactTxRows(\n  userAuthenticated: boolean,\n  data: ITableRow[],\n  hugoSymbol: string\n): SimpleTableRow[] {\n  const type = 'tx';\n  return data.map((row, index) => {\n    const content = [\n      {\n        key: `${type}-row-${index}`,\n        content: (\n          <div className={'d-flex flex-column'}>\n            <div className={'d-flex flex-row'}>\n              <div className={'mr-3'}>\n                <OncoKBLevelIcon level={row.level} withDescription />\n              </div>\n              <div>\n                <b>{row.drugs}</b>\n              </div>\n            </div>\n            <div className={'text-secondary'}>\n              <LongText\n                text={getDrugAssociationCellText(\n                  hugoSymbol,\n                  row.alterations,\n                  row.cancerTypes\n                )}\n                cutoff={LONG_TEXT_CUTOFF_COMPACT}\n              />\n            </div>\n            <div>\n              <ImplicationDescriptionCell\n                userAuthenticated={userAuthenticated}\n                description={row.description || ''}\n                cutoff={LONG_TEXT_CUTOFF_COMPACT}\n              />\n            </div>\n          </div>\n        ),\n      },\n    ];\n    return {\n      key: `${type}-row-${index}`,\n      content,\n    };\n  });\n}\n\nfunction getNonCompactTxRows(\n  userAuthenticated: boolean,\n  data: ITableRow[],\n  hugoSymbol: string,\n  hasDescription: boolean\n): SimpleTableRow[] {\n  const type = 'tx';\n  return data.map((row, index) => {\n    const content = [\n      {\n        key: `${type}-row-${index}-level`,\n        content: (\n          <div className={'mt-1'}>\n            <OncoKBLevelIcon level={row.level} withDescription />\n          </div>\n        ),\n      },\n    ];\n\n    // only add the compact drug column for tx implications when user logged in\n    if (userAuthenticated && hasDescription) {\n      content.push({\n        key: `${type}-row-${index}-compact-drugs}`,\n        content: row.drugs ? (\n          <CompactDrugCell\n            hugoSymbol={hugoSymbol}\n            alterations={row.alterations}\n            drugs={row.drugs}\n            cancerTypes={row.cancerTypes}\n          />\n        ) : (\n          <></>\n        ),\n      });\n    } else {\n      content.push({\n        key: `${type}-row-${index}-drugs}`,\n        content: <span>{row.drugs}</span>,\n      });\n      content.push({\n        key: `${type}-row-${index}-alterations}`,\n        content: <span>{row.alterations}</span>,\n      });\n      content.push({\n        key: `${type}-row-${index}-cancerTypes}`,\n        content: <span>{row.cancerTypes}</span>,\n      });\n    }\n\n    // only add the citations column if the table is not tx implications or when user not logged in\n    if (!userAuthenticated || !hasDescription) {\n      const numOfReferences = row.citations\n        ? row.citations.abstracts.length + row.citations.pmids.length\n        : 0;\n      content.push({\n        key: `${type}-row-${index}-citations}`,\n        content: (\n          <DefaultTooltip\n            placement={'left'}\n            overlay={() =>\n              row.citations ? (\n                <CitationTooltip\n                  pmids={row.citations.pmids}\n                  abstracts={row.citations.abstracts}\n                />\n              ) : undefined\n            }\n          >\n            <span>{numOfReferences}</span>\n          </DefaultTooltip>\n        ),\n      });\n    }\n\n    if (hasDescription) {\n      content.push({\n        key: `tx-row-${index}-description}`,\n        content: (\n          <ImplicationDescriptionCell\n            userAuthenticated={userAuthenticated}\n            description={row.description || ''}\n          />\n        ),\n      });\n    }\n    return {\n      key: `${type}-row-${index}`,\n      content,\n    };\n  });\n}\n\nfunction getTxRows(\n  userAuthenticated: boolean,\n  data: ITableRow[],\n  hugoSymbol: string,\n  hasDescription: boolean,\n  isLargeScreen: boolean\n): SimpleTableRow[] {\n  return !isLargeScreen && userAuthenticated\n    ? getCompactTxRows(userAuthenticated, data, hugoSymbol)\n    : getNonCompactTxRows(userAuthenticated, data, hugoSymbol, hasDescription);\n}\n\nexport const CancerTypeViewTable: React.FunctionComponent<ITable> = props => {\n  // we only show tx description at the moment\n  const hasDescription =\n    props.type === 'tx' && tableHasDescriptionInfo(props.data);\n  const columns = getColumns(\n    props.userAuthenticated,\n    props.type,\n    hasDescription\n  );\n  return (\n    <SimpleTable\n      theadClassName={styles.cancerTypeSimpleTableHead}\n      columns={columns.map(column => {\n        return { name: column };\n      })}\n      rows={\n        props.type === 'tx'\n          ? getTxRows(\n              props.userAuthenticated,\n              props.data,\n              props.hugoSymbol,\n              hasDescription,\n              props.isLargeScreen\n            )\n          : getRows(props.userAuthenticated, props.type, props.data)\n      }\n    />\n  );\n};\n","import React from 'react';\nimport { observer } from 'mobx-react';\n\nimport {\n  AlterationPageLink,\n  getAlterationPageLink,\n  getGenePageLink,\n  getGenomicPageLink,\n  getGenomicPageLocation,\n} from 'app/shared/utils/UrlUtils';\nimport {\n  ANNOTATION_PAGE_TAB_KEYS,\n  DEFAULT_GENE,\n  DEFAULT_MARGIN_BOTTOM_LG,\n  EVIDENCE_TYPES,\n  OTHER_BIOMARKERS,\n  PAGE_ROUTE,\n  REFERENCE_GENOME,\n  TREATMENT_EVIDENCE_TYPES,\n} from 'app/config/constants';\nimport styles from 'app/pages/alterationPage/AlterationPage.module.scss';\nimport { AlterationInfo } from 'app/pages/annotationPage/AlterationInfo';\nimport { Col, Row, Alert } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport { action, computed, observable } from 'mobx';\nimport * as QueryString from 'querystring';\nimport {\n  Evidence,\n  VariantAnnotationTumorType,\n} from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport {\n  AnnotationStore,\n  FdaImplication,\n  TherapeuticImplication,\n} from 'app/store/AnnotationStore';\nimport {\n  articles2Citations,\n  getCancerTypeNameFromOncoTreeType,\n  getCancerTypesName,\n  getCategoricalAlterationDescription,\n  getTreatmentNameFromEvidence,\n  isCategoricalAlteration,\n  isPositionalAlteration,\n  levelOfEvidence2Level,\n} from 'app/shared/utils/Utils';\nimport _ from 'lodash';\nimport WithSeparator from 'react-with-separator';\nimport AppStore from 'app/store/AppStore';\nimport { FeedbackIcon } from 'app/components/feedback/FeedbackIcon';\nimport { FeedbackType } from 'app/components/feedback/types';\nimport { Alteration } from 'app/shared/api/generated/OncoKbAPI';\nimport {\n  getSummaries,\n  getUniqueFdaImplications,\n  SummaryKey,\n} from 'app/pages/annotationPage/Utils';\nimport SummaryWithRefs from 'app/oncokb-frontend-commons/src/components/SummaryWithRefs';\nimport ShowHideText from 'app/shared/texts/ShowHideText';\nimport AlterationView from 'app/pages/annotationPage/AlterationView';\nimport { CancerTypeView } from 'app/pages/annotationPage/CancerTypeView';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport WindowStore from 'app/store/WindowStore';\n\nimport gnLogo from 'content/images/gn_logo.png';\nimport revueLogo from 'content/images/revue_logo.png';\nimport { PowerBySource } from 'app/pages/annotationPage/PowerBySource';\nimport {\n  AnnotationBreadcrumbs,\n  IDropdownBreadcrumb,\n  IInputBreadcrumb,\n  ILinkBreadcrumb,\n  ITextBreadcrumb,\n} from 'app/pages/annotationPage/AnnotationBreadcrumbs';\nimport LoadingIndicator, {\n  LoaderSize,\n} from 'app/components/loadingIndicator/LoadingIndicator';\nimport { Else, If, Then } from 'react-if';\nimport { UnknownGeneAlert } from 'app/shared/alert/UnknownGeneAlert';\nimport { RouterStore } from 'mobx-react-router';\nimport { Option } from 'app/shared/select/FormSelectWithLabelField';\nimport MutationEffectDescription from 'app/pages/annotationPage/MutationEffectDescription';\n\nexport enum AnnotationType {\n  GENE,\n  PROTEIN_CHANGE,\n  HGVSG,\n  GENOMIC_CHANGE,\n}\n\nexport type IAnnotationPage = {\n  routing: RouterStore;\n  appStore: AppStore;\n  windowStore: WindowStore;\n  store: AnnotationStore;\n  annotationType: AnnotationType;\n  onChangeTumorType: (newTumorType: string) => void;\n  relevantAlterations?: Alteration[];\n  defaultSelectedTab?: ANNOTATION_PAGE_TAB_KEYS;\n  onChangeTab?: (\n    selectedTabKey: ANNOTATION_PAGE_TAB_KEYS,\n    newTabKey: ANNOTATION_PAGE_TAB_KEYS\n  ) => void;\n  authenticationStore: AuthenticationStore;\n};\n\n@observer\nexport default class AnnotationPage extends React.Component<\n  IAnnotationPage,\n  {}\n> {\n  @observable showMutationEffect = true;\n\n  constructor(props: any) {\n    super(props);\n    if (this.props.store.cancerTypeName) {\n      this.showMutationEffect = false;\n    }\n  }\n\n  @action.bound\n  toggleMutationEffect(value: boolean) {\n    this.showMutationEffect = value;\n  }\n\n  getImplications(evidences: Evidence[]) {\n    return evidences.map(evidence => {\n      const level = levelOfEvidence2Level(evidence.levelOfEvidence);\n      const fdaLevel = levelOfEvidence2Level(evidence.fdaLevel);\n      const alterations = _.chain(evidence.alterations)\n        .filter(alteration =>\n          alteration.referenceGenomes.includes(\n            this.props.store.referenceGenomeQuery\n          )\n        )\n        .value();\n      const cancerTypes = evidence.cancerTypes.map(cancerType =>\n        getCancerTypeNameFromOncoTreeType(cancerType)\n      );\n      const excludedCancerTypes = evidence.excludedCancerTypes.map(ct =>\n        getCancerTypeNameFromOncoTreeType(ct)\n      );\n      return {\n        level,\n        fdaLevel,\n        drugDescription: evidence.description,\n        alterations: alterations.map(alteration => alteration.name).join(', '),\n        alterationsView: (\n          <WithSeparator separator={', '}>\n            {alterations.map(alteration =>\n              alteration.consequence ? (\n                <AlterationPageLink\n                  key={alteration.name}\n                  hugoSymbol={this.props.store.hugoSymbol}\n                  alteration={{\n                    alteration: alteration.alteration,\n                    name: alteration.name,\n                  }}\n                  alterationRefGenomes={\n                    alteration.referenceGenomes as REFERENCE_GENOME[]\n                  }\n                />\n              ) : (\n                <span>{alteration.name}</span>\n              )\n            )}\n          </WithSeparator>\n        ),\n        drugs: getTreatmentNameFromEvidence(evidence),\n        cancerTypes: getCancerTypesName(cancerTypes, excludedCancerTypes),\n        cancerTypesView: (\n          <>\n            <WithSeparator separator={', '}>\n              {cancerTypes.map(cancerType => (\n                <AlterationPageLink\n                  key={`${this.props.store.alterationName}-${cancerType}`}\n                  hugoSymbol={this.props.store.hugoSymbol}\n                  alteration={this.props.store.alterationName}\n                  alterationRefGenomes={[this.props.store.referenceGenomeQuery]}\n                  cancerType={cancerType}\n                >\n                  {cancerType}\n                </AlterationPageLink>\n              ))}\n            </WithSeparator>\n            {excludedCancerTypes.length > 0 ? (\n              <span> (excluding {excludedCancerTypes.join(', ')})</span>\n            ) : (\n              <></>\n            )}\n          </>\n        ),\n        citations: articles2Citations(evidence.articles),\n      } as TherapeuticImplication;\n    });\n  }\n\n  getEvidenceByEvidenceTypes(\n    cancerTypes: VariantAnnotationTumorType[],\n    evidenceTypes: EVIDENCE_TYPES[]\n  ): Evidence[] {\n    let uniqueEvidences: Evidence[] = [];\n    cancerTypes.forEach(cancerType => {\n      uniqueEvidences = uniqueEvidences.concat(\n        cancerType.evidences.filter(evidence =>\n          evidenceTypes.includes(evidence.evidenceType as EVIDENCE_TYPES)\n        )\n      );\n    });\n\n    return _.uniqBy(uniqueEvidences, evidence => evidence.id);\n  }\n\n  @computed\n  get therapeuticImplications(): TherapeuticImplication[] {\n    return this.getImplications(\n      this.getEvidenceByEvidenceTypes(\n        this.props.store.annotationData.result.tumorTypes,\n        TREATMENT_EVIDENCE_TYPES\n      )\n    );\n  }\n\n  @computed\n  get fdaImplication(): FdaImplication[] {\n    const evidences = this.getEvidenceByEvidenceTypes(\n      this.props.store.annotationData.result.tumorTypes,\n      TREATMENT_EVIDENCE_TYPES\n    );\n    const fdaImplications: FdaImplication[] = [];\n    evidences.forEach(evidence => {\n      const level = levelOfEvidence2Level(evidence.levelOfEvidence);\n      const fdaLevel = levelOfEvidence2Level(evidence.fdaLevel);\n      const alterations = evidence.alterations.filter(alteration =>\n        alteration.referenceGenomes.includes(\n          this.props.store.referenceGenomeQuery\n        )\n      );\n      alterations.forEach(alt => {\n        // convert all alterations to matchedAlteration/alteration query if not positional variant\n        let mappedAlteration = {} as Alteration;\n        if (\n          isPositionalAlteration(\n            alt.proteinStart,\n            alt.proteinEnd,\n            alt.consequence?.term\n          )\n        ) {\n          mappedAlteration = alt;\n        } else {\n          if (this.props.store.alteration.result) {\n            mappedAlteration = this.props.store.alteration.result;\n          } else {\n            mappedAlteration.name = mappedAlteration.alteration = this.props.store.alterationName;\n          }\n        }\n        const ctNames = evidence.cancerTypes.map(ct =>\n          getCancerTypeNameFromOncoTreeType(ct)\n        );\n        const excludedCtNames = evidence.excludedCancerTypes.map(ct =>\n          getCancerTypeNameFromOncoTreeType(ct)\n        );\n        fdaImplications.push({\n          level: fdaLevel,\n          alteration: mappedAlteration,\n          alterationView: (\n            <AlterationPageLink\n              key={mappedAlteration.name}\n              hugoSymbol={this.props.store.hugoSymbol}\n              alteration={{\n                alteration: mappedAlteration.alteration,\n                name: mappedAlteration.name,\n              }}\n              alterationRefGenomes={\n                mappedAlteration.referenceGenomes as REFERENCE_GENOME[]\n              }\n              hashQueries={{\n                tab: ANNOTATION_PAGE_TAB_KEYS.FDA,\n              }}\n            />\n          ),\n          cancerType: getCancerTypesName(ctNames, excludedCtNames),\n          cancerTypeView: (\n            <>\n              <WithSeparator separator={', '}>\n                {ctNames.map(cancerType => (\n                  <AlterationPageLink\n                    key={`${this.props.store.alterationName}-${cancerType}`}\n                    hugoSymbol={this.props.store.hugoSymbol}\n                    alteration={this.props.store.alterationName}\n                    alterationRefGenomes={[\n                      this.props.store.referenceGenomeQuery,\n                    ]}\n                    cancerType={cancerType}\n                    hashQueries={{\n                      tab: ANNOTATION_PAGE_TAB_KEYS.FDA,\n                    }}\n                  >\n                    {cancerType}\n                  </AlterationPageLink>\n                ))}\n              </WithSeparator>\n              {excludedCtNames.length > 0 ? (\n                <span> (excluding {excludedCtNames.join(', ')})</span>\n              ) : (\n                <></>\n              )}\n            </>\n          ),\n        });\n      });\n    });\n    return getUniqueFdaImplications(fdaImplications);\n  }\n\n  @computed\n  get diagnosticImplications(): TherapeuticImplication[] {\n    return this.getImplications(\n      this.getEvidenceByEvidenceTypes(\n        this.props.store.annotationData.result.tumorTypes,\n        [EVIDENCE_TYPES.DIAGNOSTIC_IMPLICATION]\n      )\n    );\n  }\n\n  @computed\n  get prognosticImplications(): TherapeuticImplication[] {\n    return this.getImplications(\n      this.getEvidenceByEvidenceTypes(\n        this.props.store.annotationData.result.tumorTypes,\n        [EVIDENCE_TYPES.PROGNOSTIC_IMPLICATION]\n      )\n    );\n  }\n\n  @computed\n  get alterationSummaries() {\n    const orderedSummaries = [SummaryKey.GENE_SUMMARY];\n    if (!this.isCategoricalAlteration) {\n      orderedSummaries.push(SummaryKey.ALTERATION_SUMMARY);\n    }\n    return getSummaries(\n      this.props.store.annotationData.result,\n      orderedSummaries\n    );\n  }\n\n  @computed get isCategoricalAlteration() {\n    return isCategoricalAlteration(this.props.store.alterationName);\n  }\n\n  @computed\n  get showGeneName() {\n    const lHugo = this.props.store.hugoSymbol.toLowerCase();\n    const altNameIncludesGene = this.props.store.annotationData.result.query.alteration\n      .toLowerCase()\n      .includes(lHugo);\n    const isOtherBiomarkers = lHugo === OTHER_BIOMARKERS.toLowerCase();\n    return !altNameIncludesGene && !isOtherBiomarkers;\n  }\n\n  @computed\n  get pageShouldBeRendered() {\n    if (this.props.annotationType === AnnotationType.PROTEIN_CHANGE) {\n      return (\n        this.props.store.gene.isComplete &&\n        this.props.store.geneNumber.isComplete &&\n        this.props.store.ensemblGenes.isComplete &&\n        this.props.store.clinicalAlterations.isComplete &&\n        this.props.store.biologicalAlterations.isComplete &&\n        this.props.store.annotationData.isComplete\n      );\n    } else {\n      return this.props.store.annotationData.isComplete;\n    }\n  }\n\n  @computed\n  get navBreadcrumbs() {\n    let breadcrumbs: (\n      | ITextBreadcrumb\n      | ILinkBreadcrumb\n      | IDropdownBreadcrumb\n      | IInputBreadcrumb\n    )[] = [];\n    switch (this.props.annotationType) {\n      case AnnotationType.PROTEIN_CHANGE:\n        breadcrumbs = [\n          {\n            type: 'link',\n            key: 'gene',\n            text: this.props.store.hugoSymbol,\n            to: getGenePageLink({\n              hugoSymbol: this.props.store.hugoSymbol,\n            }),\n          } as ILinkBreadcrumb,\n          {\n            type: 'link',\n            key: 'alteration',\n            text: this.props.store.alterationNameWithDiff,\n            to: getAlterationPageLink({\n              hugoSymbol: this.props.store.hugoSymbol,\n              alteration: this.props.store.alterationName,\n            }),\n          } as ILinkBreadcrumb,\n        ];\n        break;\n      case AnnotationType.HGVSG:\n        breadcrumbs = [\n          {\n            type: 'dropdown',\n            key: 'referenceGenome',\n            text: this.props.store.referenceGenomeQuery,\n            onChange: (selectedOption: Option) => {\n              this.props.routing.history.push(\n                getGenomicPageLink({\n                  rootRoute: PAGE_ROUTE.HGVSG,\n                  query: this.props.store.hgvsgQuery,\n                  refGenome: selectedOption.value as REFERENCE_GENOME,\n                  cancerType: this.props.store.cancerTypeName,\n                })\n              );\n            },\n            options: [REFERENCE_GENOME.GRCh37, REFERENCE_GENOME.GRCh38],\n          } as IDropdownBreadcrumb,\n          {\n            type: 'input',\n            key: 'hgvsg',\n            text: this.props.store.hgvsgQuery,\n            onChange: (newQuery: string) => {\n              const location = getGenomicPageLocation({\n                rootRoute: PAGE_ROUTE.HGVSG,\n                query: newQuery,\n                refGenome: this.props.store.referenceGenomeQuery,\n                cancerType: this.props.store.cancerTypeName,\n              });\n              window.location.search = QueryString.stringify(location.search);\n              window.location.pathname = location.pathname;\n            },\n          } as IInputBreadcrumb,\n        ];\n        break;\n      case AnnotationType.GENOMIC_CHANGE:\n        breadcrumbs = [\n          {\n            type: 'dropdown',\n            key: 'referenceGenome',\n            text: this.props.store.referenceGenomeQuery,\n            onChange: (selectedOption: Option) => {\n              this.props.routing.history.push(\n                getGenomicPageLink({\n                  rootRoute: PAGE_ROUTE.GENOMIC_CHANGE,\n                  query: this.props.store.genomicChangeQuery,\n                  refGenome: selectedOption.value as REFERENCE_GENOME,\n                  cancerType: this.props.store.cancerTypeName,\n                })\n              );\n            },\n            options: [REFERENCE_GENOME.GRCh37, REFERENCE_GENOME.GRCh38],\n          } as IDropdownBreadcrumb,\n          {\n            type: 'input',\n            key: 'genomicChange',\n            text: this.props.store.genomicChangeQuery,\n            onChange: (newQuery: string) => {\n              const location = getGenomicPageLocation({\n                rootRoute: PAGE_ROUTE.GENOMIC_CHANGE,\n                query: newQuery,\n                refGenome: this.props.store.referenceGenomeQuery,\n                cancerType: this.props.store.cancerTypeName,\n              });\n              window.location.search = QueryString.stringify(location.search);\n              window.location.pathname = location.pathname;\n            },\n          } as IInputBreadcrumb,\n        ];\n        break;\n      default:\n        break;\n    }\n\n    if (this.props.store.cancerTypeName) {\n      breadcrumbs.push({\n        type: 'text',\n        text: this.props.store.cancerTypeName,\n        key: 'cancertype',\n      } as ITextBreadcrumb);\n    }\n\n    return <AnnotationBreadcrumbs breadcrumbs={breadcrumbs} />;\n  }\n\n  getAnnotationComponents() {\n    const categoricalAlterationDescription = getCategoricalAlterationDescription(\n      this.props.store.hugoSymbol,\n      this.props.store.annotationData.result.query.alteration,\n      this.props.store.gene.result.oncogene,\n      this.props.store.gene.result.tsg\n    );\n    return (\n      <>\n        <div className={'d-flex justify-content-between flex-wrap'}>\n          <div style={{ flex: '1 1 300px' }}>\n            <h2\n              className={'d-flex align-items-baseline flex-wrap'}\n              style={{ marginBottom: 0 }}\n            >\n              {this.showGeneName && (\n                <span className={'mr-2'}>{this.props.store.hugoSymbol}</span>\n              )}\n              <span>{this.props.store.alterationNameWithDiff}</span>\n              {this.props.store.cancerTypeName && (\n                <span className={'mx-2'}>\n                  in {this.props.store.cancerTypeName}\n                </span>\n              )}\n              <span style={{ fontSize: '0.5em' }} className={'ml-2'}>\n                <FeedbackIcon\n                  feedback={{\n                    type: FeedbackType.ANNOTATION,\n                    annotation: {\n                      gene: this.props.store.hugoSymbol,\n                      alteration: this.props.store.alterationName,\n                      cancerType: this.props.store.cancerTypeName,\n                    },\n                  }}\n                  appStore={this.props.appStore}\n                />\n              </span>\n            </h2>\n            <AlterationInfo\n              isPositionalAlteration={isPositionalAlteration(\n                this.props.store.annotationData.result.query.proteinStart,\n                this.props.store.annotationData.result.query.proteinEnd,\n                this.props.store.annotationData.result.query.consequence\n              )}\n              oncogenicity={this.props.store.annotationData.result.oncogenic}\n              mutationEffect={\n                this.isCategoricalAlteration\n                  ? undefined\n                  : this.props.store.annotationData.result.mutationEffect\n              }\n              isVus={this.props.store.annotationData.result.vus}\n              highestSensitiveLevel={\n                this.props.store.annotationData.result.highestSensitiveLevel\n              }\n              highestResistanceLevel={\n                this.props.store.annotationData.result.highestResistanceLevel\n              }\n              highestDiagnosticImplicationLevel={\n                this.props.store.annotationData.result\n                  .highestDiagnosticImplicationLevel\n              }\n              highestPrognosticImplicationLevel={\n                this.props.store.annotationData.result\n                  .highestPrognosticImplicationLevel\n              }\n              highestFdaLevel={\n                this.props.store.annotationData.result.highestFdaLevel\n              }\n            />\n            {categoricalAlterationDescription && (\n              <div\n                className={classnames(\n                  styles.categoricalAltDescription,\n                  DEFAULT_MARGIN_BOTTOM_LG\n                )}\n              >\n                {categoricalAlterationDescription}\n              </div>\n            )}\n            {this.alterationSummaries.map(summary => {\n              return (\n                <div key={summary.content} className={DEFAULT_MARGIN_BOTTOM_LG}>\n                  {summary.content}\n                </div>\n              );\n            })}\n          </div>\n          {(this.props.annotationType === AnnotationType.HGVSG ||\n            this.props.annotationType === AnnotationType.GENOMIC_CHANGE) && (\n            <div className={'my-1 d-flex flex-column align-items-center'}>\n              <div>Genomic annotation powered by</div>\n              <PowerBySource\n                name={'Genome Nexus'}\n                url={'genomenexus.org'}\n                logo={gnLogo}\n              />\n              {this.props.store.annotationData.result.vue && (\n                <PowerBySource\n                  name={'reVUE'}\n                  url={'cancerrevue.org'}\n                  logo={revueLogo}\n                />\n              )}\n            </div>\n          )}\n        </div>\n        {this.props.store.annotationData.result.mutationEffect.description && (\n          <Row>\n            <Col>\n              <ShowHideText\n                show={this.showMutationEffect}\n                title=\"mutation effect description\"\n                content={\n                  <MutationEffectDescription\n                    hugoSymbol={this.props.store.hugoSymbol}\n                    description={\n                      this.props.store.annotationData.result.mutationEffect\n                        .description\n                    }\n                  />\n                }\n                onClick={() =>\n                  this.toggleMutationEffect(!this.showMutationEffect)\n                }\n              />\n            </Col>\n          </Row>\n        )}\n        {this.props.store.cancerTypeName ? (\n          <CancerTypeView\n            appStore={this.props.appStore}\n            isLargeScreen={this.props.windowStore.isLargeScreen}\n            userAuthenticated={\n              this.props.authenticationStore.isUserAuthenticated\n            }\n            hugoSymbol={this.props.store.hugoSymbol}\n            alteration={this.props.store.alterationName}\n            matchedAlteration={this.props.store.alteration.result}\n            tumorType={this.props.store.cancerTypeName}\n            onChangeTumorType={this.props.onChangeTumorType}\n            annotation={this.props.store.annotationData.result}\n            biologicalAlterations={\n              this.props.store.biologicalAlterations.result\n            }\n            relevantAlterations={this.props.relevantAlterations}\n            fdaImplication={this.fdaImplication}\n            therapeuticImplications={this.therapeuticImplications}\n            diagnosticImplications={this.diagnosticImplications}\n            prognosticImplications={this.prognosticImplications}\n            defaultSelectedTab={this.props.defaultSelectedTab}\n            onChangeTab={this.props.onChangeTab}\n          />\n        ) : (\n          <AlterationView\n            appStore={this.props.appStore}\n            hugoSymbol={this.props.store.hugoSymbol}\n            alteration={this.props.store.alterationName}\n            matchedAlteration={this.props.store.alteration.result}\n            tumorType={this.props.store.cancerTypeName}\n            onChangeTumorType={this.props.onChangeTumorType}\n            annotation={this.props.store.annotationData.result}\n            biologicalAlterations={\n              this.props.store.biologicalAlterations.result\n            }\n            relevantAlterations={this.props.relevantAlterations}\n            fdaImplication={this.fdaImplication}\n            therapeuticImplications={this.therapeuticImplications}\n            diagnosticImplications={this.diagnosticImplications}\n            prognosticImplications={this.prognosticImplications}\n            defaultSelectedTab={this.props.defaultSelectedTab}\n            onChangeTab={this.props.onChangeTab}\n          />\n        )}\n      </>\n    );\n  }\n\n  render() {\n    return this.props.annotationType === AnnotationType.GENE &&\n      (this.props.store.gene.isError ||\n        this.props.store.gene.result === DEFAULT_GENE) ? (\n      <UnknownGeneAlert />\n    ) : (\n      <>\n        {this.navBreadcrumbs}\n        {this.pageShouldBeRendered ? (\n          this.props.store.annotationData.result.query.hugoSymbol ? (\n            this.getAnnotationComponents()\n          ) : (\n            <Alert variant=\"warning\" className={'text-center'}>\n              We do not have any information for this variant\n            </Alert>\n          )\n        ) : (\n          <If condition={this.props.store.annotationData.isError}>\n            <Then>\n              <Alert variant=\"warning\" className={'text-center'}>\n                An error occurred while annotating your variant.\n              </Alert>\n            </Then>\n            <Else>\n              <LoadingIndicator\n                size={LoaderSize.LARGE}\n                center={true}\n                isLoading={true}\n              />\n            </Else>\n          </If>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport AppStore from 'app/store/AppStore';\nimport { Alteration } from 'app/shared/api/generated/OncoKbAPI';\nimport {\n  BiologicalVariant,\n  VariantAnnotation,\n} from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport {\n  FdaImplication,\n  TherapeuticImplication,\n} from 'app/store/AnnotationStore';\nimport {\n  ANNOTATION_PAGE_TAB_KEYS,\n  LEVEL_PRIORITY,\n  LEVELS,\n} from 'app/config/constants';\nimport { FdaTabDescription } from 'app/pages/annotationPage/TabDescriptor';\nimport { CancerTypeViewTable } from 'app/pages/annotationPage/CancerTypeViewTable';\nimport { sortTherapeuticImplications } from 'app/pages/annotationPage/Utils';\nimport WindowStore from 'app/store/WindowStore';\nimport { defaultFdaImplicationSortMethod } from 'app/shared/utils/ReactTableUtils';\n\nexport type ICancerTypeView = {\n  appStore?: AppStore;\n  isLargeScreen: boolean;\n  userAuthenticated: boolean;\n  hugoSymbol: string;\n  alteration: string;\n  matchedAlteration: Alteration | undefined;\n  tumorType: string;\n  onChangeTumorType: (newTumorType: string) => void;\n  annotation: VariantAnnotation;\n  biologicalAlterations?: BiologicalVariant[];\n  relevantAlterations?: Alteration[];\n  fdaImplication: FdaImplication[];\n  therapeuticImplications: TherapeuticImplication[];\n  diagnosticImplications: TherapeuticImplication[];\n  prognosticImplications: TherapeuticImplication[];\n  defaultSelectedTab?: ANNOTATION_PAGE_TAB_KEYS;\n  onChangeTab?: (\n    selectedTabKey: ANNOTATION_PAGE_TAB_KEYS,\n    newTabKey: ANNOTATION_PAGE_TAB_KEYS\n  ) => void;\n};\n\nconst TxView: React.FunctionComponent<{\n  isLargeScreen: boolean;\n  userAuthenticated: boolean;\n  hugoSymbol: string;\n  summary?: string;\n  implications: TherapeuticImplication[];\n}> = props => {\n  const txStandardCares = sortTherapeuticImplications(\n    props.implications.filter(implication =>\n      [LEVELS.Tx1, LEVELS.Tx2, LEVELS.R1]\n        .map(level => level.toString())\n        .includes(implication.level)\n    )\n  );\n  const txInvestigationalCares = sortTherapeuticImplications(\n    props.implications.filter(implication =>\n      [LEVELS.Tx3A, LEVELS.Tx3B, LEVELS.Tx4, LEVELS.R2]\n        .map(level => level.toString())\n        .includes(implication.level)\n    )\n  );\n  return (\n    <div>\n      <h5 className={'text-primary'}>\n        Treatment implications of this biomarker\n      </h5>\n      {props.summary && <p>{props.summary}</p>}\n      {txStandardCares.length > 0 && (\n        <>\n          <h6>FDA-approved and/or NCCN-recommended drug association(s):</h6>\n          <CancerTypeViewTable\n            isLargeScreen={props.isLargeScreen}\n            userAuthenticated={props.userAuthenticated}\n            type={'tx'}\n            hugoSymbol={props.hugoSymbol}\n            data={txStandardCares.map(implication => {\n              return {\n                level: implication.level as LEVELS,\n                alterations: implication.alterations,\n                cancerTypes: implication.cancerTypes,\n                drugs: implication.drugs,\n                citations: implication.citations,\n                description: implication.drugDescription,\n              };\n            })}\n          />\n        </>\n      )}\n      {txInvestigationalCares.length > 0 && (\n        <>\n          <h6>Investigational drug association(s):</h6>\n          <CancerTypeViewTable\n            isLargeScreen={props.isLargeScreen}\n            userAuthenticated={props.userAuthenticated}\n            type={'tx'}\n            hugoSymbol={props.hugoSymbol}\n            data={txInvestigationalCares.map(implication => {\n              return {\n                level: implication.level as LEVELS,\n                alterations: implication.alterations,\n                cancerTypes: implication.cancerTypes,\n                drugs: implication.drugs,\n                citations: implication.citations,\n                description: implication.drugDescription,\n              };\n            })}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst DxPxView: React.FunctionComponent<{\n  isLargeScreen: boolean;\n  userAuthenticated: boolean;\n  type: 'dx' | 'px';\n  hugoSymbol: string;\n  summary?: string;\n  implications: TherapeuticImplication[];\n}> = props => {\n  return (\n    <div>\n      <h5 className={'text-primary'}>\n        {props.type === 'dx' ? 'Diagnostic' : 'Prognostic'} implications of this\n        biomarker\n      </h5>\n      {props.summary && <p>{props.summary}</p>}\n      <CancerTypeViewTable\n        isLargeScreen={props.isLargeScreen}\n        userAuthenticated={props.userAuthenticated}\n        type={props.type}\n        hugoSymbol={props.hugoSymbol}\n        data={props.implications.map(implication => {\n          return {\n            level: implication.level as LEVELS,\n            alterations: implication.alterations,\n            cancerTypes: implication.cancerTypes,\n            citations: implication.citations,\n            description: implication.drugDescription,\n          };\n        })}\n      />\n    </div>\n  );\n};\n\nconst FdaView: React.FunctionComponent<{\n  isLargeScreen: boolean;\n  userAuthenticated: boolean;\n  hugoSymbol: string;\n  summary?: string;\n  implications: FdaImplication[];\n}> = props => {\n  return (\n    <div>\n      <h5 className={'text-primary'}>FDA-recognized biomarker</h5>\n      <p>\n        <FdaTabDescription hugoSymbol={props.hugoSymbol} />\n      </p>\n      <CancerTypeViewTable\n        isLargeScreen={props.isLargeScreen}\n        userAuthenticated={props.userAuthenticated}\n        type={'fda'}\n        hugoSymbol={props.hugoSymbol}\n        data={props.implications\n          .map(implication => {\n            return {\n              level: implication.level as LEVELS,\n              alterations: implication.alteration.name,\n              cancerTypes: implication.cancerType,\n            };\n          })\n          .sort(defaultFdaImplicationSortMethod)}\n      />\n    </div>\n  );\n};\n\nexport const CancerTypeView: React.FunctionComponent<ICancerTypeView> = props => {\n  return (\n    <div className={'mt-3'}>\n      <TxView\n        isLargeScreen={props.isLargeScreen}\n        userAuthenticated={props.userAuthenticated}\n        hugoSymbol={props.hugoSymbol}\n        summary={props.annotation.tumorTypeSummary}\n        implications={props.therapeuticImplications}\n      />\n      {props.diagnosticImplications.length > 0 && (\n        <DxPxView\n          isLargeScreen={props.isLargeScreen}\n          userAuthenticated={props.userAuthenticated}\n          type={'dx'}\n          hugoSymbol={props.hugoSymbol}\n          summary={props.annotation.diagnosticSummary}\n          implications={props.diagnosticImplications}\n        />\n      )}\n      {props.prognosticImplications.length > 0 && (\n        <DxPxView\n          isLargeScreen={props.isLargeScreen}\n          userAuthenticated={props.userAuthenticated}\n          type={'px'}\n          hugoSymbol={props.hugoSymbol}\n          summary={props.annotation.prognosticSummary}\n          implications={props.prognosticImplications}\n        />\n      )}\n      {props.fdaImplication.length > 0 && (\n        <FdaView\n          isLargeScreen={props.isLargeScreen}\n          userAuthenticated={props.userAuthenticated}\n          hugoSymbol={props.hugoSymbol}\n          summary={props.annotation.prognosticSummary}\n          implications={props.fdaImplication}\n        />\n      )}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"content/gn_logo.png\";","export default __webpack_public_path__ + \"content/revue_logo.png\";","import React from 'react';\n\nimport OptimizedImage from 'app/shared/image/OptimizedImage';\nimport { Linkout } from 'app/shared/links/Linkout';\n\nexport const PowerBySource: React.FunctionComponent<{\n  name: string;\n  url: string;\n  logo: any;\n}> = props => {\n  return (\n    <div className={'d-flex my-2 align-items-center'}>\n      <OptimizedImage\n        src={props.logo}\n        className=\"mx-2\"\n        style={{ height: '30px' }}\n      />\n      <div className={'d-flex flex-column align-items-center'}>\n        <div>\n          <b>{props.name}</b>\n        </div>\n        <Linkout link={props.url} />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Breadcrumb, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Else, If, Then } from 'react-if';\nimport Select from 'react-select';\nimport { REFERENCE_GENOME } from 'app/config/constants';\nimport { COLOR_BLUE } from 'app/config/theme';\nimport { Option } from 'app/shared/select/FormSelectWithLabelField';\n\nexport type BreadcrumbType = 'text' | 'link' | 'input' | 'dropdown';\n\nexport interface IBasicBreadcrumb {\n  type: BreadcrumbType;\n  active?: boolean;\n  key: string;\n  text: string;\n}\n\nexport interface ITextBreadcrumb extends IBasicBreadcrumb {\n  type: 'text';\n}\n\nexport interface ILinkBreadcrumb extends IBasicBreadcrumb {\n  type: 'link';\n  to: string;\n}\n\nexport interface IInputBreadcrumb extends IBasicBreadcrumb {\n  type: 'input';\n  onChange: (newVal: string) => void;\n}\n\nexport interface IDropdownBreadcrumb extends IBasicBreadcrumb {\n  type: 'dropdown';\n  onChange: (selectedOption: Option) => void;\n  options: string[];\n}\n\nconst Icon: React.FunctionComponent<{\n  iconClassName: string;\n  onClick: () => void;\n  colorClassName?: string;\n}> = props => {\n  return (\n    <i\n      className={`fa fa-${props.iconClassName} ${props.colorClassName}`}\n      style={{ cursor: 'pointer', width: 13 }}\n      onClick={props.onClick}\n    ></i>\n  );\n};\nconst TextBreadcrumb: React.FunctionComponent<IBasicBreadcrumb> = props => {\n  return (\n    <Breadcrumb.Item key={props.key} active={props.active}>\n      {props.text}\n    </Breadcrumb.Item>\n  );\n};\n\nconst LinkBreadcrumb: React.FunctionComponent<ILinkBreadcrumb> = props => {\n  return (\n    <Breadcrumb.Item\n      key={props.key}\n      linkAs={Link}\n      linkProps={{ to: props.to }}\n      active={props.active}\n    >\n      {props.text}\n    </Breadcrumb.Item>\n  );\n};\n\nconst InputBreadcrumb: React.FunctionComponent<IInputBreadcrumb> = props => {\n  const [editing, setEditing] = useState(false);\n  const [text, setText] = useState(props.text);\n  const editableContentFontSize = '13px';\n  return (\n    <Breadcrumb.Item key={props.key} active style={{ color: COLOR_BLUE }}>\n      <If condition={editing}>\n        <Then>\n          <span style={{ fontSize: editableContentFontSize }}>\n            <input\n              type={'text'}\n              value={text}\n              style={{\n                border: '1px solid lightgrey',\n                borderRadius: 4,\n                minWidth: 180,\n              }}\n              onChange={e => setText(e.target.value)}\n            />\n            <Button\n              size={'sm'}\n              variant={'success'}\n              style={{ padding: '0 0.25rem' }}\n              className={'ml-1'}\n            >\n              <Icon\n                colorClassName=\"text-white\"\n                iconClassName=\"check\"\n                onClick={() => {\n                  props.onChange(text);\n                  setEditing(false);\n                }}\n              />\n            </Button>\n            <Button\n              size={'sm'}\n              variant={'danger'}\n              style={{ padding: '0 0.25rem' }}\n              className={'ml-1'}\n            >\n              <Icon\n                colorClassName=\"text-white\"\n                iconClassName=\"times\"\n                onClick={() => {\n                  setText(props.text);\n                  setEditing(false);\n                }}\n              />\n            </Button>\n          </span>\n        </Then>\n        <Else>\n          {props.text}\n          <Icon\n            iconClassName=\"pencil-square-o ml-1\"\n            onClick={() => setEditing(true)}\n          />\n        </Else>\n      </If>\n    </Breadcrumb.Item>\n  );\n};\n\nconst DropdownBreadcrumb: React.FunctionComponent<IDropdownBreadcrumb> = props => {\n  const [editing, setEditing] = useState(false);\n  return (\n    <Breadcrumb.Item key={props.key} active style={{ color: COLOR_BLUE }}>\n      <If condition={editing}>\n        <Then>\n          <Select\n            menuIsOpen\n            theme={theme => ({\n              ...theme,\n              colors: {\n                ...theme.colors,\n                primary: COLOR_BLUE,\n              },\n            })}\n            styles={{\n              control: baseStyles => ({\n                ...baseStyles,\n                fontSize: 12,\n                width: 110,\n                minHeight: 10,\n              }),\n              option: baseStyles => ({\n                ...baseStyles,\n                fontSize: 12,\n                paddingTop: 5,\n                paddingBottom: 5,\n              }),\n              indicatorSeparator: baseStyles => ({\n                ...baseStyles,\n                marginTop: 5,\n                marginBottom: 5,\n              }),\n              dropdownIndicator: baseStyles => ({\n                ...baseStyles,\n                width: 30,\n                paddingTop: 0,\n                paddingBottom: 0,\n              }),\n              input: baseStyles => ({\n                ...baseStyles,\n                margin: 0,\n                padding: 0,\n              }),\n            }}\n            options={props.options.map(option => {\n              return { label: option, value: option };\n            })}\n            onChange={(selectedOption: Option) => {\n              props.onChange(selectedOption);\n              setEditing(false);\n            }}\n            defaultValue={{\n              label: props.text,\n              value: props.text,\n            }}\n          />\n        </Then>\n        <Else>\n          {props.text}\n          <Icon\n            iconClassName=\"pencil-square-o ml-1\"\n            onClick={() => setEditing(true)}\n          />\n        </Else>\n      </If>\n    </Breadcrumb.Item>\n  );\n};\n\nexport const AnnotationBreadcrumbs: React.FunctionComponent<{\n  breadcrumbs: (\n    | ITextBreadcrumb\n    | ILinkBreadcrumb\n    | IInputBreadcrumb\n    | IDropdownBreadcrumb\n  )[];\n}> = props => {\n  return (\n    <Breadcrumb>\n      {props.breadcrumbs.map((breadcrumb, index) => {\n        const commonProps: IBasicBreadcrumb = {\n          type: 'text',\n          key: breadcrumb.key,\n          text: breadcrumb.text,\n          active: index === props.breadcrumbs.length - 1,\n        };\n        switch (breadcrumb.type) {\n          case 'text':\n            return <TextBreadcrumb {...commonProps} />;\n          case 'link':\n            return (\n              <LinkBreadcrumb\n                {...commonProps}\n                type={'link'}\n                to={breadcrumb.to}\n              />\n            );\n          case 'dropdown':\n            return (\n              <DropdownBreadcrumb\n                {...commonProps}\n                type={'dropdown'}\n                options={[REFERENCE_GENOME.GRCh37, REFERENCE_GENOME.GRCh38]}\n                onChange={breadcrumb.onChange}\n              />\n            );\n          case 'input':\n            return (\n              <InputBreadcrumb\n                {...commonProps}\n                type={'input'}\n                onChange={breadcrumb.onChange}\n              />\n            );\n          default:\n            return <TextBreadcrumb {...commonProps} type={'text'} />;\n        }\n      })}\n    </Breadcrumb>\n  );\n};\n","import { Alert } from 'react-bootstrap';\nimport React from 'react';\nimport { DEFAULT_MESSAGE_UNKNOWN_GENE } from 'app/config/constants';\n\nexport const UnknownGeneAlert: React.FunctionComponent = () => {\n  return (\n    <Alert variant=\"warning\" className={'text-center'}>\n      {DEFAULT_MESSAGE_UNKNOWN_GENE}\n    </Alert>\n  );\n};\n","import React from 'react';\nimport { AlterationPageLink } from 'app/shared/utils/UrlUtils';\nimport WithSeparator from 'react-with-separator';\nimport SummaryWithRefs from 'app/oncokb-frontend-commons/src/components/SummaryWithRefs';\n\nconst MutationEffectDescription: React.FunctionComponent<{\n  hugoSymbol: string;\n  description: string | undefined;\n}> = props => {\n  // Add link to alteration page when the allele is unknown but multiple alternative alleles at the same position have mutation effects\n  const description = props.description || '';\n  const additionalMutationEffectSeparator =\n    'however, we have mutation effect descriptions for';\n  if (description.includes(additionalMutationEffectSeparator)) {\n    const segments = description.split(additionalMutationEffectSeparator);\n    if (segments.length === 2) {\n      // supposedly the last word is the alteration\n      const varSegs = segments[1].split(' ');\n      let alterationStr = varSegs.pop();\n      if (alterationStr) {\n        const altRegex = new RegExp('([A-Z]+[0-9]+)([A-Z]+(/[A-Z]+)*)', 'i');\n        alterationStr = alterationStr.replace('.', '');\n        if (altRegex.test(alterationStr)) {\n          const matches = altRegex.exec(alterationStr);\n          if (matches) {\n            const positionalVar = matches[1];\n            const alternativeAlleles = matches[2];\n            const alleleLines = alternativeAlleles\n              .split('/')\n              .map((allele, index) => {\n                return (\n                  <AlterationPageLink\n                    hugoSymbol={props.hugoSymbol}\n                    alteration={`${positionalVar}${allele}`}\n                  >\n                    {index === 0 ? `${positionalVar}${allele}` : allele}\n                  </AlterationPageLink>\n                );\n              });\n            return (\n              <span>\n                {segments[0]} {additionalMutationEffectSeparator}\n                {varSegs.join(' ')}{' '}\n                <WithSeparator separator={'/'}>{alleleLines}</WithSeparator>.\n              </span>\n            );\n          }\n        }\n      }\n    }\n  }\n  // don't do anything but add reference links in the description\n  return <SummaryWithRefs content={props.description} type=\"linkout\" />;\n};\n\nexport default MutationEffectDescription;\n","import { remoteData } from 'cbioportal-frontend-commons';\nimport {\n  DataFilterType,\n  initDefaultMutationMapperStore,\n  MutationMapper,\n  MutationMapperProps,\n  MutationMapperStore,\n  TrackName,\n} from 'react-mutation-mapper';\nimport apiClient from 'app/shared/api/oncokbClientInstance';\nimport privateClient from 'app/shared/api/oncokbPrivateClientInstance';\nimport { computed, IReactionDisposer, observable } from 'mobx';\nimport {\n  Alteration,\n  Citations,\n  Evidence,\n  Gene,\n} from 'app/shared/api/generated/OncoKbAPI';\nimport {\n  DEFAULT_ANNOTATION,\n  DEFAULT_GENE,\n  DEFAULT_GENE_NUMBER,\n  EVIDENCE_TYPES,\n  REFERENCE_GENOME,\n} from 'app/config/constants';\nimport {\n  BiologicalVariant,\n  CancerTypeCount,\n  ClinicalVariant,\n  EnsemblGene,\n  GeneNumber,\n  PortalAlteration,\n  TumorType,\n  VariantAnnotation,\n} from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport _ from 'lodash';\nimport { BarChartDatum } from 'app/components/barChart/BarChart';\nimport {\n  getAlterationName,\n  getCancerTypeNameFromOncoTreeType,\n  isOncogenic,\n  shortenOncogenicity,\n} from 'app/shared/utils/Utils';\nimport { oncogenicitySortMethod } from 'app/shared/utils/ReactTableUtils';\nimport { Oncogenicity } from 'app/components/oncokbMutationMapper/OncokbMutationMapper';\nimport { OncokbMutation } from 'app/components/oncokbMutationMapper/OncokbMutation';\nimport {\n  applyCancerTypeFilter,\n  applyOncogenicityFilter,\n  findCancerTypeFilter,\n  findOncogenicityFilter,\n  findPositionFilter,\n  ONCOGENICITY_FILTER_TYPE,\n} from 'app/components/oncokbMutationMapper/FilterUtils';\nimport { notifyError } from 'app/shared/utils/NotificationUtils';\nimport { AnnotationType } from 'app/pages/annotationPage/AnnotationPage';\n\nexport interface IAnnotationStore {\n  type: AnnotationType;\n  hugoSymbolQuery?: string;\n  alterationQuery?: string;\n  tumorTypeQuery?: string;\n  hgsvgQuery?: string;\n  genomicChangeQuery?: string;\n  referenceGenomeQuery?: REFERENCE_GENOME;\n}\n\nexport type TherapeuticImplication = {\n  level: string;\n  fdaLevel?: string;\n  alterations: string;\n  alterationsView: JSX.Element;\n  drugs: string;\n  cancerTypes: string;\n  cancerTypesView: JSX.Element;\n  citations: Citations;\n  drugDescription: string;\n};\n\nexport type FdaImplication = {\n  level: string;\n  alteration: Alteration;\n  alterationView: JSX.Element;\n  cancerType: string;\n  cancerTypeView: JSX.Element;\n};\n\nexport function getCustomFilterAppliers() {\n  return {\n    [ONCOGENICITY_FILTER_TYPE]: applyOncogenicityFilter,\n    [DataFilterType.CANCER_TYPE]: applyCancerTypeFilter,\n  };\n}\n\nexport class AnnotationStore {\n  @observable hugoSymbolQuery: string;\n  @observable alterationQuery: string;\n  @observable tumorTypeQuery: string;\n  @observable hgvsgQuery: string;\n  @observable genomicChangeQuery: string;\n  @observable referenceGenomeQuery: REFERENCE_GENOME = REFERENCE_GENOME.GRCh37;\n\n  private readonly annotationType: AnnotationType;\n\n  readonly mutationMapperProps = remoteData<Partial<MutationMapperProps>>({\n    await: () => [\n      this.gene,\n      this.mutationMapperData,\n      this.biologicalAlterations,\n    ],\n    invoke: () => {\n      return Promise.resolve({\n        ...MutationMapper.defaultProps,\n        hugoSymbol: this.gene.result.hugoSymbol,\n        entrezGeneId: this.gene.result.entrezGeneId,\n        tracks: [TrackName.OncoKB, TrackName.CancerHotspots, TrackName.PTM],\n        data: this.mutationMapperData.result,\n        oncogenicities: this.uniqOncogenicity,\n        isoformOverrideSource: 'mskcc',\n        filterAppliersOverride: getCustomFilterAppliers(),\n      });\n    },\n    default: MutationMapper.defaultProps,\n  });\n\n  readonly mutationMapperStore = remoteData<MutationMapperStore | undefined>({\n    await: () => [this.mutationMapperProps],\n    invoke: () => {\n      return Promise.resolve(\n        initDefaultMutationMapperStore(this.mutationMapperProps.result)\n      );\n    },\n    default: undefined,\n  });\n\n  readonly reactions: IReactionDisposer[] = [];\n\n  constructor(props: IAnnotationStore) {\n    this.annotationType = props.type;\n    if (props.hugoSymbolQuery) this.hugoSymbolQuery = props.hugoSymbolQuery;\n    if (props.alterationQuery) this.alterationQuery = props.alterationQuery;\n    if (props.tumorTypeQuery) this.tumorTypeQuery = props.tumorTypeQuery;\n    if (props.hgsvgQuery) this.hgvsgQuery = props.hgsvgQuery;\n    if (props.genomicChangeQuery)\n      this.genomicChangeQuery = props.genomicChangeQuery;\n    if (props.referenceGenomeQuery)\n      this.referenceGenomeQuery = props.referenceGenomeQuery;\n  }\n\n  readonly gene = remoteData<Gene>({\n    await: () => {\n      return this.hgvsgQuery ? [this.annotationResultByHgvsg] : [];\n    },\n    invoke: async () => {\n      try {\n        const genes = await apiClient.genesLookupGetUsingGET({\n          query: this.hgvsgQuery\n            ? this.annotationResultByHgvsg.result.query.hugoSymbol\n            : this.hugoSymbolQuery,\n        });\n        return genes && genes.length > 0 ? genes[0] : DEFAULT_GENE;\n      } catch (e) {\n        notifyError(e, 'Error finding gene');\n        return DEFAULT_GENE;\n      }\n    },\n    default: DEFAULT_GENE,\n  });\n\n  readonly alteration = remoteData<Alteration | undefined>({\n    await: () => [this.gene],\n    invoke: async () => {\n      try {\n        const variant = this.hgvsgQuery\n          ? this.annotationResultByHgvsg.result.query.alteration\n          : this.alterationQuery;\n        if (!variant) {\n          return undefined;\n        }\n        const variants = await apiClient.variantsLookupGetUsingGET({\n          hugoSymbol: this.gene.result.hugoSymbol\n            ? this.gene.result.hugoSymbol\n            : this.hugoSymbolQuery,\n          variant,\n        });\n        return variants[0];\n      } catch (e) {\n        notifyError(e, 'Error finding alteration');\n        return undefined;\n      }\n    },\n  });\n\n  readonly ensemblGenes = remoteData<EnsemblGene[]>({\n    await: () => [this.gene],\n    invoke: async () => {\n      return privateClient.utilsEnsemblGenesGetUsingGET({\n        entrezGeneId: this.gene.result.entrezGeneId,\n      });\n    },\n    default: [],\n  });\n\n  readonly geneSummary = remoteData<string | undefined>({\n    await: () => [this.gene],\n    invoke: async () => {\n      try {\n        const evidences = await apiClient.evidencesLookupGetUsingGET({\n          hugoSymbol: this.gene.result.hugoSymbol,\n          evidenceTypes: EVIDENCE_TYPES.GENE_SUMMARY,\n        });\n        if (evidences.length > 0) {\n          return evidences[0].description;\n        } else {\n          return undefined;\n        }\n      } catch (e) {\n        notifyError(e, 'Error loading gene summary');\n        return undefined;\n      }\n    },\n  });\n\n  readonly geneBackground = remoteData<string | undefined>({\n    await: () => [this.gene],\n    invoke: async () => {\n      try {\n        const evidences = await apiClient.evidencesLookupGetUsingGET({\n          hugoSymbol: this.gene.result.hugoSymbol,\n          evidenceTypes: EVIDENCE_TYPES.GENE_BACKGROUND,\n        });\n        if (evidences.length > 0) {\n          return evidences[0].description;\n        } else {\n          return undefined;\n        }\n      } catch (e) {\n        notifyError(e, 'Error loading gene background');\n        return undefined;\n      }\n    },\n  });\n\n  readonly geneNumber = remoteData<GeneNumber>({\n    await: () => [this.gene],\n    invoke: async () => {\n      try {\n        return await privateClient.utilsNumbersGeneGetUsingGET({\n          hugoSymbol: this.gene.result.hugoSymbol,\n        });\n      } catch (e) {\n        return DEFAULT_GENE_NUMBER;\n      }\n    },\n    default: DEFAULT_GENE_NUMBER,\n  });\n\n  readonly mutationEffect = remoteData<Evidence[]>({\n    await: () => [this.gene],\n    invoke: async () => {\n      return apiClient.evidencesLookupGetUsingGET({\n        hugoSymbol: this.gene.result.hugoSymbol,\n        variant: this.alterationQuery,\n        evidenceTypes: EVIDENCE_TYPES.MUTATION_EFFECT,\n      });\n    },\n    default: [],\n  });\n\n  readonly clinicalAlterations = remoteData<ClinicalVariant[]>({\n    await: () => [this.gene],\n    invoke: async () => {\n      try {\n        const clinicalVariants = await privateClient.searchVariantsClinicalGetUsingGET(\n          {\n            hugoSymbol: this.gene.result.hugoSymbol,\n          }\n        );\n        return clinicalVariants.filter(clinicalVariant =>\n          clinicalVariant.variant.referenceGenomes.includes(\n            this.referenceGenomeQuery\n          )\n        );\n      } catch (e) {\n        notifyError(e, 'Error loading clinical alterations');\n        return [];\n      }\n    },\n    default: [],\n  });\n\n  readonly biologicalAlterations = remoteData<BiologicalVariant[]>({\n    await: () => [this.gene],\n    invoke: async () => {\n      return privateClient.searchVariantsBiologicalGetUsingGET({\n        hugoSymbol: this.gene.result.hugoSymbol,\n      });\n    },\n    default: [],\n  });\n\n  readonly relevantAlterations = remoteData<Alteration[]>({\n    await: () => [this.gene, this.alteration],\n    invoke: async () => {\n      if (!this.gene.result.entrezGeneId || !this.alteration.result) {\n        return [];\n      }\n      return privateClient.utilRelevantAlterationsGetUsingGET({\n        entrezGeneId: this.gene.result.entrezGeneId,\n        alteration: this.alteration.result\n          ? this.alteration.result.alteration\n          : this.alterationQuery,\n        referenceGenome: this.referenceGenomeQuery,\n      });\n    },\n    default: [],\n  });\n\n  readonly mutationMapperDataExternal = remoteData<OncokbMutation[]>({\n    await: () => [this.gene, this.biologicalAlterations],\n    invoke: () => {\n      return Promise.resolve(\n        this.biologicalAlterations.result.map(alteration => {\n          return {\n            gene: {\n              hugoGeneSymbol: this.gene.result.hugoSymbol,\n            },\n            proteinChange: alteration.variant.alteration,\n            proteinPosEnd: alteration.variant.proteinEnd,\n            proteinPosStart: alteration.variant.proteinStart,\n            referenceAllele: alteration.variant.refResidues,\n            variantAllele: alteration.variant.variantResidues,\n            mutationType: alteration.variant.consequence.term,\n            oncogenic: shortenOncogenicity(alteration.oncogenic),\n          };\n        })\n      );\n    },\n  });\n\n  readonly defaultAnnotationResult = remoteData<VariantAnnotation>({\n    invoke() {\n      return Promise.resolve(DEFAULT_ANNOTATION);\n    },\n    default: DEFAULT_ANNOTATION,\n  });\n\n  readonly annotationResult = remoteData<VariantAnnotation>({\n    await: () => [this.gene],\n    invoke: () => {\n      return privateClient.utilVariantAnnotationGetUsingGET({\n        hugoSymbol: this.gene.result.hugoSymbol,\n        alteration: this.alterationQuery,\n        tumorType: this.tumorTypeQuery,\n        referenceGenome: this.referenceGenomeQuery,\n      });\n    },\n    default: DEFAULT_ANNOTATION,\n  });\n\n  readonly annotationResultByHgvsg = remoteData<VariantAnnotation>({\n    await: () => [],\n    invoke: () => {\n      return privateClient.utilVariantAnnotationGetUsingGET({\n        hgvsg: this.hgvsgQuery,\n        tumorType: this.tumorTypeQuery,\n        referenceGenome: this.referenceGenomeQuery,\n      });\n    },\n    default: DEFAULT_ANNOTATION,\n  });\n\n  readonly annotationResultByGenomicChange = remoteData<VariantAnnotation>({\n    await: () => [],\n    invoke: () => {\n      return privateClient.utilVariantAnnotationGetUsingGET({\n        genomicChange: this.genomicChangeQuery,\n        tumorType: this.tumorTypeQuery,\n        referenceGenome: this.referenceGenomeQuery,\n      });\n    },\n    default: DEFAULT_ANNOTATION,\n  });\n\n  readonly portalAlterationSampleCount = remoteData<CancerTypeCount[]>({\n    async invoke() {\n      return privateClient.utilPortalAlterationSampleCountGetUsingGET({});\n    },\n    default: [],\n  });\n\n  readonly mutationMapperDataPortal = remoteData<PortalAlteration[]>({\n    invoke: async () => {\n      return privateClient.utilMutationMapperDataGetUsingGET({\n        hugoSymbol: this.hugoSymbol,\n      });\n    },\n    default: [],\n  });\n\n  readonly mutationMapperData = remoteData<OncokbMutation[]>({\n    await: () => [\n      this.mutationMapperDataExternal,\n      this.mutationMapperDataPortal,\n    ],\n    invoke: () => {\n      // simply mapping by protein change, assuming that protein change is unique for alterations\n      const indexedByProteinChange = _.keyBy(\n        this.mutationMapperDataExternal.result,\n        mutation => mutation.proteinChange\n      );\n\n      const data = this.mutationMapperDataPortal.result.map(mutation => {\n        const oncogenic = indexedByProteinChange[mutation.proteinChange]\n          ? indexedByProteinChange[mutation.proteinChange].oncogenic\n          : 'Unknown';\n        const referenceAllele = indexedByProteinChange[mutation.proteinChange]\n          ? indexedByProteinChange[mutation.proteinChange].referenceAllele\n          : undefined;\n        const variantAllele = indexedByProteinChange[mutation.proteinChange]\n          ? indexedByProteinChange[mutation.proteinChange].variantAllele\n          : undefined;\n\n        return {\n          gene: {\n            hugoGeneSymbol: mutation.gene.hugoSymbol,\n          },\n          proteinChange: mutation.proteinChange,\n          proteinPosEnd: mutation.proteinEndPosition,\n          proteinPosStart: mutation.proteinStartPosition,\n          referenceAllele,\n          variantAllele,\n          mutationType: mutation.alterationType,\n          oncogenic: shortenOncogenicity(oncogenic),\n          cancerType: mutation.cancerType,\n        };\n      });\n\n      return Promise.resolve(data);\n    },\n    default: [],\n  });\n\n  readonly allCancerTypes = remoteData<TumorType[]>({\n    await: () => [],\n    async invoke() {\n      const result = await privateClient.utilsTumorTypesGetUsingGET({});\n      return result.sort();\n    },\n    default: [],\n  });\n\n  calculateOncogenicities(biologicalAlterations: BiologicalVariant[]) {\n    const oncogenicities = _.groupBy(\n      _.reduce(\n        biologicalAlterations,\n        (acc, item) => {\n          acc.push({\n            ...item,\n            oncogenic: shortenOncogenicity(item.oncogenic),\n          });\n          return acc;\n        },\n        [] as BiologicalVariant[]\n      ),\n      'oncogenic'\n    );\n    const keys = _.keys(oncogenicities).sort(oncogenicitySortMethod);\n    return _.reduce(\n      keys,\n      (acc, oncogenicity) => {\n        const datum = oncogenicities[oncogenicity];\n        acc.push({\n          oncogenicity,\n          counts: datum.length,\n        });\n        return acc;\n      },\n      [] as Oncogenicity[]\n    );\n  }\n\n  @computed\n  get annotationData() {\n    switch (this.annotationType) {\n      case AnnotationType.GENOMIC_CHANGE:\n        return this.annotationResultByGenomicChange;\n        break;\n      case AnnotationType.HGVSG:\n        return this.annotationResultByHgvsg;\n        break;\n      case AnnotationType.PROTEIN_CHANGE:\n        return this.annotationResult;\n        break;\n      default:\n        return this.defaultAnnotationResult;\n        break;\n    }\n  }\n\n  @computed get cancerTypeFilter() {\n    return this.mutationMapperStore.result\n      ? findCancerTypeFilter(\n          this.mutationMapperStore.result.dataStore.dataFilters\n        )\n      : undefined;\n  }\n\n  @computed get selectedCancerTypes() {\n    if (this.cancerTypeFilter) {\n      return this.cancerTypeFilter.values;\n    } else if (this.selectedPositions.length > 0) {\n      return this.barChartData\n        .filter(\n          data =>\n            data.alterations.filter(alteration =>\n              this.selectedPositions.includes(alteration.proteinStartPosition)\n            ).length > 0\n        )\n        .map(data => data.x);\n    }\n    return [];\n  }\n\n  @computed\n  public get oncogenicityFilter() {\n    return this.mutationMapperStore.result\n      ? findOncogenicityFilter(\n          this.mutationMapperStore.result.dataStore.dataFilters\n        )\n      : undefined;\n  }\n\n  @computed\n  public get oncogenicityFilters() {\n    return this.oncogenicityFilter ? this.oncogenicityFilter.values : [];\n  }\n\n  @computed get positionFilter() {\n    return this.mutationMapperStore.result\n      ? findPositionFilter(\n          this.mutationMapperStore.result.dataStore.selectionFilters\n        )\n      : undefined;\n  }\n\n  @computed get selectedPositions() {\n    return this.positionFilter ? this.positionFilter.values : [];\n  }\n\n  // this is for easier access of the hugoSymbol from the gene call\n  @computed\n  get hugoSymbol() {\n    if (\n      this.annotationType === AnnotationType.GENE ||\n      this.annotationType === AnnotationType.PROTEIN_CHANGE\n    ) {\n      return this.gene.result.hugoSymbol;\n    } else {\n      return this.annotationData.result.query.hugoSymbol;\n    }\n  }\n\n  // need to pass all observables from @computed, so they can be monitored by mobx\n  computeAlterationName(annotationType: AnnotationType, alteration: any, alterationQuery: string, annotationData: any, showDiff: boolean) {\n    if (annotationType === AnnotationType.PROTEIN_CHANGE) {\n      return getAlterationName(\n        alteration.result === undefined\n          ? alterationQuery\n          : {\n            alteration: alteration.result.alteration,\n            name: alteration.result.name,\n          },\n        showDiff\n      );\n    } else {\n      return annotationData.result.query.alteration || '';\n    }\n  }\n\n  @computed\n  get alterationName() {\n    return this.computeAlterationName(\n      this.annotationType, this.alteration, this.alterationQuery, this.annotationData, false);\n  }\n\n  @computed\n  get alterationNameWithDiff() {\n    return this.computeAlterationName(\n      this.annotationType, this.alteration, this.alterationQuery, this.annotationData, true);\n  }\n\n  @computed\n  get oncogenicBiologicalVariants() {\n    return this.biologicalAlterations.result.filter(variant =>\n      isOncogenic(variant.oncogenic)\n    );\n  }\n\n  @computed\n  get cancerTypeName() {\n    if (this.tumorTypeQuery) {\n      if (this.tumorTypeQuery.toUpperCase() === this.tumorTypeQuery) {\n        // we should use the cancer type name if the query is the OncoTree code.\n        const matchedCancerType = this.allCancerTypes.result.filter(\n          ct => ct.code === this.tumorTypeQuery\n        );\n        if (matchedCancerType.length === 1) {\n          return getCancerTypeNameFromOncoTreeType(matchedCancerType[0]);\n        }\n      }\n      return this.tumorTypeQuery;\n    }\n    return '';\n  }\n\n  @computed\n  get barChartData() {\n    const groupedCanerTypeCounts = _.groupBy(\n      this.mutationMapperDataPortal.result,\n      'cancerType'\n    );\n    const cancerGroups = _.keyBy(\n      this.portalAlterationSampleCount.result.sort((a, b) =>\n        a.count > b.count ? -1 : 1\n      ),\n      'cancerType'\n    );\n    return _.reduce(\n      groupedCanerTypeCounts,\n      (acc, next: PortalAlteration[], cancerType) => {\n        const numUniqSampleCountsInCancerType = _.uniq(\n          next.map(item => item.sampleId)\n        ).length;\n        if (cancerGroups[cancerType] && cancerGroups[cancerType].count > 50) {\n          acc.push({\n            x: cancerType,\n            y:\n              (100 * numUniqSampleCountsInCancerType) /\n              cancerGroups[cancerType].count,\n            alterations: next,\n            overlay: '',\n          } as BarChartDatum);\n        }\n        return acc;\n      },\n      [] as BarChartDatum[]\n    )\n      .sort((a, b) => (a.y > b.y ? -1 : 1))\n      .splice(0, 15);\n  }\n\n  @computed\n  get uniqOncogenicity() {\n    return this.calculateOncogenicities(this.biologicalAlterations.result);\n  }\n\n  @computed\n  get isFiltered() {\n    return (\n      this.oncogenicityFilters.length > 0 ||\n      this.selectedCancerTypes.length > 0 ||\n      this.selectedPositions.length > 0\n    );\n  }\n\n  @computed\n  get filteredBarChartData() {\n    return this.selectedCancerTypes.length === 0\n      ? this.barChartData\n      : this.barChartData.filter(data =>\n          this.selectedCancerTypes.includes(data.x)\n        );\n  }\n\n  @computed\n  get filteredAlterationsByBarChart() {\n    return _.uniq(\n      _.flatten(\n        this.filteredBarChartData.map(data =>\n          data.alterations.map(alteration => alteration.proteinChange)\n        )\n      )\n    );\n  }\n\n  @computed\n  get filteredPositionsByBarChart() {\n    return _.uniq(\n      _.flatten(\n        this.filteredBarChartData.map(data =>\n          data.alterations.map(alteration => alteration.proteinStartPosition)\n        )\n      )\n    );\n  }\n\n  @computed\n  get filteredClinicalAlterations() {\n    if (this.isFiltered) {\n      return this.clinicalAlterations.result.filter(alteration => {\n        let isMatch = true;\n        if (\n          this.oncogenicityFilters.length > 0 &&\n          !this.oncogenicityFilters.includes(\n            shortenOncogenicity(alteration.oncogenic)\n          )\n        ) {\n          isMatch = false;\n        }\n        if (\n          this.selectedCancerTypes.length > 0 &&\n          (_.intersection(\n            this.selectedCancerTypes,\n            alteration.cancerTypes.map(cancerType => cancerType.mainType)\n          ).length === 0 ||\n            !this.filteredAlterationsByBarChart.includes(\n              alteration.variant.alteration\n            ))\n        ) {\n          isMatch = false;\n        }\n        if (\n          this.selectedPositions.length > 0 &&\n          !this.selectedPositions.includes(alteration.variant.proteinStart)\n        ) {\n          isMatch = false;\n        }\n        return isMatch;\n      });\n    } else {\n      return this.clinicalAlterations.result;\n    }\n  }\n\n  @computed\n  get filteredBiologicalAlterations() {\n    if (this.isFiltered) {\n      return this.biologicalAlterations.result.filter(alteration => {\n        let isMatch = true;\n        if (\n          this.oncogenicityFilters.length > 0 &&\n          !this.oncogenicityFilters.includes(\n            shortenOncogenicity(alteration.oncogenic)\n          )\n        ) {\n          isMatch = false;\n        }\n        if (\n          this.selectedCancerTypes.length > 0 &&\n          !this.filteredAlterationsByBarChart.includes(\n            alteration.variant.alteration\n          )\n        ) {\n          isMatch = false;\n        }\n        if (\n          this.selectedPositions.length > 0 &&\n          !this.selectedPositions.includes(alteration.variant.proteinStart)\n        ) {\n          isMatch = false;\n        }\n        return isMatch;\n      });\n    } else {\n      return this.biologicalAlterations.result;\n    }\n  }\n\n  destroy() {\n    for (const reaction of this.reactions) {\n      reaction();\n    }\n  }\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { computed } from 'mobx';\nimport { Popover } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport { observer } from 'mobx-react';\n\nexport type BarChartToolTipProps = {\n  mousePosition: { x: number; y: number };\n  totalBars: number;\n  currentBarIndex: number;\n  content: string;\n  windowWidth: number;\n};\n\nexport const VERTICAL_OFFSET = 17;\nexport const HORIZONTAL_OFFSET = 8;\n\nconst WIDTH = 150;\n\n@observer\nexport default class BarChartToolTip extends React.Component<\n  BarChartToolTipProps,\n  {}\n> {\n  /**\n   * When the active bar is past the middle of the plot, render on the left side of the bar\n   */\n  @computed\n  get placement(): 'left' | 'right' {\n    return this.props.totalBars < this.props.currentBarIndex * 2\n      ? 'left'\n      : 'right';\n  }\n\n  @computed\n  get positionLeft(): number {\n    if (this.placement === 'left') {\n      return this.props.mousePosition.x - (HORIZONTAL_OFFSET + WIDTH);\n    } else {\n      return this.props.mousePosition.x + HORIZONTAL_OFFSET;\n    }\n  }\n\n  @computed\n  get transform(): string | undefined {\n    return this.placement === 'left' ? 'translate(-100%,0%)' : undefined;\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    return <div></div>;\n  }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport {\n  VictoryChart,\n  VictoryBar,\n  VictoryAxis,\n  VictorySelectionContainer,\n} from 'victory';\nimport WindowStore from 'app/store/WindowStore';\nimport { observable, computed } from 'mobx';\nimport autobind from 'autobind-decorator';\nimport ReactDOM from 'react-dom';\nimport BarChartToolTip from 'app/components/barChart/BarChartToolTip';\nimport { COLOR_BLUE, COLOR_GREY } from 'app/config/theme';\nimport {\n  getTextHeight,\n  getTextWidth,\n  getTextDiagonal,\n} from 'cbioportal-frontend-commons';\nimport _ from 'lodash';\nimport { PortalAlteration } from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport { FONT_FAMILY } from 'app/config/constants';\n\nexport type BarChartDatum = {\n  x: string;\n  y: number;\n  alterations: PortalAlteration[];\n  overlay: string;\n};\n\nexport interface IBarChartProps {\n  data: BarChartDatum[];\n  width?: number;\n  height?: number;\n  filters: string[];\n  windowStore: WindowStore;\n  onUserSelection?: (filters: string[]) => void;\n}\n\n// const VICTORY_THEME = generateTheme();\nconst TILT_ANGLE = 40;\nconst FONT_SIZE = 12;\n\n@observer\nexport default class BarChart extends React.Component<IBarChartProps, {}> {\n  @observable.ref\n  private mousePosition = { x: 0, y: 0 };\n\n  @observable\n  private currentBarIndex = -1;\n\n  @observable\n  private toolTipModel: string | null = null;\n\n  public static defaultProps = {\n    filters: [],\n    height: 300,\n  };\n\n  /*\n   * Supplies the BarPlot with the event handlers needed to record when the mouse enters\n   * or leaves a bar on the plot.\n   */\n  @autobind\n  barPlotEvents() {\n    return [\n      {\n        target: 'data',\n        eventHandlers: {\n          onMouseEnter() {\n            return [\n              {\n                target: 'data',\n                mutation(event: any) {\n                  this.currentBarIndex = event.datum.eventKey;\n                  this.toolTipModel = this.props.data[this.currentBarIndex].x;\n                },\n              },\n            ];\n          },\n          onMouseLeave() {\n            return [\n              {\n                target: 'data',\n                mutation() {\n                  this.toolTipModel = null;\n                },\n              },\n            ];\n          },\n        },\n      },\n    ];\n  }\n\n  @autobind\n  private onMouseMove(event: React.MouseEvent<any>): void {\n    this.mousePosition = { x: event.pageX, y: event.pageY };\n  }\n\n  @computed\n  get bottomPadding(): number {\n    const MIN_PADDING = 10; // used when tickFormat is empty\n    const padding =\n      _.max(\n        this.props.data.map(datum => {\n          const content = datum.x;\n          const fontFamily = FONT_FAMILY;\n          const fontSize = `${FONT_SIZE}px`;\n          const textHeight = getTextHeight(content, fontFamily, fontSize);\n          const textWidth = getTextWidth(content, fontFamily, fontSize);\n          if (TILT_ANGLE % 180 === 0) {\n            return MIN_PADDING;\n          } else if (TILT_ANGLE % 90 === 0) {\n            return textWidth;\n          } else {\n            const textDiagonal = getTextDiagonal(textHeight, textWidth);\n            return 10 + textDiagonal * Math.cos((Math.PI * TILT_ANGLE) / 180);\n          }\n        })\n      ) || MIN_PADDING;\n    return padding;\n  }\n\n  @computed\n  get rightPadding(): number {\n    const MIN_PADDING = 10; // used when tickFormat is empty\n    const MAX_PADDING = 90;\n    const lastThreeElements = _.takeRight(this.props.data, 3);\n    const padding =\n      _.max(\n        lastThreeElements.map(datum => {\n          const content = datum.x;\n          const fontFamily = FONT_FAMILY;\n          const fontSize = `${FONT_SIZE}px`;\n          const textWidth = getTextWidth(content, fontFamily, fontSize);\n          return (textWidth / 3) * 2;\n        })\n      ) || MIN_PADDING;\n    return padding < MAX_PADDING ? padding : MAX_PADDING;\n  }\n\n  @computed\n  get domainPadding(): number {\n    const MIN_PADDING = 20;\n    const MAX_PADDING = 40;\n    return this.props.data.length < 6 ? MAX_PADDING : MIN_PADDING;\n  }\n\n  private isDataBinSelected(dataBin: BarChartDatum, filters: string[]) {\n    return filters.find(filter => dataBin.x === filter);\n  }\n\n  public render() {\n    return (\n      <div onMouseMove={this.onMouseMove} style={{ width: '100%' }}>\n        {this.props.data.length > 0 && (\n          <VictoryChart\n            containerComponent={\n              <VictorySelectionContainer\n                selectionDimension=\"x\"\n                onSelection={(points: any, bounds: any, props: any) => {\n                  if (this.props.onUserSelection) {\n                    const filters = _.uniq(\n                      _.flatten(\n                        points.map((point: any) =>\n                          point.data.map((dataPoint: any) => dataPoint.xName)\n                        )\n                      )\n                    );\n                    // @ts-ignore\n                    this.props.onUserSelection(filters);\n                  }\n                }}\n              />\n            }\n            domainPadding={{\n              x: [this.domainPadding, this.domainPadding],\n              y: [20, 20],\n            }}\n            style={{\n              parent: {\n                width: '100%',\n                height: this.props.height,\n              },\n            }}\n            padding={{\n              left: 50,\n              right: this.rightPadding,\n              top: 10,\n              bottom: this.bottomPadding,\n            }}\n          >\n            <VictoryAxis\n              style={{\n                tickLabels: {\n                  angle: TILT_ANGLE,\n                  verticalAnchor: 'middle',\n                  textAnchor: 'start',\n                  fontFamily: FONT_FAMILY,\n                  fontSize: FONT_SIZE,\n                },\n                ticks: {\n                  fill: 'transparent',\n                  size: 4,\n                  stroke: 'black',\n                  strokeWidth: 1,\n                },\n              }}\n            />\n            <VictoryAxis\n              dependentAxis={true}\n              tickFormat={(t: number) =>\n                Number.isInteger(t) ? t.toFixed(1) : t > 2 ? '' : t.toFixed(2)\n              }\n              label=\"% altered\"\n              style={{\n                tickLabels: {\n                  textAnchor: 'end',\n                  fontFamily: FONT_FAMILY,\n                  fontSize: FONT_SIZE,\n                  padding: 5,\n                },\n                axisLabel: {\n                  padding: 40,\n                  fontFamily: FONT_FAMILY,\n                },\n                ticks: {\n                  fill: 'transparent',\n                  size: 4,\n                  stroke: 'black',\n                  strokeWidth: 1,\n                },\n              }}\n            />\n            <VictoryBar\n              barRatio={1}\n              style={{\n                data: {\n                  fill: (d: BarChartDatum) =>\n                    this.isDataBinSelected(d, this.props.filters) ||\n                    this.props.filters.length === 0\n                      ? COLOR_BLUE\n                      : COLOR_GREY,\n                },\n              }}\n              data={this.props.data}\n              // events={this.barPlotEvents}\n            />\n          </VictoryChart>\n        )}\n        {ReactDOM.createPortal(\n          <BarChartToolTip\n            mousePosition={this.mousePosition}\n            windowWidth={this.props.windowStore.size.width}\n            content={this.toolTipModel ? this.toolTipModel : ''}\n            totalBars={this.props.data.length}\n            currentBarIndex={this.currentBarIndex}\n          />,\n          document.body\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { MSK_IMPACT_TM } from 'app/config/constants';\n\nexport const MskimpactLink: React.FunctionComponent<{}> = () => {\n  return (\n    <>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"http://www.cbioportal.org/study?id=msk_impact_2017#summary\"\n      >\n        {MSK_IMPACT_TM} Clinical Sequencing Cohort\n      </a>{' '}\n      (\n      <a\n        href=\"https://pubmed.ncbi.nlm.nih.gov/28481359\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Zehir et al., Nat Med 2017\n      </a>\n      )\n    </>\n  );\n};\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { EnsemblGene, Gene } from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport _ from 'lodash';\nimport { Linkout } from 'app/shared/links/Linkout';\nimport styles from 'app/pages/genePage/GenePage.module.scss';\nimport { REFERENCE_GENOME } from 'app/config/constants';\n\nconst EnsemblIdLinkout: React.FunctionComponent<{\n  ensemblId: string;\n  referenceGenome: REFERENCE_GENOME;\n}> = props => {\n  return (\n    <Linkout\n      className={styles.lowKeyLinkout}\n      link={`https://${\n        props.referenceGenome === REFERENCE_GENOME.GRCh37 ? 'grch37' : 'www'\n      }.ensembl.org/id/${props.ensemblId}`}\n    >\n      {props.children ? props.children : props.ensemblId}\n    </Linkout>\n  );\n};\nconst getEnsemblText = (grch37: string, grch38: string) => {\n  if (grch37 === grch38) {\n    return (\n      <span>\n        {grch37} (\n        <EnsemblIdLinkout\n          ensemblId={grch37}\n          referenceGenome={REFERENCE_GENOME.GRCh37}\n        >\n          {REFERENCE_GENOME.GRCh37}\n        </EnsemblIdLinkout>\n        /\n        <EnsemblIdLinkout\n          ensemblId={grch38}\n          referenceGenome={REFERENCE_GENOME.GRCh38}\n        >\n          {REFERENCE_GENOME.GRCh38}\n        </EnsemblIdLinkout>\n        )\n      </span>\n    );\n  } else {\n    return (\n      <div>\n        {grch37 && (\n          <div>\n            <EnsemblIdLinkout\n              ensemblId={grch37}\n              referenceGenome={REFERENCE_GENOME.GRCh37}\n            />{' '}\n            ({REFERENCE_GENOME.GRCh37})\n          </div>\n        )}\n        {grch38 && (\n          <div>\n            <EnsemblIdLinkout\n              ensemblId={grch38}\n              referenceGenome={REFERENCE_GENOME.GRCh38}\n            />{' '}\n            ({REFERENCE_GENOME.GRCh38})\n          </div>\n        )}\n      </div>\n    );\n  }\n};\nconst RefSeqLinkout: React.FunctionComponent<{\n  refSeq: string;\n  referenceGenome: REFERENCE_GENOME;\n}> = props => {\n  return (\n    <Linkout\n      className={styles.lowKeyLinkout}\n      link={`https://www.ncbi.nlm.nih.gov/nuccore/${props.refSeq}`}\n    >\n      {props.children ? props.children : props.refSeq}\n    </Linkout>\n  );\n};\nconst getRefSeqText = (grch37: string, grch38: string) => {\n  if (grch37 === grch38) {\n    return (\n      <span>\n        {grch37} (\n        <RefSeqLinkout\n          refSeq={grch37}\n          referenceGenome={REFERENCE_GENOME.GRCh37}\n        >\n          {REFERENCE_GENOME.GRCh37}\n        </RefSeqLinkout>\n        /\n        <RefSeqLinkout\n          refSeq={grch38}\n          referenceGenome={REFERENCE_GENOME.GRCh38}\n        >\n          {REFERENCE_GENOME.GRCh38}\n        </RefSeqLinkout>\n        )\n      </span>\n    );\n  } else {\n    return (\n      <div>\n        {grch37 && (\n          <div>\n            <RefSeqLinkout\n              refSeq={grch37}\n              referenceGenome={REFERENCE_GENOME.GRCh37}\n            />{' '}\n            ({REFERENCE_GENOME.GRCh37})\n          </div>\n        )}\n        {grch38 && (\n          <div>\n            <RefSeqLinkout\n              refSeq={grch38}\n              referenceGenome={REFERENCE_GENOME.GRCh38}\n            />{' '}\n            ({REFERENCE_GENOME.GRCh38})\n          </div>\n        )}\n      </div>\n    );\n  }\n};\n\nconst GeneAdditionalInfoTable: React.FunctionComponent<{\n  gene: Gene;\n  grch37ensemblGene?: EnsemblGene;\n  grch38ensemblGene?: EnsemblGene;\n}> = props => {\n  const content = [];\n  if (props.gene.entrezGeneId > 0) {\n    content.push([\n      'NCBI Gene',\n      <Linkout\n        className={styles.lowKeyLinkout}\n        link={`https://www.ncbi.nlm.nih.gov/gene/${props.gene.entrezGeneId}`}\n      >\n        {props.gene.entrezGeneId}\n      </Linkout>,\n    ]);\n  }\n  if (props.grch37ensemblGene || props.grch38ensemblGene) {\n    content.push([\n      'Ensembl Gene',\n      getEnsemblText(\n        props.grch37ensemblGene?.ensemblGeneId || '',\n        props.grch38ensemblGene?.ensemblGeneId || ''\n      ),\n    ]);\n    content.push([\n      'Location',\n      <div>\n        {props.grch37ensemblGene && (\n          <div>{`Chr${props.grch37ensemblGene?.chromosome}:${props.grch37ensemblGene?.start}-${props.grch37ensemblGene?.end} (GRch37)`}</div>\n        )}\n        {props.grch38ensemblGene && (\n          <div>{`Chr${props.grch38ensemblGene?.chromosome}:${props.grch38ensemblGene?.start}-${props.grch38ensemblGene?.end} (GRch38)`}</div>\n        )}\n      </div>,\n    ]);\n  }\n  if (props.gene.grch37Isoform || props.gene.grch38Isoform) {\n    content.push([\n      'Ensembl Transcript',\n      getEnsemblText(props.gene.grch37Isoform, props.gene.grch38Isoform),\n    ]);\n  }\n  if (props.gene.grch37RefSeq || props.gene.grch38RefSeq) {\n    content.push([\n      'RefSeq',\n      getRefSeqText(props.gene.grch37RefSeq, props.gene.grch38RefSeq),\n    ]);\n  }\n\n  const firstRowTdStyle = { borderTop: 0 };\n  return (\n    <Table size={'sm'}>\n      <tbody>\n        {content.map((item, index) => (\n          <tr key={`key-${item[0]}`}>\n            <td style={index === 0 ? firstRowTdStyle : undefined}>{item[0]}</td>\n            <td style={index === 0 ? firstRowTdStyle : undefined}>{item[1]}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\nexport default GeneAdditionalInfoTable;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { Oncogenicity } from 'app/components/oncokbMutationMapper/OncokbMutationMapper';\n\nconst OncogenicityCheckboxes: React.FunctionComponent<{\n  oncogenicities: Oncogenicity[];\n  selectedOncogenicities: string[] | undefined;\n  onToggle: (oncogenicity: string) => void;\n}> = props => {\n  return (\n    <Form className={'d-flex flex-row-reverse'}>\n      <div className=\"mb-3\">\n        {props.oncogenicities.map((oncogenicity, index) => (\n          <Form.Check\n            inline\n            onChange={() => undefined}\n            onClick={() => props.onToggle(oncogenicity.oncogenicity)}\n            checked={\n              props.selectedOncogenicities === undefined ||\n              props.selectedOncogenicities.includes(oncogenicity.oncogenicity)\n            }\n            label={`${oncogenicity.counts} ${oncogenicity.oncogenicity}`}\n            type={'checkbox'}\n            key={`oncogenicity-${index}`}\n            id={`oncogenicity-${index}`}\n          />\n        ))}\n      </div>\n    </Form>\n  );\n};\nexport default OncogenicityCheckboxes;\n","import { MutationMapperProps, MutationMapper } from 'react-mutation-mapper';\nimport { observer } from 'mobx-react';\nimport React from 'react';\n\nexport type Filter = {\n  name: string;\n  isSelected: boolean;\n};\n\nexport type Oncogenicity = {\n  oncogenicity: string;\n  counts: number;\n};\n\nexport interface IOncokbMutationMapperProps extends MutationMapperProps {\n  oncogenicities: Oncogenicity[];\n}\n\n@observer\nexport class OncokbMutationMapper extends MutationMapper<\n  IOncokbMutationMapperProps\n> {\n  protected get geneSummary(): JSX.Element | null {\n    return null;\n  }\n\n  protected get mutationTable(): JSX.Element | null {\n    return null;\n  }\n}\n","import {\n  ONCOGENICITY_FILTER_ID,\n  ONCOGENICITY_FILTER_TYPE,\n} from 'app/components/oncokbMutationMapper/FilterUtils';\nimport OncogenicityCheckboxes from 'app/components/oncokbMutationMapper/OncogenicityCheckboxes';\nimport { OncokbMutationMapper } from 'app/components/oncokbMutationMapper/OncokbMutationMapper';\nimport { GRID_BREAKPOINTS } from 'app/config/constants';\nimport { AnnotationStore } from 'app/store/AnnotationStore';\nimport WindowStore, { IWindowSize } from 'app/store/WindowStore';\nimport _ from 'lodash';\nimport { computed, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { If } from 'react-if';\nimport { onFilterOptionSelect } from 'react-mutation-mapper';\n\ntype LollipopPlotProps = {\n  store: AnnotationStore;\n  windowStore: WindowStore;\n  showPlotControlsOnHover?: boolean;\n};\n\n@observer\nexport default class OncokbLollipopPlot extends React.Component<\n  LollipopPlotProps,\n  {}\n> {\n  @observable hidePlotControls = false;\n\n  @computed\n  get windowWrapper() {\n    const mapperMaxWidth =\n      this.props.windowStore.size.width > GRID_BREAKPOINTS.XL\n        ? GRID_BREAKPOINTS.XL\n        : this.props.windowStore.size.width;\n\n    const windowSize: IWindowSize = {\n      width: this.props.windowStore.isMDScreen\n        ? mapperMaxWidth - (this.props.store.barChartData.length > 0 ? 300 : 0)\n        : this.props.windowStore.size.width,\n      height: this.props.windowStore.size.height,\n    };\n    return { size: windowSize };\n  }\n\n  render() {\n    return (\n      <div>\n        <OncokbMutationMapper\n          {...this.props.store.mutationMapperProps.result}\n          store={this.props.store.mutationMapperStore.result}\n          oncogenicities={this.props.store.uniqOncogenicity}\n          showTrackSelector={false}\n          showPlotLegendToggle={true}\n          showPlotYMaxSlider={true}\n          showPlotDownloadControls={true}\n          windowWrapper={this.windowWrapper}\n        />\n        <If condition={!this.hidePlotControls}>\n          <OncogenicityCheckboxes\n            oncogenicities={this.props.store.calculateOncogenicities(\n              this.props.store.filteredBiologicalAlterations\n            )}\n            selectedOncogenicities={\n              this.props.store.mutationMapperStore.result?.dataStore.dataFilters.find(\n                f => f.id === ONCOGENICITY_FILTER_ID\n              )?.values as string[]\n            }\n            onToggle={oncogenicity => {\n              this.props.store.mutationMapperStore &&\n              this.props.store.mutationMapperStore.result\n                ? onFilterOptionSelect(\n                    _.xor(\n                      this.props.store.mutationMapperStore.result?.dataStore.dataFilters.find(\n                        f => f.id === ONCOGENICITY_FILTER_ID\n                      )?.values,\n                      [oncogenicity]\n                    ),\n                    false,\n                    this.props.store.mutationMapperStore.result.dataStore,\n                    ONCOGENICITY_FILTER_TYPE,\n                    ONCOGENICITY_FILTER_ID\n                  )\n                : undefined;\n            }}\n          />\n        </If>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport {\n  AnnotationStore,\n  FdaImplication,\n  TherapeuticImplication,\n} from 'app/store/AnnotationStore';\nimport {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n} from 'mobx';\nimport { Else, If, Then } from 'react-if';\nimport { Redirect, RouteComponentProps } from 'react-router';\nimport { Col, Row } from 'react-bootstrap';\nimport {\n  getCancerTypeNameFromOncoTreeType,\n  getCancerTypesName,\n  getPageTitle,\n} from 'app/shared/utils/Utils';\nimport LoadingIndicator, {\n  LoaderSize,\n} from 'app/components/loadingIndicator/LoadingIndicator';\nimport autobind from 'autobind-decorator';\nimport BarChart from 'app/components/barChart/BarChart';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport {\n  ANNOTATION_PAGE_TAB_KEYS,\n  DEFAULT_GENE,\n  LEVEL_CLASSIFICATION,\n  LEVEL_TYPES,\n  ONCOGENIC_MUTATIONS,\n  PAGE_ROUTE,\n  REFERENCE_GENOME,\n} from 'app/config/constants';\nimport { ClinicalVariant } from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport { AlterationPageLink, CitationLink } from 'app/shared/utils/UrlUtils';\nimport AppStore from 'app/store/AppStore';\nimport _ from 'lodash';\nimport { MskimpactLink } from 'app/components/MskimpactLink';\nimport WindowStore from 'app/store/WindowStore';\nimport { DataFilterType, onFilterOptionSelect } from 'react-mutation-mapper';\nimport { CANCER_TYPE_FILTER_ID } from 'app/components/oncokbMutationMapper/FilterUtils';\nimport DocumentTitle from 'react-document-title';\nimport { UnknownGeneAlert } from 'app/shared/alert/UnknownGeneAlert';\nimport WithSeparator from 'react-with-separator';\nimport { FeedbackIcon } from 'app/components/feedback/FeedbackIcon';\nimport { FeedbackType } from 'app/components/feedback/types';\nimport * as QueryString from 'query-string';\nimport { RouterStore } from 'mobx-react-router';\nimport {\n  GenePageHashQueries,\n  GenePageSearchQueries,\n} from 'app/shared/route/types';\nimport AlterationTableTabs from 'app/pages/annotationPage/AlterationTableTabs';\nimport GeneInfo from './GeneInfo';\nimport GeneAdditionalInfoTable from 'app/pages/genePage/GeneAdditionalInfoTable';\nimport OncokbLollipopPlot from './OncokbLollipopPlot';\nimport { getUniqueFdaImplications } from 'app/pages/annotationPage/Utils';\nimport ShowHideText from 'app/shared/texts/ShowHideText';\nimport { AnnotationType } from 'app/pages/annotationPage/AnnotationPage';\n\ninterface MatchParams {\n  hugoSymbol: string;\n}\n\ninterface GenePageProps extends RouteComponentProps<MatchParams> {\n  appStore: AppStore;\n  windowStore: WindowStore;\n  routing: RouterStore;\n}\n\n@inject('appStore', 'windowStore', 'routing')\n@observer\nexport default class GenePage extends React.Component<GenePageProps, any> {\n  @observable hugoSymbolQuery: string;\n  @observable showGeneBackground: boolean;\n  @observable selectedTab: ANNOTATION_PAGE_TAB_KEYS;\n  @observable defaultSelectedTab: ANNOTATION_PAGE_TAB_KEYS;\n\n  private store: AnnotationStore;\n  readonly reactions: IReactionDisposer[] = [];\n\n  getAlterationsByLevelType(\n    alterations: ClinicalVariant[],\n    levelType: LEVEL_TYPES\n  ) {\n    return _.filter(alterations, alt => {\n      return LEVEL_CLASSIFICATION[alt.level] === levelType;\n    });\n  }\n\n  @computed\n  get filteredTxAlterations() {\n    if (this.store.filteredClinicalAlterations.length === 0) {\n      return [];\n    }\n    return this.getAlterationsByLevelType(\n      this.store.filteredClinicalAlterations,\n      LEVEL_TYPES.TX\n    );\n  }\n\n  getClinicalImplications(\n    clinicalVariants: ClinicalVariant[]\n  ): TherapeuticImplication[] {\n    return clinicalVariants.map(variant => {\n      const cancerTypeNames = variant.cancerTypes.map(cancerType =>\n        getCancerTypeNameFromOncoTreeType(cancerType)\n      );\n      const excludedCancerTypeNames = variant.excludedCancerTypes.map(\n        cancerType => getCancerTypeNameFromOncoTreeType(cancerType)\n      );\n      return {\n        level: variant.level,\n        alterations: variant.variant.name,\n        alterationsView: variant.variant.consequence ? (\n          <AlterationPageLink\n            key={variant.variant.name}\n            hugoSymbol={this.store.hugoSymbol}\n            alteration={{\n              alteration: variant.variant.alteration,\n              name: variant.variant.name,\n            }}\n            alterationRefGenomes={\n              variant.variant.referenceGenomes as REFERENCE_GENOME[]\n            }\n          />\n        ) : (\n          <span>{variant.variant.name}</span>\n        ),\n        drugs: variant.drug.join(', '),\n        cancerTypes: getCancerTypesName(\n          cancerTypeNames,\n          excludedCancerTypeNames\n        ),\n        drugDescription: variant.drugDescription,\n        cancerTypesView: (\n          <>\n            <WithSeparator separator={', '}>\n              {cancerTypeNames.map(cancerType =>\n                variant.variant.consequence ? (\n                  <AlterationPageLink\n                    key={`${variant.variant.name}-${cancerType}`}\n                    hugoSymbol={this.store.hugoSymbol}\n                    alteration={{\n                      alteration: variant.variant.alteration,\n                      name: variant.variant.name,\n                    }}\n                    alterationRefGenomes={\n                      variant.variant.referenceGenomes as REFERENCE_GENOME[]\n                    }\n                    cancerType={cancerType}\n                  >\n                    {cancerType}\n                  </AlterationPageLink>\n                ) : (\n                  <span>{cancerType}</span>\n                )\n              )}\n            </WithSeparator>\n            {excludedCancerTypeNames.length > 0 ? (\n              <span> (excluding {excludedCancerTypeNames.join(', ')})</span>\n            ) : (\n              <></>\n            )}\n          </>\n        ),\n        citations: {\n          abstracts: variant.drugAbstracts,\n          pmids: variant.drugPmids,\n        },\n      };\n    });\n  }\n\n  getFdaImplication(clinicalVariants: ClinicalVariant[]): FdaImplication[] {\n    const fdaImplications: FdaImplication[] = [];\n    clinicalVariants.forEach(clinicalVariant => {\n      let variants: ClinicalVariant[] = [clinicalVariant];\n      // we want to link all oncogenic mutations with Oncogenic Mutations clinical variant\n      if (clinicalVariant.variant.name === ONCOGENIC_MUTATIONS) {\n        variants = this.store.oncogenicBiologicalVariants.map(\n          biologicalVariant => ({\n            ...clinicalVariant,\n            variant: biologicalVariant.variant,\n          })\n        );\n      }\n      variants.forEach(variant => {\n        const ctNames = variant.cancerTypes.map(ct =>\n          getCancerTypeNameFromOncoTreeType(ct)\n        );\n        const excludedCtNames = variant.excludedCancerTypes.map(ct =>\n          getCancerTypeNameFromOncoTreeType(ct)\n        );\n        fdaImplications.push({\n          level: variant.fdaLevel,\n          alteration: variant.variant,\n          alterationView: (\n            <AlterationPageLink\n              key={`${variant.variant.name}`}\n              hugoSymbol={this.store.hugoSymbol}\n              alteration={{\n                alteration: variant.variant.alteration,\n                name: variant.variant.name,\n              }}\n              hashQueries={{\n                tab: ANNOTATION_PAGE_TAB_KEYS.FDA,\n              }}\n            >\n              {variant.variant.name}\n            </AlterationPageLink>\n          ),\n          cancerType: getCancerTypesName(ctNames, excludedCtNames),\n          cancerTypeView: (\n            <>\n              <WithSeparator separator={', '}>\n                {ctNames.map(cancerType => (\n                  <AlterationPageLink\n                    key={`${variant.variant.name}-${cancerType}`}\n                    hugoSymbol={this.store.hugoSymbol}\n                    alteration={{\n                      alteration: variant.variant.alteration,\n                      name: variant.variant.name,\n                    }}\n                    alterationRefGenomes={\n                      variant.variant.referenceGenomes as REFERENCE_GENOME[]\n                    }\n                    cancerType={cancerType}\n                  >\n                    {cancerType}\n                  </AlterationPageLink>\n                ))}\n              </WithSeparator>\n              {excludedCtNames.length > 0 ? (\n                <span> (excluding {excludedCtNames.join(', ')})</span>\n              ) : (\n                <></>\n              )}\n            </>\n          ),\n        });\n      });\n    });\n    return getUniqueFdaImplications(fdaImplications);\n  }\n\n  @computed\n  get filteredDxAlterations() {\n    if (this.store.filteredClinicalAlterations.length === 0) {\n      return [];\n    }\n    return this.getAlterationsByLevelType(\n      this.store.filteredClinicalAlterations,\n      LEVEL_TYPES.DX\n    );\n  }\n\n  @computed\n  get filteredPxAlterations() {\n    if (this.store.filteredClinicalAlterations.length === 0) {\n      return [];\n    }\n    return this.getAlterationsByLevelType(\n      this.store.filteredClinicalAlterations,\n      LEVEL_TYPES.PX\n    );\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.hugoSymbolQuery = props.match.params\n      ? props.match.params.hugoSymbol\n      : undefined;\n    this.store = new AnnotationStore({\n      type: AnnotationType.GENE,\n      hugoSymbolQuery: this.hugoSymbolQuery,\n    });\n    const queryStringsHash = QueryString.parse(\n      window.location.hash\n    ) as GenePageHashQueries;\n    if (queryStringsHash.tab) {\n      this.selectedTab = queryStringsHash.tab;\n    }\n\n    this.props.appStore.toFdaRecognizedContent = false;\n    this.reactions.push(\n      reaction(\n        () => this.defaultShowGeneBackground,\n        defaultShowGeneBackground => {\n          if (\n            this.showGeneBackground === undefined &&\n            defaultShowGeneBackground !== undefined\n          ) {\n            this.showGeneBackground = defaultShowGeneBackground;\n          }\n        }\n      ),\n      reaction(\n        () => [props.routing.location.search],\n        ([search]) => {\n          const queryStrings = QueryString.parse(\n            search\n          ) as GenePageSearchQueries;\n          if (queryStrings.refGenome) {\n            this.store.referenceGenomeQuery = queryStrings.refGenome;\n          }\n        },\n        { fireImmediately: true }\n      ),\n      reaction(\n        () => [props.routing.location.hash],\n        ([hash]) => {\n          const queryStrings = QueryString.parse(hash) as GenePageHashQueries;\n          if (queryStrings.tab) {\n            this.defaultSelectedTab = queryStrings.tab;\n            if (queryStrings.tab === ANNOTATION_PAGE_TAB_KEYS.FDA) {\n              this.props.appStore.inFdaRecognizedContent = true;\n            }\n          }\n        },\n        true\n      )\n    );\n  }\n\n  componentDidUpdate(prevProps: any) {\n    if (\n      this.props.match.params.hugoSymbol !== prevProps.match.params.hugoSymbol\n    ) {\n      this.hugoSymbolQuery = this.props.match.params.hugoSymbol;\n      this.store.hugoSymbolQuery = this.hugoSymbolQuery;\n    }\n  }\n\n  @autobind\n  @action\n  toggleGeneBackground() {\n    this.showGeneBackground = !this.showGeneBackground;\n  }\n\n  @autobind\n  @action\n  onChangeTab(\n    selectedTab: ANNOTATION_PAGE_TAB_KEYS,\n    newTabKey: ANNOTATION_PAGE_TAB_KEYS\n  ) {\n    if (newTabKey === ANNOTATION_PAGE_TAB_KEYS.FDA) {\n      this.props.appStore.inFdaRecognizedContent = true;\n    }\n    if (\n      selectedTab === ANNOTATION_PAGE_TAB_KEYS.FDA &&\n      newTabKey !== ANNOTATION_PAGE_TAB_KEYS.FDA\n    ) {\n      this.props.appStore.showFdaModal = true;\n    } else {\n      const newHash: GenePageHashQueries = { tab: newTabKey };\n      window.location.hash = QueryString.stringify(newHash);\n    }\n  }\n\n  @computed\n  get pageShouldBeRendered() {\n    return (\n      this.store.geneNumber.isComplete &&\n      this.store.gene.isComplete &&\n      this.store.clinicalAlterations.isComplete &&\n      this.store.biologicalAlterations.isComplete\n    );\n  }\n\n  @computed\n  get genePanelClass() {\n    if (this.store.barChartData.length > 0) {\n      return {\n        xl: 8,\n        lg: 8,\n        xs: 12,\n      };\n    } else {\n      return {\n        xl: 12,\n        lg: 12,\n        xs: 12,\n      };\n    }\n  }\n\n  @computed\n  get defaultShowGeneBackground() {\n    if (this.store.biologicalAlterations.isComplete) {\n      return this.store.biologicalAlterations.result.length === 0;\n    } else {\n      return undefined;\n    }\n  }\n\n  componentWillUnmount(): void {\n    for (const reactionItem of this.reactions) {\n      reactionItem();\n    }\n    this.store.destroy();\n  }\n\n  render() {\n    return (\n      <DocumentTitle title={getPageTitle(`${this.store.hugoSymbol}`)}>\n        <If condition={!!this.hugoSymbolQuery}>\n          <Then>\n            <If condition={this.store.gene.isComplete}>\n              <Then>\n                {this.store.gene.isError ||\n                this.store.gene.result === DEFAULT_GENE ? (\n                  <UnknownGeneAlert />\n                ) : (\n                  <If condition={this.pageShouldBeRendered}>\n                    <Then>\n                      <h2>\n                        {this.store.hugoSymbol}\n                        <span style={{ fontSize: '0.5em' }} className={'ml-2'}>\n                          <FeedbackIcon\n                            feedback={{\n                              type: FeedbackType.ANNOTATION,\n                              annotation: {\n                                gene: this.store.hugoSymbol,\n                              },\n                            }}\n                            appStore={this.props.appStore}\n                          />\n                        </span>\n                      </h2>\n                      <Row>\n                        <Col md={8}>\n                          <div className=\"\">\n                            <GeneInfo\n                              gene={this.store.gene.result}\n                              ensemblGenes={this.store.ensemblGenes.result}\n                              highestSensitiveLevel={\n                                this.store.geneNumber.result\n                                  .highestSensitiveLevel\n                              }\n                              highestResistanceLevel={\n                                this.store.geneNumber.result\n                                  .highestResistanceLevel\n                              }\n                              highestDiagnosticImplicationLevel={\n                                this.store.geneNumber.result\n                                  .highestDiagnosticImplicationLevel\n                              }\n                              highestPrognosticImplicationLevel={\n                                this.store.geneNumber.result\n                                  .highestPrognosticImplicationLevel\n                              }\n                              highestFdaLevel={\n                                this.store.geneNumber.result.highestFdaLevel\n                              }\n                            />\n                            {this.store.geneSummary.result && (\n                              <div className=\"mt-2\">\n                                {this.store.geneSummary.result}\n                              </div>\n                            )}\n                            {this.store.geneBackground.result && (\n                              <ShowHideText\n                                show={this.showGeneBackground}\n                                title={`${this.store.hugoSymbol} background`}\n                                content={\n                                  <CitationLink\n                                    content={this.store.geneBackground.result}\n                                  />\n                                }\n                                onClick={this.toggleGeneBackground}\n                              />\n                            )}\n                          </div>\n                        </Col>\n                        <Col md={4} style={{ fontSize: '0.8rem' }}>\n                          <GeneAdditionalInfoTable\n                            gene={this.store.gene.result}\n                            grch37ensemblGene={_.findLast(\n                              this.store.ensemblGenes.result,\n                              item =>\n                                item.referenceGenome === REFERENCE_GENOME.GRCh37\n                            )}\n                            grch38ensemblGene={_.findLast(\n                              this.store.ensemblGenes.result,\n                              item =>\n                                item.referenceGenome === REFERENCE_GENOME.GRCh38\n                            )}\n                          />\n                        </Col>\n                      </Row>\n                      <If\n                        condition={\n                          this.store.gene.result.entrezGeneId > 0 &&\n                          this.store.mutationMapperDataPortal.result.length > 0\n                        }\n                      >\n                        <Row className={'mt-5'}>\n                          <Col\n                            xl={this.genePanelClass.xl}\n                            lg={this.genePanelClass.lg}\n                            xs={this.genePanelClass.xs}\n                          >\n                            <h6>\n                              Annotated Mutations in <MskimpactLink />\n                            </h6>\n                            <OncokbLollipopPlot\n                              store={this.store}\n                              windowStore={this.props.windowStore}\n                              showPlotControlsOnHover={true}\n                            />\n                          </Col>\n                          {this.store.barChartData.length > 0 ? (\n                            <Col\n                              xl={12 - this.genePanelClass.xl}\n                              lg={12 - this.genePanelClass.lg}\n                              xs={12 - this.genePanelClass.xs}\n                              className={\n                                'd-flex flex-column align-items-center'\n                              }\n                            >\n                              <h6>\n                                Cancer Types with {this.store.hugoSymbol}{' '}\n                                Mutations\n                                <DefaultTooltip\n                                  overlay={() => (\n                                    <div style={{ maxWidth: 300 }}>\n                                      Currently, the mutation frequency does not\n                                      take into account copy number changes,\n                                      chromosomal translocations or cancer types\n                                      with fewer than 50 samples in{' '}\n                                      <MskimpactLink />\n                                    </div>\n                                  )}\n                                >\n                                  <i className=\"fa fa-question-circle-o ml-2\" />\n                                </DefaultTooltip>\n                              </h6>\n                              <BarChart\n                                data={this.store.barChartData}\n                                height={300}\n                                filters={this.store.selectedCancerTypes}\n                                windowStore={this.props.windowStore}\n                                onUserSelection={selectedCancerTypes =>\n                                  this.store.mutationMapperStore &&\n                                  this.store.mutationMapperStore.result\n                                    ? onFilterOptionSelect(\n                                        selectedCancerTypes,\n                                        false,\n                                        this.store.mutationMapperStore.result\n                                          .dataStore,\n                                        DataFilterType.CANCER_TYPE,\n                                        CANCER_TYPE_FILTER_ID\n                                      )\n                                    : undefined\n                                }\n                              />\n                            </Col>\n                          ) : null}\n                        </Row>\n                      </If>\n                      <Row className={'mt-2'}>\n                        <Col>\n                          <AlterationTableTabs\n                            selectedTab={this.defaultSelectedTab}\n                            hugoSymbol={this.store.hugoSymbol}\n                            biological={\n                              this.store.filteredBiologicalAlterations\n                            }\n                            tx={this.getClinicalImplications(\n                              this.filteredTxAlterations\n                            )}\n                            dx={this.getClinicalImplications(\n                              this.filteredDxAlterations\n                            )}\n                            px={this.getClinicalImplications(\n                              this.filteredPxAlterations\n                            )}\n                            fda={this.getFdaImplication(\n                              this.filteredTxAlterations\n                            )}\n                            onChangeTab={this.onChangeTab}\n                          />\n                        </Col>\n                      </Row>\n                    </Then>\n                    <Else>\n                      <LoadingIndicator\n                        size={LoaderSize.LARGE}\n                        center={true}\n                        isLoading={this.store.gene.isPending}\n                      />\n                    </Else>\n                  </If>\n                )}\n              </Then>\n              <Else>\n                <LoadingIndicator\n                  size={LoaderSize.LARGE}\n                  center={true}\n                  isLoading={this.store.gene.isPending}\n                />\n              </Else>\n            </If>\n          </Then>\n          <Else>\n            <Redirect to={PAGE_ROUTE.HOME} />\n          </Else>\n        </If>\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { AnnotationStore } from 'app/store/AnnotationStore';\nimport { action, computed, IReactionDisposer, reaction } from 'mobx';\nimport AppStore from 'app/store/AppStore';\nimport { ANNOTATION_PAGE_TAB_KEYS } from 'app/config/constants';\nimport { decodeSlash, encodeSlash, getPageTitle } from 'app/shared/utils/Utils';\nimport { RouterStore } from 'mobx-react-router';\nimport DocumentTitle from 'react-document-title';\nimport { RouteComponentProps } from 'react-router';\nimport AnnotationPage, {\n  AnnotationType,\n} from 'app/pages/annotationPage/AnnotationPage';\nimport * as QueryString from 'query-string';\nimport {\n  AlterationPageHashQueries,\n  AlterationPageSearchQueries,\n} from 'app/shared/route/types';\nimport autobind from 'autobind-decorator';\nimport WindowStore from 'app/store/WindowStore';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\n\ninterface MatchParams {\n  hugoSymbol: string;\n  alteration: string;\n  tumorType?: string;\n}\n\ninterface AlterationPageProps extends RouteComponentProps<MatchParams> {\n  appStore: AppStore;\n  windowStore: WindowStore;\n  routing: RouterStore;\n  authenticationStore: AuthenticationStore;\n}\n\n@inject('appStore', 'routing', 'windowStore', 'authenticationStore')\n@observer\nexport default class AlterationPage extends React.Component<\n  AlterationPageProps,\n  {}\n> {\n  private store: AnnotationStore;\n\n  readonly reactions: IReactionDisposer[] = [];\n\n  private selectedTab: ANNOTATION_PAGE_TAB_KEYS;\n\n  constructor(props: any) {\n    super(props);\n    const alterationQuery = decodeSlash(props.match.params.alteration);\n    if (props.match.params) {\n      this.store = new AnnotationStore({\n        type: alterationQuery\n          ? AnnotationType.PROTEIN_CHANGE\n          : AnnotationType.GENE,\n        hugoSymbolQuery: props.match.params.hugoSymbol,\n        alterationQuery,\n        tumorTypeQuery: props.match.params.tumorType\n          ? decodeSlash(props.match.params.tumorType)\n          : props.match.params.tumorType,\n      });\n    }\n    this.props.appStore.toFdaRecognizedContent = false;\n\n    this.reactions.push(\n      reaction(\n        () => this.store.tumorTypeQuery,\n        newTumorType => {\n          let tumorTypeSection = encodeSlash(this.store.tumorTypeQuery);\n          tumorTypeSection = tumorTypeSection ? `/${tumorTypeSection}` : '';\n          this.props.routing.history.push({\n            pathname: `/gene/${this.store.hugoSymbolQuery}/${this.store.alterationQuery}${tumorTypeSection}`,\n            search: this.props.routing.location.search,\n          });\n        }\n      ),\n      reaction(\n        () => [props.routing.location.search],\n        ([search]) => {\n          const queryStrings = QueryString.parse(\n            search\n          ) as AlterationPageSearchQueries;\n          if (queryStrings.refGenome) {\n            this.store.referenceGenomeQuery = queryStrings.refGenome;\n          }\n        },\n        { fireImmediately: true }\n      ),\n      reaction(\n        () => [props.routing.location.hash],\n        ([hash]) => {\n          const queryStrings = QueryString.parse(\n            hash\n          ) as AlterationPageHashQueries;\n          if (queryStrings.tab) {\n            this.selectedTab = queryStrings.tab;\n            if (queryStrings.tab === ANNOTATION_PAGE_TAB_KEYS.FDA) {\n              this.props.appStore.inFdaRecognizedContent = true;\n            }\n          }\n        },\n        true\n      )\n    );\n  }\n\n  @action\n  updateQuery(prevProps: AlterationPageProps) {\n    if (\n      this.props.match.params.hugoSymbol !== prevProps.match.params.hugoSymbol\n    ) {\n      this.store.hugoSymbolQuery = this.props.match.params.hugoSymbol;\n    }\n    if (\n      this.props.match.params.alteration !== prevProps.match.params.alteration\n    ) {\n      this.store.alterationQuery = this.props.match.params.alteration;\n    }\n    // When a cancer type changed from the URL, we need to propagate that to the store\n    // but if the cancer type is unset, we need to clear the query in the store\n    if (\n      this.props.match.params.tumorType !== prevProps.match.params.tumorType\n    ) {\n      this.store.tumorTypeQuery = this.props.match.params.tumorType\n        ? decodeSlash(this.props.match.params.tumorType)!\n        : '';\n    }\n  }\n\n  componentDidUpdate(prevProps: AlterationPageProps) {\n    this.updateQuery(prevProps);\n  }\n\n  @computed\n  get documentTitle() {\n    const content = [];\n    if (this.store.hugoSymbol) {\n      content.push(this.store.hugoSymbol);\n    }\n    if (this.store.alterationQuery) {\n      content.push(this.store.alterationQuery);\n    }\n    if (this.store.tumorTypeQuery) {\n      content.push(`in ${this.store.cancerTypeName}`);\n    }\n    return getPageTitle(content.join(' '));\n  }\n\n  @autobind\n  onChangeTab(\n    selectedTabKey: ANNOTATION_PAGE_TAB_KEYS,\n    newTabKey: ANNOTATION_PAGE_TAB_KEYS\n  ) {\n    if (newTabKey === ANNOTATION_PAGE_TAB_KEYS.FDA) {\n      this.props.appStore.inFdaRecognizedContent = true;\n    }\n    if (\n      selectedTabKey === ANNOTATION_PAGE_TAB_KEYS.FDA &&\n      newTabKey !== ANNOTATION_PAGE_TAB_KEYS.FDA\n    ) {\n      this.props.appStore.showFdaModal = true;\n    } else {\n      const newHash: AlterationPageHashQueries = { tab: newTabKey };\n      window.location.hash = QueryString.stringify(newHash);\n    }\n    this.selectedTab = newTabKey;\n  }\n\n  render() {\n    return (\n      <DocumentTitle title={this.documentTitle}>\n        <AnnotationPage\n          store={this.store}\n          appStore={this.props.appStore}\n          routing={this.props.routing}\n          windowStore={this.props.windowStore}\n          authenticationStore={this.props.authenticationStore}\n          annotationType={AnnotationType.PROTEIN_CHANGE}\n          onChangeTumorType={newTumorType =>\n            (this.store.tumorTypeQuery = newTumorType)\n          }\n          defaultSelectedTab={this.selectedTab}\n          onChangeTab={this.onChangeTab}\n        />\n      </DocumentTitle>\n    );\n  }\n}\n","import {\n  ACCOUNT_TITLES,\n  License,\n  LICENSE_TYPES,\n  LicenseType,\n} from 'app/config/constants';\n\nexport function getSectionClassName(theFirst = false) {\n  return `justify-content-center ${theFirst ? 'pb-3' : 'border-top py-3'}`;\n}\n\nexport function getAccountInfoTitle(\n  key: ACCOUNT_TITLES,\n  license?: LicenseType\n) {\n  if (key === ACCOUNT_TITLES.EMAIL) {\n    switch (license) {\n      case LicenseType.ACADEMIC:\n        return 'Institution Email (personal emails will not be approved)';\n      case LicenseType.COMMERCIAL:\n      case LicenseType.RESEARCH_IN_COMMERCIAL:\n        return 'Company Email';\n      case LicenseType.HOSPITAL:\n        return 'Hospital Email';\n      default:\n        return 'Email';\n    }\n  } else if (\n    [ACCOUNT_TITLES.COMPANY_SECTION_TITLE, ACCOUNT_TITLES.COMPANY].includes(key)\n  ) {\n    let title: string;\n    switch (license) {\n      case LicenseType.ACADEMIC:\n        title = 'Institution / University';\n        break;\n      case LicenseType.COMMERCIAL:\n      case LicenseType.RESEARCH_IN_COMMERCIAL:\n        title = 'Company';\n        break;\n      case LicenseType.HOSPITAL:\n        title = 'Hospital';\n        break;\n      default:\n        title = 'Company';\n        break;\n    }\n\n    if (key === ACCOUNT_TITLES.COMPANY_SECTION_TITLE) {\n      title = `${title} Information`;\n    }\n    return title;\n  } else {\n    return key;\n  }\n}\n\nexport function getLicenseTitle(key: LicenseType): License | undefined {\n  return LICENSE_TYPES.find(license => license.key === key);\n}\n","import React, { useState } from 'react';\nimport { Button, Dropdown, Row, Form, Col } from 'react-bootstrap';\nimport { getMomentInstance } from 'app/shared/utils/Utils';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport moment from 'moment';\nimport {\n  APP_LOCAL_DATETIME_FORMAT_Z_FORCE,\n  APP_LOCAL_DATE_FORMAT,\n} from 'app/config/constants';\nimport MomentLocaleUtils from 'react-day-picker/moment';\nimport pluralize from 'pluralize';\nimport { DividerWithInfo } from 'app/components/dividerWithInfo/DividerWithInfo';\n\nexport type DateSelectorProps = {\n  currentDate?: string;\n  afterChangeDate: (newDate: string) => void;\n};\n\nenum ExtensionType {\n  FROM_TODAY = 'Today',\n  FROM_EXPIRATION = 'Expiration Day',\n}\n\nexport const DateSelector: React.FunctionComponent<DateSelectorProps> = props => {\n  const [extensionType, setExtensionType] = useState(ExtensionType.FROM_TODAY);\n  const baseDate = props.currentDate || new Date(Date.now()).toISOString();\n\n  let selectedDay: Date;\n\n  function handleDayChange(day: any) {\n    selectedDay = day;\n  }\n\n  function handleSelectedDay() {\n    props.afterChangeDate(\n      moment(selectedDay).format(APP_LOCAL_DATETIME_FORMAT_Z_FORCE)\n    );\n  }\n\n  const extendSchedule: {\n    amount: number;\n    unit: moment.unitOfTime.DurationConstructor;\n    unitText: string;\n  }[] = [\n    {\n      amount: 1,\n      unit: 'w',\n      unitText: 'week',\n    },\n    {\n      amount: 1,\n      unit: 'M',\n      unitText: 'month',\n    },\n    {\n      amount: 6,\n      unit: 'M',\n      unitText: 'month',\n    },\n    {\n      amount: 1,\n      unit: 'y',\n      unitText: 'year',\n    },\n  ];\n\n  return (\n    <div\n      style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n    >\n      <div>\n        <Row>\n          <Col>\n            <span>Extend after{!props.currentDate && ' TODAY'}</span>\n          </Col>\n        </Row>\n        {props.currentDate && (\n          <Form.Group as={Row}>\n            <Col>\n              <Form.Check\n                label={ExtensionType.FROM_TODAY}\n                type=\"radio\"\n                onClick={() => setExtensionType(ExtensionType.FROM_TODAY)}\n                name=\"extension-choice\"\n                id=\"extension-type-by-today\"\n                defaultChecked\n              />\n              {props.currentDate && (\n                <Form.Check\n                  label={ExtensionType.FROM_EXPIRATION}\n                  type=\"radio\"\n                  onClick={() =>\n                    setExtensionType(ExtensionType.FROM_EXPIRATION)\n                  }\n                  name=\"extension-choice\"\n                  id=\"extension-type-by-expiration\"\n                />\n              )}\n            </Col>\n          </Form.Group>\n        )}\n      </div>\n      {extendSchedule.map((val, index) => {\n        return (\n          <Dropdown.Item\n            key={`calender-quick-selection-${index}`}\n            eventKey={`${index}`}\n            style={{ textAlign: 'center' }}\n            onClick={() => {\n              const momentInstance =\n                extensionType === ExtensionType.FROM_TODAY\n                  ? moment()\n                  : getMomentInstance(baseDate);\n              props.afterChangeDate(\n                momentInstance\n                  .add(val.amount, val.unit)\n                  .format(APP_LOCAL_DATETIME_FORMAT_Z_FORCE)\n              );\n            }}\n          >\n            {pluralize(val.unitText, val.amount, true)}\n          </Dropdown.Item>\n        );\n      })}\n      <DividerWithInfo>\n        <b>OR</b>\n      </DividerWithInfo>\n      <div>Choose a date</div>\n      <DayPickerInput\n        onDayChange={handleDayChange}\n        inputProps={{\n          style: {\n            textAlign: 'center',\n            border: 'none',\n          },\n        }}\n        style={{ margin: '0 auto' }}\n        formatDate={MomentLocaleUtils.formatDate}\n        parseDate={MomentLocaleUtils.parseDate}\n        placeholder={\n          props.currentDate &&\n          `Expires on: ${getMomentInstance(props.currentDate).format(\n            APP_LOCAL_DATE_FORMAT\n          )}`\n        }\n      />\n      <Row className={'mt-1'}>\n        <Button\n          size={'sm'}\n          style={{ margin: '0 auto', zIndex: 0 }}\n          onClick={handleSelectedDay}\n        >\n          Set\n        </Button>\n      </Row>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './DividerWithInfo.module.scss';\n\nexport const DividerWithInfo: React.FunctionComponent<{}> = props => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.border} />\n      <span className={styles.content}>{props.children}</span>\n      <div className={styles.border} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { action, computed, observable } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport { defaultSortMethod } from 'app/shared/utils/ReactTableUtils';\nimport client from 'app/shared/api/clientInstance';\nimport { UserDTO } from 'app/shared/api/generated/API';\nimport { match } from 'react-router';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { RouterStore } from 'mobx-react-router';\nimport OncoKBTable, {\n  SearchColumn,\n} from 'app/components/oncokbTable/OncoKBTable';\nimport { getSectionClassName } from 'app/pages/account/AccountUtils';\nimport { notifyError, notifySuccess } from 'app/shared/utils/NotificationUtils';\nimport { filterByKeyword, toAppLocalDateFormat } from 'app/shared/utils/Utils';\nimport _ from 'lodash';\nimport { AUTHORITIES, LicenseType, USER_AUTHORITY } from 'app/config/constants';\nimport styles from './UserDetailsPage.module.scss';\nimport LoadingIndicator, {\n  LoaderSize,\n} from '../../components/loadingIndicator/LoadingIndicator';\nimport { isAuthorized } from 'app/shared/auth/AuthUtils';\nimport { Link } from 'react-router-dom';\nimport { UserStatusModal } from 'app/shared/modal/UserStatusModal';\n\nenum USER_BUTTON_TYPE {\n  COMMERCIAL = 'Commercial Users',\n  VERIFIED = 'Verified Users',\n  ALL = 'All Users',\n}\n\n@inject('routing')\n@observer\nexport default class UserDetailsPage extends React.Component<{\n  routing: RouterStore;\n  match: match;\n}> {\n  @observable users: UserDTO[] = [];\n  @observable loadedUsers = false;\n  @observable showUpdateStatusModal = false;\n  @observable currentSelected: {\n    user: UserDTO | undefined;\n    authority: USER_AUTHORITY | undefined;\n  } = {\n    user: undefined,\n    authority: undefined,\n  };\n  @observable currentSelectedButton = USER_BUTTON_TYPE.VERIFIED;\n  @observable currentSelectedFilter: {\n    emailVerified: boolean | undefined;\n    licenseTypes: string[] | undefined;\n  } = {\n    emailVerified: undefined,\n    licenseTypes: undefined,\n  };\n  userButtons = [\n    USER_BUTTON_TYPE.COMMERCIAL,\n    USER_BUTTON_TYPE.VERIFIED,\n    USER_BUTTON_TYPE.ALL,\n  ];\n\n  constructor(props: Readonly<{ routing: RouterStore; match: match }>) {\n    super(props);\n    this.getUsers();\n  }\n\n  @action\n  async getUsers() {\n    try {\n      this.users = await client.getAllUsersUsingGET({});\n      // Display all commercial users by default\n      this.toggleFilter(USER_BUTTON_TYPE.VERIFIED);\n      this.loadedUsers = true;\n    } catch (e) {\n      notifyError(e, 'Error fetching users');\n    }\n  }\n\n  @action\n  toggleFilter(button: USER_BUTTON_TYPE) {\n    this.currentSelectedButton = button;\n    if (this.currentSelectedButton === USER_BUTTON_TYPE.COMMERCIAL) {\n      this.currentSelectedFilter = {\n        emailVerified: true,\n        licenseTypes: [\n          LicenseType.HOSPITAL,\n          LicenseType.RESEARCH_IN_COMMERCIAL,\n          LicenseType.COMMERCIAL,\n        ],\n      };\n    } else if (this.currentSelectedButton === USER_BUTTON_TYPE.VERIFIED) {\n      this.currentSelectedFilter = {\n        emailVerified: true,\n        licenseTypes: undefined,\n      };\n    } else {\n      this.currentSelectedFilter = {\n        emailVerified: undefined,\n        licenseTypes: undefined,\n      };\n    }\n  }\n\n  @action\n  confirmUpdatingUser(user: UserDTO) {\n    this.showUpdateStatusModal = true;\n    this.currentSelected.user = user;\n  }\n\n  @action\n  cancelUpdateActiveStatus() {\n    this.showUpdateStatusModal = false;\n    this.currentSelected.user = undefined;\n  }\n\n  @action\n  updateActiveStatus(sendEmail = true) {\n    this.showUpdateStatusModal = false;\n    if (this.currentSelected.user === undefined) {\n      notifyError(new Error('No user specified'));\n      return;\n    }\n    const userToUpdate: UserDTO = {\n      ...this.currentSelected.user,\n      activated: !this.currentSelected.user.activated,\n    };\n    this.updateUser(userToUpdate, sendEmail);\n  }\n\n  @action.bound\n  async verifyUserEmail(user: UserDTO) {\n    try {\n      const activated = await client.activateAccountUsingGET({\n        key: user.activationKey,\n        login: user.login,\n      });\n      const updatedUser = {\n        ...user,\n        activated,\n        activationKey: '',\n        emailVerified: true,\n      };\n      const oldUserIndex = this.users.findIndex(u => u.id === user.id);\n      this.users.splice(oldUserIndex, 1, updatedUser);\n      notifySuccess('User email verified');\n    } catch (error) {\n      return notifyError(error);\n    }\n  }\n\n  @action\n  updateUser(updatedUser: UserDTO, sendEmail = false) {\n    client\n      .updateUserUsingPUT({\n        userDto: updatedUser,\n        sendEmail,\n        unlinkUser: false,\n      })\n      .then(() => {\n        notifySuccess('Updated');\n        this.getUsers();\n      })\n      .catch((error: Error) => {\n        notifyError(error, 'Error updating user.');\n      });\n  }\n\n  @computed\n  get currentSelectedUserIsActivated() {\n    return (\n      this.currentSelected &&\n      this.currentSelected.user &&\n      this.currentSelected.user.activated\n    );\n  }\n\n  @computed\n  get filteredUser() {\n    if (\n      this.currentSelectedFilter === undefined ||\n      Object.keys(this.currentSelectedFilter).length === 0\n    ) {\n      return this.users;\n    } else {\n      return this.users.filter((user: UserDTO) => {\n        let userMatched = true;\n        if (this.currentSelectedFilter.emailVerified) {\n          if (!user.emailVerified) {\n            userMatched = false;\n          }\n        }\n        if (userMatched) {\n          if (\n            this.currentSelectedFilter.licenseTypes !== undefined &&\n            !this.currentSelectedFilter.licenseTypes.includes(user.licenseType)\n          ) {\n            userMatched = false;\n          }\n        }\n        return userMatched;\n      });\n    }\n  }\n\n  private getStatus(activated: boolean) {\n    return activated ? 'Activated' : 'Inactivated';\n  }\n\n  private columns: SearchColumn<UserDTO>[] = [\n    {\n      id: 'createdDate',\n      Header: <span className={styles.tableHeader}>Created Date</span>,\n      maxWidth: 100,\n      onFilter: (data: UserDTO, keyword) =>\n        data.createdDate\n          ? filterByKeyword(toAppLocalDateFormat(data.createdDate), keyword)\n          : false,\n      accessor: 'createdDate',\n      Cell(props: { original: UserDTO }): any {\n        return <div>{toAppLocalDateFormat(props.original.createdDate)}</div>;\n      },\n    },\n    {\n      id: 'userName',\n      Header: <span className={styles.tableHeader}>User Name</span>,\n      onFilter: (data: UserDTO, keyword) =>\n        data.firstName + data.lastName\n          ? filterByKeyword(data.firstName + data.lastName, keyword)\n          : false,\n      Cell(props: { original: UserDTO }) {\n        return (\n          <span>{`${props.original.firstName} ${props.original.lastName}`}</span>\n        );\n      },\n    },\n    {\n      id: 'jobTitle',\n      Header: <span className={styles.tableHeader}>Job Title</span>,\n      onFilter: (data: UserDTO, keyword) =>\n        data.jobTitle ? filterByKeyword(data.jobTitle, keyword) : false,\n      accessor: 'jobTitle',\n    },\n    {\n      id: 'companyName',\n      Header: <span className={styles.tableHeader}>Company</span>,\n      onFilter: (data: UserDTO, keyword) =>\n        data.companyName ? filterByKeyword(data.companyName, keyword) : false,\n      accessor: 'companyName',\n    },\n    {\n      id: 'city',\n      Header: <span className={styles.tableHeader}>City</span>,\n      maxWidth: 100,\n      onFilter: (data: UserDTO, keyword) =>\n        data.city ? filterByKeyword(data.city, keyword) : false,\n      accessor: 'city',\n    },\n    {\n      id: 'country',\n      Header: <span className={styles.tableHeader}>Country</span>,\n      maxWidth: 100,\n      onFilter: (data: UserDTO, keyword) =>\n        data.country ? filterByKeyword(data.country, keyword) : false,\n      accessor: 'country',\n    },\n    {\n      id: 'email',\n      Header: <span className={styles.tableHeader}>Email</span>,\n      accessor: 'email',\n      minWidth: 150,\n      defaultSortDesc: false,\n      sortMethod: defaultSortMethod,\n      onFilter: (data: UserDTO, keyword) =>\n        filterByKeyword(data.email, keyword),\n      Cell(props: { original: UserDTO }) {\n        return <span>{props.original.email}</span>;\n      },\n    },\n    {\n      id: 'activated',\n      Header: <span className={styles.tableHeader}>Status</span>,\n      accessor: 'activated',\n      minWidth: 120,\n      defaultSortDesc: false,\n      className: 'justify-content-center',\n      sortMethod: defaultSortMethod,\n      onFilter: (data: UserDTO, keyword) =>\n        filterByKeyword(this.getStatus(data.activated), keyword),\n      Cell: (props: { original: UserDTO }) => {\n        if (props.original.emailVerified) {\n          return (\n            <Button\n              variant={props.original.activated ? 'success' : 'danger'}\n              onClick={() => this.confirmUpdatingUser(props.original)}\n            >\n              {this.getStatus(props.original.activated)}\n            </Button>\n          );\n        } else {\n          return (\n            <>\n              <div>Email hasn&apos;t been verified yet</div>\n              <Button onClick={() => this.verifyUserEmail(props.original)}>\n                Verify\n              </Button>\n            </>\n          );\n        }\n      },\n    },\n    {\n      id: 'authorities',\n      Header: <span>Profiles</span>,\n      accessor: 'authorities',\n      minWidth: 160,\n      defaultSortDesc: false,\n      sortMethod: defaultSortMethod,\n      onFilter: (data: UserDTO, keyword) =>\n        _.some(data.authorities, authority =>\n          filterByKeyword(authority, keyword)\n        ),\n      Cell(props: { original: UserDTO }) {\n        return (\n          <div className={'d-flex flex-column'}>\n            {props.original.authorities.map(authority => (\n              <div>{authority}</div>\n            ))}\n          </div>\n        );\n      },\n    },\n    {\n      id: 'licenseType',\n      Header: <span className={styles.tableHeader}>License Type</span>,\n      onFilter: (data: UserDTO, keyword) =>\n        data.licenseType ? filterByKeyword(data.licenseType, keyword) : false,\n      accessor: 'licenseType',\n    },\n    {\n      id: 'operations',\n      Header: <span className={styles.tableHeader}>Edit</span>,\n      minWidth: 60,\n      sortable: false,\n      className: 'justify-content-center',\n      Cell(props: { original: UserDTO }) {\n        return (\n          <span>\n            {isAuthorized(props.original.authorities, [AUTHORITIES.USER]) && (\n              <Link to={`/users/${props.original.login}`}>\n                <i className=\"fa fa-pencil-square-o\"></i>\n              </Link>\n            )}\n          </span>\n        );\n      },\n    },\n  ];\n\n  render() {\n    return (\n      <>\n        {this.loadedUsers ? (\n          <>\n            <Row className={getSectionClassName(true)}>\n              {this.userButtons.map(button => (\n                <Col xs={4} className={styles.center}>\n                  <Button\n                    active={this.currentSelectedButton === button}\n                    className={styles.filterButton}\n                    onClick={() => this.toggleFilter(button)}\n                  >\n                    {button}\n                  </Button>\n                </Col>\n              ))}\n            </Row>\n            <Row className={getSectionClassName()}>\n              <Col>\n                <OncoKBTable\n                  data={this.filteredUser}\n                  columns={this.columns}\n                  showPagination={true}\n                  minRows={1}\n                  defaultSorted={[\n                    {\n                      id: 'createdDate',\n                      desc: true,\n                    },\n                  ]}\n                />\n              </Col>\n            </Row>\n          </>\n        ) : (\n          <LoadingIndicator\n            size={LoaderSize.LARGE}\n            center={true}\n            isLoading={!this.loadedUsers}\n          />\n        )}\n        <UserStatusModal\n          show={this.showUpdateStatusModal}\n          user={this.currentSelected.user}\n          onCancel={() => this.cancelUpdateActiveStatus()}\n          onConfirm={(sendEmail: boolean) => this.updateActiveStatus(sendEmail)}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { InputGroup, DropdownButton, Container } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport 'react-day-picker/lib/style.css';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport {\n  DateSelector,\n  DateSelectorProps,\n} from 'app/components/dateSelector/DateSelector';\n\ntype CalendarButtonProps = DateSelectorProps & {};\n\nexport const CalendarButton: React.FunctionComponent<CalendarButtonProps> = props => {\n  return (\n    <DefaultTooltip placement={'top'} overlay={'Change token expiration date'}>\n      <DropdownButton\n        as={InputGroup.Append}\n        title={<i className={classnames('fa fa-calendar')}></i>}\n        id=\"time-entend-dropdown\"\n      >\n        <Container>\n          <DateSelector\n            currentDate={props.currentDate}\n            afterChangeDate={props.afterChangeDate}\n          />\n        </Container>\n      </DropdownButton>\n    </DefaultTooltip>\n  );\n};\n","import React, { useState } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { Button, ButtonProps } from 'react-bootstrap';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport classnames from 'classnames';\n\nexport const CopyButton: React.FunctionComponent<\n  {\n    text: string;\n  } & ButtonProps &\n    React.HTMLAttributes<HTMLButtonElement>\n> = props => {\n  const [copied, setCopied] = useState(false);\n\n  function onCopy(event: any) {\n    setCopied(true);\n    if (props.onClick) {\n      props.onClick(event);\n    }\n    setTimeout(() => setCopied(false), 5000);\n  }\n\n  const { text, onClick, ...rest } = props;\n  return (\n    <CopyToClipboard\n      text={text}\n      options={{\n        format: 'text/plain',\n      }}\n    >\n      <DefaultTooltip placement={'top'} overlay={copied ? 'Copied' : 'Copy'}>\n        <Button variant={'primary'} onClick={onCopy} {...rest}>\n          <i className={classnames('fa fa-copy')}></i>\n        </Button>\n      </DefaultTooltip>\n    </CopyToClipboard>\n  );\n};\n","import React from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { Token } from 'app/shared/api/generated/API';\nimport { daysDiff, secDiff } from 'app/shared/utils/Utils';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport pluralize from 'pluralize';\nimport classnames from 'classnames';\nimport { computed } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { CalendarButton } from 'app/components/calendarButton/CalendarButton';\nimport { CopyButton } from 'app/shared/button/CopyButton';\n\ntype TokenInputGroupsProps = {\n  changeTokenExpirationDate: boolean;\n  tokens: Token[];\n  onDeleteToken: (token: Token) => void;\n  extendExpirationDate?: (token: Token, newDate: string) => void;\n};\n\n@observer\nexport default class TokenInputGroups extends React.Component<\n  TokenInputGroupsProps\n> {\n  constructor(props: TokenInputGroupsProps) {\n    super(props);\n  }\n\n  @computed\n  get sortedTokens() {\n    return this.props.tokens.sort((a, b) => {\n      return (\n        new Date(a.expiration).getTime() - new Date(b.expiration).getTime()\n      );\n    });\n  }\n\n  @computed\n  get deleteTokenAllowed() {\n    return this.props.tokens.length >= 2;\n  }\n\n  getDuration(expireInDays: number, expireInHours: number) {\n    return expireInDays > 0\n      ? `${expireInDays} ${pluralize('day', expireInDays)}`\n      : `${expireInHours} ${pluralize('hour', expireInHours)}`;\n  }\n\n  render() {\n    return (\n      <>\n        {this.sortedTokens.map((token: Token, index: number) => {\n          const expirationDay = daysDiff(token.expiration);\n          const expirationHour = secDiff(token.expiration);\n          return (\n            <div key={token.id} className={'mb-2'}>\n              <InputGroup size={'sm'}>\n                <FormControl\n                  value={token.token}\n                  type={'text'}\n                  contentEditable={false}\n                  disabled={true}\n                />\n                <InputGroup.Append>\n                  <InputGroup.Text id=\"btnGroupAddon\">\n                    Expires in {this.getDuration(expirationDay, expirationHour)}\n                  </InputGroup.Text>\n                </InputGroup.Append>\n                {this.props.changeTokenExpirationDate && (\n                  <CalendarButton\n                    currentDate={token.expiration}\n                    afterChangeDate={(newDate: string) => {\n                      if (this.props.extendExpirationDate)\n                        this.props.extendExpirationDate(token, newDate);\n                    }}\n                  />\n                )}\n                <InputGroup.Append>\n                  <CopyButton text={token.token} />\n                </InputGroup.Append>\n                <DefaultTooltip\n                  placement={'top'}\n                  overlay={\n                    this.deleteTokenAllowed\n                      ? 'Delete the token'\n                      : 'You need to have one valid token'\n                  }\n                >\n                  <InputGroup.Append>\n                    <Button\n                      variant={'primary'}\n                      onClick={() => this.props.onDeleteToken(token)}\n                      disabled={!this.deleteTokenAllowed}\n                      style={\n                        !this.deleteTokenAllowed\n                          ? { pointerEvents: 'none' }\n                          : {}\n                      }\n                    >\n                      <i className={classnames('fa fa-trash')}></i>\n                    </Button>\n                  </InputGroup.Append>\n                </DefaultTooltip>\n              </InputGroup>\n            </div>\n          );\n        })}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { action, computed, observable } from 'mobx';\nimport autobind from 'autobind-decorator';\nimport { Redirect } from 'react-router-dom';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport {\n  ACCOUNT_TITLES,\n  H5_FONT_SIZE,\n  LicenseType,\n  PAGE_ROUTE,\n} from 'app/config/constants';\nimport {\n  getAccountInfoTitle,\n  getLicenseTitle,\n  getSectionClassName,\n} from 'app/pages/account/AccountUtils';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport classnames from 'classnames';\nimport { Row, Col } from 'react-bootstrap';\nimport SmallPageContainer from 'app/components/SmallPageContainer';\nimport { Token } from 'app/shared/api/generated/API';\nimport { notifyError, notifySuccess } from 'app/shared/utils/NotificationUtils';\nimport InfoIcon from 'app/shared/icons/InfoIcon';\nimport TokenInputGroups from 'app/components/tokenInputGroups/TokenInputGroups';\nimport client from 'app/shared/api/clientInstance';\n\nexport type IRegisterProps = {\n  authenticationStore: AuthenticationStore;\n};\n\nexport const InfoRow: React.FunctionComponent<{\n  title: JSX.Element | string;\n  content?: JSX.Element | string;\n  direction?: 'vertical' | 'horizontal';\n}> = props => {\n  let titleWidth = 4;\n  let contentWidth = 8;\n  if (props.direction && props.direction === 'vertical') {\n    titleWidth = contentWidth = 12;\n  }\n  return (\n    <Row className={'mb-2'}>\n      <Col sm={titleWidth}>{props.title}</Col>\n      <Col sm={contentWidth}>\n        {props.content}\n        {props.children}\n      </Col>\n    </Row>\n  );\n};\n\n@inject('authenticationStore')\n@observer\nexport class AccountPage extends React.Component<IRegisterProps> {\n  @observable copiedIdToken = false;\n\n  constructor(props: Readonly<IRegisterProps>) {\n    super(props);\n  }\n\n  @computed\n  get account() {\n    return this.props.authenticationStore.account;\n  }\n\n  @action.bound\n  deleteToken(token: Token) {\n    this.props.authenticationStore\n      .deleteToken(token)\n      .then(() => {\n        notifySuccess('Token is deleted');\n      })\n      .catch((error: Error) => {\n        notifyError(error);\n      });\n  }\n\n  @action\n  extendExpirationDate(token: Token, newDate: string) {\n    client\n      .updateTokenUsingPUT({\n        token: {\n          ...token,\n          expiration: newDate,\n        },\n      })\n      .then(\n        () => {\n          notifySuccess('Updated Token');\n        },\n        (error: Error) => {\n          notifyError(error);\n        }\n      );\n  }\n\n  @action.bound\n  addNewToken() {\n    this.props.authenticationStore\n      .generateIdToken()\n      .then(() => {\n        notifySuccess('Token is added');\n      })\n      .catch(error => {\n        notifyError(error);\n      });\n  }\n\n  @computed\n  get generateTokenEnabled() {\n    return this.tokens.length < 2;\n  }\n\n  @computed\n  get tokens() {\n    return this.props.authenticationStore.tokens;\n  }\n\n  @computed\n  get licenseTitle() {\n    if (!this.account) {\n      return '';\n    }\n    const license = getLicenseTitle(this.account.licenseType as LicenseType);\n    if (license) {\n      return license.title;\n    } else {\n      return '';\n    }\n  }\n\n  getContent() {\n    if (this.account === undefined) {\n      return <Redirect to={PAGE_ROUTE.LOGIN} />;\n    }\n    return (\n      <SmallPageContainer size={'lg'}>\n        <Row className={getSectionClassName(true)}>\n          <Col>\n            <h5>Account</h5>\n            <InfoRow\n              title={getAccountInfoTitle(\n                ACCOUNT_TITLES.EMAIL,\n                this.account.licenseType as LicenseType\n              )}\n              content={this.account.email}\n            />\n            <InfoRow\n              title={getAccountInfoTitle(\n                ACCOUNT_TITLES.NAME,\n                this.account.licenseType as LicenseType\n              )}\n              content={`${this.account.firstName} ${this.account.lastName}`}\n            />\n            <InfoRow\n              title={getAccountInfoTitle(\n                ACCOUNT_TITLES.LICENSE_TYPE,\n                this.account.licenseType as LicenseType\n              )}\n              content={this.licenseTitle}\n            />\n          </Col>\n        </Row>\n        <Row className={getSectionClassName()}>\n          <Col>\n            <h5>\n              {getAccountInfoTitle(\n                ACCOUNT_TITLES.COMPANY,\n                this.account.licenseType as LicenseType\n              )}\n            </h5>\n            <InfoRow\n              title={getAccountInfoTitle(\n                ACCOUNT_TITLES.POSITION,\n                this.account.licenseType as LicenseType\n              )}\n              content={this.account.jobTitle}\n            />\n            <InfoRow\n              title={getAccountInfoTitle(\n                ACCOUNT_TITLES.COMPANY,\n                this.account.licenseType as LicenseType\n              )}\n              content={this.account.companyName}\n            />\n            <InfoRow\n              title={getAccountInfoTitle(\n                ACCOUNT_TITLES.CITY,\n                this.account.licenseType as LicenseType\n              )}\n              content={this.account.city}\n            />\n            <InfoRow\n              title={getAccountInfoTitle(\n                ACCOUNT_TITLES.COUNTRY,\n                this.account.licenseType as LicenseType\n              )}\n              content={this.account.country}\n            />\n          </Col>\n        </Row>\n        <Row className={getSectionClassName()}>\n          <Col>\n            <div className={'d-flex align-items-center'}>\n              <span style={{ fontSize: H5_FONT_SIZE }}>API</span>\n              <InfoIcon\n                placement={'top'}\n                overlay={\n                  'You can have one token to be used. Your token will be automatically renewed after reviewing the license and account information.'\n                }\n                className={'ml-2'}\n              />\n            </div>\n            <InfoRow\n              title={\n                <div className={'d-flex align-items-center'}>\n                  <span>\n                    {getAccountInfoTitle(\n                      ACCOUNT_TITLES.API_TOKEN,\n                      this.account.licenseType as LicenseType\n                    )}\n                  </span>\n                  {this.generateTokenEnabled ? (\n                    <DefaultTooltip\n                      placement={'top'}\n                      overlay={'Get a new token.'}\n                    >\n                      <i\n                        className={classnames('ml-2 fa fa-plus')}\n                        onClick={this.addNewToken}\n                      />\n                    </DefaultTooltip>\n                  ) : null}\n                </div>\n              }\n            >\n              <TokenInputGroups\n                changeTokenExpirationDate={false}\n                tokens={this.tokens}\n                onDeleteToken={this.deleteToken}\n              />\n            </InfoRow>\n          </Col>\n        </Row>\n      </SmallPageContainer>\n    );\n  }\n\n  render() {\n    return <>{this.account ? this.getContent() : null}</>;\n  }\n}\n","import { ContactLink } from 'app/shared/links/ContactLink';\nimport React from 'react';\n\nconst MessageToContact: React.FunctionComponent<{\n  emailTitle?: string;\n  className?: string;\n}> = props => {\n  return (\n    <div className={props.className}>\n      Please do not hesitate to{' '}\n      <ContactLink emailSubject={props.emailTitle ? props.emailTitle : ''}>\n        contact us\n      </ContactLink>{' '}\n      with any questions.\n    </div>\n  );\n};\n\nexport default MessageToContact;\n","import React from 'react';\nimport { RouterStore } from 'mobx-react-router';\nimport * as QueryString from 'query-string';\nimport client from 'app/shared/api/clientInstance';\nimport { observable } from 'mobx';\nimport LoadingIndicator from 'app/components/loadingIndicator/LoadingIndicator';\nimport { remoteData } from 'cbioportal-frontend-commons';\nimport { Link } from 'react-router-dom';\nimport { ONCOKB_TM, PAGE_ROUTE } from 'app/config/constants';\nimport { inject, observer } from 'mobx-react';\nimport { Col, Row, Alert } from 'react-bootstrap';\nimport SmallPageContainer from '../SmallPageContainer';\nimport MessageToContact from 'app/shared/texts/MessageToContact';\nimport * as styles from '../../index.module.scss';\n\n@inject('routing')\n@observer\nexport default class ActivateAccount extends React.Component<{\n  routing: RouterStore;\n}> {\n  @observable activateKey: string;\n  @observable login: string;\n\n  constructor(props: Readonly<{ routing: RouterStore }>) {\n    super(props);\n\n    const queryStrings = QueryString.parse(props.routing.location.search);\n    if (queryStrings.key) {\n      this.activateKey = queryStrings.key as string;\n    }\n    if (queryStrings.login) {\n      this.login = queryStrings.login as string;\n    }\n  }\n\n  readonly activateAccount = remoteData<boolean>({\n    invoke: () => {\n      if (this.activateKey && this.login) {\n        return client.activateAccountUsingGET({\n          key: this.activateKey,\n          login: this.login,\n        });\n      } else {\n        return Promise.reject('The key or login is empty');\n      }\n    },\n  });\n\n  getSuccessfulMessage = () => {\n    return (\n      <div>\n        <Alert variant={'info'} className={styles.biggerText}>\n          <p>\n            Thank you for verifying your email address.{' '}\n            {this.activateAccount.result && (\n              <span>\n                You can now <Link to={PAGE_ROUTE.LOGIN}>login</Link> to your{' '}\n                {ONCOKB_TM} account.\n              </span>\n            )}\n          </p>\n\n          {!this.activateAccount.result && (\n            <p>\n              We are reviewing your registration information and will contact\n              you about your account&apos;s approval status within two business\n              days.\n            </p>\n          )}\n          <MessageToContact\n            className={'mb-3'}\n            emailTitle={'Account Activation Question'}\n          />\n          <p>\n            <div>Sincerely,</div>\n            <div>The {ONCOKB_TM} Team</div>\n          </p>\n        </Alert>\n      </div>\n    );\n  };\n\n  getFailureMessage = () => {\n    // the server attaches more information into the error which the type does not allow\n    const error = this.activateAccount.error as any;\n    const defaultInfo = 'Your user account could not be activated.';\n    return (\n      <div>\n        <Alert variant={'warning'} className={styles.biggerText}>\n          {this.activateAccount.error\n            ? error.response &&\n              error.response.body &&\n              error.response.body.detail\n              ? error.response.body.detail\n              : `${defaultInfo} due to ${error.message}`\n            : defaultInfo}\n        </Alert>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <SmallPageContainer>\n        {this.activateAccount.isPending ? (\n          <LoadingIndicator isLoading={true} />\n        ) : null}\n        {this.activateAccount.isComplete ? this.getSuccessfulMessage() : null}\n        {this.activateAccount.isError ? this.getFailureMessage() : null}\n      </SmallPageContainer>\n    );\n  }\n}\n","import React from 'react';\nimport { Alert, Button } from 'react-bootstrap';\nimport SmallPageContainer from '../SmallPageContainer';\nimport { AvField, AvForm } from 'availity-reactstrap-validation';\nimport { action, observable } from 'mobx';\nimport client from 'app/shared/api/clientInstance';\nimport { observer } from 'mobx-react';\nimport { API_CALL_STATUS } from 'app/config/constants';\nimport autobind from 'autobind-decorator';\nimport ReCAPTCHA from 'app/shared/recaptcha/recaptcha';\nimport { setRecaptchaToken } from 'app/indexUtils';\n\n@observer\nexport class PasswordResetInit extends React.Component<{}> {\n  @observable resetStatus: API_CALL_STATUS;\n  recaptcha = new ReCAPTCHA();\n\n  @autobind\n  @action\n  async resetPassword(event: any, values: any) {\n    const token: string = await this.recaptcha.getToken();\n    setRecaptchaToken(token);\n    if (values.email) {\n      client\n        .requestPasswordResetUsingPOST({\n          mail: values.email,\n        })\n        .then(() => {\n          this.resetStatus = API_CALL_STATUS.SUCCESSFUL;\n        })\n        .catch(() => {\n          this.resetStatus = API_CALL_STATUS.FAILURE;\n        });\n    } else {\n      this.resetStatus = API_CALL_STATUS.FAILURE;\n    }\n  }\n\n  render() {\n    return (\n      <SmallPageContainer>\n        <h1>Reset your password</h1>\n        <Alert variant={'warning'}>\n          <span>Enter the email address you used to register</span>\n        </Alert>\n        {this.resetStatus === API_CALL_STATUS.SUCCESSFUL ? (\n          <Alert variant=\"success\">\n            Check your email for details on how to reset your password.\n          </Alert>\n        ) : null}\n        {this.resetStatus === API_CALL_STATUS.FAILURE ? (\n          <Alert variant=\"danger\">\n            <strong>Email address isn&apos;t registered!</strong> Please check\n            and try again\n          </Alert>\n        ) : null}\n        <AvForm onValidSubmit={this.resetPassword}>\n          <AvField\n            name=\"email\"\n            label=\"Email\"\n            placeholder={'Your email'}\n            type=\"email\"\n            validate={{\n              required: {\n                value: true,\n                errorMessage: 'Your email is required.',\n              },\n              minLength: {\n                value: 5,\n                errorMessage:\n                  'Your email is required to be at least 5 characters.',\n              },\n              maxLength: {\n                value: 254,\n                errorMessage: 'Your email cannot be longer than 50 characters.',\n              },\n            }}\n          />\n          <Button color=\"primary\" type=\"submit\">\n            Reset password\n          </Button>\n        </AvForm>\n      </SmallPageContainer>\n    );\n  }\n}\n","import './password-strength-bar.scss';\n\nimport React from 'react';\n\n// The component comes from jHipster generator\nexport interface IPasswordStrengthBarProps {\n  password: string;\n}\n\nexport const PasswordStrengthBar = ({\n  password,\n}: IPasswordStrengthBarProps) => {\n  const colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\n\n  const measureStrength = (p: string): number => {\n    let force = 0;\n    const regex = /[$-/:-?{-~!\"^_`[\\]]/g;\n    const flags = {\n      lowerLetters: /[a-z]+/.test(p),\n      upperLetters: /[A-Z]+/.test(p),\n      numbers: /[0-9]+/.test(p),\n      symbols: regex.test(p),\n    };\n\n    const passedMatches = Object.values(flags).filter(\n      (isMatchedFlag: boolean) => !!isMatchedFlag\n    ).length;\n\n    force += 2 * p.length + (p.length >= 10 ? 1 : 0);\n    force += passedMatches * 10;\n\n    // penalty (short password)\n    force = p.length <= 6 ? Math.min(force, 10) : force;\n\n    // penalty (poor variety of characters)\n    force = passedMatches === 1 ? Math.min(force, 10) : force;\n    force = passedMatches === 2 ? Math.min(force, 20) : force;\n    force = passedMatches === 3 ? Math.min(force, 40) : force;\n\n    return force;\n  };\n\n  const getColor = (s: number): any => {\n    let idx = 0;\n    if (s <= 10) {\n      idx = 0;\n    } else if (s <= 20) {\n      idx = 1;\n    } else if (s <= 30) {\n      idx = 2;\n    } else if (s <= 40) {\n      idx = 3;\n    } else {\n      idx = 4;\n    }\n    return { idx: idx + 1, col: colors[idx] };\n  };\n\n  const getPoints = (force: any) => {\n    const pts = [];\n    for (let i = 0; i < 5; i++) {\n      pts.push(\n        <li\n          key={i}\n          className=\"point\"\n          style={\n            i < force.idx\n              ? { backgroundColor: force.col }\n              : { backgroundColor: '#DDD' }\n          }\n        />\n      );\n    }\n    return pts;\n  };\n\n  const strength = getColor(measureStrength(password));\n  const points = getPoints(strength);\n\n  return (\n    <div id=\"strength\">\n      <small>Password strength:</small>\n      <ul id=\"strengthBar\">{points}</ul>\n    </div>\n  );\n};\n\nexport default PasswordStrengthBar;\n","import { Alert } from 'react-bootstrap';\nimport React from 'react';\nimport { getErrorMessage, OncoKBError } from 'app/shared/alert/ErrorAlertUtils';\n\nexport const ErrorAlert: React.FunctionComponent<{\n  error: OncoKBError;\n}> = props => {\n  return (\n    <Alert variant=\"danger\">\n      <strong>{getErrorMessage(props.error)}</strong>\n    </Alert>\n  );\n};\n","import React from 'react';\nimport { RouterStore } from 'mobx-react-router';\nimport * as QueryString from 'query-string';\nimport client from 'app/shared/api/clientInstance';\nimport { observable } from 'mobx';\nimport { Link } from 'react-router-dom';\nimport { API_CALL_STATUS, PAGE_ROUTE } from 'app/config/constants';\nimport { inject, observer } from 'mobx-react';\nimport { Alert, Button } from 'react-bootstrap';\nimport SmallPageContainer from '../SmallPageContainer';\nimport { AvField, AvForm } from 'availity-reactstrap-validation';\nimport PasswordStrengthBar from 'app/shared/password/password-strength-bar';\nimport { ErrorAlert } from 'app/shared/alert/ErrorAlert';\n\n@inject('routing')\n@observer\nexport default class PasswordResetFinish extends React.Component<{\n  routing: RouterStore;\n}> {\n  @observable activateKey: string;\n  @observable password = '';\n  @observable resetStatus: API_CALL_STATUS;\n  @observable error: Error;\n\n  constructor(props: Readonly<{ routing: RouterStore }>) {\n    super(props);\n\n    const queryStrings = QueryString.parse(props.routing.location.search);\n    if (queryStrings.key) {\n      this.activateKey = queryStrings.key as string;\n    }\n  }\n\n  handleValidSubmit = (event: any, values: any) => {\n    client\n      .finishPasswordResetUsingPOST({\n        keyAndPassword: {\n          key: this.activateKey,\n          newPassword: values.newPassword,\n        },\n      })\n      .then(() => {\n        this.resetStatus = API_CALL_STATUS.SUCCESSFUL;\n      })\n      .catch(error => {\n        this.error = error;\n        this.resetStatus = API_CALL_STATUS.FAILURE;\n      });\n  };\n\n  getSuccessfulMessage = () => {\n    return (\n      <Alert variant=\"success\">\n        <strong>Your password has been reset.</strong> Please{' '}\n        <Link to={PAGE_ROUTE.LOGIN}>log in</Link>.\n      </Alert>\n    );\n  };\n\n  getFailureMessage = () => {\n    return <ErrorAlert error={this.error} />;\n  };\n\n  getResetForm = () => {\n    return (\n      <AvForm onValidSubmit={this.handleValidSubmit}>\n        <AvField\n          name=\"newPassword\"\n          label=\"New password\"\n          placeholder={'New password'}\n          type=\"password\"\n          validate={{\n            required: {\n              value: true,\n              errorMessage: 'Your password is required.',\n            },\n            minLength: {\n              value: 4,\n              errorMessage:\n                'Your password is required to be at least 4 characters.',\n            },\n            maxLength: {\n              value: 50,\n              errorMessage:\n                'Your password cannot be longer than 50 characters.',\n            },\n          }}\n          onChange={(event: any) => (this.password = event.target.value)}\n        />\n        <PasswordStrengthBar password={this.password} />\n        <AvField\n          name=\"confirmPassword\"\n          label=\"New password confirmation\"\n          placeholder=\"Confirm the new password\"\n          type=\"password\"\n          validate={{\n            required: {\n              value: true,\n              errorMessage: 'Your confirmation password is required.',\n            },\n            minLength: {\n              value: 4,\n              errorMessage:\n                'Your confirmation password is required to be at least 4 characters.',\n            },\n            maxLength: {\n              value: 50,\n              errorMessage:\n                'Your confirmation password cannot be longer than 50 characters.',\n            },\n            match: {\n              value: 'newPassword',\n              errorMessage: 'The password and its confirmation do not match!',\n            },\n          }}\n        />\n        <Button color=\"success\" type=\"submit\">\n          Validate new password\n        </Button>\n      </AvForm>\n    );\n  };\n\n  render() {\n    return (\n      <SmallPageContainer>\n        {this.resetStatus === API_CALL_STATUS.SUCCESSFUL\n          ? this.getSuccessfulMessage()\n          : null}\n        {this.resetStatus === API_CALL_STATUS.FAILURE\n          ? this.getFailureMessage()\n          : null}\n        <h1>Reset password</h1>\n        <div>{this.activateKey ? this.getResetForm() : null}</div>\n      </SmallPageContainer>\n    );\n  }\n}\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport {\n  PAGE_ROUTE,\n  REDIRECT_TIMEOUT_MILLISECONDS,\n} from 'app/config/constants';\nimport { Redirect } from 'react-router';\n\n@observer\nexport default class PageNotFound extends React.Component {\n  @observable shouldBeRedirect = false;\n\n  constructor(props: {}) {\n    super(props);\n    setTimeout(\n      () => (this.shouldBeRedirect = true),\n      REDIRECT_TIMEOUT_MILLISECONDS\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.shouldBeRedirect ? (\n          <Redirect to={PAGE_ROUTE.HOME} />\n        ) : (\n          <Alert variant=\"danger\">\n            The page does not exist. You will be redirected to home page.\n          </Alert>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { RouterStore } from 'mobx-react-router';\nimport * as QueryString from 'query-string';\nimport client from 'app/shared/api/clientInstance';\nimport { observable } from 'mobx';\nimport { Link } from 'react-router-dom';\nimport { API_CALL_STATUS, PAGE_ROUTE } from 'app/config/constants';\nimport { inject, observer } from 'mobx-react';\nimport { Alert, Button } from 'react-bootstrap';\nimport SmallPageContainer from '../SmallPageContainer';\nimport { AvField, AvForm } from 'availity-reactstrap-validation';\nimport PasswordStrengthBar from 'app/shared/password/password-strength-bar';\nimport { getErrorMessage, OncoKBError } from 'app/shared/alert/ErrorAlertUtils';\nimport { ErrorAlert } from 'app/shared/alert/ErrorAlert';\n\n@observer\nexport default class AccountPassword extends React.Component<{}> {\n  @observable currentPassword = '';\n  @observable newPassword = '';\n  @observable resetStatus: API_CALL_STATUS;\n  @observable error: Error;\n\n  handleSavePassword = (event: any, values: any) => {\n    client\n      .changePasswordUsingPOST({\n        passwordChangeDto: {\n          newPassword: this.newPassword,\n          currentPassword: this.currentPassword,\n        },\n      })\n      .then(() => {\n        this.resetStatus = API_CALL_STATUS.SUCCESSFUL;\n      })\n      .catch((error: OncoKBError) => {\n        this.error = error;\n        this.resetStatus = API_CALL_STATUS.FAILURE;\n      });\n  };\n\n  getSuccessfulMessage = () => {\n    return (\n      <Alert variant=\"success\">\n        <strong>Password changed.</strong>\n      </Alert>\n    );\n  };\n\n  getFailureMessage = () => {\n    return <ErrorAlert error={this.error}></ErrorAlert>;\n  };\n\n  getResetForm = () => {\n    return (\n      <AvForm onValidSubmit={this.handleSavePassword}>\n        <AvField\n          name=\"password\"\n          label=\"password\"\n          placeholder={'Password'}\n          type=\"password\"\n          validate={{\n            required: {\n              value: true,\n              errorMessage: 'Your password is required.',\n            },\n            minLength: {\n              value: 4,\n              errorMessage:\n                'Your password is required to be at least 4 characters.',\n            },\n            maxLength: {\n              value: 50,\n              errorMessage:\n                'Your password cannot be longer than 50 characters.',\n            },\n          }}\n          onChange={(event: any) => (this.currentPassword = event.target.value)}\n        />\n        <AvField\n          name=\"newPassword\"\n          label=\"New password\"\n          placeholder={'New password'}\n          type=\"password\"\n          validate={{\n            required: {\n              value: true,\n              errorMessage: 'Your password is required.',\n            },\n            minLength: {\n              value: 4,\n              errorMessage:\n                'Your password is required to be at least 4 characters.',\n            },\n            maxLength: {\n              value: 50,\n              errorMessage:\n                'Your password cannot be longer than 50 characters.',\n            },\n          }}\n          onChange={(event: any) => (this.newPassword = event.target.value)}\n        />\n        <PasswordStrengthBar password={this.newPassword} />\n        <AvField\n          name=\"confirmPassword\"\n          label=\"New password confirmation\"\n          placeholder=\"Confirm the new password\"\n          type=\"password\"\n          validate={{\n            required: {\n              value: true,\n              errorMessage: 'Your confirmation password is required.',\n            },\n            minLength: {\n              value: 4,\n              errorMessage:\n                'Your confirmation password is required to be at least 4 characters.',\n            },\n            maxLength: {\n              value: 50,\n              errorMessage:\n                'Your confirmation password cannot be longer than 50 characters.',\n            },\n            match: {\n              value: 'newPassword',\n              errorMessage: 'The password and its confirmation do not match!',\n            },\n          }}\n        />\n        <Button color=\"success\" type=\"submit\">\n          Save\n        </Button>\n      </AvForm>\n    );\n  };\n\n  render() {\n    return (\n      <SmallPageContainer>\n        {this.resetStatus === API_CALL_STATUS.SUCCESSFUL\n          ? this.getSuccessfulMessage()\n          : null}\n        {this.resetStatus === API_CALL_STATUS.FAILURE\n          ? this.getFailureMessage()\n          : null}\n        <h1>Change password</h1>\n        <div>{this.getResetForm()}</div>\n      </SmallPageContainer>\n    );\n  }\n}\n","import { Button, Modal } from 'react-bootstrap';\nimport React from 'react';\n\nexport const SimpleConfirmModal: React.FunctionComponent<{\n  title?: string;\n  body?: string | JSX.Element;\n  show: boolean;\n  onCancel?: () => void;\n  onConfirm?: () => void;\n}> = props => {\n  const onCancel = (event?: any) => {\n    if (event) event.preventDefault();\n    if (props.onCancel) props.onCancel();\n  };\n  return (\n    <Modal show={props.show} onHide={() => onCancel()}>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          {props.title ? props.title : 'Please confirm'}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{props.body ? props.body : 'Are you sure?'}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={(event: any) => onCancel(event)}>\n          Cancel\n        </Button>\n        <Button\n          variant=\"primary\"\n          onClick={(event: any) => {\n            event.preventDefault();\n            if (props.onConfirm) props.onConfirm();\n          }}\n        >\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n","import OncoKBTable, {\n  SearchColumn,\n} from 'app/components/oncokbTable/OncoKBTable';\nimport React from 'react';\nimport { UserMailsDTO } from 'app/shared/api/generated/API';\nimport { defaultSortMethod } from 'app/shared/utils/ReactTableUtils';\nimport { filterByKeyword, toAppTimestampFormat } from 'app/shared/utils/Utils';\n\ntype EmailTableProps = {\n  data: UserMailsDTO[];\n  defaultPageSize?: number;\n};\nexport const EmailTable: React.FunctionComponent<EmailTableProps> = tableProps => {\n  const columns: SearchColumn<UserMailsDTO>[] = [\n    {\n      id: 'mailType',\n      Header: <span>Mail Type</span>,\n      accessor: 'mailType',\n      minWidth: 100,\n      defaultSortDesc: false,\n      sortMethod: defaultSortMethod,\n      onFilter: (data: UserMailsDTO, keyword) =>\n        filterByKeyword(data.mailType, keyword),\n    },\n    {\n      id: 'sentDate',\n      Header: <span>Sent Date</span>,\n      onFilter: (data: UserMailsDTO, keyword) =>\n        data.sentDate\n          ? filterByKeyword(toAppTimestampFormat(data.sentDate), keyword)\n          : false,\n      accessor: 'createdDate',\n      Cell(props: { original: UserMailsDTO }): any {\n        return <div>{toAppTimestampFormat(props.original.sentDate)}</div>;\n      },\n    },\n    {\n      id: 'sentFrom',\n      Header: <span>Sent From</span>,\n      onFilter: (data: UserMailsDTO, keyword) =>\n        data.sentFrom ? filterByKeyword(data.sentFrom, keyword) : false,\n      accessor: 'sentFrom',\n    },\n    {\n      id: 'sentBy',\n      Header: <span>Sent By</span>,\n      onFilter: (data: UserMailsDTO, keyword) =>\n        data.sentBy ? filterByKeyword(data.sentBy, keyword) : false,\n      accessor: 'sentBy',\n    },\n  ];\n  return (\n    <OncoKBTable\n      defaultSorted={[\n        {\n          id: 'sentDate',\n          desc: true,\n        },\n      ]}\n      data={tableProps.data}\n      columns={columns}\n      showPagination={true}\n      minRows={1}\n      defaultPageSize={tableProps.defaultPageSize}\n    />\n  );\n};\n","import React from 'react';\nimport {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n} from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport { remoteData } from 'cbioportal-frontend-commons';\nimport client from 'app/shared/api/clientInstance';\nimport {\n  MailTypeInfo,\n  UserDTO,\n  UserMailsDTO,\n} from 'app/shared/api/generated/API';\nimport { match } from 'react-router';\nimport { Col, Row } from 'react-bootstrap';\nimport { RouterStore } from 'mobx-react-router';\nimport { getSectionClassName } from 'app/pages/account/AccountUtils';\nimport { notifyError, notifySuccess } from 'app/shared/utils/NotificationUtils';\nimport _ from 'lodash';\nimport { COMPONENT_PADDING } from 'app/config/constants';\nimport Select from 'react-select';\nimport classnames from 'classnames';\nimport LoadingIndicator, {\n  LoaderSize,\n} from 'app/components/loadingIndicator/LoadingIndicator';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport autobind from 'autobind-decorator';\nimport { LoadingButton } from 'app/shared/button/LoadingButton';\nimport { SimpleConfirmModal } from 'app/shared/modal/SimpleConfirmModal';\nimport { Else, If, Then } from 'react-if';\nimport { EmailTable } from 'app/shared/table/EmailTable';\nimport * as QueryString from 'query-string';\nimport { AdminSendEmailPageSearchQueries } from 'app/shared/route/types';\n\n@inject('routing', 'authenticationStore')\n@observer\nexport default class UserManagementPage extends React.Component<{\n  routing: RouterStore;\n  authenticationStore: AuthenticationStore;\n  match: match;\n}> {\n  @observable sendingMail: false;\n  @observable selectedUserLogin: string;\n  @observable selectedMailFrom: string | undefined;\n  @observable selectedMailCc: string | undefined;\n  @observable selectedMailType: MailTypeInfo | undefined;\n  @observable showConfirmModal = false;\n  @observable userMails: UserMailsDTO[] = [];\n  @observable showUpdateStatusModal = false;\n  @observable showAddAuthorityModal = false;\n  readonly reactions: IReactionDisposer[] = [];\n\n  constructor(\n    props: Readonly<{\n      routing: RouterStore;\n      authenticationStore: AuthenticationStore;\n      match: match;\n    }>\n  ) {\n    super(props);\n    this.reactions.push(\n      reaction(\n        () => this.selectedUserLogin,\n        newUserLogin => {\n          this.getUserMails();\n          this.selectedMailType = undefined;\n          this.selectedMailFrom = undefined;\n          this.selectedMailCc = undefined;\n        }\n      ),\n      reaction(\n        () => [this.props.routing.location.search],\n        ([hash]) => {\n          const queryStrings = QueryString.parse(\n            hash\n          ) as AdminSendEmailPageSearchQueries;\n          if (queryStrings.to) {\n            this.selectedUserLogin = queryStrings.to;\n          }\n        },\n        true\n      )\n    );\n  }\n\n  @autobind\n  @action\n  sendEmail() {\n    if (this.canSendEmail) {\n      client\n        .sendUserMailsUsingPOST({\n          to: this.selectedUserLogin,\n          from: this.selectedMailFrom!,\n          cc: this.selectedMailCc,\n          by: this.props.authenticationStore.account!.login,\n          mailType: this.selectedMailType!.mailType,\n        })\n        .then(() => {\n          notifySuccess('Sent the email.');\n          // for some reason, the cache is not updated\n          this.getUserMails();\n        })\n        .catch(e => {\n          notifyError(e);\n        });\n    }\n  }\n\n  @autobind\n  @action\n  async getUserMails() {\n    this.userMails = await client.getUsersUserMailsUsingGET({\n      login: this.selectedUserLogin,\n    });\n  }\n\n  @computed\n  get canSendEmail() {\n    return (\n      this.selectedMailFrom && this.selectedMailType && this.selectedUserLogin\n    );\n  }\n\n  @computed\n  get selectedUser() {\n    return _.chain(this.users.result)\n      .filter(user => user.login === this.selectedUserLogin)\n      .first()\n      .value();\n  }\n\n  readonly users = remoteData<UserDTO[]>({\n    invoke() {\n      return client.getAllUsersUsingGET({});\n    },\n    default: [],\n  });\n\n  readonly mailTypes = remoteData<MailTypeInfo[]>({\n    invoke() {\n      return client.getMailsTypesUsingGET({});\n    },\n    default: [],\n  });\n\n  readonly mailsFrom = remoteData<string[]>({\n    invoke() {\n      return client.getMailsFromUsingGET({});\n    },\n    default: [],\n  });\n\n  componentWillUnmount(): void {\n    this.reactions.forEach(componentReaction => componentReaction());\n  }\n\n  render() {\n    return (\n      <If condition={this.users.isComplete}>\n        <Then>\n          <Row className={getSectionClassName(true)}>\n            <Col className={'d-flex justify-content-between'}>\n              <h2>Send Emails</h2>\n            </Col>\n          </Row>\n          <Row className={getSectionClassName()}>\n            <Col className={classnames(...COMPONENT_PADDING)} lg={6} xs={12}>\n              <div>\n                <div className={'pb-2'}>To</div>\n                <Select\n                  value={\n                    this.selectedUserLogin\n                      ? {\n                          value: this.selectedUserLogin,\n                          label: this.selectedUserLogin,\n                        }\n                      : null\n                  }\n                  options={this.users.result.map(user => {\n                    return {\n                      value: user.login,\n                      label: user.login,\n                    };\n                  })}\n                  isClearable={true}\n                  onChange={(selectedOption: any) => {\n                    this.selectedUserLogin = selectedOption\n                      ? selectedOption.value\n                      : '';\n                  }}\n                />\n              </div>\n            </Col>\n            <Col className={classnames(...COMPONENT_PADDING)} lg={6} xs={12}>\n              <div>\n                <div className={'pb-2'}>From</div>\n                <Select\n                  value={\n                    this.selectedMailFrom\n                      ? {\n                          value: this.selectedMailFrom,\n                          label: this.selectedMailFrom,\n                        }\n                      : null\n                  }\n                  options={this.mailsFrom.result.map(from => {\n                    return {\n                      value: from,\n                      label: from,\n                    };\n                  })}\n                  isClearable={true}\n                  onChange={(selectedOption: any) =>\n                    (this.selectedMailFrom = selectedOption\n                      ? selectedOption.value\n                      : '')\n                  }\n                />\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col className={classnames(...COMPONENT_PADDING)} lg={6} xs={12}>\n              <Select\n                placeholder={`Select the type of mail`}\n                value={\n                  this.selectedMailType\n                    ? {\n                        value: this.selectedMailType.mailType,\n                        label: this.selectedMailType.description,\n                      }\n                    : null\n                }\n                options={this.mailTypes.result.map(type => {\n                  return {\n                    value: type.mailType,\n                    label: type.description,\n                  };\n                })}\n                isClearable={true}\n                onChange={(selectedOption: any) =>\n                  (this.selectedMailType = selectedOption\n                    ? {\n                        mailType: selectedOption.value,\n                        description: selectedOption.label,\n                      }\n                    : undefined)\n                }\n              />\n            </Col>\n            <Col className={classnames(...COMPONENT_PADDING)} lg={6} xs={12}>\n              <LoadingButton\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={!this.canSendEmail}\n                onClick={() => (this.showConfirmModal = true)}\n                loading={this.sendingMail}\n              >\n                Send\n              </LoadingButton>\n            </Col>\n          </Row>\n          {this.selectedUserLogin && (\n            <>\n              <Row className={getSectionClassName()}>\n                <Col className={'d-flex justify-content-between'}>\n                  <h2>Previous Emails Sent</h2>\n                </Col>\n              </Row>\n              <Row className={getSectionClassName()}>\n                <Col>\n                  {this.userMails && <EmailTable data={this.userMails} />}\n                </Col>\n              </Row>\n            </>\n          )}\n          <SimpleConfirmModal\n            onCancel={() => (this.showConfirmModal = false)}\n            onConfirm={() => {\n              this.sendEmail();\n              this.showConfirmModal = false;\n            }}\n            show={this.showConfirmModal}\n          />\n        </Then>\n        <Else>\n          <LoadingIndicator size={LoaderSize.LARGE} center={true} isLoading />\n        </Else>\n      </If>\n    );\n  }\n}\n","import { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { UserDTO } from '../api/generated/API';\n\ntype UserStatusModalProps = {\n  user: UserDTO | undefined;\n  show: boolean;\n  onCancel: () => void;\n  onConfirm: (sendEmail: boolean) => void;\n};\n\nexport class UserStatusModal extends React.Component<UserStatusModalProps> {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onCancel}>\n        <Modal.Header closeButton>\n          <Modal.Title>Update User Status</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure to{' '}\n          {this.props.user?.activated ? 'deactivate' : 'activate'} the user?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onCancel}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={() => this.props.onConfirm(true)}>\n            Update\n          </Button>\n          {!this.props.user?.activated ? (\n            <DefaultTooltip\n              placement={'top'}\n              overlay={\n                'Update user status without sending an email to the user'\n              }\n            >\n              <Button\n                variant=\"primary\"\n                onClick={() => this.props.onConfirm(false)}\n              >\n                Silent Update\n              </Button>\n            </DefaultTooltip>\n          ) : null}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  AvCheckbox,\n  AvCheckboxGroup,\n  AvField,\n  AvForm,\n  AvRadio,\n  AvRadioGroup,\n} from 'availity-reactstrap-validation';\nimport PasswordStrengthBar from 'app/shared/password/password-strength-bar';\nimport { observer } from 'mobx-react';\nimport { action, computed, observable } from 'mobx';\nimport autobind from 'autobind-decorator';\nimport {\n  AdditionalInfoDTO,\n  CompanyDTO,\n  Contact,\n  ManagedUserVM,\n} from 'app/shared/api/generated/API';\nimport {\n  ACADEMIC_TERMS,\n  ACCOUNT_TITLES,\n  LicenseStatus,\n  LicenseType,\n  ONCOKB_TM,\n  THRESHOLD_TRIAL_TOKEN_VALID_DEFAULT,\n} from 'app/config/constants';\nimport { Alert, Button, Col, Row } from 'react-bootstrap';\nimport LicenseExplanation from 'app/shared/texts/LicenseExplanation';\nimport { ButtonSelections } from 'app/components/LicenseSelection';\nimport { LicenseInquireLink } from 'app/shared/links/LicenseInquireLink';\nimport {\n  getAccountInfoTitle,\n  getSectionClassName,\n} from 'app/pages/account/AccountUtils';\nimport { If, Then } from 'react-if';\nimport _ from 'lodash';\nimport { FormSelectWithLabelField } from 'app/shared/select/FormSelectWithLabelField';\nimport client from 'app/shared/api/clientInstance';\nimport { notifyError } from 'app/shared/utils/NotificationUtils';\nimport {\n  EMAIL_VAL,\n  SHORT_TEXT_VAL,\n  TEXT_VAL,\n} from 'app/shared/utils/FormValidationUtils';\n\nexport enum FormSection {\n  LICENSE = 'LICENSE',\n  ACCOUNT = 'ACCOUNT',\n  COMPANY = 'COMPANY',\n}\nexport type INewAccountForm = {\n  isLargeScreen: boolean;\n  byAdmin: boolean;\n  defaultLicense?: LicenseType;\n  visibleSections?: FormSection[];\n  onSelectLicense?: (newLicenseType: LicenseType | undefined) => void;\n  onSubmit: (newUser: Partial<ManagedUserVM>) => void;\n};\n\nexport enum AccountType {\n  REGULAR = 'regular',\n  TRIAL = 'trial',\n}\n\nenum FormKey {\n  ANTICIPATED_REPORTS = 'anticipatedReports',\n  COMPANY_DESCRIPTION = 'companyDescription',\n  USE_CASE = 'useCase',\n  COMPANY_SIZE = 'companySize',\n  BUS_CONTACT_EMAIL = 'businessContactEmail',\n  BUS_CONTACT_PHONE = 'businessContactPhone',\n}\n\ntype CompanySelectOptionType = {\n  label: string;\n  value: CompanyDTO;\n};\n\nexport const ACCOUNT_TYPE_DEFAULT = AccountType.REGULAR;\n@observer\nexport class NewAccountForm extends React.Component<INewAccountForm> {\n  @observable password = '';\n  @observable email = '';\n  @observable selectedLicense: LicenseType | undefined;\n  @observable selectedAccountType = ACCOUNT_TYPE_DEFAULT;\n  @observable companyOptions: CompanySelectOptionType[] = [];\n  @observable selectedCompanyOption: CompanySelectOptionType | undefined;\n\n  private defaultFormValue = {\n    accountType: ACCOUNT_TYPE_DEFAULT,\n    tokenValidDays: THRESHOLD_TRIAL_TOKEN_VALID_DEFAULT,\n  };\n\n  public static defaultProps = {\n    visibleSections: Object.values(FormSection),\n  };\n\n  constructor(props: INewAccountForm) {\n    super(props);\n    if (props.defaultLicense) {\n      this.selectedLicense = props.defaultLicense;\n    }\n    this.getAllCompanies();\n  }\n\n  @autobind\n  @action\n  handleValidSubmit(event: any, values: any) {\n    const newUser: Partial<ManagedUserVM> = {\n      login: values.email,\n      password: this.password,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      email: values.email,\n      licenseType: this.selectedLicense,\n      tokenIsRenewable: this.selectedAccountType !== AccountType.TRIAL,\n      jobTitle: values.jobTitle,\n      company: this.selectedCompanyOption?.value,\n      companyName: this.selectedCompanyOption\n        ? this.selectedCompanyOption.value.name\n        : values.company,\n      city: values.city,\n      country: values.country,\n    };\n    const additionalInfo = this.constructAdditionalInfo(values);\n    if (_.keys(additionalInfo).length > 0) {\n      newUser.additionalInfo = additionalInfo;\n    }\n    if (values.tokenValidDays) {\n      newUser.tokenValidDays = Number(values.tokenValidDays);\n      newUser.notifyUserOnTrialCreation = true;\n    }\n    this.props.onSubmit(newUser);\n  }\n\n  constructAdditionalInfo(values: any) {\n    const additionalInfo = {\n      userCompany: {},\n    } as AdditionalInfoDTO;\n\n    if (values[FormKey.COMPANY_SIZE]) {\n      additionalInfo.userCompany.size = values[FormKey.COMPANY_SIZE];\n    }\n    if (values[FormKey.COMPANY_DESCRIPTION]) {\n      additionalInfo.userCompany.description =\n        values[FormKey.COMPANY_DESCRIPTION];\n    }\n    [FormKey.ANTICIPATED_REPORTS, FormKey.USE_CASE].forEach(key => {\n      if (values[key]) {\n        additionalInfo.userCompany[key] = values[key];\n      }\n    });\n    if (\n      values[FormKey.BUS_CONTACT_EMAIL] ||\n      values[FormKey.BUS_CONTACT_PHONE]\n    ) {\n      additionalInfo.userCompany.businessContact = {} as Contact;\n      if (values[FormKey.BUS_CONTACT_EMAIL]) {\n        additionalInfo.userCompany.businessContact.email =\n          values[FormKey.BUS_CONTACT_EMAIL];\n      }\n      if (values[FormKey.BUS_CONTACT_PHONE]) {\n        additionalInfo.userCompany.businessContact.phone =\n          values[FormKey.BUS_CONTACT_PHONE];\n      }\n    }\n    if (_.keys(additionalInfo.userCompany).length === 0) {\n      delete additionalInfo.userCompany;\n    }\n    return additionalInfo;\n  }\n\n  getLicenseAdditionalInfo(licenseType: LicenseType) {\n    if (licenseType === LicenseType.ACADEMIC) {\n      return (\n        <p>\n          {ONCOKB_TM} is accessible for no fee for research use in academic\n          setting. This license type requires that you register your account\n          using your institution/university email address.{' '}\n          <b>\n            Please complete the form below to create your {ONCOKB_TM} account.\n          </b>\n        </p>\n      );\n    } else if (licenseType === LicenseType.COMMERCIAL) {\n      return (\n        <>\n          <p>\n            To use {ONCOKB_TM} in a commercial product, your company will need a\n            license. A typical example of this is if you are part of a company\n            that would like to incorporate {ONCOKB_TM} content into sequencing\n            reports.\n          </p>\n          <p>\n            <b>\n              Please complete the form below to create your {ONCOKB_TM} account.\n            </b>{' '}\n            {this.props.visibleSections?.includes(FormSection.COMPANY) ? (\n              <span>\n                If your company already has a license, you can skip certain\n                fields and we will grant you API access shortly. Otherwise, we\n                will contact you with license terms.\n              </span>\n            ) : null}{' '}\n            You can also reach out to <LicenseInquireLink /> for more\n            information.\n          </p>\n        </>\n      );\n    } else if (licenseType === LicenseType.HOSPITAL) {\n      return (\n        <>\n          <p>\n            To incorporate {ONCOKB_TM} content into patient sequencing reports,\n            your hospital will need a license.\n          </p>\n          <p>\n            <b>\n              Please complete the form below to create your {ONCOKB_TM} account.\n            </b>{' '}\n            {this.props.visibleSections?.includes(FormSection.COMPANY) ? (\n              <span>\n                If your hospital already has a license, we will grant you API\n                access shortly. Otherwise, we will contact you with license\n                terms.\n              </span>\n            ) : null}{' '}\n            You can also reach out to <LicenseInquireLink /> for more\n            information.\n          </p>\n        </>\n      );\n    } else if (licenseType === LicenseType.RESEARCH_IN_COMMERCIAL) {\n      return (\n        <>\n          <p>\n            To use {ONCOKB_TM} for research purposes in a commercial setting,\n            your company will need a license.\n          </p>\n          <p>\n            <b>\n              Please complete the form below to create your {ONCOKB_TM} account.\n            </b>{' '}\n            {this.props.visibleSections?.includes(FormSection.COMPANY) ? (\n              <span>\n                If your company already has a license, we will grant you API\n                access shortly. Otherwise, we will contact you with license\n                terms.\n              </span>\n            ) : null}{' '}\n            You can also reach out to <LicenseInquireLink /> for more\n            information.\n          </p>\n        </>\n      );\n    }\n  }\n\n  @computed\n  get isCommercialLicense() {\n    return this.selectedLicense !== LicenseType.ACADEMIC;\n  }\n\n  @computed\n  get companyDescriptionPlaceholder() {\n    const commonDescription =\n      'Provide a brief description of the ' +\n      getAccountInfoTitle(\n        ACCOUNT_TITLES.COMPANY,\n        this.selectedLicense\n      ).toLowerCase();\n\n    if (this.isCommercialLicense) {\n      return (\n        commonDescription +\n        ':\\n' +\n        ` - Key products and services that relate to ${ONCOKB_TM}\\n` +\n        ` - Approximate size of the ${getAccountInfoTitle(\n          ACCOUNT_TITLES.COMPANY,\n          this.selectedLicense\n        ).toLowerCase()} (e.g., FTE, revenue, etc.)`\n      );\n    }\n    return commonDescription;\n  }\n\n  @computed\n  get useCasePlaceholder() {\n    const commonDescription = `Provide a description of how you plan to use ${ONCOKB_TM}`;\n\n    if (this.isCommercialLicense) {\n      return (\n        commonDescription +\n        '\\n' +\n        `  - What product or service do you plan to incorporate ${ONCOKB_TM} content into?\\n` +\n        `  - How will the product be delivered to the end user (e.g., patient report${\n          this.selectedLicense === LicenseType.COMMERCIAL\n            ? ', SaaS offering'\n            : ''\n        })?`\n      );\n    }\n    return commonDescription;\n  }\n\n  @autobind\n  @action\n  onSelectLicense(license: LicenseType | undefined) {\n    this.selectedLicense = license;\n    if (this.props.onSelectLicense) {\n      this.props.onSelectLicense(this.selectedLicense);\n    }\n  }\n\n  @autobind\n  updatePassword(event: any) {\n    this.password = event.target.value;\n  }\n\n  @action\n  getAllCompanies() {\n    if (this.props.byAdmin) {\n      client\n        .getAllCompaniesUsingGET({})\n        .then(\n          companies =>\n            (this.companyOptions = companies.map(company => ({\n              label: `${company.name} (${company.companyType})`,\n              value: company,\n            })))\n        )\n        .catch(error => notifyError(error));\n    }\n  }\n\n  @action.bound\n  onSelectCompany(selectedOption: CompanySelectOptionType) {\n    this.selectedCompanyOption = selectedOption;\n    if (selectedOption) {\n      this.selectedAccountType =\n        this.selectedCompanyOption.value.licenseStatus === LicenseStatus.TRIAL\n          ? AccountType.TRIAL\n          : AccountType.REGULAR;\n      this.onSelectLicense(selectedOption.value.licenseType as LicenseType);\n    }\n  }\n\n  @computed\n  get showEmailMismatchConfirmation() {\n    const emailDomain = this.email.substring(\n      this.email.includes('@') ? this.email.indexOf('@') + 1 : this.email.length\n    );\n    const hasADomainMatch = this.selectedCompanyOption?.value.companyDomains.some(\n      domain => domain === emailDomain\n    );\n    return (\n      this.email.length > 5 && this.selectedCompanyOption && !hasADomainMatch\n    );\n  }\n\n  render() {\n    return (\n      <AvForm\n        onValidSubmit={this.handleValidSubmit}\n        model={this.defaultFormValue}\n      >\n        {this.props.visibleSections!.includes(FormSection.LICENSE) && (\n          <>\n            <Row className={getSectionClassName(true)}>\n              <Col xs={12}>\n                <h6>\n                  <LicenseExplanation />\n                </h6>\n              </Col>\n            </Row>\n            <Row className={getSectionClassName(false)}>\n              <Col md=\"3\">\n                <h5>Choose your license type</h5>\n              </Col>\n              <Col md=\"9\">\n                <ButtonSelections\n                  isLargeScreen={this.props.isLargeScreen}\n                  selectedButton={this.selectedLicense}\n                  onSelectLicense={this.onSelectLicense}\n                  disabled={!!this.selectedCompanyOption}\n                />\n                {!this.selectedCompanyOption ? null : (\n                  <span>\n                    User should have same license type as their company.\n                    Unselect company to enable license selection.\n                  </span>\n                )}\n              </Col>\n            </Row>\n          </>\n        )}\n        {this.selectedLicense ? (\n          <>\n            {this.props.visibleSections!.includes(FormSection.LICENSE) && (\n              <Row>\n                <Col md=\"9\" className={'ml-auto'}>\n                  {this.getLicenseAdditionalInfo(this.selectedLicense)}\n                </Col>\n              </Row>\n            )}\n            {this.props.visibleSections!.includes(FormSection.ACCOUNT) && (\n              <Row\n                className={\n                  this.props.visibleSections!.includes(FormSection.LICENSE)\n                    ? getSectionClassName()\n                    : undefined\n                }\n              >\n                <Col md=\"3\">\n                  <h5>Account Information</h5>\n                </Col>\n                <Col md=\"9\">\n                  <AvField\n                    name=\"firstName\"\n                    autoComplete=\"given-name\"\n                    label={getAccountInfoTitle(\n                      ACCOUNT_TITLES.FIRST_NAME,\n                      this.selectedLicense\n                    )}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: 'Your first name is required.',\n                      },\n                      ...SHORT_TEXT_VAL,\n                    }}\n                  />\n                  <AvField\n                    name=\"lastName\"\n                    autoComplete=\"family-name\"\n                    label={getAccountInfoTitle(\n                      ACCOUNT_TITLES.LAST_NAME,\n                      this.selectedLicense\n                    )}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: 'Your last name is required.',\n                      },\n                      ...SHORT_TEXT_VAL,\n                    }}\n                  />\n                  <AvField\n                    name=\"jobTitle\"\n                    label={getAccountInfoTitle(\n                      ACCOUNT_TITLES.POSITION,\n                      this.selectedLicense\n                    )}\n                  />\n                  <AvField\n                    name=\"email\"\n                    label={getAccountInfoTitle(\n                      ACCOUNT_TITLES.EMAIL,\n                      this.selectedLicense\n                    )}\n                    type=\"email\"\n                    value={this.email}\n                    onChange={(event: any) => {\n                      this.email = event.target.value;\n                    }}\n                    validate={EMAIL_VAL}\n                  />\n                  {this.showEmailMismatchConfirmation ? (\n                    <Alert variant={'warning'}>\n                      <i className={'mr-2 fa fa-exclamation-triangle'}></i>\n                      <span>\n                        The entered email address domain does not match any of\n                        the company's domains. Please confirm before proceeding.\n                      </span>\n                    </Alert>\n                  ) : null}\n                  <If condition={!this.props.byAdmin}>\n                    <Then>\n                      <AvField\n                        name=\"firstPassword\"\n                        label=\"Password\"\n                        autoComplete=\"password\"\n                        placeholder={'Password'}\n                        type=\"password\"\n                        onChange={this.updatePassword}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: 'Your password is required.',\n                          },\n                          minLength: {\n                            value: 4,\n                            errorMessage:\n                              'Your password is required to be at least 4 characters.',\n                          },\n                          maxLength: {\n                            value: 50,\n                            errorMessage:\n                              'Your password cannot be longer than 50 characters.',\n                          },\n                        }}\n                      />\n                      <PasswordStrengthBar password={this.password} />\n                      <AvField\n                        name=\"secondPassword\"\n                        label=\"Password confirmation\"\n                        autoComplete=\"password\"\n                        placeholder=\"Confirm the password\"\n                        type=\"password\"\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage:\n                              'Your confirmation password is required.',\n                          },\n                          minLength: {\n                            value: 4,\n                            errorMessage:\n                              'Your confirmation password is required to be at least 4 characters.',\n                          },\n                          maxLength: {\n                            value: 50,\n                            errorMessage:\n                              'Your confirmation password cannot be longer than 50 characters.',\n                          },\n                          match: {\n                            value: 'firstPassword',\n                            errorMessage:\n                              'The password and its confirmation do not match!',\n                          },\n                        }}\n                      />\n                    </Then>\n                  </If>\n                </Col>\n              </Row>\n            )}\n            {this.props.visibleSections!.includes(FormSection.COMPANY) && (\n              <Row className={getSectionClassName()}>\n                <Col md=\"3\">\n                  <h5>\n                    {getAccountInfoTitle(\n                      ACCOUNT_TITLES.COMPANY_SECTION_TITLE,\n                      this.selectedLicense\n                    )}\n                  </h5>\n                </Col>\n                <Col md=\"9\">\n                  {this.props.byAdmin ? (\n                    <FormSelectWithLabelField\n                      onSelection={(\n                        selectedOption: CompanySelectOptionType\n                      ) => {\n                        this.onSelectCompany(selectedOption);\n                      }}\n                      labelText={'Select a company to register a user under'}\n                      name={'companyDropdown'}\n                      options={this.companyOptions}\n                      isClearable={true}\n                      value={this.selectedCompanyOption}\n                    />\n                  ) : null}\n                  {this.selectedCompanyOption ? null : (\n                    <div>\n                      {this.selectedLicense !== LicenseType.ACADEMIC && (\n                        <p>\n                          Please feel free to skip this section if your{' '}\n                          {getAccountInfoTitle(\n                            ACCOUNT_TITLES.COMPANY,\n                            this.selectedLicense\n                          ).toLowerCase()}{' '}\n                          already has a license with us.\n                        </p>\n                      )}\n                      <AvField\n                        name=\"company\"\n                        label={getAccountInfoTitle(\n                          ACCOUNT_TITLES.COMPANY,\n                          this.selectedLicense\n                        )}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: 'Your organization name is required.',\n                          },\n                          ...TEXT_VAL,\n                        }}\n                      />\n                      <AvField\n                        name=\"city\"\n                        label={getAccountInfoTitle(\n                          ACCOUNT_TITLES.CITY,\n                          this.selectedLicense\n                        )}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage:\n                              'Please let us know where you located.',\n                          },\n                          ...SHORT_TEXT_VAL,\n                        }}\n                      />\n                      <AvField\n                        name=\"country\"\n                        label={getAccountInfoTitle(\n                          ACCOUNT_TITLES.COUNTRY,\n                          this.selectedLicense\n                        )}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage:\n                              'Please let us know where you located.',\n                          },\n                          ...SHORT_TEXT_VAL,\n                        }}\n                      />\n                      <AvField\n                        name={FormKey.COMPANY_DESCRIPTION}\n                        label={`${getAccountInfoTitle(\n                          ACCOUNT_TITLES.COMPANY,\n                          this.selectedLicense\n                        )} Description`}\n                        type={'textarea'}\n                        placeholder={this.companyDescriptionPlaceholder}\n                        rows={4}\n                      />\n                      {this.isCommercialLicense && (\n                        <>\n                          <AvField\n                            name={FormKey.BUS_CONTACT_EMAIL}\n                            label={'Business Contact Email'}\n                            type=\"email\"\n                            validate={{\n                              ...EMAIL_VAL,\n                              required: {\n                                value: false,\n                              },\n                            }}\n                          />\n                          <AvField\n                            name={FormKey.BUS_CONTACT_PHONE}\n                            label={'Business Contact Phone Number'}\n                            type=\"tel\"\n                          />\n                        </>\n                      )}\n                      <AvField\n                        name={FormKey.USE_CASE}\n                        label={`Describe how you plan to use ${ONCOKB_TM}`}\n                        type={'textarea'}\n                        placeholder={this.useCasePlaceholder}\n                        rows={6}\n                        validate={{\n                          ...TEXT_VAL,\n                          required: {\n                            value: true,\n                            errorMessage: 'Your use case is required.',\n                          },\n                        }}\n                      />\n                      {[LicenseType.COMMERCIAL, LicenseType.HOSPITAL].includes(\n                        this.selectedLicense\n                      ) && (\n                        <AvField\n                          name={FormKey.ANTICIPATED_REPORTS}\n                          label={\n                            'Anticipated # of reports annually for years 1, 2 and 3'\n                          }\n                          type={'textarea'}\n                          placeholder={`If you plan to incorporate ${ONCOKB_TM} contents in sequencing reports, please provide an estimate of your anticipated volume over the next several years`}\n                        />\n                      )}\n                      {[LicenseType.RESEARCH_IN_COMMERCIAL].includes(\n                        this.selectedLicense\n                      ) && (\n                        <AvField\n                          name={FormKey.COMPANY_SIZE}\n                          label={'Company Size (# of employees)'}\n                          type={'input'}\n                        />\n                      )}\n                    </div>\n                  )}\n                </Col>\n              </Row>\n            )}\n            {this.selectedLicense === LicenseType.ACADEMIC &&\n            !this.props.byAdmin ? (\n              <>\n                <Row className={getSectionClassName()}>\n                  <Col md=\"3\">\n                    <h5>Terms</h5>\n                  </Col>\n                  <Col md=\"9\">\n                    <p>\n                      In order to be granted access to downloadable content and\n                      our API, please agree to the following terms:\n                    </p>\n                    {ACADEMIC_TERMS.map(term => (\n                      <AvCheckboxGroup\n                        name={term.key}\n                        required\n                        key={term.key}\n                        errorMessage={'You have to accept the term'}\n                      >\n                        <AvCheckbox label={term.description} value={term.key} />\n                      </AvCheckboxGroup>\n                    ))}\n                  </Col>\n                </Row>\n              </>\n            ) : null}\n            {this.props.byAdmin ? (\n              <Row className={getSectionClassName()}>\n                <Col md=\"3\">\n                  <h5>Account Type</h5>\n                </Col>\n                <Col md=\"9\">\n                  <AvRadioGroup\n                    inline\n                    name=\"accountType\"\n                    label=\"\"\n                    required\n                    onChange={(event: any, values: any) => {\n                      if (values) {\n                        this.selectedAccountType = values;\n                      } else {\n                        this.selectedAccountType = ACCOUNT_TYPE_DEFAULT;\n                      }\n                    }}\n                    value={this.selectedAccountType}\n                    disabled={this.selectedCompanyOption ? true : false}\n                  >\n                    <AvRadio\n                      label={AccountType.REGULAR}\n                      value={AccountType.REGULAR}\n                    />\n                    <AvRadio\n                      label={AccountType.TRIAL}\n                      value={AccountType.TRIAL}\n                    />\n                  </AvRadioGroup>\n                  {this.selectedAccountType === AccountType.TRIAL ? (\n                    <>\n                      <div className={'mt-2'}>\n                        <AvField\n                          name=\"tokenValidDays\"\n                          label=\"Account Expires in Days\"\n                          required\n                          validate={{ number: true }}\n                        />\n                      </div>\n                      <span>\n                        A trial license agreement email will be sent to the\n                        user.\n                      </span>\n                    </>\n                  ) : null}\n                </Col>\n              </Row>\n            ) : null}\n            <Row>\n              <Col md={9} className={'ml-auto'}>\n                <Button id=\"register-submit\" variant=\"primary\" type=\"submit\">\n                  Register\n                </Button>\n              </Col>\n            </Row>\n          </>\n        ) : null}\n      </AvForm>\n    );\n  }\n}\n","import React from 'react';\nimport { ONCOKB_TM, PAGE_ROUTE } from 'app/config/constants';\nimport { Link } from 'react-router-dom';\n\nconst LicenseExplanation: React.FunctionComponent = () => {\n  return (\n    <span>\n      A license is required to use {ONCOKB_TM} in a commercial setting or for\n      clinical purposes. {ONCOKB_TM} is freely accessible for research use in an\n      academic setting.\n    </span>\n  );\n};\n\nexport default LicenseExplanation;\n","import React from 'react';\nimport {\n  LICENSE_TITLES,\n  LICENSE_TYPES,\n  LicenseType,\n} from 'app/config/constants';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { COLOR_GREY, COLOR_LIGHT_GREY } from 'app/config/theme';\n\nexport const RadioSelections: React.FunctionComponent<{\n  selectedRadio?: LicenseType;\n  onSelectLicense: (licenseKey: LicenseType | undefined) => void;\n}> = props => {\n  return (\n    <>\n      {LICENSE_TYPES.map(license => (\n        <div\n          className=\"primary\"\n          key={license.key}\n          onClick={() => props.onSelectLicense(license.key)}\n        >\n          <Form.Check\n            className={'px-0'}\n            type=\"radio\"\n            label={license.title}\n            readOnly\n            checked={props.selectedRadio === license.key}\n          />\n        </div>\n      ))}\n    </>\n  );\n};\n\nconst SelectionButton: React.FunctionComponent<{\n  selectedButton?: LicenseType;\n  onSelectLicense: (licenseKey: LicenseType | undefined) => void;\n  license: LicenseType;\n  disabled?: boolean;\n}> = props => {\n  return (\n    <Button\n      size={'sm'}\n      active={props.selectedButton === props.license}\n      variant=\"outline-primary\"\n      onClick={() => props.onSelectLicense(props.license)}\n      className={'mb-2'}\n      style={{ width: '100%', maxWidth: 300, minHeight: 50, height: '90%' }}\n      disabled={props.disabled && props.selectedButton !== props.license}\n    >\n      {LICENSE_TITLES[props.license]}\n    </Button>\n  );\n};\n\nconst LicenseTypeButtonOptions = [\n  LicenseType.COMMERCIAL,\n  LicenseType.HOSPITAL,\n  LicenseType.RESEARCH_IN_COMMERCIAL,\n  LicenseType.ACADEMIC,\n];\n\nexport const ButtonSelections: React.FunctionComponent<{\n  isLargeScreen: boolean;\n  selectedButton?: LicenseType;\n  onSelectLicense: (licenseKey: LicenseType | undefined) => void;\n  disabled?: boolean;\n}> = props => {\n  return (\n    <>\n      <Row className={'my-2'}>\n        {LicenseTypeButtonOptions.map(licenseType => (\n          <Col xl={3} sm={6} xs={12} key={licenseType}>\n            <SelectionButton\n              selectedButton={props.selectedButton}\n              onSelectLicense={props.onSelectLicense}\n              license={licenseType}\n              disabled={props.disabled}\n            />\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { ONCOKB_LICENSE_EMAIL, PAGE_ROUTE } from 'app/config/constants';\n\nexport const LicenseInquireLink: React.FunctionComponent<{}> = props => {\n  const title = 'License Inquiry';\n  return (\n    <a\n      href={`mailto:${ONCOKB_LICENSE_EMAIL}?subject=${title}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      title={title}\n    >\n      {props.children ? props.children : ONCOKB_LICENSE_EMAIL}\n    </a>\n  );\n};\n","import React from 'react';\nimport Select from 'react-select';\n\nexport type IFormSelectWithLabelProps = {\n  onSelection: (selectedOption: any) => void;\n  labelText: string;\n  name: string;\n  defaultValue?: { value: any; label: any };\n  options: { value: any; label: any }[];\n  boldLabel?: boolean;\n  isClearable?: boolean;\n  value?: { value: any; label: any } | null;\n};\n\nexport type Option = {\n  label: string;\n  value: string;\n};\n\nexport const FormSelectWithLabelField: React.FunctionComponent<IFormSelectWithLabelProps> = props => {\n  return (\n    <div className=\"form-group\">\n      <div className={`mb-2 ${props.boldLabel ? 'font-weight-bold' : ''}`}>\n        {props.labelText}\n      </div>\n      <Select\n        name={props.name}\n        defaultValue={props.defaultValue}\n        options={props.options}\n        onChange={props.onSelection}\n        isClearable={props.isClearable}\n        value={props.value}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { action, observable } from 'mobx';\nimport autobind from 'autobind-decorator';\nimport client from 'app/shared/api/clientInstance';\nimport { ManagedUserVM } from 'app/shared/api/generated/API';\nimport { LicenseType } from 'app/config/constants';\nimport { Alert } from 'react-bootstrap';\nimport WindowStore from 'app/store/WindowStore';\nimport { ErrorAlert } from 'app/shared/alert/ErrorAlert';\nimport { NewAccountForm } from 'app/components/newAccountForm/NewAccountForm';\nimport { OncoKBError } from 'app/shared/alert/ErrorAlertUtils';\nenum RegisterStatus {\n  REGISTERED,\n  NOT_SUCCESS,\n  NA,\n}\n\n@inject('windowStore')\n@observer\nexport class CreateAccountPage extends React.Component<{\n  windowStore: WindowStore;\n}> {\n  @observable registerStatus: RegisterStatus = RegisterStatus.NA;\n  @observable registerError: OncoKBError | undefined;\n  @observable selectedLicense: LicenseType | undefined;\n\n  @autobind\n  @action\n  handleValidSubmit(newAccount: Partial<ManagedUserVM>) {\n    // Insert an temp password since the model requires the password.\n    // The password is ignored at the serverside\n    client\n      .createUserUsingPOST({\n        managedUserVm: {\n          ...newAccount,\n          password: 'test',\n        } as ManagedUserVM,\n      })\n      .then(this.successToRegistered, this.failedToRegistered);\n  }\n\n  @action.bound\n  successToRegistered() {\n    this.registerStatus = RegisterStatus.REGISTERED;\n    this.registerError = undefined;\n    window.scrollTo(0, 0);\n  }\n\n  @action.bound\n  failedToRegistered(error: OncoKBError) {\n    this.registerStatus = RegisterStatus.NOT_SUCCESS;\n    this.registerError = error;\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.registerStatus === RegisterStatus.REGISTERED ? (\n          <Alert variant={'info'}>Registered</Alert>\n        ) : null}\n        {this.registerError ? <ErrorAlert error={this.registerError} /> : null}\n        <NewAccountForm\n          isLargeScreen={this.props.windowStore.isLargeScreen}\n          defaultLicense={this.selectedLicense}\n          onSubmit={this.handleValidSubmit}\n          byAdmin={true}\n        />\n      </div>\n    );\n  }\n}\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\nimport { ToggleValue } from './UsageAnalysisPage';\n\ntype IUsageToggleGroupProps = {\n  defaultValue: ToggleValue;\n  toggleValues: ToggleValue[];\n  handleToggle: (value: ToggleValue) => void;\n};\n\nexport const UsageToggleGroup = observer((props: IUsageToggleGroupProps) => {\n  const ToggleButtons: any[] = [];\n  props.toggleValues.forEach(value => {\n    ToggleButtons.push(<ToggleButton value={value}>{value}</ToggleButton>);\n  });\n  return (\n    <ToggleButtonGroup\n      className=\"ml-3\"\n      type=\"radio\"\n      name=\"toggle-options\"\n      defaultValue={props.defaultValue}\n      onChange={props.handleToggle}\n    >\n      {ToggleButtons}\n    </ToggleButtonGroup>\n  );\n});\n","import React from 'react';\nimport { ToggleValue } from 'app/pages/usageAnalysisPage/UsageAnalysisPage';\n\nexport const emailHeader = 'Email';\nexport const usageHeader = 'Usage';\nexport const resourceHeader = 'Resource';\nexport const endpointHeader = 'Most frequently used endpoint';\nexport const noPrivateEndpointHeader =\n  'Most frequently used endpoint (only public)';\nexport const timeHeader = 'Time';\nexport const operationHeader = 'Details';\n\nexport const filterDependentTimeHeader = (timeTypeToggleValue: ToggleValue) => {\n  return timeTypeToggleValue === ToggleValue.RESULTS_IN_TOTAL\n    ? 'Duration'\n    : 'Time';\n};\nexport const filterDependentResourceHeader = (\n  resourcesTypeToggleValue: ToggleValue\n) => {\n  return (\n    'Resource' +\n    (resourcesTypeToggleValue === ToggleValue.PUBLIC_RESOURCES\n      ? ' (only public)'\n      : '')\n  );\n};\n","import React from 'react';\n\nfunction getUsageTextClassName(usage: number) {\n  if (usage >= 1000000000) {\n    return 'text-danger';\n  } else if (usage >= 1000000) {\n    return 'text-warning';\n  } else {\n    return '';\n  }\n}\n\nconst UsageText: React.FunctionComponent<{\n  usage: number;\n}> = ({ usage }) => {\n  return (\n    <span className={getUsageTextClassName(usage)}>\n      {usage.toLocaleString()}\n    </span>\n  );\n};\n\nexport default UsageText;\n","import {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n} from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport { RouterStore } from 'mobx-react-router';\nimport React from 'react';\nimport client from 'app/shared/api/clientInstance';\nimport { match } from 'react-router';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport OncoKBTable from 'app/components/oncokbTable/OncoKBTable';\nimport {\n  encodeResourceUsageDetailPageURL,\n  filterByKeyword,\n} from 'app/shared/utils/Utils';\nimport { UserOverviewUsage } from 'app/shared/api/generated/API';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport autobind from 'autobind-decorator';\nimport { Row, Dropdown, DropdownButton } from 'react-bootstrap';\nimport {\n  PAGE_ROUTE,\n  USAGE_TOP_USERS_LIMIT,\n  USAGE_ALL_TIME_KEY,\n} from 'app/config/constants';\nimport { remoteData } from 'cbioportal-frontend-commons';\nimport * as QueryString from 'query-string';\nimport { UsageToggleGroup } from './UsageToggleGroup';\nimport { TableCellRenderer } from 'react-table';\nimport {\n  emailHeader,\n  endpointHeader,\n  noPrivateEndpointHeader,\n  operationHeader,\n  resourceHeader,\n  timeHeader,\n  usageHeader,\n  filterDependentResourceHeader,\n} from 'app/components/oncokbTable/HeaderConstants';\nimport UsageText from 'app/shared/texts/UsageText';\n\nexport type UsageRecord = {\n  resource: string;\n  usage: number;\n  time: string;\n};\n\nenum UsageType {\n  USER = 'USER',\n  RESOURCE = 'RESOURCE',\n}\n\nexport enum ToggleValue {\n  ALL_USERS = 'All Users',\n  TOP_USERS = 'Top Users',\n  ALL_RESOURCES = 'All Resources',\n  PUBLIC_RESOURCES = 'Only Public Resources',\n  CUMULATIVE_USAGE = 'Cumulative Usage',\n  RESULTS_IN_TOTAL = 'By Year',\n  RESULTS_BY_MONTH = 'By Month',\n  RESULTS_BY_DAY = 'By Day',\n}\n\nconst ALLOWED_USAGETYPE: string[] = [UsageType.USER, UsageType.RESOURCE];\n\nexport enum UsageTableColumnKey {\n  RESOURCES = 'resource',\n  USAGE = 'usage',\n  TIME = 'time',\n  OPERATION = 'operation',\n}\n\nexport function getUsageTableColumnDefinition(\n  columnKey: string\n):\n  | {\n      id: string;\n      Header: TableCellRenderer;\n      minWidth?: number;\n      maxWidth?: number;\n      accessor: string;\n    }\n  | undefined {\n  switch (columnKey) {\n    case UsageTableColumnKey.RESOURCES:\n      return {\n        id: UsageTableColumnKey.RESOURCES,\n        Header: resourceHeader,\n        accessor: UsageTableColumnKey.RESOURCES,\n        minWidth: 200,\n      };\n    case UsageTableColumnKey.USAGE:\n      return {\n        id: UsageTableColumnKey.USAGE,\n        Header: usageHeader,\n        minWidth: 100,\n        accessor: UsageTableColumnKey.USAGE,\n      };\n    case UsageTableColumnKey.TIME:\n      return {\n        id: UsageTableColumnKey.TIME,\n        Header: timeHeader,\n        minWidth: 100,\n        accessor: UsageTableColumnKey.TIME,\n      };\n    case UsageTableColumnKey.OPERATION:\n      return {\n        id: UsageTableColumnKey.OPERATION,\n        Header: operationHeader,\n        maxWidth: 61,\n        accessor: UsageTableColumnKey.OPERATION,\n      };\n    default:\n      return undefined;\n  }\n}\n\n@inject('routing')\n@observer\nexport default class UsageAnalysisPage extends React.Component<{\n  routing: RouterStore;\n  match: match;\n}> {\n  @observable topUsersToggleValue: ToggleValue = ToggleValue.ALL_USERS;\n  @observable userTabResourcesTypeToggleValue: ToggleValue =\n    ToggleValue.PUBLIC_RESOURCES;\n  @observable resourceTabResourcesTypeToggleValue: ToggleValue =\n    ToggleValue.PUBLIC_RESOURCES;\n  @observable dropdownList: string[] = [];\n  @observable dropdownValue = 'All';\n  @observable usageType: UsageType = UsageType.USER;\n\n  readonly reactions: IReactionDisposer[] = [];\n\n  updateLocationHash = (newType: UsageType) => {\n    window.location.hash = QueryString.stringify({ type: newType });\n  };\n\n  constructor(props: Readonly<{ routing: RouterStore; match: match }>) {\n    super(props);\n    this.reactions.push(\n      reaction(\n        () => [props.routing.location.hash],\n        ([hash]) => {\n          const queryStrings = QueryString.parse(hash) as { type: UsageType };\n          if (queryStrings.type) {\n            if (ALLOWED_USAGETYPE.includes(queryStrings.type.toUpperCase())) {\n              this.usageType = queryStrings.type;\n            }\n          }\n        },\n        { fireImmediately: true }\n      ),\n      reaction(\n        () => this.usageType,\n        newVersion => this.updateLocationHash(newVersion)\n      )\n    );\n  }\n\n  readonly users = remoteData<UserOverviewUsage[]>({\n    await: () => [],\n    async invoke() {\n      return await client.userOverviewUsageGetUsingGET({});\n    },\n    default: [],\n  });\n\n  readonly usageDetail = remoteData<Map<string, UsageRecord[]>>({\n    await: () => [],\n    invoke: async () => {\n      const resource = await client.resourceUsageGetUsingGET({});\n      const result = new Map<string, UsageRecord[]>();\n      const yearSummary = resource.year;\n      const yearUsage: UsageRecord[] = [];\n      Object.keys(yearSummary).forEach(resourceEntry => {\n        yearUsage.push({\n          resource: resourceEntry,\n          usage: yearSummary[resourceEntry],\n          time: '',\n        });\n      });\n      result.set(USAGE_ALL_TIME_KEY, yearUsage);\n      this.dropdownList.push(USAGE_ALL_TIME_KEY);\n\n      const monthSummary = resource.month;\n      Object.keys(monthSummary).forEach(month => {\n        const monthUsage = monthSummary[month];\n        const usageArray: UsageRecord[] = [];\n        Object.keys(monthUsage).forEach(resourceEntry => {\n          usageArray.push({\n            resource: resourceEntry,\n            usage: monthUsage[resourceEntry],\n            time: month,\n          });\n        });\n        result.set(month, usageArray);\n        this.dropdownList.push(month);\n      });\n\n      return Promise.resolve(result);\n    },\n    default: new Map(),\n  });\n\n  @autobind\n  @action\n  handleTopUsersToggleChange(value: ToggleValue) {\n    this.topUsersToggleValue = value;\n  }\n\n  @autobind\n  @action\n  handleUserTabResourcesTypeToggleChange(value: ToggleValue) {\n    this.userTabResourcesTypeToggleValue = value;\n  }\n\n  @autobind\n  @action\n  handleResourceTabResourcesTypeToggleChange(value: ToggleValue) {\n    this.resourceTabResourcesTypeToggleValue = value;\n  }\n\n  @autobind\n  @action\n  toggleType(usageType: UsageType) {\n    this.usageType = usageType;\n  }\n\n  @computed get calculateResourcesTabData(): UsageRecord[] {\n    if (\n      this.resourceTabResourcesTypeToggleValue === ToggleValue.ALL_RESOURCES\n    ) {\n      return this.usageDetail.result.get(this.dropdownValue) || [];\n    } else {\n      return (\n        _.filter(this.usageDetail.result.get(this.dropdownValue), function (\n          usage\n        ) {\n          return !usage.resource.includes('/private/');\n        }) || []\n      );\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Tabs\n          defaultActiveKey={this.usageType}\n          id=\"uncontrolled-tab-example\"\n          onSelect={k => this.toggleType(UsageType[k!])}\n        >\n          <Tab eventKey={UsageType.USER} title=\"Users\">\n            <div className=\"mt-2\">\n              <OncoKBTable\n                data={\n                  this.topUsersToggleValue === ToggleValue.ALL_USERS\n                    ? this.users.result\n                    : _.filter(this.users.result, function (user) {\n                        return user.totalUsage >= USAGE_TOP_USERS_LIMIT;\n                      })\n                }\n                columns={[\n                  {\n                    id: 'userEmail',\n                    Header: emailHeader,\n                    accessor: 'userEmail',\n                    minWidth: 200,\n                    onFilter: (data: UserOverviewUsage, keyword) =>\n                      filterByKeyword(data.userEmail, keyword),\n                  },\n                  {\n                    id: 'totalUsage',\n                    Header: usageHeader,\n                    minWidth: 100,\n                    accessor: 'totalUsage',\n                    Cell(props: { original: UserOverviewUsage }) {\n                      return <UsageText usage={props.original.totalUsage} />;\n                    },\n                  },\n                  this.userTabResourcesTypeToggleValue ===\n                  ToggleValue.ALL_RESOURCES\n                    ? {\n                        id: 'endpoint',\n                        Header: endpointHeader,\n                        minWidth: 200,\n                        accessor: 'endpoint',\n                        onFilter: (data: UserOverviewUsage, keyword) =>\n                          filterByKeyword(data.endpoint, keyword),\n                      }\n                    : {\n                        id: 'noPrivateEndpoint',\n                        Header: noPrivateEndpointHeader,\n                        minWidth: 200,\n                        accessor: 'noPrivateEndpoint',\n                        onFilter: (data: UserOverviewUsage, keyword) =>\n                          filterByKeyword(data.noPrivateEndpoint, keyword),\n                      },\n                  {\n                    ...getUsageTableColumnDefinition(\n                      UsageTableColumnKey.OPERATION\n                    ),\n                    sortable: false,\n                    className: 'd-flex justify-content-center',\n                    Cell(props: { original: UserOverviewUsage }) {\n                      return (\n                        props.original.userId && (\n                          <Link\n                            to={`${PAGE_ROUTE.ADMIN_USER_USAGE_DETAILS_LINK}${props.original.userId}`}\n                          >\n                            <i className=\"fa fa-info-circle\"></i>\n                          </Link>\n                        )\n                      );\n                    },\n                  },\n                ]}\n                loading={this.users.isPending}\n                defaultSorted={[\n                  {\n                    id: 'totalUsage',\n                    desc: true,\n                  },\n                ]}\n                showPagination={true}\n                minRows={1}\n                filters={() => {\n                  return (\n                    <Row>\n                      <UsageToggleGroup\n                        defaultValue={this.topUsersToggleValue}\n                        toggleValues={[\n                          ToggleValue.ALL_USERS,\n                          ToggleValue.TOP_USERS,\n                        ]}\n                        handleToggle={this.handleTopUsersToggleChange}\n                      />\n                      <UsageToggleGroup\n                        defaultValue={this.userTabResourcesTypeToggleValue}\n                        toggleValues={[\n                          ToggleValue.ALL_RESOURCES,\n                          ToggleValue.PUBLIC_RESOURCES,\n                        ]}\n                        handleToggle={\n                          this.handleUserTabResourcesTypeToggleChange\n                        }\n                      />\n                    </Row>\n                  );\n                }}\n              />\n            </div>\n          </Tab>\n          <Tab eventKey={UsageType.RESOURCE} title=\"Resources\">\n            <div className=\"mt-2\">\n              <OncoKBTable\n                data={this.calculateResourcesTabData}\n                columns={[\n                  {\n                    ...getUsageTableColumnDefinition(\n                      UsageTableColumnKey.RESOURCES\n                    ),\n                    Header: filterDependentResourceHeader(\n                      this.resourceTabResourcesTypeToggleValue\n                    ),\n                    onFilter: (data: UsageRecord, keyword) =>\n                      filterByKeyword(data.resource, keyword),\n                  },\n                  {\n                    ...getUsageTableColumnDefinition(UsageTableColumnKey.USAGE),\n                    Cell(props: { original: UsageRecord }) {\n                      return <UsageText usage={props.original.usage} />;\n                    },\n                  },\n                  {\n                    ...getUsageTableColumnDefinition(\n                      UsageTableColumnKey.OPERATION\n                    ),\n                    sortable: false,\n                    className: 'd-flex justify-content-center',\n                    Cell(props: { original: UsageRecord }) {\n                      return (\n                        <Link\n                          to={`${\n                            PAGE_ROUTE.ADMIN_RESOURCE_DETAILS_LINK\n                          }${encodeResourceUsageDetailPageURL(\n                            props.original.resource\n                          )}`}\n                        >\n                          <i className=\"fa fa-info-circle\"></i>\n                        </Link>\n                      );\n                    },\n                  },\n                ]}\n                loading={this.usageDetail.isComplete ? false : true}\n                defaultSorted={[\n                  {\n                    id: UsageTableColumnKey.USAGE,\n                    desc: true,\n                  },\n                ]}\n                showPagination={true}\n                minRows={1}\n                filters={() => {\n                  const monthDropdown: any = [];\n                  if (this.usageDetail.isComplete) {\n                    this.dropdownList\n                      .sort()\n                      .reverse()\n                      .forEach(key => {\n                        monthDropdown.push(\n                          <Dropdown.Item eventKey={key}>{key}</Dropdown.Item>\n                        );\n                      });\n                  }\n                  return this.usageDetail.isComplete ? (\n                    <Row>\n                      <DropdownButton\n                        className=\"ml-3\"\n                        id=\"dropdown-basic-button\"\n                        title={this.dropdownValue}\n                        onSelect={(evt: any) => (this.dropdownValue = evt)}\n                      >\n                        {monthDropdown}\n                      </DropdownButton>\n                      <UsageToggleGroup\n                        defaultValue={this.resourceTabResourcesTypeToggleValue}\n                        toggleValues={[\n                          ToggleValue.ALL_RESOURCES,\n                          ToggleValue.PUBLIC_RESOURCES,\n                        ]}\n                        handleToggle={\n                          this.handleResourceTabResourcesTypeToggleChange\n                        }\n                      />\n                    </Row>\n                  ) : (\n                    <DropdownButton\n                      className=\"mt-2\"\n                      id=\"dropdown-basic-button\"\n                      title={this.dropdownValue}\n                      disabled\n                    ></DropdownButton>\n                  );\n                }}\n              />\n            </div>\n          </Tab>\n        </Tabs>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { action, observable } from 'mobx';\nimport WindowStore from 'app/store/WindowStore';\nimport { ErrorAlert } from 'app/shared/alert/ErrorAlert';\nimport { NewCompanyForm } from 'app/components/newCompanyForm/NewCompanyForm';\nimport { OncoKBError } from 'app/shared/alert/ErrorAlertUtils';\nimport { CompanyDTO, CompanyVM } from 'app/shared/api/generated/API';\nimport client from 'app/shared/api/clientInstance';\nimport { RouterStore } from 'mobx-react-router';\nimport { notifySuccess } from 'app/shared/utils/NotificationUtils';\n\nenum CreateCompanyStatus {\n  CREATE_SUCCESS,\n  CREATE_ERROR,\n  PENDING,\n}\n\n@inject('windowStore', 'routing')\n@observer\nexport class CreateCompanyPage extends React.Component<{\n  windowStore: WindowStore;\n  routing: RouterStore;\n}> {\n  @observable createCompanyStatus: CreateCompanyStatus =\n    CreateCompanyStatus.PENDING;\n  @observable createCompanyError: OncoKBError | undefined;\n\n  @action.bound\n  handleValidSubmit(newCompany: Partial<CompanyVM>) {\n    client\n      .createCompanyUsingPOST({\n        companyDto: newCompany as CompanyVM,\n      })\n      .then(\n        (company: CompanyDTO) => this.createCompanySuccess(company.id),\n        this.createCompanyFailure\n      );\n  }\n\n  @action.bound\n  createCompanySuccess(companyId: number) {\n    notifySuccess('Company created successfully!');\n    this.props.routing.history.push(`/companies/${companyId}`);\n  }\n\n  @action.bound\n  createCompanyFailure(error: OncoKBError) {\n    this.createCompanyStatus = CreateCompanyStatus.CREATE_ERROR;\n    this.createCompanyError = error;\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.createCompanyError ? (\n          <ErrorAlert error={this.createCompanyError} />\n        ) : null}\n        <NewCompanyForm onValidSubmit={this.handleValidSubmit} />\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { InputGroup, Button, Dropdown, Container } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport { getMomentInstance } from 'app/shared/utils/Utils';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport moment from 'moment';\nimport { APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\nimport MomentLocaleUtils from 'react-day-picker/moment';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\n\ntype CalendarButtonProps = {\n  currentFromDate: string | undefined;\n  currentToDate: string | undefined;\n  currentMenuState: boolean;\n  menuState: (isOpen: boolean) => void;\n  fromDate: (newDate: string) => void;\n  toDate: (newDate: string) => void;\n  filterToggled: (filterActive: boolean) => void;\n};\n\nconst DATE_PLACEHOLDER = 'Select Date';\n\nexport const UsageAnalysisCalendarButton: React.FunctionComponent<CalendarButtonProps> = props => {\n  const [open, isOpen] = useState(props.currentMenuState);\n  const currentToggleState: boolean =\n    props.currentFromDate !== undefined &&\n    props.currentFromDate !== DATE_PLACEHOLDER &&\n    props.currentToDate !== undefined &&\n    props.currentToDate !== DATE_PLACEHOLDER;\n\n  function handleFromDayChange(day: Date) {\n    props.fromDate(day.toISOString());\n    props.filterToggled(true);\n    if (\n      props.currentToDate === undefined ||\n      props.currentToDate === DATE_PLACEHOLDER\n    ) {\n      props.toDate(day.toISOString());\n    }\n  }\n\n  function handleToDayChange(day: Date) {\n    props.toDate(day.toISOString());\n    props.filterToggled(true);\n    if (\n      props.currentFromDate === undefined ||\n      props.currentFromDate === DATE_PLACEHOLDER\n    ) {\n      props.fromDate(day.toISOString());\n    }\n  }\n\n  function handleResetDays() {\n    props.fromDate(DATE_PLACEHOLDER);\n    props.toDate(DATE_PLACEHOLDER);\n    props.filterToggled(false);\n  }\n\n  function handleOnClick() {\n    isOpen(!open);\n    props.menuState(!open);\n  }\n\n  return (\n    <DefaultTooltip placement={'top'} overlay={'View Specific Date Range'}>\n      <Dropdown\n        as={InputGroup.Append}\n        id=\"time-select-dropdown\"\n        className=\"ml-3 active\"\n        show={open}\n      >\n        <Dropdown.Toggle\n          className={currentToggleState ? 'active' : ''}\n          onClick={handleOnClick}\n        >\n          <i className={classnames('fa fa-calendar')} />\n        </Dropdown.Toggle>\n        <Dropdown.Menu id=\"time-select-menu\">\n          <Container>\n            <div>From:</div>\n            <DayPickerInput\n              value={\n                props.currentFromDate === undefined ||\n                props.currentFromDate === DATE_PLACEHOLDER\n                  ? DATE_PLACEHOLDER\n                  : getMomentInstance(props.currentFromDate).format(\n                      APP_LOCAL_DATE_FORMAT\n                    )\n              }\n              onDayChange={handleFromDayChange}\n              inputProps={{\n                style: {\n                  textAlign: 'center',\n                  border: 'none',\n                },\n              }}\n              formatDate={MomentLocaleUtils.formatDate}\n              parseDate={MomentLocaleUtils.parseDate}\n            />\n            <div>To:</div>\n            <DayPickerInput\n              value={\n                props.currentToDate === undefined ||\n                props.currentToDate === DATE_PLACEHOLDER\n                  ? DATE_PLACEHOLDER\n                  : getMomentInstance(props.currentToDate).format(\n                      APP_LOCAL_DATE_FORMAT\n                    )\n              }\n              onDayChange={handleToDayChange}\n              inputProps={{\n                style: {\n                  textAlign: 'center',\n                  border: 'none',\n                },\n              }}\n              dayPickerProps={{\n                initialMonth:\n                  props.currentToDate === undefined ||\n                  props.currentToDate === DATE_PLACEHOLDER\n                    ? moment().toDate()\n                    : getMomentInstance(props.currentToDate).toDate(),\n              }}\n              formatDate={MomentLocaleUtils.formatDate}\n              parseDate={MomentLocaleUtils.parseDate}\n            />\n            <div className={'mt-2 row'} style={{ justifyContent: 'center' }}>\n              <Button\n                size={'sm'}\n                onClick={handleResetDays}\n                style={{ zIndex: 0 }}\n              >\n                Reset\n              </Button>\n            </div>\n          </Container>\n        </Dropdown.Menu>\n      </Dropdown>\n    </DefaultTooltip>\n  );\n};\n","import OncoKBTable from 'app/components/oncokbTable/OncoKBTable';\nimport { filterByKeyword } from 'app/shared/utils/Utils';\nimport autobind from 'autobind-decorator';\nimport _ from 'lodash';\nimport { action, computed, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { Row } from 'react-bootstrap';\nimport {\n  getUsageTableColumnDefinition,\n  ToggleValue,\n  UsageRecord,\n  UsageTableColumnKey,\n} from 'app/pages/usageAnalysisPage/UsageAnalysisPage';\nimport {\n  TABLE_DAY_FORMAT,\n  TABLE_MONTH_FORMAT,\n  USAGE_ALL_TIME_KEY,\n  USAGE_DAY_DETAIL_TIME_KEY,\n  USAGE_DETAIL_TIME_KEY,\n} from 'app/config/constants';\nimport { UsageToggleGroup } from './UsageToggleGroup';\nimport { UsageAnalysisCalendarButton } from 'app/components/calendarButton/UsageAnalysisCalendarButton';\nimport moment from 'moment';\nimport {\n  filterDependentResourceHeader,\n  filterDependentTimeHeader,\n} from 'app/components/oncokbTable/HeaderConstants';\nimport UsageText from 'app/shared/texts/UsageText';\n\ntype IUserUsageDetailsTable = {\n  data: Map<string, UsageRecord[]>;\n  loadedData: boolean;\n  defaultResourcesType: ToggleValue;\n  defaultTimeType: ToggleValue;\n  defaultPageSize?: number;\n};\n\n@observer\nexport default class UserUsageDetailsTable extends React.Component<\n  IUserUsageDetailsTable,\n  {}\n> {\n  @observable resourcesTypeToggleValue: ToggleValue = this.props\n    .defaultResourcesType;\n  @observable timeTypeToggleValue: ToggleValue = this.props.defaultTimeType;\n  @observable fromDate: string | undefined;\n  @observable toDate: string | undefined;\n  @observable filterToggled: boolean;\n  @observable dropdownMenuOpen: boolean;\n\n  @autobind\n  @action\n  handleResourcesTypeToggleChange(value: ToggleValue) {\n    this.resourcesTypeToggleValue = value;\n  }\n\n  @autobind\n  @action\n  handleTimeTypeToggleChange(value: ToggleValue) {\n    this.timeTypeToggleValue = value;\n  }\n\n  @computed get calculateData(): UsageRecord[] {\n    let data = this.props.data.get(\n      this.timeTypeToggleValue === ToggleValue.RESULTS_IN_TOTAL\n        ? USAGE_ALL_TIME_KEY\n        : this.timeTypeToggleValue === ToggleValue.RESULTS_BY_MONTH\n        ? USAGE_DETAIL_TIME_KEY\n        : USAGE_DAY_DETAIL_TIME_KEY\n    );\n    if (\n      this.filterToggled &&\n      data &&\n      this.timeTypeToggleValue !== ToggleValue.RESULTS_IN_TOTAL\n    ) {\n      let tableFormat: string;\n      if (this.timeTypeToggleValue === ToggleValue.RESULTS_BY_MONTH) {\n        tableFormat = TABLE_MONTH_FORMAT;\n      } else if (this.timeTypeToggleValue === ToggleValue.RESULTS_BY_DAY) {\n        tableFormat = TABLE_DAY_FORMAT;\n      }\n      data = data.filter(resource => {\n        const fromTime = moment(this.fromDate).format(tableFormat);\n        const toTime = moment(this.toDate).format(tableFormat);\n        return resource.time >= fromTime && resource.time <= toTime;\n      });\n    }\n    if (this.resourcesTypeToggleValue === ToggleValue.ALL_RESOURCES) {\n      return data || [];\n    } else if (this.resourcesTypeToggleValue === ToggleValue.PUBLIC_RESOURCES) {\n      return (\n        _.filter(data, function (usage) {\n          return !usage.resource.includes('/private/');\n        }) || []\n      );\n    } else if (this.resourcesTypeToggleValue === ToggleValue.CUMULATIVE_USAGE) {\n      if (data) {\n        const cumulativeData: Map<string, UsageRecord> = new Map<\n          string,\n          UsageRecord\n        >();\n        data.forEach(resource => {\n          if (!cumulativeData.has(resource.time)) {\n            cumulativeData.set(resource.time, {\n              resource: 'ALL',\n              usage: 0,\n              time: resource.time,\n            });\n          }\n          const resourceTimeRange = cumulativeData.get(resource.time);\n          if (resourceTimeRange) {\n            resourceTimeRange.usage += resource.usage;\n          }\n        });\n        return Array.from(cumulativeData.values()) || [];\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  render() {\n    return (\n      <>\n        <OncoKBTable\n          data={this.calculateData}\n          columns={[\n            {\n              ...getUsageTableColumnDefinition(UsageTableColumnKey.RESOURCES),\n              Header: filterDependentResourceHeader(this.timeTypeToggleValue),\n              onFilter: (data: UsageRecord, keyword) =>\n                filterByKeyword(data.resource, keyword),\n            },\n            {\n              ...getUsageTableColumnDefinition(UsageTableColumnKey.USAGE),\n              Cell(props: { original: UsageRecord }) {\n                return <UsageText usage={props.original.usage} />;\n              },\n            },\n            {\n              ...getUsageTableColumnDefinition(UsageTableColumnKey.TIME),\n              Header: filterDependentTimeHeader(this.timeTypeToggleValue),\n              onFilter: (data: UsageRecord, keyword) =>\n                filterByKeyword(data.time, keyword),\n            },\n          ]}\n          loading={!this.props.loadedData}\n          defaultSorted={[\n            {\n              id: UsageTableColumnKey.TIME,\n              desc: true,\n            },\n            {\n              id: UsageTableColumnKey.USAGE,\n              desc: true,\n            },\n          ]}\n          showPagination={true}\n          minRows={1}\n          defaultPageSize={this.props.defaultPageSize}\n          filters={() => {\n            return (\n              <Row>\n                <UsageToggleGroup\n                  defaultValue={this.resourcesTypeToggleValue}\n                  toggleValues={[\n                    ToggleValue.ALL_RESOURCES,\n                    ToggleValue.PUBLIC_RESOURCES,\n                    ToggleValue.CUMULATIVE_USAGE,\n                  ]}\n                  handleToggle={this.handleResourcesTypeToggleChange}\n                />\n                <UsageToggleGroup\n                  defaultValue={this.timeTypeToggleValue}\n                  toggleValues={[\n                    ToggleValue.RESULTS_IN_TOTAL,\n                    ToggleValue.RESULTS_BY_MONTH,\n                    ToggleValue.RESULTS_BY_DAY,\n                  ]}\n                  handleToggle={this.handleTimeTypeToggleChange}\n                />\n                <UsageAnalysisCalendarButton\n                  currentFromDate={this.fromDate}\n                  currentToDate={this.toDate}\n                  currentMenuState={this.dropdownMenuOpen}\n                  menuState={(isOpen: boolean) => {\n                    this.dropdownMenuOpen = isOpen;\n                  }}\n                  fromDate={(newDate: string) => {\n                    this.fromDate = newDate;\n                  }}\n                  toDate={(newDate: string) => {\n                    this.toDate = newDate;\n                  }}\n                  filterToggled={(filterActive: boolean) => {\n                    this.filterToggled = filterActive;\n                  }}\n                />\n              </Row>\n            );\n          }}\n        />\n      </>\n    );\n  }\n}\n","import { UserUsage } from 'app/shared/api/generated/API';\nimport { observable } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport { RouterStore } from 'mobx-react-router';\nimport React from 'react';\nimport { Link, match } from 'react-router-dom';\nimport client from 'app/shared/api/clientInstance';\nimport { getSectionClassName } from '../account/AccountUtils';\nimport { Col, Row } from 'react-bootstrap';\nimport UserUsageDetailsTable from './UserUsageDetailsTable';\nimport { InfoRow } from '../AccountPage';\nimport {\n  USAGE_DETAIL_TIME_KEY,\n  USAGE_ALL_TIME_KEY,\n  USAGE_ALL_TIME_VALUE,\n  USAGE_DAY_DETAIL_TIME_KEY,\n} from 'app/config/constants';\nimport { remoteData } from 'cbioportal-frontend-commons';\nimport {\n  ToggleValue,\n  UsageRecord,\n} from 'app/pages/usageAnalysisPage/UsageAnalysisPage';\nimport { notifyError } from 'app/shared/utils/NotificationUtils';\n\n@inject('routing')\n@observer\nexport default class UserUsageDetailsPage extends React.Component<{\n  routing: RouterStore;\n  match: match;\n}> {\n  @observable user: UserUsage;\n\n  userId = this.props.match.params['id'];\n\n  constructor(props: Readonly<{ routing: RouterStore; match: match }>) {\n    super(props);\n  }\n\n  readonly usageDetail = remoteData<Map<string, UsageRecord[]>>({\n    await: () => [],\n    invoke: async () => {\n      const result = new Map<string, UsageRecord[]>();\n      try {\n        this.user = await client.userUsageGetUsingGET({ userId: this.userId });\n        if (this.user.summary !== null) {\n          const yearSummary = this.user.summary.year;\n          const yearUsage: UsageRecord[] = [];\n          Object.keys(yearSummary).forEach(resourceEntry => {\n            yearUsage.push({\n              resource: resourceEntry,\n              usage: yearSummary[resourceEntry],\n              time: USAGE_ALL_TIME_VALUE,\n            });\n          });\n          result.set(USAGE_ALL_TIME_KEY, yearUsage);\n\n          const monthSummary = this.user.summary.month;\n          const detailSummary: UsageRecord[] = [];\n          Object.keys(monthSummary).forEach(month => {\n            const monthUsage = monthSummary[month];\n            Object.keys(monthUsage).forEach(resourceEntry => {\n              detailSummary.push({\n                resource: resourceEntry,\n                usage: monthUsage[resourceEntry],\n                time: month,\n              });\n            });\n          });\n          result.set(USAGE_DETAIL_TIME_KEY, detailSummary);\n\n          const daySummary = this.user.summary.day;\n          const dayDetailSummary: UsageRecord[] = [];\n          Object.keys(daySummary).forEach(day => {\n            const dayUsage = daySummary[day];\n            Object.keys(dayUsage).forEach(resourceEntry => {\n              dayDetailSummary.push({\n                resource: resourceEntry,\n                usage: dayUsage[resourceEntry],\n                time: day,\n              });\n            });\n          });\n          result.set(USAGE_DAY_DETAIL_TIME_KEY, dayDetailSummary);\n        }\n      } catch (error) {\n        notifyError(error, 'Failed to load user data usage with error: ');\n      }\n      return Promise.resolve(result);\n    },\n    default: new Map(),\n  });\n\n  render() {\n    return (\n      <>\n        <Row className={getSectionClassName(true)}>\n          <Col>\n            <h5>User Usage Information</h5>\n            <hr />\n            {this.user ? (\n              <>\n                <InfoRow\n                  title=\"First Name\"\n                  content={this.user.userFirstName}\n                ></InfoRow>\n                <InfoRow\n                  title=\"Last Name\"\n                  content={this.user.userLastName}\n                ></InfoRow>\n                <InfoRow title=\"Email\">\n                  <Link to={`/users/${this.user.userEmail}`}>\n                    {this.user.userEmail}\n                  </Link>\n                </InfoRow>\n                <InfoRow title=\"Company\" content={this.user.company}></InfoRow>\n                <InfoRow\n                  title=\"Job Title\"\n                  content={this.user.jobTitle}\n                ></InfoRow>\n                <InfoRow\n                  title=\"License Type\"\n                  content={this.user.licenseType}\n                ></InfoRow>\n              </>\n            ) : (\n              <span>Not available</span>\n            )}\n          </Col>\n        </Row>\n\n        <UserUsageDetailsTable\n          data={this.usageDetail.result}\n          loadedData={this.usageDetail.isComplete}\n          defaultResourcesType={ToggleValue.PUBLIC_RESOURCES}\n          defaultTimeType={ToggleValue.RESULTS_BY_MONTH}\n        />\n      </>\n    );\n  }\n}\n","import OncoKBTable from 'app/components/oncokbTable/OncoKBTable';\nimport { filterByKeyword } from 'app/shared/utils/Utils';\nimport autobind from 'autobind-decorator';\nimport _ from 'lodash';\nimport { action, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { Row } from 'react-bootstrap';\nimport {\n  getUsageTableColumnDefinition,\n  ToggleValue,\n  UsageRecord,\n  UsageTableColumnKey,\n} from 'app/pages/usageAnalysisPage/UsageAnalysisPage';\nimport {\n  USAGE_DETAIL_TIME_KEY,\n  USAGE_ALL_TIME_KEY,\n} from 'app/config/constants';\nimport { UsageToggleGroup } from './UsageToggleGroup';\nimport {\n  emailHeader,\n  filterDependentTimeHeader,\n} from 'app/components/oncokbTable/HeaderConstants';\nimport UsageText from 'app/shared/texts/UsageText';\n\ntype IResourceUsageDetailsTable = {\n  data: Map<string, UsageRecord[]>;\n  loadedData: boolean;\n  defaultTimeType: ToggleValue;\n};\n\n@observer\nexport default class ResourceUsageDetailsTable extends React.Component<\n  IResourceUsageDetailsTable,\n  {}\n> {\n  @observable timeTypeToggleValue: ToggleValue = this.props.defaultTimeType;\n\n  @autobind\n  @action\n  handleTimeTypeToggleChange(value: ToggleValue) {\n    this.timeTypeToggleValue = value;\n  }\n\n  render() {\n    return (\n      <>\n        <OncoKBTable\n          data={\n            this.timeTypeToggleValue === ToggleValue.RESULTS_IN_TOTAL\n              ? this.props.data.get(USAGE_ALL_TIME_KEY) || []\n              : this.props.data.get(USAGE_DETAIL_TIME_KEY) || []\n          }\n          columns={[\n            {\n              ...getUsageTableColumnDefinition(UsageTableColumnKey.RESOURCES),\n              Header: emailHeader,\n              onFilter: (data: UsageRecord, keyword) =>\n                filterByKeyword(data.resource, keyword),\n            },\n            {\n              ...getUsageTableColumnDefinition(UsageTableColumnKey.USAGE),\n              Cell(props: { original: UsageRecord }) {\n                return <UsageText usage={props.original.usage} />;\n              },\n            },\n            {\n              ...getUsageTableColumnDefinition(UsageTableColumnKey.TIME),\n              Header: filterDependentTimeHeader(this.timeTypeToggleValue),\n              onFilter: (data: UsageRecord, keyword) =>\n                filterByKeyword(data.time, keyword),\n            },\n          ]}\n          loading={this.props.loadedData ? false : true}\n          defaultSorted={[\n            {\n              id: UsageTableColumnKey.TIME,\n              desc: true,\n            },\n            {\n              id: UsageTableColumnKey.USAGE,\n              desc: true,\n            },\n          ]}\n          showPagination={true}\n          minRows={1}\n          filters={() => {\n            return (\n              <Row>\n                <UsageToggleGroup\n                  defaultValue={this.timeTypeToggleValue}\n                  toggleValues={[\n                    ToggleValue.RESULTS_IN_TOTAL,\n                    ToggleValue.RESULTS_BY_MONTH,\n                  ]}\n                  handleToggle={this.handleTimeTypeToggleChange}\n                />\n              </Row>\n            );\n          }}\n        />\n      </>\n    );\n  }\n}\n","import { UsageSummary } from 'app/shared/api/generated/API';\nimport { remoteData } from 'cbioportal-frontend-commons';\nimport { observable } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport { RouterStore } from 'mobx-react-router';\nimport React from 'react';\nimport { match } from 'react-router-dom';\nimport { ToggleValue, UsageRecord } from './UsageAnalysisPage';\nimport Client from 'app/shared/api/clientInstance';\nimport {\n  USAGE_DETAIL_TIME_KEY,\n  USAGE_ALL_TIME_KEY,\n  USAGE_ALL_TIME_VALUE,\n} from 'app/config/constants';\nimport ResourceUsageDetailsTable from './ResourceUsageDetailsTable';\nimport { decodeResourceUsageDetailPageURL } from 'app/shared/utils/Utils';\n\n@inject('routing')\n@observer\nexport default class ResourceUsageDetailsPage extends React.Component<{\n  routing: RouterStore;\n  match: match;\n}> {\n  @observable resource: UsageSummary;\n\n  endpoint: string = decodeResourceUsageDetailPageURL(\n    this.props.match.params['endpoint']\n  );\n\n  readonly resourceDetail = remoteData<Map<string, UsageRecord[]>>({\n    await: () => [],\n    invoke: async () => {\n      this.resource = await Client.resourceDetailGetUsingGET({\n        endpoint: this.endpoint,\n      });\n      const result = new Map<string, UsageRecord[]>();\n      const yearSummary = this.resource.year;\n      const yearUsage: UsageRecord[] = [];\n      Object.keys(yearSummary).forEach(resourceEntry => {\n        yearUsage.push({\n          resource: resourceEntry,\n          usage: yearSummary[resourceEntry],\n          time: USAGE_ALL_TIME_VALUE,\n        });\n      });\n      result.set(USAGE_ALL_TIME_KEY, yearUsage);\n\n      const monthSummary = this.resource.month;\n      const detailUsage: UsageRecord[] = [];\n      Object.keys(monthSummary).forEach(month => {\n        const monthUsage = monthSummary[month];\n        Object.keys(monthUsage).forEach(resourceEntry => {\n          detailUsage.push({\n            resource: resourceEntry,\n            usage: monthUsage[resourceEntry],\n            time: month,\n          });\n        });\n      });\n      result.set(USAGE_DETAIL_TIME_KEY, detailUsage);\n      return Promise.resolve(result);\n    },\n    default: new Map(),\n  });\n\n  constructor(props: Readonly<{ routing: RouterStore; match: match }>) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <h5> {this.endpoint}</h5>\n        <hr />\n        <ResourceUsageDetailsTable\n          data={this.resourceDetail.result}\n          loadedData={this.resourceDetail.isComplete}\n          defaultTimeType={ToggleValue.RESULTS_BY_MONTH}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport './PillButton.scss';\n\ntype PillButtonProps = {\n  content: string;\n  hasWarning?: boolean;\n  onDelete: (item: string) => void;\n};\n\nexport const PillButton: React.FunctionComponent<PillButtonProps> = props => {\n  return (\n    <div\n      className={classnames(\n        'content_container',\n        props.hasWarning ? 'warning_content' : ''\n      )}\n    >\n      <span\n        className={'pill-delete'}\n        onClick={() => props.onDelete(props.content)}\n      >\n        <i className=\"fa fa-times-circle\"></i>\n      </span>\n      <span style={{ margin: '5px 10px 5px 5px' }}>{props.content}</span>\n    </div>\n  );\n};\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport styles from './styles.module.scss';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { AvGroup, AvInput } from 'availity-reactstrap-validation';\nimport autobind from 'autobind-decorator';\nimport { action, observable } from 'mobx';\nimport { PillButton } from '../button/PillButton';\n\ntype IListBoxProps = {\n  list: string[];\n  conflictingItems?: string[];\n  onDelete: (item: string) => void;\n};\n\n@observer\nclass ListBox extends React.Component<IListBoxProps> {\n  render() {\n    return (\n      <div className={styles.list_container}>\n        <div className={styles.main}>\n          {this.props.list.map(item => (\n            <PillButton\n              key={item}\n              content={item}\n              onDelete={this.props.onDelete}\n              hasWarning={this.props.conflictingItems?.includes(item)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\ntype IFormListFieldProps = {\n  list: string[];\n  conflictingItems?: string[];\n  addItem: (item: string) => void;\n  deleteItem: (item: string) => void;\n  labelText: string;\n  placeholder?: string;\n  boldLabel?: boolean;\n};\n\n@observer\nexport class FormListField extends React.Component<IFormListFieldProps> {\n  @observable isInputValid = false;\n  @observable inputText = '';\n  @observable errorMessage = '';\n  @observable showError = false;\n\n  @autobind\n  listLengthValidation(\n    value: any,\n    context: any,\n    input: any,\n    cb: (isValid: boolean | string) => void\n  ) {\n    if (this.props.list.length > 0) {\n      cb(true);\n    } else {\n      cb(false);\n      this.errorMessage = 'List cannot be empty!';\n    }\n  }\n\n  @action.bound\n  domainValidation() {\n    if (this.inputText.length === 0) {\n      this.errorMessage = '';\n      return false;\n    } else if (\n      this.props.list.includes(this.inputText) ||\n      !this.inputText.includes('.')\n    ) {\n      this.errorMessage = 'Domain is not valid';\n      return false;\n    }\n    this.errorMessage = '';\n    return true;\n  }\n\n  @action.bound\n  onEnterKey(event: any) {\n    if (event.which === 13 && this.isInputValid) {\n      this.props.addItem(this.inputText);\n      this.inputText = '';\n      this.isInputValid = this.domainValidation();\n    }\n  }\n\n  render() {\n    return (\n      <AvGroup>\n        <Row>\n          <Col>\n            <div\n              className={`mb-2 ${\n                this.props.boldLabel ? 'font-weight-bold' : ''\n              }`}\n            >\n              {this.props.labelText}\n            </div>\n            <div className=\"input-group\">\n              <AvInput\n                name=\"listItemInput\"\n                placeholder={this.props.placeholder || ''}\n                value={this.inputText}\n                onChange={(event: any) => {\n                  this.inputText = event.target.value;\n                  this.isInputValid = this.domainValidation();\n                }}\n                validate={{\n                  customLength: this.listLengthValidation,\n                }}\n                onKeyPress={this.onEnterKey}\n                onBlur={() => {\n                  // Only show the list length error message when the user clicks off the input\n                  if (this.errorMessage) {\n                    this.showError = true;\n                  }\n                }}\n              />\n              <div className=\"input-group-append\">\n                <Button\n                  className={`${styles.add} btn btn-light`}\n                  style={{ zIndex: 0 }}\n                  onClick={() => {\n                    this.props.addItem(this.inputText);\n                    this.inputText = '';\n                    this.isInputValid = this.domainValidation();\n                  }}\n                  disabled={!this.isInputValid}\n                >\n                  Add\n                </Button>\n              </div>\n              <span\n                className=\"text-danger\"\n                style={{\n                  width: '100%',\n                  marginTop: '0.25rem',\n                  fontSize: '80%',\n                }}\n              >\n                {this.showError && this.errorMessage}\n              </span>\n            </div>\n          </Col>\n          <Col>\n            <ListBox\n              list={this.props.list}\n              onDelete={(item: string) => this.props.deleteItem(item)}\n              conflictingItems={this.props.conflictingItems}\n            />\n          </Col>\n        </Row>\n      </AvGroup>\n    );\n  }\n}\n","import React from 'react';\n\nexport type IFormTextAreaProps = {\n  onTextAreaChange?: (event: any) => void;\n  label: string;\n  style?: React.CSSProperties;\n  disabled?: boolean;\n  value?: string;\n  boldLabel?: boolean;\n};\n\nexport const FormTextAreaField: React.FunctionComponent<IFormTextAreaProps> = props => {\n  return (\n    <div className=\"form-group\">\n      <label className={props.boldLabel ? 'form-label font-weight-bold' : ''}>\n        {props.label}\n      </label>\n      <textarea\n        onChange={props.onTextAreaChange}\n        style={props.style || { minHeight: '50px' }}\n        className=\"form-control\"\n        disabled={props.disabled || false}\n        defaultValue={props.value}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport Select, { components, Props as SelectProps } from 'react-select';\nimport _ from 'lodash';\n\nconst Option: React.FunctionComponent<any> = (props: any) => {\n  return (\n    <>\n      <components.Option {...props}>\n        <div>\n          <strong>{props.data.label}</strong>\n          <div>{props.data.description}</div>\n        </div>\n      </components.Option>\n    </>\n  );\n};\n\ntype AdditionalInfoSelectOption = {\n  label: string;\n  description: string;\n  value: any;\n};\n\ntype IAdditionalInfoSelect = {\n  options: AdditionalInfoSelectOption[];\n  onSelection: (selectedOption: any) => void;\n  name: string;\n  defaultValue?: { label: string; value: any };\n};\n\nexport const AdditionalInfoSelect: React.FunctionComponent<IAdditionalInfoSelect> = props => {\n  return (\n    <Select\n      name={props.name}\n      components={{ Option }}\n      options={props.options}\n      onChange={props.onSelection}\n      defaultValue={props.defaultValue}\n    />\n  );\n};\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { Alert, Button, Col, Row } from 'react-bootstrap';\nimport { observable, action, computed } from 'mobx';\nimport { CompanyVM } from 'app/shared/api/generated/API';\nimport { FormListField } from 'app/shared/list/FormListField';\nimport { getSectionClassName } from 'app/pages/account/AccountUtils';\nimport { FormTextAreaField } from '../../shared/textarea/FormTextAreaField';\nimport { FormSelectWithLabelField } from '../../shared/select/FormSelectWithLabelField';\nimport { AvField, AvForm } from 'availity-reactstrap-validation';\nimport {\n  LicenseType,\n  LICENSE_TITLES,\n  LicenseStatus,\n  CompanyType,\n  COMPANY_TYPE_TITLES,\n  LICENSE_STATUS_TITLES,\n  LicenseModel,\n  LICENSE_MODEL_TITLES,\n  LICENSE_MODEL_DESCRIPTIONS,\n} from 'app/config/constants';\nimport client from 'app/shared/api/clientInstance';\nimport _ from 'lodash';\nimport { notifyError } from 'app/shared/utils/NotificationUtils';\nimport { AdditionalInfoSelect } from 'app/shared/dropdown/AdditionalInfoSelect';\nimport {\n  debouncedCompanyNameValidator,\n  fieldRequiredValidation,\n  textValidation,\n} from 'app/shared/utils/FormValidationUtils';\n\ntype INewCompanyFormProps = {\n  onValidSubmit: (newCompany: Partial<CompanyVM>) => void;\n};\n\nexport const COMPANY_FORM_OPTIONS = {\n  companyType: Object.keys(CompanyType).map(type => {\n    return {\n      value: CompanyType[type],\n      label: COMPANY_TYPE_TITLES[CompanyType[type]],\n    };\n  }),\n  licenseType: Object.keys(LicenseType).map(type => {\n    return {\n      value: LicenseType[type],\n      label: LICENSE_TITLES[LicenseType[type]],\n    };\n  }),\n  licenseModel: Object.keys(LicenseModel).map(type => {\n    return {\n      value: LicenseModel[type],\n      label: LICENSE_MODEL_TITLES[LicenseModel[type]],\n      description: LICENSE_MODEL_DESCRIPTIONS[LicenseModel[type]],\n    };\n  }),\n  licenseStatus: Object.keys(LicenseStatus).map(type => {\n    return {\n      value: LicenseStatus[type],\n      label: LICENSE_STATUS_TITLES[LicenseStatus[type]],\n    };\n  }),\n};\n\n@observer\nexport class NewCompanyForm extends React.Component<INewCompanyFormProps> {\n  @observable companyDescription = '';\n  @observable companyDomains: string[] = [];\n  @observable selectedCompanyType: CompanyType = CompanyType.PARENT;\n  @observable selectedLicenseModel: LicenseModel = LicenseModel.FULL;\n  @observable selectedLicenseType: LicenseType = LicenseType.COMMERCIAL;\n  @observable selectedLicenseStatus: LicenseStatus = LicenseStatus.REGULAR;\n  @observable conflictingDomains: string[] = [];\n\n  @action.bound\n  updateCompanyDescription(event: any) {\n    this.companyDescription = event.target.value;\n  }\n\n  @computed\n  get licenseStatusOptions() {\n    const optionSubset = [LicenseStatus.TRIAL, LicenseStatus.REGULAR];\n    return COMPANY_FORM_OPTIONS.licenseStatus.filter(option =>\n      optionSubset.includes(option.value)\n    );\n  }\n\n  @action\n  verifyCompanyDomains() {\n    if (this.selectedLicenseModel !== LicenseModel.FULL) {\n      this.conflictingDomains = [];\n      return;\n    }\n    client\n      .verifyCompanyDomainUsingPOST({ names: Array.from(this.companyDomains) })\n      .then(\n        conflictingDomains =>\n          (this.conflictingDomains = conflictingDomains.map(\n            domainDTO => domainDTO.name\n          ))\n      )\n      .catch((error: Error) => notifyError(error));\n  }\n\n  @action.bound\n  handleValidSubmit(event: any, values: any) {\n    const newCompany: Partial<CompanyVM> = {\n      businessContact: values.businessContact,\n      companyType: this.selectedCompanyType,\n      description: this.companyDescription,\n      legalContact: values.legalContact,\n      licenseStatus: this.selectedLicenseStatus,\n      licenseModel: this.selectedLicenseModel,\n      licenseType: this.selectedLicenseType,\n      name: values.companyName,\n      companyDomains: this.companyDomains,\n    };\n    this.props.onValidSubmit(newCompany);\n  }\n\n  render() {\n    return (\n      <AvForm\n        onValidSubmit={this.handleValidSubmit}\n        onKeyPress={(event: any) => {\n          if (event.which === 13) {\n            event.preventDefault();\n          }\n        }}\n      >\n        <Row>\n          <Col md=\"3\">\n            <h5>Company Information</h5>\n          </Col>\n          <Col md=\"9\">\n            <AvField\n              name=\"companyName\"\n              label=\"Name\"\n              validate={{\n                ...fieldRequiredValidation('company name'),\n                ...textValidation(1, 100),\n                async: debouncedCompanyNameValidator,\n              }}\n            />\n            <FormTextAreaField\n              onTextAreaChange={this.updateCompanyDescription}\n              label={'Company Description'}\n            />\n            <FormSelectWithLabelField\n              labelText={'Company Type'}\n              name={'companyType'}\n              defaultValue={{\n                value: CompanyType.PARENT,\n                label: COMPANY_TYPE_TITLES[CompanyType.PARENT],\n              }}\n              options={COMPANY_FORM_OPTIONS.companyType}\n              onSelection={(selectedOption: any) =>\n                (this.selectedCompanyType = selectedOption.value)\n              }\n            />\n            <AvField\n              name=\"businessContact\"\n              label=\"Business Contact\"\n              validate={{ ...textValidation(0, 255) }}\n            />\n            <AvField\n              name=\"legalContact\"\n              label=\"Legal Contact\"\n              validate={{ ...textValidation(0, 255) }}\n            />\n            <FormListField\n              list={this.companyDomains}\n              addItem={(domain: string) => {\n                this.companyDomains.push(domain);\n                this.verifyCompanyDomains();\n              }}\n              deleteItem={(domain: string) => {\n                this.companyDomains = this.companyDomains.filter(\n                  domainName => domainName !== domain\n                );\n                this.conflictingDomains = this.conflictingDomains.filter(\n                  domainName => domainName !== domain\n                );\n              }}\n              labelText={'Company Domains'}\n              placeholder={'Include at least one domain. ie) oncokb.org'}\n              conflictingItems={this.conflictingDomains}\n            />\n            {this.conflictingDomains.length > 0 ? (\n              <Alert variant=\"warning\">\n                <i className={'mr-2 fa fa-exclamation-triangle'} />\n                <span>\n                  The domains highlighted in yellow are associated with another\n                  regular tiered company.\n                </span>\n              </Alert>\n            ) : null}\n          </Col>\n        </Row>\n        <Row className={getSectionClassName()}>\n          <Col md=\"3\">\n            <h5>License Information</h5>\n          </Col>\n          <Col md=\"9\">\n            <div className=\"form-group\">\n              <div className={`mb-2`}>License Model</div>\n              <AdditionalInfoSelect\n                name={'licenseModel'}\n                defaultValue={{\n                  value: LicenseModel.FULL,\n                  label: LICENSE_MODEL_TITLES[LicenseModel.FULL],\n                }}\n                options={COMPANY_FORM_OPTIONS.licenseModel}\n                onSelection={(selectedOption: any) => {\n                  this.selectedLicenseModel = selectedOption.value;\n                  this.verifyCompanyDomains();\n                }}\n              />\n            </div>\n            <FormSelectWithLabelField\n              labelText={'License Type'}\n              name={'licenseType'}\n              defaultValue={{\n                value: LicenseType.COMMERCIAL,\n                label: LICENSE_TITLES[LicenseType.COMMERCIAL],\n              }}\n              options={COMPANY_FORM_OPTIONS.licenseType}\n              onSelection={(selectedOption: any) =>\n                (this.selectedLicenseType = selectedOption.value)\n              }\n            />\n            <FormSelectWithLabelField\n              labelText={'License Status'}\n              name={'licenseStatus'}\n              defaultValue={{\n                value: LicenseStatus.REGULAR,\n                label: LICENSE_STATUS_TITLES[LicenseStatus.REGULAR],\n              }}\n              options={this.licenseStatusOptions}\n              onSelection={(selectedOption: any) =>\n                (this.selectedLicenseStatus = selectedOption.value)\n              }\n            />\n          </Col>\n        </Row>\n        <Row className={getSectionClassName()}>\n          <Col md=\"3\">\n            <h5>Review Information</h5>\n          </Col>\n          <Col md=\"9\">\n            <Button type=\"submit\">Create Company</Button>\n          </Col>\n        </Row>\n      </AvForm>\n    );\n  }\n}\n","import React from 'react';\nimport { Button, ButtonProps } from 'react-bootstrap';\n\nexport const QuickToolButton: React.FunctionComponent<ButtonProps> = (\n  props: ButtonProps\n) => {\n  return (\n    <Button variant=\"outline-primary\" className={'m-2'} {...props}>\n      {props.children}\n    </Button>\n  );\n};\n","import _ from 'lodash';\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { observer } from 'mobx-react';\nimport client from 'app/shared/api/clientInstance';\nimport { remoteData } from 'cbioportal-frontend-commons';\nimport styles from './CompanyDetailsPage.module.scss';\nimport { CompanyDTO } from 'app/shared/api/generated/API';\nimport OncoKBTable, {\n  SearchColumn,\n} from 'app/components/oncokbTable/OncoKBTable';\nimport { getSectionClassName } from 'app/pages/account/AccountUtils';\nimport { notifyError } from 'app/shared/utils/NotificationUtils';\nimport { filterByKeyword } from 'app/shared/utils/Utils';\nimport { PAGE_ROUTE } from 'app/config/constants';\nimport LoadingIndicator, {\n  LoaderSize,\n} from '../../components/loadingIndicator/LoadingIndicator';\nimport { Link } from 'react-router-dom';\nimport { QuickToolButton } from '../userPage/QuickToolButton';\n\n@observer\nexport default class CompanyDetailsPage extends React.Component {\n  readonly companies = remoteData<CompanyDTO[]>({\n    invoke() {\n      return client.getAllCompaniesUsingGET({});\n    },\n    onError: (error: Error) => notifyError(error, 'Error fetching companies'),\n    default: [],\n  });\n\n  private columns: SearchColumn<CompanyDTO>[] = [\n    {\n      id: 'companyUserCount',\n      Header: <span className={styles.tableHeader}>Users</span>,\n      minWidth: 60,\n      accessor: 'numberOfUsers',\n      Cell(props: { original: CompanyDTO }): any {\n        return <div>{props.original.numberOfUsers}</div>;\n      },\n    },\n    {\n      id: 'companyName',\n      Header: <span className={styles.tableHeader}>Company Name</span>,\n      minWidth: 120,\n      onFilter: (data: CompanyDTO, keyword) =>\n        data.name ? filterByKeyword(data.name, keyword) : false,\n      accessor: 'name',\n      Cell(props: { original: CompanyDTO }): any {\n        return <div>{props.original.name}</div>;\n      },\n    },\n    {\n      id: 'companyDomains',\n      Header: <span className={styles.tableHeader}>Company Domains</span>,\n      minWidth: 120,\n      sortable: false,\n      accessor: 'companyDomains',\n      Cell(props: { original: CompanyDTO }): any {\n        return <div>{props.original.companyDomains[0]}</div>;\n      },\n    },\n    {\n      id: 'licenseModel',\n      Header: <span className={styles.tableHeader}>License Model</span>,\n      minWidth: 100,\n      onFilter: (data: CompanyDTO, keyword) =>\n        data.licenseModel ? filterByKeyword(data.licenseModel, keyword) : false,\n      accessor: 'licenseModel',\n      Cell(props: { original: CompanyDTO }): any {\n        return <div>{props.original.licenseModel}</div>;\n      },\n    },\n    {\n      id: 'licenseType',\n      Header: <span className={styles.tableHeader}>License Type</span>,\n      minWidth: 140,\n      onFilter: (data: CompanyDTO, keyword) =>\n        data.licenseType ? filterByKeyword(data.licenseType, keyword) : false,\n      accessor: 'licenseType',\n      Cell(props: { original: CompanyDTO }): any {\n        return <div>{props.original.licenseType}</div>;\n      },\n    },\n    {\n      id: 'licenseStatus',\n      Header: <span className={styles.tableHeader}>License Status</span>,\n      minWidth: 100,\n      onFilter: (data: CompanyDTO, keyword) =>\n        data.licenseStatus\n          ? filterByKeyword(data.licenseStatus, keyword)\n          : false,\n      accessor: 'licenseStatus',\n      Cell(props: { original: CompanyDTO }): any {\n        return <div>{props.original.licenseStatus}</div>;\n      },\n    },\n    {\n      id: 'edit',\n      Header: <span className={styles.tableHeader}>Edit</span>,\n      maxWidth: 60,\n      sortable: false,\n      className: 'justify-content-center',\n      Cell(props: { original: CompanyDTO }) {\n        return (\n          <span>\n            <Link to={`/companies/${props.original.id}`}>\n              <i className=\"fa fa-pencil-square-o\"></i>\n            </Link>\n          </span>\n        );\n      },\n    },\n  ];\n\n  render() {\n    return (\n      <>\n        {this.companies.isComplete ? (\n          <>\n            <Row className={getSectionClassName()}>\n              <Col>\n                <div>Quick Tools</div>\n                <div>\n                  <Link to={PAGE_ROUTE.ADMIN_ADD_COMPANY}>\n                    <QuickToolButton>Add New Company</QuickToolButton>\n                  </Link>\n                </div>\n              </Col>\n            </Row>\n            <Row className={getSectionClassName(false)}>\n              <Col>\n                <OncoKBTable\n                  data={this.companies.result}\n                  columns={this.columns}\n                  showPagination={true}\n                  minRows={1}\n                  defaultSorted={[\n                    {\n                      id: 'companyName',\n                      desc: true,\n                    },\n                  ]}\n                />\n              </Col>\n            </Row>\n          </>\n        ) : (\n          <LoadingIndicator\n            size={LoaderSize.LARGE}\n            center={true}\n            isLoading={this.companies.isPending}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { observer } from 'mobx-react';\n\n@observer\nexport default class ReadOnlyPage extends React.Component {\n  render() {\n    return (\n      <Alert variant=\"danger\" className=\"text-center\">\n        <h4>This page is temporarily unavailable.</h4>\n        <div>This page is down for maintenance and will be back shortly.</div>\n        <div>We apologize for any inconveniences.</div>\n      </Alert>\n    );\n  }\n}\n","import { AppConfig } from 'app/appConfig';\nimport React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport ReadOnlyPage from './ReadOnlyPage';\n\n// Todo:\n// We now have multiple types of routes (RecaptchaBoundaryRoute, PrivateRoute, and now a read only route)\n// We can combine these routes into a general route component and just specify the route type(s).\n\n/**\n * Components wrapped in the HOC will display a warning page or have a warning message added to the page\n * when application is in read only mode.\n * @param Component the original component\n * @param showWarningOnly if true and app is in read only mode, then the original component\n * will be displayed and a warning message will be added to the top of the page.\n */\n\nexport default function ReadOnlyMode(\n  Component: React.ComponentType,\n  showWarningOnly?: boolean\n) {\n  return (props: any) => {\n    if (AppConfig.serverConfig.readonly) {\n      if (showWarningOnly) {\n        return (\n          <>\n            <Alert variant=\"danger\">\n              <h4>This page is read-only</h4>\n              <div>\n                Any changes you make will NOT be saved at this time. The page\n                will be back shortly.\n              </div>\n            </Alert>\n            <Component {...props} />\n          </>\n        );\n      }\n      return <ReadOnlyPage />;\n    }\n    return <Component {...props} />;\n  };\n}\n","import React from 'react';\nimport { ErrorBoundaryRoute } from 'app/shared/error/error-boundary-route';\nimport { PAGE_ROUTE } from 'app/config/constants';\nimport { Switch } from 'react-router-dom';\nimport PageNotFound from 'app/shared/error/page-not-found';\nimport SendEmailsPage from 'app/pages/sendEmails/SendEmailsPage';\nimport UserDetailsPage from '../pages/userManagement/UserDetailsPage';\nimport { CreateAccountPage } from 'app/pages/CreateAccountPage';\nimport UsageAnalysisPage from 'app/pages/usageAnalysisPage/UsageAnalysisPage';\nimport UserUsageDetailsPage from 'app/pages/usageAnalysisPage/UserUsageDetailsPage';\nimport ResourceUsageDetailsPage from 'app/pages/usageAnalysisPage/ResourceUsageDetailsPage';\nimport { CreateCompanyPage } from 'app/pages/CreateCompanyPage';\nimport CompanyDetailsPage from 'app/pages/companyManagement/CompanyDetailsPage';\nimport ReadOnlyMode from 'app/shared/readonly/ReadOnlyMode';\n\nconst AdminRoutes = () => {\n  return (\n    <Switch>\n      <ErrorBoundaryRoute\n        exact\n        path={PAGE_ROUTE.ADMIN_USER_DETAILS}\n        component={UserDetailsPage}\n      />\n      <ErrorBoundaryRoute\n        exact\n        path={PAGE_ROUTE.ADMIN_USAGE_ANALYSIS}\n        component={UsageAnalysisPage}\n      />\n      <ErrorBoundaryRoute\n        exact\n        path={PAGE_ROUTE.ADMIN_USER_USAGE_DETAILS}\n        component={UserUsageDetailsPage}\n      />\n      <ErrorBoundaryRoute\n        exact\n        path={PAGE_ROUTE.ADMIN_RESOURCE_DETAILS}\n        component={ResourceUsageDetailsPage}\n      />\n      <ErrorBoundaryRoute\n        exact\n        path={PAGE_ROUTE.ADMIN_SEND_EMAILS}\n        component={ReadOnlyMode(SendEmailsPage)}\n      />\n      <ErrorBoundaryRoute\n        exact\n        path={PAGE_ROUTE.ADMIN_CREATE_ACCOUNT}\n        component={ReadOnlyMode(CreateAccountPage)}\n      />\n      <ErrorBoundaryRoute\n        exact\n        path={PAGE_ROUTE.ADMIN_ADD_COMPANY}\n        component={ReadOnlyMode(CreateCompanyPage)}\n      />\n      <ErrorBoundaryRoute\n        exact\n        path={PAGE_ROUTE.ADMIN_COMPANY_DETAILS}\n        component={CompanyDetailsPage}\n      />\n      <ErrorBoundaryRoute component={PageNotFound} />\n    </Switch>\n  );\n};\nexport default AdminRoutes;\n","import {\n  CHANGED_ANNOTATION_LEVEL_COLUMNS,\n  CHANGED_ANNOTATION_DRUG_COLUMNS,\n  CHANGED_ANNOTATION_ADDITIONAL_DRUG_SAME_LEVEL_COLUMNS,\n  CHANGED_ANNOTATION_ADDITIONAL_DRUG_DIFF_LEVEL_COLUMNS,\n  GENE,\n  MUTATION,\n} from 'app/pages/newsPage/NewsPageContent';\nimport { SimpleTable, SimpleTableRow } from 'app/components/SimpleTable';\nimport { Row } from 'react-bootstrap';\nimport React from 'react';\nimport _ from 'lodash';\n\nimport mainStyle from './main.module.scss';\nimport {\n  convertGeneInputToLinks,\n  getColumnIndexByName,\n  linkableMutationName,\n} from './Util';\nimport { AlterationPageLink } from 'app/shared/utils/UrlUtils';\n\nexport enum AnnotationColumnHeaderType {\n  LEVEL,\n  DRUG,\n  ADDITIONAL_SAME_LEVEL_DRUG,\n  ADDITIONAL_DIFF_LEVEL_DRUG,\n}\n\nexport const ChangedAnnotationListItem = (props: {\n  title?: string;\n  data: SimpleTableRow[];\n  columnHeaderType?: AnnotationColumnHeaderType;\n}) => {\n  let longestRow = 0;\n  if (props.data.length > 0) {\n    longestRow = _.sortBy(props.data, row => -row.content.length)[0].content\n      .length;\n  }\n\n  let annotationColumnHeader = undefined;\n  let useOneLineRowClass = true;\n  let defaultTitle = '';\n  switch (props.columnHeaderType) {\n    case AnnotationColumnHeaderType.DRUG:\n      annotationColumnHeader = CHANGED_ANNOTATION_DRUG_COLUMNS;\n      break;\n    case AnnotationColumnHeaderType.ADDITIONAL_SAME_LEVEL_DRUG:\n      annotationColumnHeader = CHANGED_ANNOTATION_ADDITIONAL_DRUG_SAME_LEVEL_COLUMNS;\n      useOneLineRowClass = false;\n      defaultTitle =\n        'Updated therapeutic implications - Addition of therapies for variants with a level of evidence';\n      break;\n    case AnnotationColumnHeaderType.ADDITIONAL_DIFF_LEVEL_DRUG:\n      annotationColumnHeader = CHANGED_ANNOTATION_ADDITIONAL_DRUG_DIFF_LEVEL_COLUMNS;\n      useOneLineRowClass = false;\n      defaultTitle = 'Changed Annotation';\n      break;\n    case AnnotationColumnHeaderType.LEVEL:\n    default:\n      annotationColumnHeader = CHANGED_ANNOTATION_LEVEL_COLUMNS;\n      useOneLineRowClass = true;\n      defaultTitle = 'Changed Annotation';\n      break;\n  }\n\n  const geneColumnIndex = getColumnIndexByName(annotationColumnHeader, GENE);\n  const mutationColumnIndex = getColumnIndexByName(\n    annotationColumnHeader,\n    MUTATION\n  );\n\n  if (mutationColumnIndex > -1 && geneColumnIndex > -1) {\n    // transform the gene and mutation input to a link, ignore the inputs with comma, pipe or slash\n    props.data.forEach(row => {\n      const geneInput = row.content[geneColumnIndex].content;\n      const mutationInput = row.content[mutationColumnIndex].content;\n      if (typeof geneInput === 'string' && typeof mutationInput === 'string') {\n        if (linkableMutationName(geneInput, mutationInput)) {\n          row.content[mutationColumnIndex].content = (\n            <AlterationPageLink\n              hugoSymbol={geneInput}\n              alteration={mutationInput}\n            />\n          );\n        }\n      }\n    });\n  }\n\n  if (geneColumnIndex > -1) {\n    // transform the gene input to link(s)\n    props.data.forEach(row => {\n      const geneInput = row.content[geneColumnIndex].content;\n      if (typeof geneInput === 'string') {\n        row.content[geneColumnIndex].content = convertGeneInputToLinks(\n          geneInput\n        );\n      }\n    });\n  }\n\n  return (\n    <li>\n      {props.title ? props.title : defaultTitle}\n      <Row className={'overflow-auto'}>\n        <SimpleTable\n          columns={annotationColumnHeader.slice(0, longestRow)}\n          rows={props.data}\n          theadClassName={useOneLineRowClass ? mainStyle.oneRowHeader : ''}\n        />\n      </Row>\n    </li>\n  );\n};\n","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\n\nconst PageContainer: React.FunctionComponent<{\n  className?: string;\n}> = props => {\n  return (\n    <Row className={`justify-content-center ${props.className}`}>\n      <Col xl={10} lg={11}>\n        {props.children}\n      </Col>\n    </Row>\n  );\n};\nexport default PageContainer;\n","export default __webpack_public_path__ + \"content/search_advanced_1.png\";","export default __webpack_public_path__ + \"content/search_advanced_2.png\";","export default __webpack_public_path__ + \"content/cbioportal-clinical.png\";","export default __webpack_public_path__ + \"content/cbioportal-biological.png\";","export default __webpack_public_path__ + \"content/ERBB.png\";","import React from 'react';\nimport pluralize from 'pluralize';\nimport { Link } from 'react-router-dom';\nimport { PAGE_ROUTE } from 'app/config/constants';\nimport { GenePageLink } from 'app/shared/utils/UrlUtils';\n\nexport type NewlyAddedGeneType = 'solid' | 'fusion' | 'heme';\nexport type NewlyAddedGenesListItemProps = {\n  title?: string;\n  sort?: boolean;\n  geneTypes?: NewlyAddedGeneType[];\n  genes: string[];\n};\nexport const NewlyAddedGenesListItem = (\n  props: NewlyAddedGenesListItemProps\n) => {\n  return (\n    <span>\n      {props.title ? (\n        `${props.title}${/[.,?!]+/.test(props.title.slice(-1)) ? '' : ':'}`\n      ) : (\n        <span>\n          Addition of {props.genes.length} new{' '}\n          {props.geneTypes\n            ? `${props.geneTypes.map(type => `${type}-`).join(', ')}associated `\n            : undefined}\n          {pluralize('gene', props.genes.length)}:\n        </span>\n      )}\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {(props.sort ? props.genes.sort() : props.genes).map((hugo: string) => (\n          <span className=\"m-2\" key={hugo}>\n            <GenePageLink hugoSymbol={hugo} />\n          </span>\n        ))}\n      </div>\n    </span>\n  );\n};\n","import React from 'react';\nimport { Linkout } from 'app/shared/links/Linkout';\n\nexport const FdaApprovalLink: React.FunctionComponent<{\n  link: string;\n  approval: string;\n  year?: string;\n}> = props => {\n  let linkText = 'FDA-approval ';\n  if (props.year) {\n    linkText += `(${props.year}) `;\n  }\n  linkText += `of ${props.approval}`;\n  return <Linkout link={props.link}>{linkText}</Linkout>;\n};\nexport const FdaWithdrawalLink: React.FunctionComponent<{\n  linkText: string;\n}> = props => {\n  return (\n    <Linkout link=\"https://www.fda.gov/drugs/resources-information-approved-drugs/withdrawn-cancer-accelerated-approvals\">\n      {props.linkText}\n    </Linkout>\n  );\n};\nexport const FdaBreakthroughLink: React.FunctionComponent<{\n  link: string;\n}> = props => {\n  return (\n    <Linkout link={props.link}>FDA breakthrough therapy designation</Linkout>\n  );\n};\nexport const AbstractLink: React.FunctionComponent<{\n  link: string;\n  abstract: string;\n}> = props => {\n  return (\n    <span>\n      Abstract: <Linkout link={props.link}>{props.abstract}</Linkout>\n    </span>\n  );\n};\nexport const NccnLink: React.FunctionComponent<{\n  version: string;\n  cancerType: string;\n}> = props => {\n  return (\n    <span>\n      Listing in {props.cancerType} NCCN {props.version}\n    </span>\n  );\n};\n","import React from 'react';\n\nexport const PMALink: React.FunctionComponent<{ pma: string }> = props => {\n  return (\n    <span>\n      <a\n        href={`https://www.accessdata.fda.gov/scripts/cdrh/cfdocs/cfpma/pma.cfm?id=${props.pma}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{ whiteSpace: 'nowrap' }}\n      >\n        {props.pma}\n      </a>\n    </span>\n  );\n};\n","import React from 'react';\nimport { ElementType } from 'app/components/SimpleTable';\nimport { GenePageLink } from 'app/shared/utils/UrlUtils';\nimport WithSeparator from 'react-with-separator';\n\nexport const convertGeneInputToLinks = (geneInput: string): ElementType => {\n  const itemLinks = geneInput\n    .trim()\n    .split(',')\n    .map(gene => <GenePageLink key={gene} hugoSymbol={gene.trim()} />);\n\n  return <WithSeparator separator=\", \">{itemLinks}</WithSeparator>;\n};\n\nexport const linkableMutationName = (\n  geneInput: string,\n  mutationInput: string\n): boolean => {\n  const excludedChars = [\n    ',',\n    '|',\n    '/',\n    'Oncogenic Ligand-Binding Domain Missense Mutations (310_547)',\n    'Oncogenic Ligand-Binding Domain In-Frame Insertions or Deletions (310_547)',\n  ];\n  const geneInputHasExcludedChars = excludedChars.some(char =>\n    geneInput.includes(char)\n  );\n  const mutationInputHasExcludedChars = excludedChars.some(char =>\n    mutationInput.includes(char)\n  );\n  return !geneInputHasExcludedChars && !mutationInputHasExcludedChars;\n};\n\nexport const getColumnIndexByName = (\n  annotationColumnHeader: {\n    name: string;\n  }[],\n  columnName: string\n): number => {\n  return annotationColumnHeader.findIndex(column => column.name === columnName);\n};\n","export enum PromiseStatus {\n  pending = 'pending',\n  complete = 'complete',\n  error = 'error',\n}\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport SearchOneImg from 'content/images/search_advanced_1.png';\nimport SearchTwoImg from 'content/images/search_advanced_2.png';\nimport ClinicalImg from 'content/images/cbioportal-clinical.png';\nimport BiologicalImg from 'content/images/cbioportal-biological.png';\nimport ERBBImg from 'content/images/ERBB.png';\nimport { ElementType, SimpleTable } from 'app/components/SimpleTable';\nimport {\n  NewlyAddedGenesListItem,\n  NewlyAddedGeneType,\n} from 'app/pages/newsPage/NewlyAddedGenesListItem';\nimport { Link } from 'react-router-dom';\nimport {\n  FAQ_URL_PATTERNS_LINK,\n  LEVEL_TYPES,\n  PAGE_ROUTE,\n  ONCOKB_DATAHUB_LINK,\n  ONCOKB_TM,\n  MSK_IMPACT_TM,\n} from 'app/config/constants';\nimport {\n  AlterationPageLink,\n  GenePageLink,\n  MSILink,\n  SopPageLink,\n  YearEndReviewPageLink,\n  getAlterationPageLink,\n} from 'app/shared/utils/UrlUtils';\nimport { PMIDLink } from 'app/shared/links/PMIDLink';\nimport { Linkout } from 'app/shared/links/Linkout';\nimport { LevelOfEvidencePageLink } from 'app/shared/links/LevelOfEvidencePageLink';\nimport {\n  AbstractLink,\n  FdaApprovalLink,\n  FdaBreakthroughLink,\n  FdaWithdrawalLink,\n  NccnLink,\n} from 'app/pages/newsPage/Links';\nimport WithSeparator from 'react-with-separator';\nimport mainstyle from 'app/pages/newsPage/main.module.scss';\nimport { PMALink } from 'app/shared/links/PMALink';\nimport OptimizedImage from 'app/shared/image/OptimizedImage';\nimport { AnnotationColumnHeaderType } from './ChangedAnnotatonListItem';\nimport { linkableMutationName, convertGeneInputToLinks } from './Util';\n\nexport type ChangedAnnotation = {\n  content: ElementType[][];\n  title?: string;\n  columnHeaderType?: AnnotationColumnHeaderType;\n};\n\nexport type NewsData = {\n  priorityNews?: ElementType[];\n  news?: ElementType[];\n  newlyAddedGenes?: string[];\n  newlyAddedGenesTypes?: NewlyAddedGeneType[];\n  updatedImplication?: ElementType[][];\n  updatedImplicationTitle?: string;\n  numOfAssociationsInUpdatedImplication?: number;\n  updatedImplicationInOldFormat?: { [level: string]: ElementType[] };\n  changedAnnotations?: ChangedAnnotation[];\n};\n\nexport const GENE = 'Gene';\nexport const MUTATION = 'Mutation';\nexport const CANCER_TYPE = 'Cancer Type';\nexport const DRUG = 'Drug';\nexport const LEVEL = 'Level';\nexport const DRUGS = 'Drug(s)';\nexport const EVIDENCE = 'Evidence';\nexport const PREVIOUS_LEVEL = 'Previous Level';\nexport const CURRENT_LEVEL = 'Current Level';\nexport const REASON = 'Reason';\nexport const PREVIOUS_DRUG = 'Previous Drug';\nexport const CURRENT_DRUG = 'Current Drug';\nexport const UPDATE = 'Update';\nexport const CURRENT_LEVEL_OF_EVIDENCE = 'Current Level of Evidence';\nexport const PREVIOUS_LEVEL_OF_EVIDENCE = 'Previous Level of Evidence';\nexport const DRUGS_ADDED_TO_ONCOKB = `Drug(s) added to ${ONCOKB_TM}`;\nexport const DRUGS_CURRENTLY_IN_ONCOKB = `Drug(s) currently in ${ONCOKB_TM}`;\nexport const PREVIOUS_BIOMARKER_ASSOCIATION = 'Previous Biomarker Association';\nexport const CURRENT_BIOMARKER_ASSOCIATION = 'Current Biomarker Association';\n\nexport const NEWLY_ADDED_LEVEL_FOUR_COLUMNS = [\n  { name: GENE, size: 2 },\n  { name: MUTATION, size: 6 },\n  { name: CANCER_TYPE, size: 2 },\n  { name: DRUG, size: 2 },\n];\n\nexport const UPDATED_IMPLICATION_COLUMNS = [\n  { name: LEVEL },\n  { name: GENE },\n  { name: MUTATION },\n  { name: CANCER_TYPE },\n  { name: DRUGS },\n  { name: EVIDENCE },\n];\n\nexport const UPDATED_IMPLICATION_OLD_FORMAT_COLUMNS = [\n  { name: LEVEL },\n  { name: UPDATE },\n];\n\nexport const CHANGED_ANNOTATION_LEVEL_COLUMNS = [\n  { name: GENE },\n  { name: MUTATION },\n  { name: CANCER_TYPE },\n  { name: DRUGS },\n  { name: PREVIOUS_LEVEL },\n  { name: CURRENT_LEVEL },\n  { name: REASON },\n];\n\nexport const CHANGED_ANNOTATION_DRUG_COLUMNS = [\n  { name: LEVEL },\n  { name: GENE },\n  { name: MUTATION },\n  { name: CANCER_TYPE },\n  { name: PREVIOUS_DRUG },\n  { name: CURRENT_DRUG },\n  { name: EVIDENCE },\n];\n\nexport const CHANGED_ANNOTATION_ADDITIONAL_DRUG_SAME_LEVEL_COLUMNS = [\n  { name: GENE },\n  { name: MUTATION },\n  { name: CANCER_TYPE },\n  { name: CURRENT_LEVEL_OF_EVIDENCE },\n  { name: DRUGS_CURRENTLY_IN_ONCOKB },\n  { name: DRUGS_ADDED_TO_ONCOKB },\n  { name: EVIDENCE },\n];\n\nexport const CHANGED_ANNOTATION_ADDITIONAL_DRUG_DIFF_LEVEL_COLUMNS = [\n  { name: GENE },\n  { name: MUTATION },\n  { name: CANCER_TYPE },\n  { name: PREVIOUS_LEVEL_OF_EVIDENCE },\n  { name: CURRENT_LEVEL_OF_EVIDENCE },\n  { name: DRUGS_CURRENTLY_IN_ONCOKB },\n  { name: DRUGS_ADDED_TO_ONCOKB },\n  { name: EVIDENCE },\n];\n\nexport const CDX_COLUMNS = [\n  { name: LEVEL },\n  { name: GENE },\n  { name: CANCER_TYPE },\n  { name: DRUG },\n  { name: PREVIOUS_BIOMARKER_ASSOCIATION },\n  { name: CURRENT_BIOMARKER_ASSOCIATION },\n  { name: EVIDENCE },\n];\nexport const NEWLY_ADDED_LEVEL_FOUR = [\n  ['ATM', 'Oncogenic Mutations', 'Prostate Cancer', 'Olaparib'],\n  [\n    'BRAF',\n    'D287H, D594A, D594G, D594H, D594N, F595L, G464E, G464V, G466A, G466E, G466V, G469A, G469E, G469R, G469V, G596D, G596R, K601N, K601T, L597Q, L597V, N581I, N581S, S467L, V459L',\n    'All Tumors',\n    'PLX8394',\n  ],\n  [\n    'CDKN2A',\n    'Oncogenic Mutations',\n    'All Tumors',\n    'Abemaciclib, Palbociclib, Ribociclib',\n  ],\n  ['EGFR', 'A289V, R108K, T263P', 'Glioma', 'Lapatinib'],\n  ['EGFR', 'Amplification', 'Glioma', 'Lapatinib'],\n  ['EWSR1', 'EWSR1-FLI1 Fusion', 'Ewing Sarcoma', 'TK216'],\n  [\n    'FGFR1',\n    'Oncogenic Mutations',\n    'All Tumors',\n    'AZD4547, BGJ398, Debio1347, Erdafitinib',\n  ],\n  [\n    'FGFR2',\n    'Oncogenic Mutations',\n    'All Tumors',\n    'AZD4547, BGJ398, Debio1347, Erdafitinib',\n  ],\n  [\n    'KRAS',\n    'Oncogenic Mutations',\n    'All Tumors',\n    'KO-947, LY3214996, Ravoxertinib, Ulixertinib',\n  ],\n  ['MTOR', 'Oncogenic Mutations', 'All Tumors', 'Everolimus, Temsirolimus'],\n  ['NF1', 'Oncogenic Mutations', 'All Tumors', 'Cobimetinib, Trametinib'],\n  ['PTEN', 'Oncogenic Mutations', 'All Tumors', 'AZD8186, GSK2636771'],\n  ['SMARCB1', 'Oncogenic Mutations', 'All Tumors', 'Tazemetostat'],\n];\n\nconst EVIDENCE_COLUMN_SEPARATOR = '; ';\n\n// NOTE: cannot associate a type to the object literal in order to have the CHANGED_ANNOTATION_DATE type works\n// https://stackoverflow.com/questions/41947168/is-it-possible-to-use-keyof-operator-on-literals-instead-of-interfaces\n\nexport const NEWS_BY_DATE: { [date: string]: NewsData } = {\n  '10022023': {\n    changedAnnotations: [\n      {\n        columnHeaderType: AnnotationColumnHeaderType.LEVEL,\n        title: 'Updated therapeutic implications - Changed level of evidence',\n        content: [\n          [\n            'RET',\n            'Oncogenic Mutations',\n            'Medullary Thyroid Cancer (MTC)',\n            'Pralsetinib',\n            '1',\n            '3A',\n            <FdaWithdrawalLink linkText=\"Withdrawal of FDA approval for Pralsetinib for RET-mutant MTC\" />,\n          ],\n          [\n            'ALK',\n            'Oncogenic Mutations',\n            'Non-Small Cell Lung Cancer',\n            'Lorlatinib',\n            '1',\n            'No level',\n            <Linkout link=\"https://www.accessdata.fda.gov/drugsatfda_docs/label/2021/210868s004lbl.pdf\">\n              Adherence to FDA drug label and CDx for Lorlatinib\n            </Linkout>,\n          ],\n        ],\n      },\n      {\n        columnHeaderType: AnnotationColumnHeaderType.ADDITIONAL_SAME_LEVEL_DRUG,\n        content: [\n          [\n            'Other Biomarkers',\n            'MSI-H',\n            'Endometrial Cancer',\n            '1',\n            'Pembrolizumab (All Solid Tumors)',\n            'Dostarlimab + Carboplatin + Paclitaxel (Level 1, Endometrial Cancer)',\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaApprovalLink\n                approval={'Dostarlimab for MSI-H endometrial cancer'}\n                link={\n                  'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-quizartinib-newly-diagnosed-acute-myeloid-leukemia'\n                }\n              />\n              <PMIDLink pmids={'36972026'} />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n    newlyAddedGenes: [\n      'ELF4',\n      'ELK4',\n      'ELL',\n      'ELN',\n      'ERC1',\n      'FOXN4',\n      'HIRA',\n      'ONECUT2',\n      'POU3F2',\n      'SF3B2',\n      'ZBTB7A',\n    ],\n  },\n  '09012023': {\n    newlyAddedGenes: [\n      'ACVR1B',\n      'ARHGEF12',\n      'BCL7A',\n      'CD19',\n      'CHD2',\n      'COL2A1',\n      'DNM2',\n      'DPYD',\n      'EBF1',\n      'EIF3E',\n      'FANCM',\n      'FHIT',\n      'FOXO3',\n      'GATA6',\n      'GRM3',\n      'HDAC2',\n      'HNF1B',\n      'IFNAR1',\n      'ING1',\n      'ITPKB',\n      'KDM5D',\n      'KLHL6',\n      'LEF1',\n      'MAP3K7',\n      'MLH3',\n      'MS4A1',\n      'PHLPP1',\n      'PHLPP2',\n      'PTPN13',\n      'PTPN14',\n      'RPL5',\n      'SLC9A3R1',\n      'SLIT2',\n      'SZT2',\n      'TONSL',\n      'XPC',\n      'XRCC1',\n      'ZMYM3',\n    ],\n  },\n  '07282023': {\n    changedAnnotations: [\n      {\n        columnHeaderType: AnnotationColumnHeaderType.ADDITIONAL_SAME_LEVEL_DRUG,\n        content: [\n          [\n            'FLT3',\n            <Link\n              to={getAlterationPageLink({\n                hugoSymbol: 'FLT3',\n                alteration: 'Internal tandem duplication',\n              })}\n            >\n              Internal Tandem Duplications (ITD)\n            </Link>,\n            'Acute Myeloid Leukemia',\n            '1',\n            <WithSeparator\n              separator={\n                <>\n                  ,<br />\n                </>\n              }\n            >\n              <>\n                Gilteritinib\n                <br />\n                (Level 1)\n              </>\n              <>\n                Midostaurin + High Dose Chemotherapy\n                <br />\n                (Level 1)\n              </>\n              <>\n                Crenolanib\n                <br />\n                (Level 3A)\n              </>\n              <>\n                Quizartinib\n                <br />\n                (Level 3A)\n              </>\n            </WithSeparator>,\n            <>\n              Quizartinib\n              <br />\n              (Promoted to Level 1)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaApprovalLink\n                approval={'Quizartinib'}\n                link={\n                  'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-quizartinib-newly-diagnosed-acute-myeloid-leukemia'\n                }\n              />\n              <PMIDLink pmids={'37116523'} />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n    newlyAddedGenes: [\n      'CACNA1D',\n      'CANT1',\n      'CBFA2T3',\n      'CD22',\n      'CD74',\n      'CDH2',\n      'CDH4',\n      'CDH11',\n      'CLTCL1',\n      'CNTRL',\n      'COL1A1',\n      'CUL4A',\n      'DDX5',\n      'FSTL1',\n    ],\n  },\n  '07122023': {\n    news: [\n      <span>\n        Updated therapeutic implications - new alterations with a level of\n        evidence\n        <Row className={'overflow-auto'}>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Level</th>\n                <th>Gene</th>\n                <th>Mutation</th>\n                <th>Cancer Type</th>\n                <th>Drug(s)</th>\n                <th>Evidence</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>1</td>\n                <td>\n                  <GenePageLink hugoSymbol={'ATR'} />\n                </td>\n                <td rowSpan={5} style={{ verticalAlign: 'middle' }}>\n                  Oncogenic Mutations\n                </td>\n                <td rowSpan={5} style={{ verticalAlign: 'middle' }}>\n                  Prostate Cancer\n                </td>\n                <td rowSpan={5} style={{ verticalAlign: 'middle' }}>\n                  Talazoparib + Enzalutamide\n                </td>\n                <td rowSpan={5} style={{ verticalAlign: 'middle' }}>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <FdaApprovalLink\n                      approval={'Talazoparib + Enzalutamide'}\n                      link={\n                        'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-talazoparib-enzalutamide-hrr-gene-mutated-metastatic-castration-resistant-prostate#:~:text=On%20June%2020%2C%202023%2C%20the,resistant%20prostate%20cancer%20(mCRPC).'\n                      }\n                    />\n                    <PMIDLink pmids={'37285865'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>\n                  <GenePageLink hugoSymbol={'FANCA'} />\n                </td>\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>\n                  <GenePageLink hugoSymbol={'MLH1'} />\n                </td>\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>\n                  <GenePageLink hugoSymbol={'MRE11'} />\n                </td>\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>\n                  <GenePageLink hugoSymbol={'NBN'} />\n                </td>\n              </tr>\n              <tr>\n                <td>2</td>\n                <td>\n                  <GenePageLink hugoSymbol={'IDH1'} />\n                </td>\n                <td>Oncogenic Mutations</td>\n                <td>Oligodendroglioma</td>\n                <td>Ivosidenib</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <span>Inclusion in CNS NCCN Guidelines v1.2023</span>\n                    <PMIDLink pmids={'32530764'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>3A</td>\n                <td>\n                  <GenePageLink hugoSymbol={'IDH2'} />\n                </td>\n                <td>R172</td>\n                <td>Oligodendroglioma, Astrocytoma</td>\n                <td>Vorasidenib</td>\n                <td>\n                  <PMIDLink pmids={'37272516'} />\n                </td>\n              </tr>\n              <tr>\n                <td>4</td>\n                <td>\n                  <GenePageLink hugoSymbol={'KRAS'} />\n                </td>\n                <td>G12</td>\n                <td>All Solid Tumors</td>\n                <td>RMC-6236</td>\n                <td>\n                  <AbstractLink\n                    abstract={'Koltun et al. Abstract# 3597, AACR 2022'}\n                    link={\n                      'https://aacrjournals.org/cancerres/article/82/12_Supplement/3597/702320/Abstract-3597-Direct-targeting-of-KRASG12X-mutant'\n                    }\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>4</td>\n                <td>\n                  <GenePageLink hugoSymbol={'FGFR2'} />\n                </td>\n                <td>Amplification</td>\n                <td>All Solid Tumors</td>\n                <td>RLY-4008</td>\n                <td>\n                  <AbstractLink\n                    abstract={'Borad et al. Abstract# 4009, ASCO 2023'}\n                    link={\n                      'https://ascopubs.org/doi/abs/10.1200/JCO.2023.41.16_suppl.4009?af=R)(PMID: 37270847'\n                    }\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Row>\n      </span>,\n      <span>\n        Updated therapeutic implications - Addition of therapies for variants\n        with a level of evidence\n        <Row className={'overflow-auto'}>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Gene</th>\n                <th>Mutation</th>\n                <th>Cancer Type</th>\n                <th>Current Level of Evidence</th>\n                <th>Drug(s) currently in OncoKB</th>\n                <th>Drug(s) added to OncoKB</th>\n                <th>Evidence</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'ALK'} />\n                </td>\n                <td>Fusions</td>\n                <td>Inflammatory Myofibroblastic Tumors</td>\n                <td>1</td>\n                <td>\n                  Crizotinib (Level 1); Brigatinib, Lorlatinib, Ceritinib (Level\n                  2)\n                </td>\n                <td>Alectinib (Level 2)</td>\n                <td>\n                  Inclusion in Soft Tissue Sarcoma NCCN Guidelines v2.2023\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'FGFR2'} />\n                </td>\n                <td>Fusions</td>\n                <td>Cholangiocarcinoma</td>\n                <td>1</td>\n                <td>Futibatinib, Pemigatinib (Level 1)</td>\n                <td>RLY-4008 (Level 3A)</td>\n                <td>\n                  <AbstractLink\n                    abstract={'Borad et al. Abstract# 4009, ASCO 2023'}\n                    link={\n                      'https://ascopubs.org/doi/abs/10.1200/JCO.2023.41.16_suppl.4009?af=R)(PMID: 37270847'\n                    }\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td rowSpan={2}>\n                  <GenePageLink hugoSymbol={'BRCA1'} />\n                </td>\n                <td rowSpan={2}>Oncogenic Mutations</td>\n                <td rowSpan={2}>Prostate Cancer</td>\n                <td rowSpan={2}>1</td>\n                <td rowSpan={2}>Olaparib, Rucaparib (Level 1)</td>\n                <td>Talazoparib + Enzalutamide (Level 1)</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <FdaApprovalLink\n                      approval={'Talazoparib + Enzalutamide'}\n                      link={\n                        'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-talazoparib-enzalutamide-hrr-gene-mutated-metastatic-castration-resistant-prostate#:~:text=On%20June%2020%2C%202023%2C%20the,resistant%20prostate%20cancer%20(mCRPC).'\n                      }\n                    />\n                    <PMIDLink pmids={'37285865'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Olaparib + Abiraterone + Prednisone/Prednisolone (Level 1)\n                </td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <FdaApprovalLink\n                      approval={\n                        'Olaparib + Abiraterone + Prednisone/Prednisolone'\n                      }\n                      link={\n                        'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-olaparib-abiraterone-and-prednisone-or-prednisolone-brca-mutated-metastatic-castration'\n                      }\n                    />\n                    <AbstractLink\n                      abstract={'Clarke et al. Abstract# LBA16, ASCO GUCS 2023'}\n                      link={\n                        'https://ascopubs.org/doi/abs/10.1200/JCO.2023.41.6_suppl.LBA16'\n                      }\n                    />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td rowSpan={2}>\n                  <GenePageLink hugoSymbol={'BRCA2'} />\n                </td>\n                <td rowSpan={2}>Oncogenic Mutations</td>\n                <td rowSpan={2}>Prostate Cancer</td>\n                <td rowSpan={2}>1</td>\n                <td rowSpan={2}>Olaparib, Rucaparib (Level 1)</td>\n                <td>Talazoparib + Enzalutamide (Level 1)</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <FdaApprovalLink\n                      approval={'Talazoparib + Enzalutamide'}\n                      link={\n                        'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-talazoparib-enzalutamide-hrr-gene-mutated-metastatic-castration-resistant-prostate#:~:text=On%20June%2020%2C%202023%2C%20the,resistant%20prostate%20cancer%20(mCRPC).'\n                      }\n                    />\n                    <PMIDLink pmids={'37285865'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Olaparib + Abiraterone + Prednisone/Prednisolone (Level 1)\n                </td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <FdaApprovalLink\n                      approval={\n                        'Olaparib + Abiraterone + Prednisone/Prednisolone'\n                      }\n                      link={\n                        'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-olaparib-abiraterone-and-prednisone-or-prednisolone-brca-mutated-metastatic-castration'\n                      }\n                    />\n                    <AbstractLink\n                      abstract={'Clarke et al. Abstract# LBA16, ASCO GUCS 2023'}\n                      link={\n                        'https://ascopubs.org/doi/abs/10.1200/JCO.2023.41.6_suppl.LBA16'\n                      }\n                    />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'ATM'} />\n                </td>\n                <td rowSpan={5} style={{ verticalAlign: 'middle' }}>\n                  Oncogenic Mutations\n                </td>\n                <td rowSpan={5} style={{ verticalAlign: 'middle' }}>\n                  Prostate Cancer\n                </td>\n                <td rowSpan={5} style={{ verticalAlign: 'middle' }}>\n                  1\n                </td>\n                <td rowSpan={5} style={{ verticalAlign: 'middle' }}>\n                  Olaparib (Level 1)\n                </td>\n                <td rowSpan={5} style={{ verticalAlign: 'middle' }}>\n                  Talazoparib + Enzalutamide (Level 1)\n                </td>\n                <td rowSpan={5} style={{ verticalAlign: 'middle' }}>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <FdaApprovalLink\n                      approval={'Talazoparib + Enzalutamide'}\n                      link={\n                        'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-talazoparib-enzalutamide-hrr-gene-mutated-metastatic-castration-resistant-prostate#:~:text=On%20June%2020%2C%202023%2C%20the,resistant%20prostate%20cancer%20(mCRPC).'\n                      }\n                    />\n                    <PMIDLink pmids={'37285865'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'PALB2'} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'CDK12'} />\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'CHEK2'} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'RAD51C'} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'IDH1'} />\n                </td>\n                <td>R132</td>\n                <td>Oligodendroglioma, Astrocytoma</td>\n                <td>3A</td>\n                <td>Ivosidenib</td>\n                <td>Vorasidenib (Level 3A)</td>\n                <td>\n                  <PMIDLink pmids={'37272516'} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'FGFR2'} />\n                </td>\n                <td>Oncogenic Mutations</td>\n                <td>All Solid Tumors</td>\n                <td>4</td>\n                <td>Erdafitinib and AZD4547 (Level 4)</td>\n                <td>RLY-4008 (Level 4)</td>\n                <td>\n                  <AbstractLink\n                    abstract={'Borad et al. Abstract# 4009, ASCO 2023'}\n                    link={\n                      'https://ascopubs.org/doi/abs/10.1200/JCO.2023.41.16_suppl.4009?af=R)(PMID:%2037270847'\n                    }\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'KRAS'} />\n                </td>\n                <td>G12D</td>\n                <td>All Solid Tumors</td>\n                <td>4</td>\n                <td>RMC-6236</td>\n                <td>MRTX-1133 and ASP3082 (level 4)</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <AbstractLink\n                      abstract={'Nagashima et al. Abstract# 5735, AACR 2023'}\n                      link={\n                        'https://aacrjournals.org/cancerres/article/83/7_Supplement/5735/722276'\n                      }\n                    />\n                    <PMIDLink pmids={'36472553'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Row>\n      </span>,\n      <span>\n        Updated therapeutic implications - Removal of therapies for variants\n        with a level of evidence\n        <Row className={'overflow-auto'}>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Gene</th>\n                <th>Mutation</th>\n                <th>Cancer Type</th>\n                <th>Current Level of Evidence</th>\n                <th>Drug(s) currently in OncoKB</th>\n                <th>Drug(s) removed from OncoKB</th>\n                <th>Evidence</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'FGFR1'} />\n                </td>\n                <td>Amplification</td>\n                <td>Lung Squamous Cell Carcinoma</td>\n                <td>3A</td>\n                <td>Erdafitinib</td>\n                <td rowSpan={2}>Debio1347</td>\n                <td rowSpan={2}>\n                  <Linkout\n                    link={\n                      'https://classic.clinicaltrials.gov/ct2/show/NCT03834220'\n                    }\n                  >\n                    Failed in basket study\n                  </Linkout>{' '}\n                  - no further clinical development\n                </td>\n              </tr>\n              <tr>\n                <td>{convertGeneInputToLinks('FGFR1, FGFR2, FGFR3')}</td>\n                <td>Oncogenic Mutations</td>\n                <td>All Solid Tumors</td>\n                <td>4</td>\n                <td>Erdafitinib, AZD4547</td>\n              </tr>\n            </tbody>\n          </table>\n        </Row>\n      </span>,\n    ],\n    changedAnnotations: [\n      {\n        title: 'Changed level of evidence',\n        content: [\n          [\n            'FGFR2',\n            'Oncogenic Mutations',\n            'Cholangiocarcinoma',\n            'RLY-4008 (Level 3A); Erdafitinib and AZD4547 (Currently Level 4)',\n            '4',\n            '3A',\n            <AbstractLink\n              abstract={'Borad et al. Abstract# 4009, ASCO 2023'}\n              link={\n                'https://ascopubs.org/doi/abs/10.1200/JCO.2023.41.16_suppl.4009?af=R)(PMID: 37270847'\n              }\n            />,\n          ],\n          [\n            'IDH1',\n            'R132',\n            'Oligodendroglioma',\n            'Ivosidenib',\n            '3A',\n            '2',\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <span>Inclusion in CNS NCCN Guidelines v1.2023</span>\n              <PMIDLink pmids={'32530764'} />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n    newlyAddedGenes: ['CAD', 'CHD4', 'H4C6', 'TRIB3'],\n  },\n  '05192023': {\n    priorityNews: [\n      <span>\n        Updated therapeutic implications - new alterations with a level of\n        evidence\n        <Row className={'overflow-auto'}>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Level</th>\n                <th>Gene</th>\n                <th>Mutation</th>\n                <th>Cancer Type</th>\n                <th>Drug(s)</th>\n                <th>Evidence</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td rowSpan={3}>1</td>\n                <td rowSpan={3}>\n                  <GenePageLink hugoSymbol={'RARA'} />\n                </td>\n                <td rowSpan={3}>\n                  <AlterationPageLink\n                    hugoSymbol={'RARA'}\n                    alteration={'PML-RARA Fusion'}\n                  />\n                </td>\n                <td rowSpan={3}>Acute Promyelocytic Leukemia</td>\n                <td>Tretinoin</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <PMIDLink pmids={'1850498'} />\n                    <FdaApprovalLink\n                      approval={'Tretinoin'}\n                      year={'1995'}\n                      link={\n                        'https://www.accessdata.fda.gov/drugsatfda_docs/label/2023/020438s007s008lbl.pdf'\n                      }\n                    />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>Arsenic Trioxide</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <PMIDLink pmids={'11559723'} />\n                    <FdaApprovalLink\n                      approval={'Arsenic Trioxide'}\n                      year={'2000'}\n                      link={\n                        'https://www.accessdata.fda.gov/drugsatfda_docs/label/2020/021248s019lbl.pdf'\n                      }\n                    />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>Tretinoin + Arsenic Trioxide</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <PMIDLink pmids={'23841729'} />\n                    <FdaApprovalLink\n                      approval={'Arsenic Trioxide + Tretinoin'}\n                      year={'2000'}\n                      link={\n                        'https://www.accessdata.fda.gov/drugsatfda_docs/label/2020/021248s019lbl.pdf'\n                      }\n                    />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>2</td>\n                <td>\n                  <GenePageLink hugoSymbol={'ERBB2'} />\n                </td>\n                <td>\n                  {' '}\n                  <AlterationPageLink\n                    hugoSymbol={'ERBB2'}\n                    alteration={'Amplification'}\n                  />\n                </td>\n                <td>Biliary Tract Cancer</td>\n                <td>Trastuzumab + Pertuzumab</td>\n                <td>\n                  Inclusion in Biliary Tract Cancer NCCN guidelines (v2.2023)\n                </td>\n              </tr>\n              <tr>\n                <td>R2</td>\n                <td>\n                  <GenePageLink hugoSymbol={'EGFR'} />\n                </td>\n                <td>\n                  <AlterationPageLink\n                    hugoSymbol={'EGFR'}\n                    alteration={'L792H'}\n                  />\n                </td>\n                <td>Non-Small Cell Lung Cancer</td>\n                <td>Osimertinib</td>\n                <td>\n                  <PMIDLink\n                    pmids={'28093244, 28625641, 29506987, 29857056, 34526717'}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Row>\n      </span>,\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'ESR1',\n            <span>\n              Oncogenic ligand-binding domain in-frame insertions or deletions\n            </span>,\n            'Breast Cancer',\n            'Elacestrant',\n            '3A',\n            '2',\n            'Inclusion in Breast Cancer NCCN guidelines (v4.2023)',\n          ],\n          [\n            'KRAS',\n            'G12C',\n            'Pancreatic Adenocarcinoma',\n            'Adagrasib, Sotorasib',\n            '3A',\n            '2',\n            'Inclusion in Pancreatic Cancer NCCN guidelines (v1.2023)',\n          ],\n        ],\n      },\n    ],\n    news: [\n      <span>\n        Updated therapeutic implications - Removal of therapies for variants\n        with a level of evidence\n        <Row className={'overflow-auto'}>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th style={{ width: 2 }}>Gene</th>\n                <th>Mutation</th>\n                <th>Cancer Type</th>\n                <th>Current Level of Evidence</th>\n                <th>Drug(s) removed from OncoKB</th>\n                <th>Drug(s) remaining in OncoKB</th>\n                <th>Evidence</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'FGFR2'} />\n                </td>\n                <td>\n                  <AlterationPageLink\n                    hugoSymbol={'FGFR2'}\n                    alteration={'Fusions'}\n                  />\n                </td>\n                <td>Cholangiocarcinoma</td>\n                <td>1</td>\n                <td rowSpan={3}>Infigratinib</td>\n                <td>Pemigatinib, Futibatinib</td>\n                <td rowSpan={3}>\n                  <Linkout\n                    link={\n                      'https://professionals.optumrx.com/content/dam/optum3/professional-optumrx/news/rxnews/drug-withdrawls/drugwithdrawal_truseltiq_2022-1117.pdf'\n                    }\n                  >\n                    Discontinuation of infigratinib\n                  </Linkout>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'FGFR1'} />\n                </td>\n                <td>\n                  <AlterationPageLink\n                    hugoSymbol={'FGFR1'}\n                    alteration={'Amplification'}\n                  />\n                </td>\n                <td>Lung Squamous Cell Carcinoma</td>\n                <td>3A</td>\n                <td>Debio1347, Erdafitinib</td>\n              </tr>\n              <tr>\n                <td>{convertGeneInputToLinks('FGFR1, FGFR2, FGFR3')}</td>\n                <td>Oncogenic Mutations</td>\n                <td>All Solid Tumors</td>\n                <td>4</td>\n                <td>Debio1347, Erdafitinib, AZD4547</td>\n              </tr>\n            </tbody>\n          </table>\n        </Row>\n      </span>,\n    ],\n    newlyAddedGenes: ['ALDH1L2', 'FOLH1', 'IQGAP1', 'POU3F4', 'TIGAR'],\n  },\n  '04122023': {\n    priorityNews: [\n      <span>\n        Release of NEW cancer-type pages, allowing easier visualization of\n        variant and cancer type-specific clinical implications. As an example,\n        see tables for treatment, diagnostic and prognostic implications on the{' '}\n        <AlterationPageLink\n          hugoSymbol={'ABL1'}\n          alteration={'BCR-ABL1 Fusion'}\n          cancerType={'B-lymphoblastic leukemia/lymphoma'}\n        >\n          BCR-ABL1, B-lymphoblastic leukemia/lymphoma\n        </AlterationPageLink>{' '}\n        cancer-type page.\n      </span>,\n      <span>\n        Release of therapeutic descriptions for all alteration- and tumor\n        type-specific leveled associations. These are located on the variant-\n        and cancer-type pages. See{' '}\n        <AlterationPageLink hugoSymbol={'BRAF'} alteration={'V600E'}>\n          BRAF V600E\n        </AlterationPageLink>{' '}\n        as an example.\n      </span>,\n    ],\n    newlyAddedGenes: ['MERTK'],\n  },\n  '03222023': {\n    priorityNews: [\n      <span>\n        Release of <SopPageLink version={3} />.\n      </span>,\n      <span>\n        We have updated our <Link to={PAGE_ROUTE.FAQ_ACCESS}>FAQ page</Link>{' '}\n        with the most commonly asked questions of 2022. Take a look at what our\n        users are asking us.\n      </span>,\n      <span>\n        This release contains significant data updates including to citations,\n        mutation effect descriptions, etc. in alignment with our current SOP.\n      </span>,\n    ],\n    newlyAddedGenes: [\n      'ACKR3',\n      'ECSIT',\n      'FES',\n      'HSD17B2',\n      'ID1',\n      'KAT7',\n      'LRP1B',\n      'MAL2',\n      'MBD4',\n      'MEF2C',\n      'PHF19',\n      'TNFSF13',\n      'UBE2A',\n    ],\n  },\n  '02102023': {\n    changedAnnotations: [\n      {\n        columnHeaderType: AnnotationColumnHeaderType.ADDITIONAL_DIFF_LEVEL_DRUG,\n        title:\n          'Changed annotation and addition of therapies for variants with a level of evidence',\n        content: [\n          [\n            'ESR1',\n            'Oncogenic Ligand-Binding Domain Missense Mutations (310_547)',\n            'Breast Cancer',\n            '3A',\n            '1',\n            <span>\n              Fulvestrant\n              <br />\n              (Level 3A)\n            </span>,\n            <span>\n              Elacestrant\n              <br />\n              (Level 1)\n            </span>,\n            <FdaApprovalLink\n              approval={'elacestrant in breast cancer'}\n              link={\n                'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-elacestrant-er-positive-her2-negative-esr1-mutated-advanced-or-metastatic-breast-cancer'\n              }\n            />,\n          ],\n          [\n            'ESR1',\n            'Oncogenic Ligand-Binding Domain In-Frame Insertions or Deletions (310_547)',\n            'Breast Cancer',\n            '3A',\n            '3A',\n            <span>\n              Fulvestrant\n              <br />\n              (Level 3A)\n            </span>,\n            <span>\n              Elacestrant\n              <br />\n              (Level 3A)\n            </span>,\n            <>\n              <FdaApprovalLink\n                approval={'elacestrant in breast cancer'}\n                link={\n                  'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-elacestrant-er-positive-her2-negative-esr1-mutated-advanced-or-metastatic-breast-cancer'\n                }\n              />{' '}\n              <span>\n                (Level 1 ESR1 mutations limited to those specified in\n                corresponding FDA-approved CDx)\n              </span>\n            </>,\n          ],\n        ],\n      },\n    ],\n  },\n  '01052023': {\n    news: [\n      <span>\n        Happy New Year! 2022 brought many changes to the landscape of precision\n        oncology. The OncoKB 2022 year in review can be found{' '}\n        <YearEndReviewPageLink year={'2022'}>HERE</YearEndReviewPageLink>.\n      </span>,\n    ],\n  },\n  '12222022': {\n    priorityNews: [\n      <span>\n        Happy Holidays! OncoKB mutation effect descriptions are now available to\n        all users on our website, in cBioPortal and through our API. These\n        descriptions summarize the data supporting the biological and oncogenic\n        effect designation for each alteration, and represent seven years of\n        effort from the OncoKB scientific team.\n      </span>,\n    ],\n    changedAnnotations: [\n      {\n        columnHeaderType: AnnotationColumnHeaderType.ADDITIONAL_SAME_LEVEL_DRUG,\n        content: [\n          [\n            'KRAS',\n            'G12C',\n            'Non-Small Cell Lung Cancer',\n            '1',\n            'Sotorasib',\n            <span>\n              Adagrasib\n              <br />\n              (Level 1)\n            </span>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaApprovalLink\n                approval={'adagrasib in NSCLC'}\n                link={\n                  'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-grants-accelerated-approval-adagrasib-kras-g12c-mutated-nsclc'\n                }\n              />\n              <AbstractLink\n                abstract={'Spira et al. Abstract# 9002, ASCO 2022'}\n                link={\n                  'https://meetings.asco.org/abstracts-presentations/208088'\n                }\n              />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n  },\n  '12132022': {\n    newlyAddedGenes: [\n      'ATP1A1',\n      'FUS',\n      'HMGA1',\n      'HMGA2',\n      'HTATIP2',\n      'INTS6',\n      'TRIM27',\n      'ZFP36L2',\n    ],\n    changedAnnotations: [\n      {\n        columnHeaderType: AnnotationColumnHeaderType.ADDITIONAL_SAME_LEVEL_DRUG,\n        content: [\n          [\n            'IDH1',\n            'R132C/H/L/G/S',\n            'Acute Myeloid Leukemia',\n            '1',\n            'Ivosidenib',\n            <span>\n              Olutasidenib\n              <br />\n              (Level 1)\n            </span>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaApprovalLink\n                approval={'olutasidenib in AML'}\n                link={\n                  'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-olutasidenib-relapsed-or-refractory-acute-myeloid-leukemia-susceptible-idh1-mutation'\n                }\n              />\n              <AbstractLink\n                abstract={'Cortes et al. Abstract #6193, ASH 2022'}\n                link={\n                  'https://ashpublications.org/blood/article/140/Supplement%201/6193/487212'\n                }\n              />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n  },\n  '10282022': {\n    updatedImplicationTitle:\n      'Updated therapeutic implications - new alterations with a level of evidence',\n    updatedImplication: [\n      [\n        '1',\n        'RET',\n        'Fusions',\n        'All Solid Tumors',\n        'Selpercatinib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <FdaApprovalLink\n            approval={'selpercatinib in solid tumors'}\n            link={\n              'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-selpercatinib-locally-advanced-or-metastatic-ret-fusion-positive-solid-tumors'\n            }\n          />\n          <AbstractLink\n            abstract={'Subbiah et al. Abstract# 3094, ASCO 2022'}\n            link={\n              'https://ascopubs.org/doi/abs/10.1200/JCO.2022.40.16_suppl.3094'\n            }\n          />\n        </WithSeparator>,\n      ],\n      [\n        '3A',\n        'TP53',\n        'Y220C',\n        'All Solid Tumors',\n        'PC14586',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <AbstractLink\n            abstract={'Dumbrava et al. Abstract# 3003, ASCO 2022'}\n            link={\n              'https://ascopubs.org/doi/abs/10.1200/JCO.2022.40.16_suppl.3003'\n            }\n          />\n          <AbstractLink\n            abstract={'Dumble et al. Abstract# LB006, AACR 2021'}\n            link={\n              'https://aacrjournals.org/cancerres/article/81/13_Supplement/LB006/669897/Abstract-LB006-PC14586-The-first-orally'\n            }\n          />\n        </WithSeparator>,\n      ],\n      [\n        '4',\n        'PIK3CA',\n        'Oncogenic Mutations',\n        'All Solid Tumors',\n        'RLY-2608',\n        <AbstractLink\n          abstract={'Perez et al. Abstract# TPS1124, ASCO 2022'}\n          link={\n            'https://ascopubs.org/doi/abs/10.1200/JCO.2022.40.16_suppl.TPS1124'\n          }\n        />,\n      ],\n      [\n        '4',\n        'PIK3CA',\n        'H1047R',\n        'All Solid Tumors (excluding Colorectal Cancer)',\n        'LOXO-783',\n        <AbstractLink\n          abstract={'Klippel et al. Abstract# P142, AACR-NCI-EORTC 2021'}\n          link={\n            'https://aacrjournals.org/mct/article/20/12_Supplement/P142/675896/Abstract-P142-Preclinical-characterization-of-LOX'\n          }\n        />,\n      ],\n      [\n        '4',\n        'CCNE1',\n        'Amplification',\n        'All Solid Tumors',\n        'RP-6306, BLU-222',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <AbstractLink\n            abstract={'Brown et al. Abstract# 2306, AACR 2022'}\n            link={\n              'https://aacrjournals.org/cancerres/article/82/12_Supplement/2306/703534'\n            }\n          />\n          <PMIDLink pmids={'35444283'} />\n        </WithSeparator>,\n      ],\n      [\n        '4',\n        'KRAS',\n        'G12D',\n        'All Solid Tumors',\n        'RMC-6236',\n        <AbstractLink\n          abstract={'Koltun et al. Abstract# 3597, AACR 2022'}\n          link={\n            'https://aacrjournals.org/cancerres/article/82/12_Supplement/3597/702320/Abstract-3597-Direct-targeting-of-KRASG12X-mutant'\n          }\n        />,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        columnHeaderType: AnnotationColumnHeaderType.ADDITIONAL_SAME_LEVEL_DRUG,\n        content: [\n          [\n            'FGFR2',\n            'Fusions',\n            'Cholangiocarcinoma',\n            '1',\n            'Infigratinib, Pemigatinib',\n            <>\n              Futibatinib\n              <br />\n              (Level 1)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaApprovalLink\n                link={\n                  'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-grants-accelerated-approval-futibatinib-cholangiocarcinoma'\n                }\n                approval={'futibatinib in cholangiocarcinoma'}\n              />\n              <AbstractLink\n                abstract={'Goyal et al. Abstract# 4009, ASCO 2022'}\n                link={\n                  'https://ascopubs.org/doi/abs/10.1200/JCO.2022.40.16_suppl.4009'\n                }\n              />\n            </WithSeparator>,\n          ],\n          [\n            'MET',\n            'Amplification',\n            'Non-Small Cell Lung Cancer',\n            '2',\n            'Crizotinib, Capmatinib, Tepotinib',\n            <>\n              Telisotuzumab Vedotin\n              <br />\n              (Level 3A)\n            </>,\n            <AbstractLink\n              abstract={'Camidge et al. Abstract# 9016, ASCO 2022'}\n              link={\n                'https://ascopubs.org/doi/abs/10.1200/JCO.2022.40.16_suppl.9016'\n              }\n            />,\n          ],\n          [\n            'PIK3CA',\n            'C420R, E542K, E545A, E545D, E545G, E545K, Q546E, Q546R, H1047L, H1047R, H1047Y',\n            'Breast Cancer',\n            '1',\n            'Alpelisib + Fulvestrant',\n            <>\n              RLY-2608 + Fulvestrant\n              <br />\n              (Level 4)\n            </>,\n            <AbstractLink\n              abstract={'Perez et al. Abstract# TPS1124, ASCO 2022'}\n              link={\n                'https://ascopubs.org/doi/abs/10.1200/JCO.2022.40.16_suppl.TPS1124'\n              }\n            />,\n          ],\n          [\n            'PIK3CA',\n            'Oncogenic Mutations (excluding C420R, E542K, E545A, E545D, E545G, E545K, Q546E, Q546R, H1047L, H1047R, and H1047Y)',\n            'Breast Cancer',\n            '2',\n            'Alpelisib + Fulvestrant',\n            <>\n              RLY-2608 + Fulvestrant\n              <br />\n              (Level 4)\n            </>,\n            <AbstractLink\n              abstract={'Perez et al. Abstract# TPS1124, ASCO 2022'}\n              link={\n                'https://ascopubs.org/doi/abs/10.1200/JCO.2022.40.16_suppl.TPS1124'\n              }\n            />,\n          ],\n          [\n            'PIK3CA',\n            'H1047R',\n            'Breast Cancer',\n            '1',\n            'Alpelisib + Fulvestrant',\n            <>\n              LOXO-783 + Fulvestrant +/- Abemaciclib, LOXO-783 + LY3484356 +/-\n              Abemaciclib, LOXO-783 + Aromitase Inhibitors + Abemaciclib,\n              LOXO-783 + Nab-Paclitaxel\n              <br />\n              (Level 4)\n            </>,\n            <AbstractLink\n              abstract={'Klippel et al. Abstract# P142, AACR-NCI-EORTC 2021'}\n              link={\n                'https://aacrjournals.org/mct/article/20/12_Supplement/P142/675896/Abstract-P142-Preclinical-characterization-of-LOX'\n              }\n            />,\n          ],\n        ],\n      },\n    ],\n    newlyAddedGenes: ['MYH11', 'PUM1', 'FBXW2', 'NUP214'],\n  },\n  '09062022': {\n    updatedImplicationTitle:\n      'Updated therapeutic implications - new alterations with a level of evidence',\n    updatedImplication: [\n      [\n        '1',\n        'BRAF',\n        'V600E',\n        'All Solid Tumors (excluding Colorectal Cancer)',\n        'Dabrafenib + Trametinib',\n        <FdaApprovalLink\n          approval={'dabrafenib + trametinib in solid tumors'}\n          link={\n            'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-grants-accelerated-approval-dabrafenib-combination-trametinib-unresectable-or-metastatic-solid'\n          }\n        />,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'BRAF',\n            'V600E',\n            'Biliary Tract Cancer, Diffuse Glioma, Encapsulated Glioma, Ganglioglioma, Pleomorphic Xanthoastrocytoma, Pilocytic Astrocytoma',\n            'Dabrafenib + Trametinib',\n            '2',\n            '1',\n            <FdaApprovalLink\n              approval={'dabrafenib + trametinib in solid tumors'}\n              link={\n                'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-grants-accelerated-approval-dabrafenib-combination-trametinib-unresectable-or-metastatic-solid'\n              }\n            />,\n          ],\n          [\n            'ERBB2',\n            'Oncogenic Mutations',\n            'Non-Small Cell Lung Cancer',\n            'Trastuzumab Deruxtecan',\n            '2',\n            '1',\n            <FdaApprovalLink\n              approval={'trastuzumab deruxtecan in non-small cell lung cancer'}\n              link={\n                'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-grants-accelerated-approval-fam-trastuzumab-deruxtecan-nxki-her2-mutant-non-small-cell-lung'\n              }\n            />,\n          ],\n          [\n            'FGFR1',\n            'Fusions',\n            'Myeloid/Lymphoid Neoplasms with FGFR1 Rearrangement',\n            'Pemigatinib',\n            '2',\n            '1',\n            <FdaApprovalLink\n              approval={'pemigatinib in myeloid/lymphoid neoplasms'}\n              link={\n                'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-pemigatinib-relapsed-or-refractory-myeloidlymphoid-neoplasms-fgfr1-rearrangement'\n              }\n            />,\n          ],\n        ],\n      },\n    ],\n    newlyAddedGenes: ['MKI67', 'BRD3', 'BRSK1', 'BCL3'],\n  },\n  '07252022': {\n    updatedImplicationTitle:\n      'Updated therapeutic implications - new alterations with a level of evidence',\n    updatedImplication: [\n      [\n        '3A',\n        'KMT2A',\n        'Fusions',\n        'B-Lymphoblastic Leukemia/Lymphoma, Acute Myeloid Leukemia',\n        'SNDX-5613 (Menin inhibitor)',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <PMIDLink pmids={'31855575'} />\n          <AbstractLink\n            abstract={'Stein et al. Abstract# 699, ASH 2021 '}\n            link={\n              'https://ashpublications.org/blood/article/138/Supplement%201/699/479484/Safety-and-Efficacy-of-Menin-Inhibition-in'\n            }\n          />\n        </WithSeparator>,\n      ],\n      [\n        '3A',\n        'NPM1',\n        'Oncogenic Mutations',\n        'Acute Myeloid Leukemia',\n        'SNDX-5613 (Menin inhibitor)',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <PMIDLink pmids={'31855575'} />\n          <AbstractLink\n            abstract={'Stein et al. Abstract# 699, ASH 2021 '}\n            link={\n              'https://ashpublications.org/blood/article/138/Supplement%201/699/479484/Safety-and-Efficacy-of-Menin-Inhibition-in'\n            }\n          />\n        </WithSeparator>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'ALK',\n            'Fusions',\n            'Inflammatory Myofibroblastic Tumor',\n            'Crizotinib',\n            '2',\n            '1',\n            <FdaApprovalLink\n              approval={'crizotinib in inflammatory myofibroblastic tumor'}\n              link={\n                'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-crizotinib-alk-positive-inflammatory-myofibroblastic-tumor'\n              }\n            />,\n          ],\n        ],\n      },\n      {\n        columnHeaderType: AnnotationColumnHeaderType.ADDITIONAL_SAME_LEVEL_DRUG,\n        content: [\n          [\n            'NRG1',\n            'Fusions',\n            'Non-Small Cell Lung Cancer',\n            '3A',\n            'Zenocutuzumab',\n            <>\n              Seribantumab\n              <br />\n              (Level 3A)\n            </>,\n            <AbstractLink\n              abstract={'Carrizosa et al. Abstract# 3006, ASCO 2022'}\n              link={\n                'https://ascopubs.org/doi/abs/10.1200/JCO.2022.40.16_suppl.3006'\n              }\n            />,\n          ],\n        ],\n      },\n    ],\n    news: [\n      <span>\n        Updated therapeutic implications - Removal of therapies for variants\n        with a level of evidence\n        <Row className={'overflow-auto'}>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Gene</th>\n                <th>Mutation</th>\n                <th>Cancer Type</th>\n                <th>Current Level of Evidence</th>\n                <th>Drug(s) removed from OncoKB</th>\n                <th>Drug remaining in OncoKB</th>\n                <th>Evidence</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'ESR1'} />\n                </td>\n                <td>Oncogenic Mutations</td>\n                <td>Breast Cancer</td>\n                <td>3A</td>\n                <td>AZD9496</td>\n                <td>Fulvestrant</td>\n                <td>\n                  <PMIDLink pmids={'32234755'} />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Row>\n      </span>,\n    ],\n  },\n  '06062022': {\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'BRAF',\n            'V600E',\n            'Biliary Tract Cancer',\n            'Dabrafenib + Trametinib',\n            '3A',\n            '2',\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <NccnLink version={'v1.2022'} cancerType={'Hepatobiliary'} />\n              <PMIDLink pmids={'32818466, 32758030'} />\n            </WithSeparator>,\n          ],\n        ],\n      },\n      {\n        columnHeaderType: AnnotationColumnHeaderType.ADDITIONAL_SAME_LEVEL_DRUG,\n        content: [\n          [\n            'ALK',\n            'Fusions',\n            'Inflammatory Myofibroblastic Tumor',\n            '2',\n            'Crizotinib, Ceritinib, Brigatinib',\n            <>\n              Brigatinib\n              <br />\n              (Level 2)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <NccnLink\n                cancerType={'Soft Tissue Sarcoma'}\n                version={'v1.2022'}\n              />\n              <PMIDLink pmids={'28713152, 32868646, 33007314'} />\n            </WithSeparator>,\n          ],\n          [\n            'ROS1',\n            'Fusions',\n            'Non-Small Cell Lung Cancer',\n            '1',\n            'Crizotinib, Entrectinib',\n            <>\n              Repotrectinib\n              <br />\n              (Level 3A)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaBreakthroughLink\n                link={\n                  'https://www.onclive.com/view/fda-grants-breakthrough-designation-to-repotrectinib-for-pretreated-ros1-metastatic-nsclc'\n                }\n              />\n              <AbstractLink\n                abstract={'Cho et al. Abstract# MA11.07, IASLC 2021'}\n                link={\n                  'https://www.jto.org/article/S1556-0864(21)00293-8/fulltext'\n                }\n              />\n            </WithSeparator>,\n          ],\n          [\n            'NTRK1, NTRK2, NTRK3',\n            'Fusions',\n            'All Solid Tumors',\n            '1',\n            'Larotrectinib, Entrectinib',\n            <>\n              Repotrectinib\n              <br />\n              (Level 3A)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaBreakthroughLink\n                link={\n                  'https://www.onclive.com/view/fda-grants-breakthrough-designation-to-repotrectinib-for-pretreated-ros1-metastatic-nsclc'\n                }\n              />\n              <AbstractLink\n                abstract={'Cho et al. Abstract# MA11.07, IASLC 2021'}\n                link={\n                  'https://www.jto.org/article/S1556-0864(21)00293-8/fulltext'\n                }\n              />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n  },\n  '05052022': {\n    priorityNews: [\n      <span>\n        We loved connecting with so many of you at the 2022 AACR annual meeting.\n        If you missed our poster, you can download a copy{' '}\n        <a href=\"content/files/poster/AACR_poster_2022v2.pdf\" download>\n          here\n        </a>\n      </span>,\n    ],\n    changedAnnotations: [\n      {\n        columnHeaderType: AnnotationColumnHeaderType.ADDITIONAL_SAME_LEVEL_DRUG,\n        content: [\n          [\n            'EGFR',\n            'S768I, L861Q, G719',\n            'Non-Small Cell Lung Cancer',\n            '1',\n            'Afatinib',\n            <>\n              Osimertinib\n              <br />\n              (Level 2)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <span>Listing in NSCLC NCCN v1.2022</span>\n              <PMIDLink pmids={'31825714'} />\n            </WithSeparator>,\n          ],\n          [\n            'ROS1',\n            'Fusions',\n            'Non-Small Cell Lung Cancer',\n            '1',\n            'Crizotinib, Entrectinib',\n            <>\n              Ceritinib\n              <br />\n              (Level 2)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <span>Listing in NSCLC NCCN v1.2022</span>\n              <PMIDLink pmids={'28520527'} />\n            </WithSeparator>,\n          ],\n          [\n            'ROS1',\n            'Fusions',\n            'Non-Small Cell Lung Cancer',\n            '1',\n            'Crizotinib, Entrectinib',\n            <>\n              Lorlatinib\n              <br />\n              (Level 2)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <span>Listing in NSCLC NCCN v1.2022</span>\n              <PMIDLink pmids={'31669155'} />\n            </WithSeparator>,\n          ],\n          [\n            'MET',\n            'Amplifications',\n            'Non-Small Cell Lung Cancer',\n            '2',\n            'Crizotinib',\n            <>\n              Capmatinib\n              <br />\n              (Level 2)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <span>Listing in NSCLC NCCN v1.2022</span>\n              <PMIDLink pmids={'32877583'} />\n            </WithSeparator>,\n          ],\n          [\n            'MET',\n            'Amplifications',\n            'Non-Small Cell Lung Cancer',\n            '2',\n            'Crizotinib',\n            <>\n              Tepotinib\n              <br />\n              (Level 2)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <span>Listing in NSCLC NCCN v1.2022</span>\n              <AbstractLink\n                abstract={'Le et al. Abstract# 9021, ASCO 2021'}\n                link={\n                  'https://ascopubs.org/doi/abs/10.1200/JCO.2021.39.15_suppl.9021'\n                }\n              />\n            </WithSeparator>,\n          ],\n          [\n            'KRAS',\n            'G12C',\n            'Pancreatic Cancer',\n            '3A',\n            'Adagrasib',\n            <>\n              Sotorasib\n              <br />\n              (Level 3A)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <AbstractLink\n                abstract={'Strickler et al. Abstract# 360490, ASCO GI 2022'}\n                link={\n                  'https://ascopubs.org/doi/abs/10.1200/JCO.2022.40.36_suppl.360490'\n                }\n              />\n            </WithSeparator>,\n          ],\n          [\n            'FGFR2',\n            'Fusions',\n            'Cholangiocarcinoma',\n            '1',\n            'Infigratinib, Pemigatinib',\n            <>\n              Futibatinib\n              <br />\n              (Level 3A)\n            </>,\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <AbstractLink\n                abstract={'Goyal et al. Abstract# CT010, AACR 2021'}\n                link={\n                  'https://aacrjournals.org/cancerres/article/81/13_Supplement/CT010/669687/Abstract-CT010-Primary-results-of-phase-2-FOENIX'\n                }\n              />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n    newlyAddedGenes: ['AFF4'],\n  },\n  '03292022': {\n    updatedImplication: [\n      [\n        '2',\n        'BRCA2',\n        'Oncogenic Mutations',\n        'Uterine Sarcoma',\n        'Olaparib, Rucaparib, Niraparib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <span>Listing in Uterine cancer NCCN v1.2022</span>\n          <PMIDLink pmids={'33970096'} />\n        </WithSeparator>,\n      ],\n      [\n        '2',\n        'PALB2',\n        'Oncogenic Mutations',\n        'Pancreatic Cancer',\n        'Rucaparib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <span>Listing in Pancreatic cancer NCCN v1.2022</span>\n          <PMIDLink pmids={'33970687, 34351646, 30051098'} />\n        </WithSeparator>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'BRCA1, BRCA2',\n            'Oncogenic Mutations',\n            'Pancreatic Cancer',\n            'PARPi',\n            '3A',\n            '2',\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <span>\n                Listing of Rucaparib in Pancreatic cancer NCCN v1.2022\n              </span>\n              <PMIDLink pmids={'33970687, 34351646, 30051098'} />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n    news: [\n      <span>\n        Statistically recurrent hotspots per cancerhotspots.org that have not\n        been curated by {ONCOKB_TM} are now considered \"Likely Oncogenic\" (the\n        concept “Predicted Oncogenic” has been removed).\n      </span>,\n      <span>\n        API information (<Linkout link={'https://www.oncokb.org/api/v1/info'} />\n        ) now includes the software version which, together with the data\n        version, can be used to update instances of local annotation.\n      </span>,\n    ],\n  },\n  '02282022': {\n    priorityNews: [<NewlyAddedGenesListItem genes={['LTK', 'EXT1']} />],\n    updatedImplication: [\n      [\n        '3A',\n        'EGFR',\n        'Exon 19 deletion, Exon 19 insertion, G719, L858R, L861Q, S768I',\n        'Non-Small Cell Lung Cancer',\n        'Patritumab Deruxtecan',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <span>FDA Breakthrough Therapy designation</span>\n          <PMIDLink pmids={'34548309'} />\n        </WithSeparator>,\n      ],\n      [\n        '3A',\n        'EGFR',\n        'Exon 20 in-frame insertions',\n        'Non-Small Cell Lung Cancer',\n        'CLN-081',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <span>FDA Breakthrough Therapy designation</span>\n          <AbstractLink\n            link={'https://ascopubs.org/doi/10.1200/JCO.2021.39.15_suppl.9077'}\n            abstract={'Piotrowska et al. Abstract# 9077, ASCO 2021.'}\n          />\n        </WithSeparator>,\n      ],\n      [\n        '3A',\n        'ERBB2',\n        'Oncogenic Mutations',\n        'Non-Small Cell Lung Cancer',\n        'Trastuzumab + Pertuzumab + Docetaxel',\n        <PMIDLink pmids={'35073148'} />,\n      ],\n      [\n        '3A',\n        'KRAS',\n        'G12C',\n        'Gastrointestinal Cancers (excluding Colorectal and Appendiceal Cancer), Pancreatic Adenocarcinoma',\n        'Adagrasib',\n        <AbstractLink\n          link={'https://ascopubs.org/doi/abs/10.1200/JCO.2022.40.4_suppl.519'}\n          abstract={\n            'Bekaii-Saab et al. Abstract# 519, ASCO GI Symposium, 2022.'\n          }\n        />,\n      ],\n    ],\n  },\n  '01072022': {\n    priorityNews: [\n      <span>\n        In addition to the previously provided reference genome, gene pages will\n        now include gene chromosomal locations. See{' '}\n        <GenePageLink hugoSymbol={'BRAF'} /> as an example.\n      </span>,\n    ],\n    updatedImplication: [\n      [\n        '4',\n        'STK11',\n        'Oncogenic Mutations',\n        'Non-Small Cell Lung Cancer',\n        'Bemcentinib + Pembrolizumab',\n        <AbstractLink\n          link={'https://jitc.bmj.com/content/9/Suppl_2/A632'}\n          abstract={'Li et al. Abstract # 602, JITC 2021'}\n        />,\n      ],\n    ],\n  },\n  '11292021': {\n    priorityNews: [\n      <span>\n        Release of <SopPageLink version={2.2} />\n      </span>,\n      <NewlyAddedGenesListItem\n        genes={['POLG', 'IL6ST', 'WWP1']}\n        title={'New Genes Added'}\n      />,\n    ],\n    updatedImplication: [\n      [\n        '1',\n        'ABL1',\n        'T315I',\n        'Chronic Myelogenous Leukemia',\n        'Asciminib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <FdaApprovalLink\n            link={\n              'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-asciminib-philadelphia-chromosome-positive-chronic-myeloid-leukemia'\n            }\n            approval={'Asciminib'}\n          />\n          <AbstractLink\n            link={'https://ash.confex.com/ash/2020/webprogram/Paper143816.html'}\n            abstract={'Hochhaus et al. Abstract #LBA-4, ASH 2020'}\n          />\n        </WithSeparator>,\n      ],\n      [\n        '3A',\n        'IDH1',\n        'R132',\n        'Glioma',\n        'Ivosidenib',\n        <PMIDLink pmids={'29670690, 32530764'} />,\n      ],\n      [\n        '3A',\n        'KRAS',\n        'G12C',\n        'Colorectal Cancer',\n        'Adagrasib, Adagrasib + Cetuximab',\n        <AbstractLink\n          link={\n            'https://oncologypro.esmo.org/meeting-resources/esmo-congress-2021/krystal-1-adagrasib-mrtx849-as-monotherapy-or-combined-with-cetuximab-cetux-in-patients-pts-with-colorectal-cancer-crc-harboring-a-krasg12'\n          }\n          abstract={'Weiss et al. Abstract# LBA6, ESMO 2021'}\n        />,\n      ],\n      [\n        '4',\n        'MDM2',\n        'Amplification',\n        'Dedifferentiated Liposarcoma, Well-Differentiated Liposarcoma',\n        'Milademetan',\n        <PMIDLink pmids={'23400593'} />,\n      ],\n    ],\n    updatedImplicationTitle:\n      'Updated therapeutic implications: New variants with a level of evidence',\n    changedAnnotations: [\n      {\n        title: 'Updated therapeutic implications: Changed annotations',\n        content: [\n          [\n            'ABL1',\n            'BCR-ABL1 Fusion',\n            'Chronic Myelogenous Leukemia',\n            'Asciminib',\n            '3A',\n            '1',\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaApprovalLink\n                link={\n                  'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-asciminib-philadelphia-chromosome-positive-chronic-myeloid-leukemia'\n                }\n                approval={'Asciminib'}\n              />\n              <PMIDLink pmids={'34407542'} />\n            </WithSeparator>,\n          ],\n          [\n            'BRCA1, BRCA2',\n            'Oncogenic Mutations',\n            'Breast Cancer',\n            'Olaparib, Talazoparib',\n            '2',\n            '3A',\n            <span>\n              Strict adherence to FDA drug labels for{' '}\n              <Linkout\n                link={\n                  'https://www.accessdata.fda.gov/drugsatfda_docs/label/2020/208558s014lbl.pdf'\n                }\n              >\n                olaparib\n              </Linkout>{' '}\n              and{' '}\n              <Linkout\n                link={\n                  'https://www.accessdata.fda.gov/drugsatfda_docs/label/2018/211651s000lbl.pdf'\n                }\n              >\n                talazoparib\n              </Linkout>\n            </span>,\n          ],\n          [\n            'MET',\n            <AlterationPageLink hugoSymbol={'MET'} alteration={'Y1003'}>\n              {' '}\n              Y1003mut{' '}\n            </AlterationPageLink>,\n            'Non-Small Cell Lung Cancer',\n            'Tepotinib, Capmatinib',\n            '1',\n            '3A',\n            <span>\n              Strict adherence to FDA drug labels for{' '}\n              <Linkout\n                link={\n                  'https://www.accessdata.fda.gov/drugsatfda_docs/label/2021/214096s000lbl.pdf'\n                }\n              >\n                tepotinib\n              </Linkout>{' '}\n              and{' '}\n              <Linkout\n                link={\n                  'https://www.accessdata.fda.gov/drugsatfda_docs/label/2020/213591s000lbl.pdf'\n                }\n              >\n                capmatinib\n              </Linkout>\n            </span>,\n          ],\n          [\n            'MET',\n            <AlterationPageLink hugoSymbol={'MET'} alteration={'Y1003'}>\n              {' '}\n              Y1003mut{' '}\n            </AlterationPageLink>,\n            'Non-Small Cell Lung Cancer',\n            'Crizotinib',\n            '2',\n            '3A',\n            <span>\n              Strict adherence to listing in NCCN Non-Small Cell Lung Cancer\n              v7.2021\n            </span>,\n          ],\n        ],\n      },\n    ],\n    news: [\n      <span>\n        Updated therapeutic implications: Updated variant annotations to more\n        accurately reflect the evidence\n        <SimpleTable\n          columns={[\n            { name: 'Level' },\n            { name: 'Gene' },\n            { name: 'Previous Variant Annotation' },\n            { name: 'Current Variant Annotation' },\n            { name: 'Cancer Type' },\n            { name: 'Drug' },\n            { name: 'Evidence' },\n          ]}\n          rows={[\n            [\n              '1',\n              <GenePageLink hugoSymbol=\"ALK\" />,\n              'Oncogenic Mutations',\n              'Fusions',\n              'Non-Small Cell Lung Cancer',\n              'Brigatinib',\n              <span>\n                <Linkout\n                  link={\n                    'https://www.accessdata.fda.gov/drugsatfda_docs/label/2020/208772s008lbl.pdf'\n                  }\n                >\n                  FDA drug label for brigatinib\n                </Linkout>{' '}\n                and adherence to <SopPageLink version={2.2} />\n              </span>,\n            ],\n            [\n              '2',\n              <GenePageLink hugoSymbol=\"BRAF\" />,\n              'V600',\n              'V600 (Excluding V600E, V600K)',\n              'Melanoma',\n              'Binimetinib + Encorafenib, Dabrafenib + Trametinib, Cobimetinib + Vemurafenib',\n              <span>\n                The NCCN Melanoma: Cutaneous v2.2021 lists “BRAF V600” and is\n                not limited to V600E/K. Therefore, according to the{' '}\n                <SopPageLink version={2.2} /> BRAF V600 is considered Level 2,\n                while V600E/K are Level 1.\n              </span>,\n            ],\n            [\n              '2',\n              <GenePageLink hugoSymbol=\"EZH2\" />,\n              'Oncogenic Mutations',\n              'Oncogenic Mutations (Excluding Y646F, A692V, Y646C, Y646S, Y646N, Y646H, A682G)',\n              'Follicular Lymphoma',\n              'Tazemetostat',\n              <span>\n                The NCCN B-cell lymphoma v5.2021 lists “EZH2 mutation” and is\n                not limited to the mutations listed in the FDA-approved CDx.\n                Therefore, according to the <SopPageLink version={2.2} /> EZH2\n                Oncogenic Mutations are considered Level 2, with the exception\n                of those mutations listed in the CDx, which are Level 1.\n              </span>,\n            ],\n            [\n              '2',\n              <GenePageLink hugoSymbol=\"PIK3CA\" />,\n              'Oncogenic Mutations',\n              'Oncogenic Mutations (Excluding E545G, Q546E, E545A, H1047R, C420R, H1047Y, Q546R, H1047L, E542K, E545D, E545K)',\n              'Breast Cancer',\n              'Alpelisib+Fulvestrant',\n              <span>\n                The NCCN Breast Cancer V8.2021 lists “PIK3CA activating\n                mutation” and is not limited to the mutations listed in the\n                FDA-approved CDx. Therefore, PIK3CA Oncogenic Mutations by{' '}\n                <SopPageLink version={2.2} /> are considered Level 2, with the\n                exception of those mutations listed in the CDx, which are Level\n                1.\n              </span>,\n            ],\n          ].map((record, index) => {\n            return {\n              key: `11292021-ACCURATE-COLUMN-${index}`,\n              content: record.map((subItem, subIndex) => {\n                return {\n                  key: `11292021-ACCURATE-COLUMN-${index}-${subIndex}`,\n                  content: subItem,\n                };\n              }),\n            };\n          })}\n          theadClassName={mainstyle.changedAnnotationTableHead}\n        />\n      </span>,\n      <span>\n        Updated therapeutic implications: Updated tumor type\n        <SimpleTable\n          columns={[\n            { name: 'Level' },\n            { name: 'Gene' },\n            { name: 'Mutation' },\n            { name: 'Previous Cancer Type' },\n            { name: 'Current Cancer Type' },\n            { name: 'Drug' },\n            { name: 'Evidence' },\n          ]}\n          rows={[\n            [\n              '3A',\n              <GenePageLink hugoSymbol={'PTCH1'} />,\n              'Truncating Mutations',\n              'Embryonal Tumor',\n              'Medulloblastoma',\n              'Sonidegib, Vismodegib',\n              <PMIDLink\n                pmids={'24523439, 32923880, 26169613, 31362788, 29515801'}\n              />,\n            ],\n          ].map((record, index) => {\n            return {\n              key: `11292021-UPDATED-CANCER-TYPE-COLUMN-${index}`,\n              content: record.map((subItem, subIndex) => {\n                return {\n                  key: `11292021-ACCURATE-COLUMN-${index}-${subIndex}`,\n                  content: subItem,\n                };\n              }),\n            };\n          })}\n          theadClassName={mainstyle.changedAnnotationTableHead}\n        />\n      </span>,\n    ],\n  },\n  '10262021': {\n    priorityNews: [\n      <span>\n        Updated therapeutic implications - 8 new associations\n        <Row className={'overflow-auto'}>\n          <table className=\"table\">\n            <thead>\n              <tr style={{ whiteSpace: 'nowrap' }}>\n                <th>Level</th>\n                <th>Gene</th>\n                <th>Mutation</th>\n                <th>Cancer Type</th>\n                <th>Drug</th>\n                <th>Evidence</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>2</td>\n                <td>\n                  <GenePageLink hugoSymbol={'BRAF'} />\n                </td>\n                <td>V600E</td>\n                <td>Encapsulated Glioma, Diffuse Glioma</td>\n                <td>Dabrafenib + Trametinib, Vemurafenib + Cobimetinib</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <span>Listing in the CNS NCCN v1.2021</span>\n                    <PMIDLink\n                      pmids={'28984141, 29380516, 26287849, 30351999'}\n                    />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>2</td>\n                <td>\n                  <GenePageLink hugoSymbol={'BRAF'} />\n                </td>\n                <td>V600</td>\n                <td>Langerhans Cell Histiocytosis</td>\n                <td>Vemurafenib, Dabrafenib</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <span>Listing in Histiocytic Neoplasms NCCN v2.2021</span>\n                    <PMIDLink pmids={'30867592'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td rowSpan={3}>2</td>\n                <td rowSpan={3}>\n                  <GenePageLink hugoSymbol={'BRAF'} />\n                </td>\n                <td rowSpan={3}>Oncogenic Mutations, excluding V600</td>\n                <td>Erdheim-Chester Disease</td>\n                <td rowSpan={3}>Cobimetinib, Trametinib</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <span>Listing in Histiocytic Neoplasms NCCN v2.2021</span>\n                    <PMIDLink pmids={'30867592'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>Langerhans Cell Histiocytosis</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <span>Listing in Histiocytic Neoplasms NCCN v2.2021</span>\n                    <PMIDLink pmids={'30867592, 32991018'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>Rosai-Dorfman Disease</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <span>Listing in Histiocytic Neoplasms NCCN v2.2021</span>\n                    <PMIDLink pmids={'29236635'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td rowSpan={3}>2</td>\n                <td rowSpan={3}>\n                  <GenePageLink hugoSymbol={'ARAF'} />\n                  {', '}\n                  <GenePageLink hugoSymbol={'RAF1'} />\n                  {', '}\n                  <GenePageLink hugoSymbol={'KRAS'} />\n                  {', '}\n                  <GenePageLink hugoSymbol={'NRAS'} />\n                  {', '}\n                  <GenePageLink hugoSymbol={'MAP2K1'} />\n                  {', '}\n                  <GenePageLink hugoSymbol={'MAP2K2'} />\n                </td>\n                <td rowSpan={3}>Oncogenic Mutations</td>\n                <td>Erdheim-Chester Disease</td>\n                <td rowSpan={3}>Cobimetinib, Trametinib</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <span>Listing in Histiocytic Neoplasms NCCN v2.2021</span>\n                    <PMIDLink pmids={'30867592'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>Langerhans Cell Histiocytosis</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <span>Listing in Histiocytic Neoplasms NCCN v2.2021</span>\n                    <PMIDLink pmids={'30867592, 32991018'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>Rosai-Dorfman Disease</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <span>Listing in Histiocytic Neoplasms NCCN v2.2021</span>\n                    <PMIDLink pmids={'29236635'} />\n                  </WithSeparator>\n                </td>\n              </tr>\n              <tr>\n                <td>3A</td>\n                <td>\n                  <GenePageLink hugoSymbol={'BRAF'} />\n                </td>\n                <td>V600</td>\n                <td>Histiocytosis</td>\n                <td>Vemurafenib, Dabrafenib</td>\n                <td>\n                  <PMIDLink pmids={'25209580, 31213430, 31376203'} />\n                </td>\n              </tr>\n              <tr>\n                <td>3A</td>\n                <td>\n                  <GenePageLink hugoSymbol={'KRAS'} />\n                </td>\n                <td>Oncogenic Mutations</td>\n                <td>Histiocytosis</td>\n                <td>Cobimetinib, Trametinib</td>\n                <td>\n                  <PMIDLink pmids={'30361829'} />\n                </td>\n              </tr>\n              <tr>\n                <td>3A</td>\n                <td>\n                  <GenePageLink hugoSymbol={'NRG1'} />\n                </td>\n                <td>Fusions</td>\n                <td>All Solid Tumors</td>\n                <td>Zenocutuzumab</td>\n                <td>\n                  <AbstractLink\n                    link={\n                      'https://ascopubs.org/doi/abs/10.1200/JCO.2021.39.15_suppl.3003'\n                    }\n                    abstract={'Schram et al. Abstract#  3003, ASCO 2021'}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>R2</td>\n                <td>\n                  <GenePageLink hugoSymbol={'BTK'} />\n                </td>\n                <td>C481R, C481F, C481Y, T474I, T474S, T316A</td>\n                <td>Chronic Lymphocytic Leukemia/Small Lymphocytic Lymphoma</td>\n                <td>Ibrutinib</td>\n                <td>\n                  <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                    <PMIDLink\n                      pmids={'28049639, 29381098, 28418267, 32670873'}\n                    />\n                    <AbstractLink\n                      link={\n                        'https://ashpublications.org/blood/article/134/Supplement_1/504/426369/Resistance-to-Acalabrutinib-in-CLL-Is-Mediated'\n                      }\n                      abstract={'Woyach et al. Abstract# 642-CLL, ASH 2019'}\n                    />\n                  </WithSeparator>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Row>\n      </span>,\n    ],\n    changedAnnotations: [\n      {\n        columnHeaderType: AnnotationColumnHeaderType.DRUG,\n        content: [\n          [\n            '3A',\n            'BRAF',\n            'Oncogenic Mutations, excluding V600',\n            'Histiocytosis',\n            'Cobimetinib',\n            'Cobimetinib, Trametinib',\n            <PMIDLink pmids={'30361829'} />,\n          ],\n          [\n            '3A',\n            'ARAF, RAF1, NRAS, MAP2K2',\n            'Oncogenic Mutations',\n            'Histiocytosis',\n            'Cobimetinib',\n            'Cobimetinub, Trametinib',\n            <PMIDLink pmids={'30361829'} />,\n          ],\n        ],\n      },\n    ],\n  },\n  '10072021': {\n    priorityNews: [\n      <span>\n        {ONCOKB_TM} is the first somatic human genetic variant database to\n        achieve{' '}\n        <Linkout\n          link={\n            'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-recognizes-memorial-sloan-kettering-database-molecular-tumor-marker-information'\n          }\n        >\n          FDA partial recognition\n        </Linkout>\n        ! Read more about the scope of the recognition, the recognition process,\n        and what it means for the knowledge base and our users on our{' '}\n        <Link to={PAGE_ROUTE.FDA_RECOGNITION}>About Page</Link>.\n      </span>,\n    ],\n  },\n  '09292021': {\n    priorityNews: [\n      <span>\n        New to {ONCOKB_TM} Watch our introductory videos to get you started. See\n        the {ONCOKB_TM} <Link to={PAGE_ROUTE.ABOUT}>About page</Link>.\n      </span>,\n    ],\n    updatedImplication: [\n      [\n        'R2',\n        'EGFR',\n        'G724S',\n        'Non-Small Cell Lung Cancer',\n        'Osimertinib',\n        <PMIDLink pmids={'28838405, 30405134, 30228210, 30796031'} />,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'EGFR',\n            'Exon 20 in-frame insertions',\n            'Non-Small Cell Lung Cancer',\n            'Mobocertinib',\n            '3A',\n            '1',\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaApprovalLink\n                link={\n                  'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-grants-accelerated-approval-mobocertinib-metastatic-non-small-cell-lung-cancer-egfr-exon-20'\n                }\n                approval={'Mobocertinib'}\n              />\n              <AbstractLink\n                link={\n                  'https://ascopubs.org/doi/abs/10.1200/JCO.2021.39.15_suppl.9014'\n                }\n                abstract={'Ramalingham et al. Abstract # 9014, ASCO 2021'}\n              />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n  },\n  '08312021': {\n    updatedImplication: [\n      [\n        '2',\n        'BRAF',\n        'Fusions',\n        'Pilocytic Astrocytoma',\n        'Selumetinib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <span>Listing in CNS Cancer NCCN v1.2021</span>\n          <PMIDLink pmids={'31151904'} />\n        </WithSeparator>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'IDH1',\n            'R132',\n            'Cholangiocarcinoma',\n            'Ivosidenib',\n            '3A',\n            '1',\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaApprovalLink\n                link={\n                  'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-ivosidenib-advanced-or-metastatic-cholangiocarcinoma?utm_medium=email&utm_source=govdelivery'\n                }\n                approval={'Ivosidenib'}\n              />\n              <PMIDLink pmids={'32416072'} />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n  },\n  '07162021': {\n    priorityNews: [\n      <span>\n        Release of <SopPageLink version={2.1} />\n      </span>,\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'KIT',\n            'D816',\n            'Mastocytosis',\n            'Avapritinib',\n            '3A',\n            '1',\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaApprovalLink\n                link={\n                  'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-avapritinib-advanced-systemic-mastocytosis'\n                }\n                approval={'Avapritinib'}\n              />\n              <AbstractLink\n                link={\n                  'https://ashpublications.org/blood/article/136/Supplement%201/37/470030/Pure-Pathologic-Response-Is-Associated-with'\n                }\n                abstract={'Gotlib et al. Abstract# 634, ASH 2020'}\n              />\n              <AbstractLink\n                link={\n                  'https://www.ashclinicalnews.org/on-location/other-meetings/pathfinder-avapritinib-induces-rapid-responses-advanced-systemic-mastocytosis/'\n                }\n                abstract={'DeAngelo et al. Absract# CT023, AACR 2021.'}\n              />\n            </WithSeparator>,\n          ],\n          [\n            'EGFR',\n            'Exon 20 in-frame insertions',\n            'Non-Small Cell Lung Cancer',\n            'Amivantamab',\n            '3A',\n            '1',\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaApprovalLink\n                link={\n                  'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-grants-accelerated-approval-amivantamab-vmjw-metastatic-non-small-cell-lung-cancer'\n                }\n                approval={'Amivantamab'}\n              />\n              <AbstractLink\n                link={\n                  'https://www.jto.org/article/S1556-0864(21)00326-9/fulltext'\n                }\n                abstract={'Sabari et al. Abstract# OA04.04, WCLC, 2021.'}\n              />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n  },\n  '06172021': {\n    priorityNews: [\n      <span>\n        The official {ONCOKB_TM} hugo symbols and gene aliases now come from the{' '}\n        <Linkout link={'https://www.genenames.org'}>HGNC</Linkout> gene list\n      </span>,\n    ],\n    updatedImplication: [\n      [\n        '1',\n        'ERBB2',\n        'Amplification',\n        'Esophagogastric Cancer',\n        'Pembrolizumab + Trastuzumab + Chemotherapy',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <FdaApprovalLink\n            link={\n              'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-grants-accelerated-approval-pembrolizumab-her2-positive-gastric-cancer'\n            }\n            approval={'Pembrolizumab + Trastuzumab + Chemotherapy'}\n          />\n          <PMIDLink pmids={'33167735'} />\n        </WithSeparator>,\n      ],\n      [\n        '1',\n        'FGFR2',\n        'Fusions',\n        'Cholangiocarcinoma',\n        'Infigratinib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <FdaApprovalLink\n            link={\n              'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-grants-accelerated-approval-infigratinib-metastatic-cholangiocarcinoma'\n            }\n            approval={'Infigratinib'}\n          />\n          <AbstractLink\n            link={\n              'https://ascopubs.org/doi/abs/10.1200/JCO.2021.39.3_suppl.265?af=R'\n            }\n            abstract={'Javle et al. Abstract# 265, ASCO 2021'}\n          />\n        </WithSeparator>,\n      ],\n      [\n        '4',\n        'ARID1A',\n        'Truncating Mutations',\n        'All Solid Tumors',\n        'Tazemetostat',\n        <PMIDLink pmids={'25686104, 32506298'} />,\n      ],\n      [\n        '4',\n        'ARID1A',\n        'Truncating Mutations',\n        'All Solid Tumors',\n        'PLX2853',\n        <PMIDLink pmids={'29760405, 31913353'} />,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'KRAS',\n            'G12C',\n            'Non-Small Cell Lung Cancer',\n            'Sotorasib',\n            '3A',\n            '1',\n            <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n              <FdaApprovalLink\n                link={\n                  'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-grants-accelerated-approval-sotorasib-kras-g12c-mutated-nsclc'\n                }\n                approval={'Sotorasib'}\n              />\n              <PMIDLink pmids={'34096690'} />\n            </WithSeparator>,\n          ],\n        ],\n      },\n    ],\n    news: [\n      <span>\n        Updated Level 1 therapeutic biomarker associations for EZH2, IDH1, IDH2\n        and PIK3CA to align with the biomarkers specified in each FDA-approved\n        companion diagnostic test\n        <SimpleTable\n          columns={CDX_COLUMNS}\n          rows={[\n            [\n              '1',\n              <GenePageLink hugoSymbol={'EZH2'} />,\n              'Follicular Lymphoma',\n              'Tazemetostat',\n              'Oncogenic Mutations',\n              'Y646N, Y646F, Y646H, Y646S, Y646C, A682G, A692V',\n              <PMALink pma={'P200014'} />,\n            ],\n            [\n              '1',\n              <GenePageLink hugoSymbol={'IDH1'} />,\n              'AML',\n              'Ivosidenib',\n              'Oncogenic Mutations',\n              'R132C, R132H, R132G, R132S, R132L',\n              <PMALink pma={'P170041'} />,\n            ],\n            [\n              '1',\n              <GenePageLink hugoSymbol={'IDH2'} />,\n              'AML',\n              'Enasidenib',\n              'Oncogenic Mutations',\n              'R140Q, R140L, R140G, R140W, R172K, R172M, R172G, R172S, R172W',\n              <PMALink pma={'P170005'} />,\n            ],\n            [\n              '1',\n              <GenePageLink hugoSymbol={'PIK3CA'} />,\n              'Breast Cancer',\n              'Alpelisib + Fulvestrant',\n              'Oncogenic Mutations',\n              'C420R, E542K, E545A, E545D, E545G, E545K, Q546E, Q546R, H1047L, H1047R, H1047Y',\n              <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n                <span>\n                  FoundationOne CDx - <PMALink pma={'P170019/S006'} />\n                </span>\n                <span>\n                  Therascreen - <PMALink pma={'P190001'} />\n                </span>\n                <span>\n                  FoundationOne Liquid CDx -{' '}\n                  <WithSeparator separator={', '}>\n                    <PMALink pma={'P200006'} />\n                    <PMALink pma={'P200016'} />\n                  </WithSeparator>\n                </span>\n              </WithSeparator>,\n            ],\n          ].map((record, index) => {\n            return {\n              key: `06172021-CDX-COLUMN-${index}`,\n              content: record.map((subItem, subIndex) => {\n                return {\n                  key: `06172021-CDX-COLUMN-${index}-${subIndex}`,\n                  content: subItem,\n                };\n              }),\n            };\n          })}\n          theadClassName={mainstyle.changedAnnotationTableHead}\n        />\n      </span>,\n    ],\n  },\n  '04142021': {\n    priorityNews: [\n      <span>\n        An updated version of the {ONCOKB_TM} Curation Standard Operating\n        Procedure, v2.0, has been released. See the {ONCOKB_TM}{' '}\n        <Link to={PAGE_ROUTE.ABOUT}>About</Link> page or{' '}\n        <SopPageLink>https://sop.oncokb.org</SopPageLink>\n      </span>,\n      <span>\n        &quot;Resistance&quot; is now included as an oncogenic effect for\n        variants that are only found in the context of drug resistance\n      </span>,\n      <span>\n        Documentation of all data changes in each {ONCOKB_TM} release are now\n        publicly accessible on{' '}\n        <Linkout link={ONCOKB_DATAHUB_LINK}>GitHub</Linkout>\n      </span>,\n    ],\n    updatedImplication: [\n      [\n        '2',\n        'IDH1',\n        'Oncogenic Mutations',\n        'Chondrosarcoma',\n        'Ivosidenib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <span>Listing in Bone Cancer NCCN v1.2021</span>\n          <PMIDLink pmids={'32208957'} />\n        </WithSeparator>,\n      ],\n      [\n        '2',\n        'JAK2',\n        'Fusions',\n        'Myeloid/Lymphoid Neoplasms with Eosinophilia and Rearrangement of PDGFRA/PDGFRB or FGFR1 or with PCM1-JAK2',\n        'Ruxolitinib, Fedratinib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <span>\n            Listing in Myeloid/Lymphoid Neoplasms with Eosinophilia and Tyrosine\n            Kinase Fusion Genes NCCN v3.2021\n          </span>\n          <PMIDLink pmids={'32279331'} />\n        </WithSeparator>,\n      ],\n      [\n        '2',\n        'FGFR1',\n        'Fusions',\n        'Myeloid/Lymphoid Neoplasms with FGFR1 Rearrangement',\n        'Pemigatinib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <span>\n            Listing in Myeloid/Lymphoid Neoplasms with Eosinophilia and Tyrosine\n            Kinase Fusion Genes NCCN v3.2021\n          </span>\n          <PMIDLink pmids={'32472305'} />\n          <AbstractLink\n            link={\n              'https://ashpublications.org/blood/article/132/Supplement%201/690/266005/Interim-Results-from-Fight-203-a-Phase-2-Open'\n            }\n            abstract={'Verstovsek et al, Abstract# 690, ASH 2018.'}\n          />\n        </WithSeparator>,\n      ],\n      [\n        '3A',\n        'EGFR',\n        'Exon 20 in-frame insertions',\n        'Non-Small Cell Lung Cancer',\n        'Mobocertinib',\n        <PMIDLink pmids={'33632775'} />,\n      ],\n      [\n        '3A',\n        'EGFR',\n        'Exon 20 in-frame insertions',\n        'Non-Small Cell Lung Cancer',\n        'Amivantamab',\n        <AbstractLink\n          link={\n            'https://library.iaslc.org/conference-program?product_id=20&author=&category=&date=&session_type=&session=&presentation=&keyword=sabari&cme=undefined&'\n          }\n          abstract={'Sabari et al. Abstract# OA04.04, WCLC 2020.'}\n        />,\n      ],\n      [\n        '3A',\n        'KRAS',\n        'G12C',\n        'Non-Small Cell Lung Cancer',\n        'Adagrasib',\n        <AbstractLink\n          link={\n            'https://cm.eortc.org/cmPortal/Searchable/ENA2020/config/normal#!abstractdetails/0000902150'\n          }\n          abstract={'Janne et al. Abstract# LBA-03, EORTC 2020.'}\n        />,\n      ],\n      [\n        '3A',\n        'HRAS',\n        'Oncogenic Mutations',\n        'Bladder Urothelial Carcinoma',\n        'Tipifarnib',\n        <PMIDLink pmids={'32636318'} />,\n      ],\n      [\n        '3A',\n        'BRAF',\n        'V600E',\n        'Biliary Tract Cancer',\n        'Dabrafenib + Trametinib',\n        <PMIDLink pmids={'32818466'} />,\n      ],\n      [\n        '3A',\n        'TSC2',\n        'Oncogenic Mutations',\n        'Perivascular Epithelioid Cell Tumor',\n        'ABI-009',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <AbstractLink\n            link={\n              'https://ascopubs.org/doi/abs/10.1200/JCO.2019.37.15_suppl.11005'\n            }\n            abstract={'Wagner et al. Abstract# 11005, ASCO 2019.'}\n          />\n          <AbstractLink\n            link={\n              'https://ascopubs.org/doi/abs/10.1200/JCO.2020.38.15_suppl.11516'\n            }\n            abstract={'Wagner et al. Abstract# 11516, ASCO 2020.'}\n          />\n        </WithSeparator>,\n      ],\n    ],\n  },\n  '03122021': {\n    updatedImplication: [\n      [\n        '1',\n        'MET',\n        'Exon 14 Deletion',\n        'Non-Small Cell Lung Cancer',\n        'Tepotinib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <FdaApprovalLink\n            link={\n              'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-grants-accelerated-approval-tepotinib-metastatic-non-small-cell-lung-cancer'\n            }\n            approval={'Tepotinib'}\n          />\n          <PMIDLink pmids={'32469185'} />\n        </WithSeparator>,\n      ],\n      [\n        '2',\n        'ERBB2',\n        'Amplification',\n        'Colorectal Cancer',\n        'Trastuzumab Deruxtecan',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <span>Listing in Colorectal Cancer NCCN, v2.2021</span>\n          <AbstractLink\n            link={\n              'https://ascopubs.org/doi/abs/10.1200/JCO.2020.38.15_suppl.4000'\n            }\n            abstract={'Siena et al. Abstract# 4000, ASCO 2020.'}\n          />\n        </WithSeparator>,\n      ],\n      [\n        '2',\n        'ERBB2',\n        'Oncogenic Mutations',\n        'Non-Small Cell Lung Cancer',\n        'Trastuzumab Deruxtecan',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <span>Listing in NSCLC NCCN, v2.2021</span>\n          <AbstractLink\n            link={'https://ascopubs.org/doi/10.1200/JCO.2020.38.15_suppl.9504'}\n            abstract={'Smit et al. Abstract# 9504, ASCO 2020.'}\n          />\n        </WithSeparator>,\n      ],\n      [\n        '2',\n        'ALK',\n        'Fusions',\n        'Inflammatory Myofibroblastic Tumor',\n        'Brigatinib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <span>Listing in Soft Tissue Sarcoma NCCN, v1.2021</span>\n          <PMIDLink pmids={'27836716'} />\n        </WithSeparator>,\n      ],\n      [\n        '4',\n        'KIT',\n        'D816, D820, N822, Y823D, C809G, A829P',\n        'Gastrointestinal Stromal Tumors',\n        'Nilotinib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <PMIDLink pmids={'19467857, 21456006'} />\n        </WithSeparator>,\n      ],\n      [\n        '4',\n        'KIT',\n        'D816, D820, N822, Y823D, C809G, A829P',\n        'Gastrointestinal Stromal Tumors',\n        'Pazopanib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <PMIDLink pmids={'24356634'} />\n        </WithSeparator>,\n      ],\n      [\n        'R1',\n        'NTRK3',\n        'G623R, G696A, F617L',\n        'All Solid Tumors',\n        'Larotrectinib',\n        <span>\n          Inclusion as resistance mutations in{' '}\n          <Linkout\n            link={\n              'https://www.accessdata.fda.gov/drugsatfda_docs/label/2018/211710s000lbl.pdf'\n            }\n          >\n            FDA drug label\n          </Linkout>\n        </span>,\n      ],\n      [\n        'R2',\n        'NTRK1',\n        'G623R',\n        'All Solid Tumors',\n        'Entrectinib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <PMIDLink pmids={'28751539, 28751539, 26546295'} />\n          <AbstractLink\n            link={\n              'https://tptherapeutics.com/wp-content/uploads/AACR_2019_TRK_Final_S.pdf'\n            }\n            abstract={'Drilon et al. Abstract# 4000, AACR 2019'}\n          />\n        </WithSeparator>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          ['NTRK1', 'G623R', 'All Solid Tumors', 'Larotrectinib', 'R2', 'R1'],\n          [\n            'KIT',\n            'D816, D820, N822, Y823D, C809G, A829P',\n            'Gastrointestinal Stromal Tumors',\n            'Sorafenib',\n            'None',\n            '2',\n          ],\n          [\n            'CDK4',\n            'Amplification',\n            'Dedifferentiated Liposarcoma, Well-Differentiated Liposarcoma',\n            'Palbociclib, Abemaciclib',\n            'None',\n            '4',\n          ],\n        ],\n      },\n    ],\n  },\n  '02102021': {\n    priorityNews: [\n      <span>\n        Members of the {ONCOKB_TM} External Advisory Board and their relevant\n        COIs are now listed on the{' '}\n        <Link to={PAGE_ROUTE.TEAM}>{ONCOKB_TM} team page</Link>\n      </span>,\n    ],\n    updatedImplication: [\n      [\n        '1',\n        'ALK',\n        'Fusions',\n        'Anaplastic Large-Cell Lymphoma',\n        'Crizotinib',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <FdaApprovalLink\n            link={\n              'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-crizotinib-children-and-young-adults-relapsed-or-refractory-systemic-anaplastic-large'\n            }\n            approval={'Crizotinib'}\n          />\n          <PMIDLink pmids={'23598171, 28032129, 29352732'} />\n        </WithSeparator>,\n      ],\n      [\n        '1',\n        'ERBB2',\n        'Amplification',\n        'Breast Cancer',\n        'Margetuximab + Chemotherapy',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <FdaApprovalLink\n            link={\n              'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-margetuximab-metastatic-her2-positive-breast-cancer'\n            }\n            approval={'Margetuximab + Chemotherapy'}\n          />\n          <AbstractLink\n            link={\n              'https://ascopubs.org/doi/abs/10.1200/JCO.2019.37.15_suppl.1000'\n            }\n            abstract={'Rugo et al. Abstract # 1000, ASCO 2019'}\n          />\n        </WithSeparator>,\n      ],\n      [\n        '1',\n        'ERBB2',\n        'Amplification',\n        'Gastric or Gastroesophageal Adenocarcinoma',\n        'Trastuzumab Deruxtecan',\n        <WithSeparator separator={EVIDENCE_COLUMN_SEPARATOR}>\n          <Linkout\n            link={\n              'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-fam-trastuzumab-deruxtecan-nxki-her2-positive-gastric-adenocarcinomas'\n            }\n          >\n            FDA-approval of Trastuzumab deruxtecan\n          </Linkout>\n          <PMIDLink pmids={'32469182'} />\n        </WithSeparator>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        title: `Changed annotation to adhere to our upcoming ${ONCOKB_TM} SOP v2.0`,\n        content: [\n          [\n            'RET',\n            'Fusions',\n            'Non-Small Cell Lung Cancer',\n            'Vandetanib',\n            '2',\n            '3A',\n          ],\n          [\n            'NRAS',\n            'Oncogenic Mutations',\n            'Melanoma',\n            'Binimetinib + Ribociclib',\n            '3A',\n            '4',\n          ],\n          [\n            'MET',\n            'Amplification',\n            'Renal Cell Carcinoma',\n            'Cabozantinib',\n            '2',\n            'None',\n          ],\n          [\n            'CDK4',\n            'Amplification',\n            'Dedifferentiated Liposarcoma, Well-Differentiated Liposarcoma',\n            'Palbociclib, Abemaciclib',\n            '2',\n            'None',\n          ],\n          [\n            'KIT',\n            'A829P, C809G, D816, D820, N822, Y823D',\n            'Gastrointestinal Stromal Tumor',\n            'Sorafenib',\n            '2',\n            'None',\n          ],\n          [\n            'KIT',\n            'Oncogenic Mutations',\n            'Thymic Tumor',\n            'Sunitinib',\n            '2',\n            'None',\n          ],\n        ],\n      },\n    ],\n  },\n  '01142021': {\n    priorityNews: [\n      <span>\n        We are excited to introduce the{' '}\n        <LevelOfEvidencePageLink levelType={LEVEL_TYPES.DX}>\n          {ONCOKB_TM} Diagnostic (Dx)\n        </LevelOfEvidencePageLink>{' '}\n        and{' '}\n        <LevelOfEvidencePageLink levelType={LEVEL_TYPES.PX}>\n          Prognostic (Px)\n        </LevelOfEvidencePageLink>{' '}\n        Levels of Evidence (currently applicable to hematologic disease). The\n        definitions of these levels of evidence can be found on the{' '}\n        <LevelOfEvidencePageLink levelType={LEVEL_TYPES.DX}>\n          Levels of Evidence\n        </LevelOfEvidencePageLink>{' '}\n        page. The complete list of biomarkers associated with a diagnostic or\n        prognostic level of evidence can be found on the{' '}\n        <Link to={PAGE_ROUTE.ACTIONABLE_GENE}>Actionable Genes</Link> page\n      </span>,\n    ],\n  },\n  '12172020': {\n    priorityNews: [\n      <span>Updated all gene names to the latest HUGO symbol</span>,\n    ],\n    updatedImplication: [\n      [\n        '1',\n        'RET',\n        'Fusions',\n        'Thyroid Cancer',\n        'Pralsetinib',\n        <span>\n          <Linkout\n            link={\n              'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-pralsetinib-ret-altered-thyroid-cancers'\n            }\n          >\n            FDA-approval of Pralsetinib\n          </Linkout>\n          ; Abstract:{' '}\n          <Linkout\n            link={\n              'https://ascopubs.org/doi/abs/10.1200/JCO.2020.38.15_suppl.109'\n            }\n          >\n            Subbiah et al. Abstract# 109, ASCO 2020\n          </Linkout>\n        </span>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'RET',\n            'Oncogenic Mutations',\n            'Medullary Thyroid Cancer',\n            <div>Pralsetinib</div>,\n            '3A',\n            '1',\n            <div>\n              <Linkout\n                link={\n                  'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-pralsetinib-ret-altered-thyroid-cancers'\n                }\n              >\n                FDA-approval of Pralsetinib\n              </Linkout>\n              ; Abstract:{' '}\n              <Linkout\n                link={\n                  'https://oncologypro.esmo.org/meeting-resources/esmo-virtual-congress-2020/results-from-the-registrational-phase-i-ii-arrow-trial-of-pralsetinib-blu-667-in-patients-pts-with-advanced-ret-mutation-positive-medullary-thy'\n                }\n              >\n                Hu et al. Abstract# 19130, ESMO 2020\n              </Linkout>\n            </div>,\n          ],\n        ],\n      },\n    ],\n  },\n  '11132020': {\n    priorityNews: [\n      <span>\n        Based on the updated NCCN Guidelines for CML and ALL, the ABL1 G250E,\n        Y253H, E255K/V, V299L T315I/A, F317V/I/C/L, and F359C/I/V mutations are\n        included as Level R1 resistance mutations for the tyrosine kinase\n        inhibitors indicated in the table below.\n      </span>,\n      <span>\n        Updated therapeutic implications\n        <Row className={'overflow-auto'}>\n          <table className=\"table\">\n            <thead>\n              <tr style={{ whiteSpace: 'nowrap' }}>\n                <th>Level</th>\n                <th>Gene</th>\n                <th>Mutation</th>\n                <th>Cancer Type</th>\n                <th>Drug</th>\n                <th>Evidence</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td rowSpan={8}>R1</td>\n                <td rowSpan={8}>\n                  <GenePageLink hugoSymbol={'ABL1'} />\n                </td>\n                <td rowSpan={2}>V299L, F317L, G250E</td>\n                <td>CML</td>\n                <td rowSpan={2}>Bosutinib</td>\n                <td>\n                  NCCN v2.2021 CML; <PMIDLink pmids={'21865346, 22371878'} />\n                </td>\n              </tr>\n              <tr>\n                <td>BLL</td>\n                <td>\n                  NCCN v2.2020 ALL; <PMIDLink pmids={'26040495'} />\n                </td>\n              </tr>\n              <tr>\n                <td rowSpan={2}>F317V/I/C/L, T315A, V299L</td>\n                <td>CML</td>\n                <td rowSpan={2}>Dasatinib</td>\n                <td>\n                  NCCN v2.2021 CML;{' '}\n                  <PMIDLink\n                    pmids={\n                      '17785585, 19589924, 19779040, 17710227, 17339191, 17114651'\n                    }\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>BLL</td>\n                <td>\n                  NCCN v2.2020 ALL;{' '}\n                  <PMIDLink pmids={'17496201, 20131302, 17339191'} />\n                </td>\n              </tr>\n              <tr>\n                <td rowSpan={2}>E255K/V, F359C/I/V, Y253H, G250E</td>\n                <td>CML</td>\n                <td rowSpan={2}>Nilotinib</td>\n                <td>\n                  NCCN v2.2021 CML;{' '}\n                  <PMIDLink\n                    pmids={'16775235, 17785585, 23502220, 19652056, 19589924'}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>BLL</td>\n                <td>\n                  NCCN v2.2020 ALL;{' '}\n                  <PMIDLink\n                    pmids={'16775235, 17785585, 23502220, 19652056, 19589924'}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td rowSpan={2}>\n                  V299L, G250E, F317V/I/C/L, T315A, E255K/V, F359C/I/V, Y253H\n                </td>\n                <td>CML</td>\n                <td rowSpan={2}>Imatinib</td>\n                <td>\n                  NCCN v2.2021 CML;{' '}\n                  <PMIDLink\n                    pmids={\n                      '17189410, 20010464, 19925053, 17189410, 17785585, 12623848'\n                    }\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>BLL</td>\n                <td>\n                  NCCN v2.2020 ALL;{' '}\n                  <PMIDLink pmids={'17189410, 17405907, 11861307'} />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Row>\n      </span>,\n    ],\n  },\n  '09172020': {\n    priorityNews: [\n      <span>\n        We now support links to the variant page with the{' '}\n        <Linkout link={'https://varnomen.hgvs.org/recommendations/DNA/'}>\n          HGVS Variant Nomenclature\n        </Linkout>\n        , see <Linkout link={FAQ_URL_PATTERNS_LINK}>HERE</Linkout> for more\n        details.\n      </span>,\n    ],\n    updatedImplication: [\n      [\n        'R1',\n        'BTK',\n        'C481S',\n        'Chronic Lymphocytic Leukemia/Small Lymphocytic Lymphoma',\n        'Ibrutinib',\n        <span>\n          Listing in NCCN v4.2020 CLL; <PMIDLink pmids={'24869598, 28418267'} />\n        </span>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'RET',\n            'Fusions',\n            'Non-Small Cell Lung Cancer',\n            <div>Pralsetinib</div>,\n            '3A',\n            '1',\n            <div>\n              Abstract:{' '}\n              <Linkout\n                link={\n                  'https://ascopubs.org/doi/abs/10.1200/JCO.2020.38.15_suppl.109'\n                }\n              >\n                Subbiah et al. Abstract# 109, ASCO 2020\n              </Linkout>\n              ;{' '}\n              <Linkout\n                link={\n                  'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-pralsetinib-lung-cancer-ret-gene-fusions'\n                }\n              >\n                FDA-approval of Pralsetinib\n              </Linkout>\n            </div>,\n          ],\n        ],\n      },\n    ],\n  },\n  '08282020': {\n    priorityNews: [\n      <span>\n        Updated therapeutic implications - 4 new associations\n        <Row className={'overflow-auto'}>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Level</th>\n                <th>Gene</th>\n                <th>Mutation</th>\n                <th>Cancer Type</th>\n                <th>Drug</th>\n                <th>Evidence</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>1</td>\n                <td>\n                  <GenePageLink hugoSymbol={'KIT'} />\n                </td>\n                <td>Select Oncogenic Mutations</td>\n                <td>Gastrointestinal Stromal Tumors</td>\n                <td>Ripretinib</td>\n                <td>\n                  <Linkout\n                    link={\n                      'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-ripretinib-advanced-gastrointestinal-stromal-tumor'\n                    }\n                  >\n                    FDA-approval of Ripretinib\n                  </Linkout>\n                  ; <PMIDLink pmids={'32511981'} />\n                </td>\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>\n                  <GenePageLink hugoSymbol={'BRAF'} />\n                </td>\n                <td>\n                  <AlterationPageLink hugoSymbol={'BRAF'} alteration={'V600'} />\n                </td>\n                <td>Melanoma</td>\n                <td>Vemurafenib + Cobimetinib + Atezulizumab</td>\n                <td>\n                  <Linkout\n                    link={\n                      'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-atezolizumab-braf-v600-unresectable-or-metastatic-melanoma?utm_campaign=Oncology%207-31-2020%20atezolizumab&utm_medium=email&utm_source=Eloqua&elqTrackId=38552F7B5C55F017B66C6336EE62E571&elq=83c8ebb4efca420989e612b8413456fe&elqaid=13603&elqat=1&elqCampaignId=11643'\n                    }\n                  >\n                    FDA-approval of Atezulizumab\n                  </Linkout>\n                  ; <PMIDLink pmids={'32534646'} />\n                </td>\n              </tr>\n              <tr>\n                <td rowSpan={3}>2</td>\n                <td rowSpan={3}>\n                  <GenePageLink hugoSymbol={'PDGFRA'} />\n                </td>\n                <td rowSpan={3}>\n                  <AlterationPageLink\n                    hugoSymbol={'PDGFRA'}\n                    alteration={'Oncogenic Mutations'}\n                  />\n                </td>\n                <td rowSpan={3}>Gastrointestinal Stromal Tumors</td>\n                <td>Ripretinib</td>\n                <td>\n                  Listing in 2.2020 Soft Tissue Sarcoma NCCN;{' '}\n                  <PMIDLink pmids={'32511981'} />\n                </td>\n              </tr>\n              <tr>\n                <td>Regorafenib</td>\n                <td>\n                  Listing in 2.2020 Soft Tissue Sarcoma NCCN;{' '}\n                  <PMIDLink pmids={'23177515, 27371698'} />\n                </td>\n              </tr>\n              <tr>\n                <td>Sunitinib</td>\n                <td>\n                  Listing in 2.2020 Soft Tissue Sarcoma NCCN;{' '}\n                  <PMIDLink pmids={'17046465, 19282169, 25641662'} />\n                </td>\n              </tr>\n              <tr>\n                <td>3A</td>\n                <td>\n                  <GenePageLink hugoSymbol={'BRCA1'} />\n                  {', '}\n                  <GenePageLink hugoSymbol={'BRCA2'} />\n                </td>\n                <td>Oncogenic Mutations</td>\n                <td>Pancreatic Adenocarcinoma</td>\n                <td>Olaparib</td>\n                <td>\n                  <Linkout\n                    link={\n                      'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-olaparib-gbrcam-metastatic-pancreatic-adenocarcinoma'\n                    }\n                  >\n                    FDA-approval of Olaparib in the germline setting\n                  </Linkout>\n                  ; <PMIDLink pmids={'31157963, 32444418'} />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Row>\n      </span>,\n    ],\n  },\n  '07232020': {\n    updatedImplication: [\n      [\n        '1',\n        'Other Biomarkers',\n        <AlterationPageLink\n          hugoSymbol={'Other Biomarkers'}\n          alteration={'TMB-H'}\n        >\n          Tumor Mutational Burden - High\n        </AlterationPageLink>,\n        'All Solid Tumors',\n        'Pembrolizumab',\n        <span>\n          Abstract:{' '}\n          <Linkout\n            link={\n              'https://www.sciencedirect.com/science/article/pii/S0923753419594042'\n            }\n          >\n            Marabelle et al. Abstract# 1192O, ESMO 2019\n          </Linkout>\n          ,{' '}\n          <Linkout\n            link={\n              'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-pembrolizumab-adults-and-children-tmb-h-solid-tumors'\n            }\n          >\n            FDA-approval of Pembrolizumab\n          </Linkout>\n        </span>,\n      ],\n    ],\n    newlyAddedGenes: ['LARP4B', 'DAZAP1', 'KLF3', 'ZNF750', 'MEF2D'],\n  },\n  '07092020': {\n    updatedImplication: [\n      [\n        '1',\n        'SMARCB1',\n        'Deletion',\n        'Epithelioid Sarcoma',\n        'Tazemetostat',\n        <span>\n          Abstract:{' '}\n          <Linkout\n            link={\n              'https://ascopubs.org/doi/abs/10.1200/JCO.2019.37.15_suppl.11003'\n            }\n          >\n            Stacchiotti et al. Abstract# 11003, JCO 2019\n          </Linkout>\n          ,{' '}\n          <Linkout\n            link={\n              'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-tazemetostat-advanced-epithelioid-sarcoma'\n            }\n          >\n            FDA-approval of Tazemetostat\n          </Linkout>\n        </span>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'EZH2',\n            'A682G, A692V, Y646C, Y646F, Y646H, Y646N, Y646S',\n            'Follicular Lymphoma',\n            <div>Tazemetostat</div>,\n            '3A',\n            '1',\n            <div>\n              Abstract:{' '}\n              <Linkout\n                link={\n                  'https://ashpublications.org/blood/article/134/Supplement_1/123/426294/Phase-2-Multicenter-Study-of-Tazemetostat-an-EZH2'\n                }\n              >\n                Morschhauser et al. Abstract# 123, ASH 2019\n              </Linkout>\n              ,{' '}\n              <Linkout\n                link={\n                  'https://www.fda.gov/drugs/fda-granted-accelerated-approval-tazemetostat-follicular-lymphoma'\n                }\n              >\n                FDA-approval of Tazemetostat\n              </Linkout>\n            </div>,\n          ],\n        ],\n      },\n    ],\n    newlyAddedGenes: ['PPP2R2A'],\n  },\n  '06092020': {\n    numOfAssociationsInUpdatedImplication: 15,\n    updatedImplication: [\n      [\n        '1',\n        'BRCA1, BRCA2, BARD1, BRIP1, CDK12, CHEK1, CHEK2, FANCL, PALB2, RAD51B, RAD51C, RAD51D, RAD54L',\n        <span style={{ whiteSpace: 'nowrap' }}>Oncogenic Mutations</span>,\n        'Prostate Cancer',\n        'Olaparib',\n        <span>\n          <PMIDLink pmids={'32343890'} />,{' '}\n          <Linkout\n            link={\n              'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-olaparib-hrr-gene-mutated-metastatic-castration-resistant-prostate-cancer'\n            }\n          >\n            FDA-approval of Olaparib\n          </Linkout>\n        </span>,\n      ],\n      [\n        '1',\n        'BRCA1, BRCA2',\n        'Oncogenic Mutations',\n        <span style={{ whiteSpace: 'nowrap' }}>Prostate Cancer</span>,\n        'Rucaparib',\n        <span>\n          Abstract:{' '}\n          <Linkout\n            link={\n              'https://www.sciencedirect.com/science/article/pii/S0923753419590627'\n            }\n          >\n            Abida et al. Abstract# 846PD, ESMO 2019\n          </Linkout>\n          ,{' '}\n          <Linkout\n            link={\n              'https://www.fda.gov/drugs/fda-grants-accelerated-approval-rucaparib-brca-mutated-metastatic-castration-resistant-prostate'\n            }\n          >\n            FDA-approval of Rucaparib\n          </Linkout>\n        </span>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'ATM',\n            'Oncogenic Mutations',\n            'Prostate Cancer',\n            <div>Olaparib</div>,\n            '4',\n            '1',\n            <div>\n              <PMIDLink pmids={'32343890'} />,{' '}\n              <Linkout\n                link={\n                  'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-olaparib-hrr-gene-mutated-metastatic-castration-resistant-prostate-cancer'\n                }\n              >\n                FDA-approval of Olaparib\n              </Linkout>\n            </div>,\n          ],\n        ],\n      },\n    ],\n    newlyAddedGenes: ['FANCL'],\n  },\n  '05112020': {\n    priorityNews: [\n      <span>\n        We are excited to announce that our first {ONCOKB_TM} webinar was a\n        success! You can find a video recording{' '}\n        <Link\n          to={{\n            pathname: PAGE_ROUTE.ABOUT,\n          }}\n        >\n          here\n        </Link>\n        .\n      </span>,\n    ],\n    updatedImplication: [\n      [\n        '1',\n        'FGFR2',\n        'Fusions',\n        'Cholangiocarcinoma',\n        'Pemigatinib',\n        <span>\n          <PMIDLink pmids={'32203698'} />,{' '}\n          <a\n            href=\"https://www.fda.gov/news-events/press-announcements/fda-approves-first-targeted-treatment-patients-cholangiocarcinoma-cancer-bile-ducts\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            FDA-approval of Pemigatinib\n          </a>\n        </span>,\n      ],\n      [\n        '1',\n        'RET',\n        'Fusions',\n        'Thyroid Cancer',\n        'Selpercatinib',\n        <div>\n          <div>\n            Abstract:{' '}\n            <Linkout\n              link={\n                'https://www.sciencedirect.com/science/article/pii/S0923753419604539'\n              }\n            >\n              Wirth et al. Abstract# LBA93, ESMO 2019;\n            </Linkout>\n          </div>\n          <div>\n            <Linkout\n              link={\n                'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-selpercatinib-lung-and-thyroid-cancers-ret-gene-mutations-or-fusions'\n              }\n            >\n              FDA-approval of Selpercatinib{' '}\n            </Linkout>\n          </div>\n        </div>,\n      ],\n      [\n        '1',\n        'ERBB2',\n        'Amplification',\n        'Breast Cancer',\n        'Tucatinib + Trastuzumab + Capecitabine',\n        <span>\n          <PMIDLink pmids={'31825569'} />,{' '}\n          <Linkout\n            link={\n              'https://www.fda.gov/news-events/press-announcements/fda-approves-first-new-drug-under-international-collaboration-treatment-option-patients-her2'\n            }\n          >\n            FDA-approval of Tucatinib\n          </Linkout>\n        </span>,\n      ],\n      [\n        '1',\n        'ERBB2',\n        'Amplification',\n        'Breast Cancer',\n        'Trastuzumab Deruxtecan',\n        <span>\n          <PMIDLink pmids={'31825192'} />,{' '}\n          <Linkout link=\"https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-fam-trastuzumab-deruxtecan-nxki-unresectable-or-metastatic-her2-positive-breast-cancer\">\n            FDA-approval of Trastuzumab Deruxtecan\n          </Linkout>\n        </span>,\n      ],\n      [\n        '2',\n        'BRAF',\n        'V600E',\n        'Pilocytic Astrocytoma, Pleomorphic Xanthoastrocytoma and Ganglioglioma',\n        'Dabrafenib + Trametinib, Vemurafenib + Cobimetinib',\n        <span>\n          <span>Listing in 1.2020 CNS NCCN;</span>{' '}\n          <PMIDLink\n            pmids={'28984141, 29380516, 26287849, 30351999, 30120137'}\n          />\n        </span>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'MET',\n            'Exon 14 Deletion',\n            'Non-Small Cell Lung Cancer',\n            <div>Capmatinib</div>,\n            '3A',\n            '1',\n            <div>\n              <div>\n                Abstract:{' '}\n                <Linkout\n                  link={\n                    'https://ascopubs.org/doi/abs/10.1200/JCO.2019.37.15_suppl.9004'\n                  }\n                >\n                  Wolf, J. et al. Abstract# 9004, ASCO 2019;\n                </Linkout>\n              </div>\n              <div>\n                <Linkout\n                  link={\n                    'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-grants-accelerated-approval-capmatinib-metastatic-non-small-cell-lung-cancer'\n                  }\n                >\n                  FDA-approval of Capmatinib{' '}\n                </Linkout>\n              </div>\n            </div>,\n          ],\n          [\n            'RET',\n            'Fusions',\n            'Non-Small Cell Lung Cancer',\n            'Selpercatinib',\n            '3A',\n            '1',\n            <div>\n              <div>\n                Abstract:{' '}\n                <Linkout\n                  link={\n                    'https://www.jto.org/article/S1556-0864(19)30742-7/fulltext'\n                  }\n                >\n                  Drilon et al. Abstract# PL02.08, IASLC WCLC 2019;\n                </Linkout>\n              </div>\n              <div>\n                <Linkout\n                  link={\n                    'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-selpercatinib-lung-and-thyroid-cancers-ret-gene-mutations-or-fusions'\n                  }\n                >\n                  FDA-approval of Selpercatinib{' '}\n                </Linkout>\n              </div>\n            </div>,\n          ],\n          [\n            'RET',\n            'Oncogenic Mutations',\n            'Medullary Thyroid Cancer',\n            'Selpercatinib',\n            '3A',\n            '1',\n            <div>\n              <div>\n                Abstract:{' '}\n                <Linkout\n                  link={\n                    'https://www.sciencedirect.com/science/article/pii/S0923753419604539'\n                  }\n                >\n                  Wirth et al. Abstract# LBA93, ESMO 2019;\n                </Linkout>\n              </div>\n              <div>\n                <Linkout\n                  link={\n                    'https://www.fda.gov/drugs/drug-approvals-and-databases/fda-approves-selpercatinib-lung-and-thyroid-cancers-ret-gene-mutations-or-fusions'\n                  }\n                >\n                  FDA-approval of Selpercatinib{' '}\n                </Linkout>\n              </div>\n            </div>,\n          ],\n        ],\n      },\n    ],\n  },\n  '04232020': {\n    updatedImplication: [\n      [\n        '1',\n        'BRAF',\n        'V600E',\n        'Colorectal Cancer',\n        'Encorafenib + Cetuximab',\n        <span>\n          <PMIDLink pmids={'31566309'} />,{' '}\n          <a\n            href=\"https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-encorafenib-combination-cetuximab-metastatic-colorectal-cancer-braf-v600e-mutation\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            FDA-approval of Encorafenib + Cetuximab\n          </a>\n        </span>,\n      ],\n      [\n        '1',\n        'NF1',\n        'Oncogenic Mutations',\n        'Neurofibroma',\n        'Selumetinib',\n        <span>\n          <PMIDLink pmids={'28029918, 32187457'} />,{' '}\n          <a\n            href=\"https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-selumetinib-neurofibromatosis-type-1-symptomatic-inoperable-plexiform-neurofibromas\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            FDA-approval of Selumetinib\n          </a>\n        </span>,\n      ],\n      [\n        '2',\n        'BRAF',\n        'V600E',\n        'Colorectal Cancer',\n        'Encorafenib + Panitumumab',\n        <span>\n          <span>Listing in 2.2020 Colon Cancer NCCN;</span>{' '}\n          <PMIDLink pmids={'29431699, 31566309'} />\n        </span>,\n      ],\n      [\n        '2',\n        'ERBB2',\n        'Amplification',\n        'Colorectal Cancer',\n        'Trastuzumab + Lapatinib',\n        <span>\n          <span>Listing in 2.2020 Colon Cancer NCCN;</span>{' '}\n          <PMIDLink pmids={'27108243'} />\n        </span>,\n      ],\n      [\n        '2',\n        'ERBB2',\n        'Amplification',\n        'Colorectal Cancer',\n        'Trastuzumab + Pertuzumab',\n        <span>\n          <span>Listing in 2.2020 Colon Cancer NCCN;</span>{' '}\n          <PMIDLink pmids={'30857956'} />\n        </span>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'BRAF',\n            'V600E',\n            'Colorectal Cancer',\n            <div>\n              <div>Encorafenib + Cetuximab + Binimetinib,</div>\n              <div>Dabrafenib + Panitumumab + Trametinib</div>\n            </div>,\n            '2',\n            'None',\n            'Listing removed from 2.2020 Colon Cancer NCCN',\n          ],\n        ],\n      },\n    ],\n    news: [\n      <span>\n        Updated EGFR biomarker-drug associations for investigational Levels 3A\n        and 4\n      </span>,\n      <span>Updated and reorganized KIT biomarker-drug associations</span>,\n    ],\n    newlyAddedGenes: ['DDX4', 'DDX41', 'ELMSAN1', 'MBD6'],\n  },\n  '02122020': {\n    priorityNews: [\n      <span>\n        The version controlled {ONCOKB_TM} Curation Standard Operating Procedure\n        v1.0 has been released in the{' '}\n        <Link to={PAGE_ROUTE.ABOUT}>{ONCOKB_TM} About</Link> page.\n      </span>,\n    ],\n    updatedImplication: [\n      [\n        '1',\n        'PDGFRA',\n        'D842V, D842Y, D842_H845del, D842_H845insV',\n        'Gastrointestinal Stromal Tumor',\n        'Avapritinib',\n        <span>\n          Abstract:{' '}\n          <Linkout\n            link={\n              'https://ascopubs.org/doi/abs/10.1200/JCO.2019.37.15_suppl.11022'\n            }\n          >\n            Heinrich et al. Abstract # 11022, ASCO 2019\n          </Linkout>\n          ;{' '}\n          <Linkout link=\"https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-avapritinib-gastrointestinal-stromal-tumor-rare-mutation\">\n            FDA-approval of Avapritinib; 2019\n          </Linkout>\n        </span>,\n      ],\n      [\n        '3A',\n        'BRCA2',\n        'Oncogenic Mutations',\n        'Pancreatic Adenocarcinoma',\n        'Rucaparib',\n        <span>\n          <PMIDLink pmids={'30051098'} />; Abstract:{' '}\n          <a\n            href=\"https://cancerres.aacrjournals.org/content/79/13_Supplement/CT234\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Reiss Binder et al. Abstract# CT234, AACR 2019\n          </a>\n        </span>,\n      ],\n      [\n        '4',\n        'EGFR',\n        'L718V',\n        'Non-Small Cell Lung Cancer',\n        'Afatinib',\n        <span>\n          <PMIDLink pmids={'29571986, 31757379'} />\n        </span>,\n      ],\n      [\n        'R2',\n        'EGFR',\n        'L718V',\n        'Non-Small Cell Lung Cancer',\n        'Osimertinib',\n        <span>\n          <PMIDLink pmids={'29568384, 29571986, 31301016, 31757379'} />\n        </span>,\n      ],\n      [\n        'R2',\n        'KIT',\n        'A829P',\n        'Gastrointestinal Stromal Tumor',\n        'Imatinib',\n        <span>\n          <PMIDLink pmids={'18955458, 25239608, 31085175'} />\n        </span>,\n      ],\n      [\n        'R2',\n        'KIT',\n        'A829P',\n        'Gastrointestinal Stromal Tumor',\n        'Sunitinib',\n        <span>\n          <PMIDLink pmids={'31085175'} />\n        </span>,\n      ],\n    ],\n    newlyAddedGenes: ['AJUBA', 'ZBTB20', 'ZFP36L1'],\n  },\n  '12122019': {\n    priorityNews: [\n      <span>User accounts and commercial licenses now available</span>,\n      <span>{ONCOKB_TM} now contains annotation of over 5,000 variants</span>,\n    ],\n    updatedImplication: [\n      [\n        '1',\n        'FLT3',\n        'D835, I836',\n        'AML',\n        'Gilteritinib',\n        <span>\n          <PMIDLink pmids={'28516360, 28645776'} /> ;{' '}\n          <a\n            href=\"https://www.fda.gov/drugs/fda-approves-gilteritinib-relapsed-or-refractory-acute-myeloid-leukemia-aml-flt3-mutatation\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            FDA-approval of Gilteritinib\n          </a>\n        </span>,\n      ],\n      [\n        '1',\n        <span style={{ whiteSpace: 'nowrap' }}>MSI-H</span>,\n        '',\n        'Colorectal Cancer',\n        'Nivolumab + Ipilimumab',\n        <span>\n          <PMIDLink pmids={'29355075'} />;{' '}\n          <a\n            href=\"https://www.fda.gov/drugs/resources-information-approved-drugs/fda-grants-accelerated-approval-ipilimumab-msi-h-or-dmmr-metastatic-colorectal-cancer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            FDA-approval of Nivolumab + Ipilimumab\n          </a>\n        </span>,\n      ],\n      [\n        '1',\n        'ROS1',\n        'Fusions',\n        'NSCLC',\n        'Entrectinib',\n        <span>\n          <PMIDLink pmids={'28183697'} />, Abstract:{' '}\n          <a\n            href=\"https://cancerres.aacrjournals.org/content/77/13_Supplement/CT060\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Drilon et al. Abstract# CT060, AACR 2017\n          </a>{' '}\n          ;{' '}\n          <a\n            href=\"https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-entrectinib-ntrk-solid-tumors-and-ros-1-nsclc\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            FDA-approval of Entrectinib\n          </a>\n        </span>,\n      ],\n      [\n        '3A',\n        'KRAS',\n        'G12C',\n        'NSCLC',\n        'AMG-510',\n        <span>\n          Abstract:{' '}\n          <a\n            href=\"https://oncologypro.esmo.org/Meeting-Resources/ESMO-2019-Congress/Phase-1-Study-of-AMG-510-a-Novel-Molecule-Targeting-KRAS-G12C-Mutant-Solid-Tumors\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Govindan et al. ESMO 2019\n          </a>\n        </span>,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'NTRK1, NTRK2, NTRK3',\n            'Fusions',\n            'All Solid Tumors',\n            'Entrectinib',\n            '3A',\n            '1',\n            <a\n              href=\"https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-entrectinib-ntrk-solid-tumors-and-ros-1-nsclc\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              FDA-approval of Entrectinib\n            </a>,\n          ],\n          [\n            'ERBB2',\n            'Oncogenic Mutations',\n            'NSCLC',\n            'Ado-trastuzumab Emtansine',\n            '3A',\n            '2A',\n            <div>Listing in 1.2020 Non-Small Cell Lung Cancer NCCN</div>,\n          ],\n          [\n            'IDH1',\n            'Oncogenic Mutations',\n            'Cholangiocarcinoma',\n            'Ivosidenib',\n            '2B',\n            '3A',\n            <span>\n              Abstract:{' '}\n              <a\n                href=\"https://oncologypro.esmo.org/Meeting-Resources/ESMO-2019-Congress/ClarIDHy-A-global-phase-3-randomized-double-blind-study-of-ivosidenib-IVO-vs-placebo-in-patients-with-advanced-cholangiocarcinoma-CC-with-an-isocitrate-dehydrogenase-1-IDH1-mutation\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Abou-Alfa et al. Abstract# LBA10_PR, ESMO 2019\n              </a>\n            </span>,\n          ],\n          [\n            'PIK3CA',\n            'Oncogenic Mutations',\n            'Breast Cancer',\n            'Alpelisib',\n            '3A',\n            'None',\n            <div>\n              Alpelisib in combination with fulvestrant is{' '}\n              <a\n                href=\"https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-alpelisib-metastatic-breast-cancer\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                FDA-approved to treat patients with PIK3CA mutant breast cancer\n              </a>\n            </div>,\n          ],\n        ],\n      },\n    ],\n    news: [\n      <span>\n        Refined KIT and EGFR biomarker-drug associations to strictly adhere to\n        the FDA drug labels and NCCN guidelines\n      </span>,\n    ],\n    newlyAddedGenes: [\n      'AGO1',\n      'ALB',\n      'APLNR',\n      'CYP19A1',\n      'DKK2',\n      'DKK3',\n      'DKK4',\n      'GAB2',\n      'HLA-C',\n      'LRP5',\n      'LRP6',\n      'MLLT1',\n      'DKK1',\n      'NADK',\n      'REST',\n      'SCG5',\n      'SFRP1',\n      'SFRP2',\n      'SOCS3',\n      'STAT1',\n      'STAT2',\n      'TLE1',\n      'TLE2',\n      'TLE3',\n      'TLE4',\n      'WIF1',\n    ],\n  },\n  '08282019': {\n    newlyAddedGenes: [\n      'ARHGAP35',\n      'FOXF1',\n      'GAB1',\n      'MAD2L2',\n      'SMARCA2',\n      'SMARCE1',\n    ],\n    updatedImplication: [\n      [\n        '3A',\n        'EZH2',\n        'Oncogenic Mutations',\n        'Follicular Lymphoma',\n        'Tazemetostat',\n        <a\n          href=\"https://library.ehaweb.org/eha/2018/stockholm/214434/gilles.salles.interim.update.from.a.phase.2.multicenter.study.of.tazemetostat.html?f=topic=1574*media=3%27\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Abstract: Morschhauser et al. Abstract# S100, EHA 2018.\n        </a>,\n      ],\n    ],\n  },\n  '08042019': {\n    newlyAddedGenes: ['ATXN7', 'MTAP', 'SERPINB3', 'SERPINB4'],\n    updatedImplication: [\n      [\n        '2A',\n        'BRAF',\n        'V600E',\n        'Hairy Cell Leukemia',\n        'Vemurafenib',\n        <span>\n          Listing in 3.2019 Hairy Cell Leukemia NCCN (\n          <PMIDLink pmids={'26352686'} />)\n        </span>,\n      ],\n      [\n        '3A',\n        'ARAF, BRAF, RAF1, NRAS, KRAS, MAP2K2',\n        'Oncogenic Mutations',\n        'Histiocytic and Dendritic Cell Neoplasms',\n        'Cobimetinib',\n        <PMIDLink pmids={'30867592'} />,\n      ],\n    ],\n    changedAnnotations: [\n      {\n        content: [\n          [\n            'BRAF',\n            'D287H, D594, F595L, G466, G596, N581, S467L, V459L',\n            'All Solid Tumors',\n            'PLX8394',\n            '4',\n            'No level',\n            <>\n              <div>Re-review of PMID</div>\n              <div>\n                <PMIDLink pmids={'28783719'} />\n              </div>\n              <br />\n              <div>\n                BRAF class III mutants are not necessarily sensitive to dimer\n                disrupter RAF inhibitor PLX8394\n              </div>\n            </>,\n          ],\n        ],\n      },\n    ],\n  },\n  '06212019': {\n    priorityNews: [\n      'Improved Actionable Genes page',\n      <span>\n        Updated the Cancer Genes list which now consists of 1039 genes (no\n        longer referring to the{' '}\n        <a\n          href=\"https://cancer.sanger.ac.uk/cosmic/census?tier=2\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Cancer Gene Census Tier 2 genes\n        </a>\n        )\n      </span>,\n    ],\n    updatedImplicationInOldFormat: {\n      '1': [\n        <span>\n          PIK3CA - Oncogenic Mutations - Breast Cancer - Alpelisib (\n          <b>previously level 3A</b>)<br />\n          May 24, 2019:{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.fda.gov/drugs/resources-information-approved-drugs/fda-approves-alpelisib-metastatic-breast-cancer\"\n          >\n            The FDA approved PI(3)-kinase alpha selective inhibitor alpelisib\n          </a>{' '}\n          in combination with fulvestrant, to treat patients with HR+/ HER2-\n          PIK3CA-mutant advanced or metastatic breast cancer.\n        </span>,\n      ],\n      '2': [\n        <span>\n          BRAF - V600E - Colorectal Cancer - Encorafenib + Binimetinib +\n          Cetuximab (<b>previously level 3A</b>)\n        </span>,\n        <span>\n          ERBB2 - Amplification - Uterine Serous Carcinoma - Trastuzumab +\n          Carboplatin-Paclitaxel (<b>previously level 2B</b>)\n        </span>,\n      ],\n    },\n  },\n  '05092019': {\n    news: [\n      <span>\n        Standardization of therapeutic names with{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://ncit.nci.nih.gov/ncitbrowser/\"\n        >\n          NCI thesaurus\n        </a>\n      </span>,\n    ],\n    priorityNews: [\n      <span>\n        Addition of Actionable Genes for Hematologic Malignancies\n        <Row className={'overflow-auto'}>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"col-xs-1\">Level</th>\n                <th className=\"col-xs-1\">Gene</th>\n                <th className=\"col-xs-4\">Mutation</th>\n                <th className=\"col-xs-4\">Cancer Type</th>\n                <th className=\"col-xs-2\">Drug</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td rowSpan={5}>1</td>\n                <td rowSpan={3}>\n                  <GenePageLink hugoSymbol={'ABL1'} />\n                </td>\n                <td rowSpan={2}>BCR-ABL1 fusion</td>\n                <td>B-Lymphoblastic Leukemia/Lymphoma (BLL)</td>\n                <td>Ponatinib</td>\n              </tr>\n              <tr>\n                <td>Chronic Myelogenous Leukemia (CML)</td>\n                <td>Bosutinib</td>\n              </tr>\n              <tr>\n                <td>T315I</td>\n                <td>BLL, CML</td>\n                <td>Ponatinib</td>\n              </tr>\n              <tr>\n                <td rowSpan={2}>\n                  <GenePageLink hugoSymbol={'FLT3'} />\n                </td>\n                <td>Internal tandem duplications (ITD)</td>\n                <td rowSpan={2}>Acute Myeloid Leukemia (AML)</td>\n                <td>Gilteritinib</td>\n              </tr>\n              <tr>\n                <td>Oncogenic Mutations</td>\n                <td>Midostaurin + High Dose Chemotherapy</td>\n              </tr>\n              <tr>\n                <td>R1</td>\n                <td>\n                  <GenePageLink hugoSymbol={'ABL1'} />\n                </td>\n                <td>T315I</td>\n                <td>BLL, CML</td>\n                <td>Imatinib, Dasatinib, Nilotinib, Bosutinib</td>\n              </tr>\n              <tr>\n                <td rowSpan={4}>2A</td>\n                <td rowSpan={4}>\n                  <GenePageLink hugoSymbol={'ABL1'} />\n                </td>\n                <td>BCR-ABL1 fusion</td>\n                <td>BLL</td>\n                <td>Bosutinib, Nilotinib</td>\n              </tr>\n              <tr>\n                <td>\n                  E255K, E255V, F317C, F317I, F317L, F317V, F359C, F359I, F359V,\n                  T315A, Y253H\n                </td>\n                <td rowSpan={3}>BLL, CML</td>\n                <td>Bosutinib</td>\n              </tr>\n              <tr>\n                <td>E255K, E255V, F359C, F359I, F359V, Y253H</td>\n                <td>Dasatinib</td>\n              </tr>\n              <tr>\n                <td>F317C, F317I, F317L, F317V, T315A, V299L</td>\n                <td>Nilotinib</td>\n              </tr>\n              <tr>\n                <td rowSpan={4}>3A</td>\n                <td rowSpan={3}>\n                  <GenePageLink hugoSymbol={'ABL1'} />\n                </td>\n                <td>BCR-ABL1 fusion</td>\n                <td>CML</td>\n                <td>Asciminib</td>\n              </tr>\n              <tr>\n                <td>E255K, E255V, F359C, F359I, F359V, Y253H</td>\n                <td rowSpan={2}>BLL, CML</td>\n                <td>Dasatinib</td>\n              </tr>\n              <tr>\n                <td>F317C, F317I, F317L, F317V, T315A, V299L</td>\n                <td>Nilotinib</td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'FLT3'} />\n                </td>\n                <td>ITD</td>\n                <td>AML</td>\n                <td>Crenolanib, Quizartinib</td>\n              </tr>\n              <tr>\n                <td rowSpan={4}>4</td>\n                <td>\n                  <GenePageLink hugoSymbol={'SF3B1'} />\n                </td>\n                <td rowSpan={4}>Oncogenic Mutations</td>\n                <td rowSpan={4}>\n                  AML, Chronic Myelomonocytic Leukemia (CMML), Myelodysplastic\n                  Syndrome (MDS)\n                </td>\n                <td rowSpan={4}>H3B-8800</td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'SRSF2'} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'U2AF1'} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <GenePageLink hugoSymbol={'ZRSR2'} />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Row>\n      </span>,\n    ],\n    newlyAddedGenes: [\n      'ATF1',\n      'CCNB3',\n      'CMTR2',\n      'CREB1',\n      'CTR9',\n      'CXORF67',\n      'DDIT3',\n      'ETAA1',\n      'ETV5',\n      'FEV',\n      'FLI1',\n      'IL3',\n      'KAT6A',\n      'KBTBD4',\n      'KLF2',\n      'LMO2',\n      'LZTR1',\n      'MAF',\n      'MAFB',\n      'NR4A3',\n      'NRG1',\n      'NUP98',\n      'PDGFB',\n      'PGBD5',\n      'PHF6',\n      'PRKACA',\n      'SETBP1',\n      'SLFN11',\n      'SPRTN',\n      'SS18',\n      'TCL1A',\n      'TCL1B',\n      'TFE3',\n      'TRIP13',\n      'USP8',\n      'YY1',\n      'ZNRF3',\n    ],\n    newlyAddedGenesTypes: ['heme', 'fusion'],\n    updatedImplicationInOldFormat: {\n      '1': [\n        <span>\n          April 12, 2019:{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.fda.gov/drugs/resources-information-approved-drugs/fda-grants-accelerated-approval-erdafitinib-metastatic-urothelial-carcinoma\"\n          >\n            the FDA approved erdafitinib\n          </a>{' '}\n          for patients with locally advanced or metastatic urothelial carcinoma,\n          with susceptible FGFR3 or FGFR2 genetic alterations (FGFR2 Fusions,\n          FGFR3 Fusions or FGFR3 R248C, S249C, G370C, Y373C mutations), that has\n          progressed during or following platinum-containing chemotherapy.\n        </span>,\n      ],\n      '4': [\n        <span>\n          MET - Fusions - All Tumors - Crizotinib (<b>new association</b>)\n        </span>,\n        <span>\n          CDK12 - Truncating Mutations - All Tumors - Pembrolizumab, Nivolumab,\n          Cemiplimab (<b>new association</b>)\n        </span>,\n      ],\n    },\n  },\n  '01242019': {\n    newlyAddedGenesTypes: ['heme'],\n    newlyAddedGenes: [\n      'ECT2L',\n      'RELN',\n      'TAL1',\n      'MLLT10',\n      'TLX3',\n      'TLX1',\n      'TRA',\n      'TRB',\n      'TRD',\n      'TRG',\n      'EPOR',\n      'ABL2',\n      'MECOM',\n      'DEK',\n      'RBM15',\n      'BCL9',\n    ],\n    updatedImplicationInOldFormat: {\n      '1': [\n        <span>\n          November 2, 2018:{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.fda.gov/Drugs/InformationOnDrugs/ApprovedDrugs/ucm625027.htm\"\n          >\n            the FDA approved lorlatinib\n          </a>{' '}\n          for patients with anaplastic lymphoma kinase (ALK)-positive metastatic\n          non-small cell lung cancer (NSCLC) whose disease has progressed on\n          crizotinib and at least one other ALK inhibitor or whose disease has\n          progressed on alectinib or ceritinib for metastatic disease.\n        </span>,\n      ],\n    },\n  },\n  '12142018': {\n    priorityNews: [\n      <span>\n        Inclusion of <GenePageLink hugoSymbol={'NTRK1'} /> and{' '}\n        <GenePageLink hugoSymbol={'NTRK3'} /> Level R2 alterations to the\n        Actionable Genes page\n      </span>,\n    ],\n    newlyAddedGenes: [\n      'KSR2',\n      'LCK',\n      'LTB',\n      'MGAM',\n      'MOB3B',\n      'MPEG1',\n      'NCOR2',\n      'PIGA',\n      'PLCG1',\n      'POT1',\n      'ROBO1',\n      'RUNX1T1',\n      'SAMHD1',\n      'SETD1A',\n      'SGK1',\n      'SMC1A',\n      'SMC3',\n      'SMG1',\n      'SP140',\n      'STAT6',\n      'TBL1XR1',\n      'UBR5',\n      'VAV1',\n      'VAV2',\n      'XBP1',\n    ],\n    newlyAddedGenesTypes: ['heme'],\n    updatedImplicationInOldFormat: {\n      '1': [\n        <span>\n          November 26, 2018:{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.fda.gov/Drugs/InformationOnDrugs/ApprovedDrugs/ucm626720.htm\"\n          >\n            the FDA approved larotrectinib\n          </a>{' '}\n          for adult and pediatric patients with solid tumors that have an NTRK1,\n          -2, or -3 gene fusion without a known acquired resistance mutation.\n        </span>,\n      ],\n      '2': [\n        <span>\n          BRCA1/2 - Oncogenic Mutations - Breast Cancer - Talazoparib (\n          <b>new association</b>)\n        </span>,\n        <span>\n          RET - Fusions - Non-Small Cell Lung Cancer - BLU-667 (\n          <b>new association</b>)\n        </span>,\n      ],\n      '3': [\n        <span>\n          BRAF - V600E - Colorectal Cancer - Encorafenib + Binimetinib +\n          Cetuximab (<b>new association</b>)\n        </span>,\n        <span>\n          ERBB2 - Oncogenic Mutations - Non-Small Cell Lung Cancer -\n          Ado-trastuzumab Emtansine (<b>new association</b>)\n        </span>,\n        <span>\n          RET - Oncogenic Mutations - Medullary Thyroid Cancer - BLU-667 (\n          <b>new association</b>)\n        </span>,\n      ],\n      '4': [\n        <span>\n          KDM6A - Oncogenic Mutations - Bladder Cancer - EZH2 inhibitors (\n          <b>new association</b>)\n        </span>,\n      ],\n    },\n  },\n  '11022018': {\n    updatedImplicationInOldFormat: {\n      '2': [\n        <span>\n          RET - Fusions - Non-Small Cell Lung Cancer - LOXO-292 (\n          <b>added as new association</b>)\n        </span>,\n      ],\n    },\n  },\n  '10262018': {\n    news: [\n      <span>\n        OncoTree updated from version{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://oncotree.info/#/home?version=oncotree_2017_06_21\"\n        >\n          2017_06_21\n        </a>{' '}\n        to version{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://oncotree.info/#/home?version=oncotree_2018_06_15\"\n        >\n          2018_06_15\n        </a>\n      </span>,\n      <span>\n        {ONCOKB_TM} is monitoring the following drugs that were granted{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.fda.gov/forpatients/approvals/fast/ucm405397.htm\"\n        >\n          Breakthrough Therapy\n        </a>{' '}\n        designation by the FDA:\n        <ul className=\"bullet\" style={{ marginTop: '0.875rem' }}>\n          <li>\n            Oct 2, 2018:{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://www.onclive.com/web-exclusives/fda-grants-rucaparib-breakthrough-designation-for-mcrpc\"\n            >\n              Rucarparib in adult patients with BRCA1/2-positive metastatic\n              castration-resistant disease following at least 1 androgen\n              receptor–directed therapy and taxane-based chemotherapy.\n            </a>\n          </li>\n        </ul>\n      </span>,\n    ],\n    priorityNews: [\n      <span>\n        Level <Link to={PAGE_ROUTE.ACTIONABLE_GENE}>R2</Link> alterations in{' '}\n        <GenePageLink hugoSymbol={'ALK'} /> <GenePageLink hugoSymbol={'EGFR'} />{' '}\n        <GenePageLink hugoSymbol={'MET'} /> are now included in the{' '}\n        <Link to={PAGE_ROUTE.ACTIONABLE_GENE}>Actionable Genes</Link> page\n      </span>,\n    ],\n    newlyAddedGenes: [\n      'NT5C2',\n      'P2RY8',\n      'PCBP1',\n      'PDS5B',\n      'PTPN1',\n      'PTPN2 ',\n      'STAG1',\n      'TRAF3',\n      'TRAF5',\n    ],\n    newlyAddedGenesTypes: ['heme'],\n    updatedImplicationInOldFormat: {\n      '4': [\n        <span>\n          ALK - C1156Y, G1269A, I1171N, L1196M - Non-Small Cell Lung Cancer -\n          Lorlatinib\n        </span>,\n        <span>EGFR - D761Y - Non-Small Cell Lung Cancer - Osimertinib</span>,\n      ],\n    },\n  },\n  '10012018': {\n    news: [\n      <span>\n        {ONCOKB_TM} is monitoring the following drugs that were granted{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.fda.gov/forpatients/approvals/fast/ucm405397.htm\"\n        >\n          Breakthrough Therapy\n        </a>{' '}\n        designation by the FDA:\n        <ul className=\"bullet\" style={{ marginTop: '0.875rem' }}>\n          <li>\n            Sept 5, 2018:{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://www.onclive.com/web-exclusives/fda-grants-loxo292-breakthrough-designation-for-nsclc-mtc\"\n            >\n              LOXO-292 for RET fusion–positive non–small cell lung cancer\n              (NSCLC) or RET-mutant medullary thyroid cancer (MTC)\n            </a>\n          </li>\n        </ul>\n      </span>,\n    ],\n    updatedImplicationInOldFormat: {\n      '3': [\n        <span>\n          RET - Oncogenic Mutations - Medullary Thyroid Cancer - LOXO-292 (\n          <b>added as new association</b>)\n        </span>,\n      ],\n    },\n    newlyAddedGenes: [\n      'HIST1H1E',\n      'SETD6',\n      'SETD5',\n      'SETD7',\n      'SETDB2',\n      'SETDB1',\n      'SETD4',\n      'SETD3',\n      'SETD1B',\n      'U2AF2',\n      'TET3',\n      'NFE2',\n      'IRF8',\n      'IRF1',\n      'IKZF3',\n      'JARID2',\n      'NCSTN',\n      'HIST1H2BO',\n      'HIST1H2AC',\n      'HIST1H2BG',\n      'HIST1H2BJ',\n      'HIST1H2BK',\n      'HIST1H2BC',\n      'HIST1H2AG',\n      'HIST1H2AL',\n      'HIST1H2AM',\n      'TYK2',\n    ],\n    newlyAddedGenesTypes: ['heme'],\n  },\n  '08202018': {\n    news: [\n      <span>\n        Incorporation of positional variants (e.g., BRAF V600) into Actionable\n        Genes table.\n      </span>,\n      <span>Updated layout of Actionable Genes table.</span>,\n      <span>\n        {ONCOKB_TM} is monitoring the following drugs that were granted{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.fda.gov/forpatients/approvals/fast/ucm405397.htm\"\n        >\n          Breakthrough Therapy\n        </a>{' '}\n        designation by the FDA:\n        <ul className=\"bullet\" style={{ marginTop: '0.875rem' }}>\n          <li>\n            August 6, 2018:{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://www.ascopost.com/News/59131\"\n            >\n              Lenvatinib Plus Pembrolizumab in non-MSI-H Endometrial Carcinoma\n            </a>\n          </li>\n          <li>\n            August 7, 2018:{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://www.ascopost.com/News/59138\"\n            >\n              Quizartinib for Relapsed/Refractory FLT3-ITD AML\n            </a>\n          </li>\n          <li>\n            August 14, 2018:{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://www.ascopost.com/News/59160\"\n            >\n              Encorafenib Plus Binimetinib and Cetuximab in BRAFV600E–Mutant\n              Metastatic Colorectal Cancer\n            </a>\n          </li>\n        </ul>\n      </span>,\n    ],\n    priorityNews: [\n      <span>\n        {ONCOKB_TM} now contains over 4000 curated alterations in over 500\n        genes.\n      </span>,\n    ],\n    newlyAddedGenes: [\n      'ACTG1',\n      'ARHGEF28',\n      'ARID3A',\n      'ARID3B',\n      'ARID3C',\n      'ARID4A',\n      'ARID4B',\n      'ARID5A',\n      'ATP6AP1',\n      'ATP6V1B2',\n      'ATXN2',\n      'BACH2',\n      'BCL11B',\n      'BCORL1',\n      'BCR',\n      'BTG1',\n      'CD28',\n      'CD58',\n      'CIITA',\n      'CRBN',\n      'CUX1',\n      'DDX3X',\n      'DTX1',\n      'DUSP22',\n      'EGR1',\n      'EP400',\n      'ESCO2',\n      'ETNK1',\n      'FANCD2',\n      'FAS',\n      'FBXO11',\n      'FURIN',\n      'GNA12',\n      'GNA13',\n      'GNB1',\n      'GTF2I',\n      'HDAC1',\n      'HDAC4',\n      'HDAC7',\n      'HIF1A',\n      'HIST1H1B',\n      'HIST1H1D',\n    ],\n    newlyAddedGenesTypes: ['heme'],\n    updatedImplicationInOldFormat: {\n      '1': [\n        <span>\n          July 20, 2018:{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.fda.gov/Drugs/InformationOnDrugs/ApprovedDrugs/ucm614128.htm\"\n          >\n            the FDA approved ivosidenib\n          </a>{' '}\n          for adult patients with relapsed or refractory acute myeloid leukemia\n          (AML) with a susceptible IDH1 mutation as detected by an FDA-approved\n          test.\n        </span>,\n      ],\n    },\n  },\n  '07122018': {\n    news: [\n      <span>\n        New Level 4 associations have been added:\n        <Row className={'overflow-auto'}>\n          <SimpleTable\n            columns={NEWLY_ADDED_LEVEL_FOUR_COLUMNS}\n            rows={NEWLY_ADDED_LEVEL_FOUR.map((record, index) => {\n              const geneInput = record[0];\n              return {\n                key: `NEWLY_ADDED_LEVEL_FOUR-${index}`,\n                content: record.map((subItem, subIndex) => {\n                  let content: ElementType = subItem;\n                  if (subIndex === 0) {\n                    content = <GenePageLink hugoSymbol={subItem} />;\n                  } else if (\n                    subIndex === 1 &&\n                    linkableMutationName(geneInput, subItem)\n                  ) {\n                    content = (\n                      <AlterationPageLink\n                        hugoSymbol={geneInput}\n                        alteration={subItem}\n                      />\n                    );\n                  }\n                  return {\n                    key: `NEWLY_ADDED_LEVEL_FOUR-${index}-${subIndex}`,\n                    content,\n                  };\n                }),\n              };\n            })}\n          />\n        </Row>\n      </span>,\n      <span>\n        Inclusion of Level R1 actionable alterations in Actionable Genes\n      </span>,\n    ],\n    updatedImplicationInOldFormat: {\n      '1': [\n        <span>\n          April 18, 2018:{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.fda.gov/Drugs/InformationOnDrugs/ApprovedDrugs/ucm605113.htm\"\n          >\n            the FDA approved osimertinib\n          </a>{' '}\n          for the first-line treatment of patients with metastatic non-small\n          cell lung cancer (NSCLC) whose tumors have epidermal growth factor\n          receptor (EGFR) exon 19 deletions or exon 21 L858R mutations.\n        </span>,\n        <span>\n          May 4, 2018:{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.fda.gov/Drugs/InformationOnDrugs/ApprovedDrugs/ucm606708.htm\"\n          >\n            the FDA approved the combination of dabrafenib plus trametinib\n          </a>{' '}\n          for treatment of patients with locally advanced or metastatic\n          anaplastic thyroid cancer with BRAF V600E mutation and with no\n          satisfactory locoregional treatment options.\n        </span>,\n        <span>\n          June 27, 2018:{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.fda.gov/Drugs/InformationOnDrugs/ApprovedDrugs/ucm611981.htm\"\n          >\n            the FDA approved the combination of encorafenib plus binimetinib\n          </a>{' '}\n          for patients with BRAF V600E- or V600K-mutant metastatic and/or\n          unresectable melanoma.\n        </span>,\n      ],\n      '3': [\n        <span>\n          EGFR - Exon 20 insertions - Non-small cell lung cancer - Poziotinib (\n          <b>added as new association</b>)\n        </span>,\n        <span>\n          ALK - G1202R - Non-small cell lung cancer - Lorlatinib (\n          <b>added as new association</b>)\n        </span>,\n        <span>\n          KIT - D816 mutations - Mastocytosis - Avapritinib (\n          <b>added as new association</b>)\n        </span>,\n        <span>\n          MTOR - E2014K, E2419K - Bladder cancer - Everolimus (\n          <b>updated association</b>)\n        </span>,\n        <span>\n          MTOR - L1460P, L2209V, L2427Q - Renal cell carcinoma - Temsirolimus (\n          <b>updated association</b>)\n        </span>,\n        <span>\n          MTOR - Q2223K - Renal cell carcinoma - Everolimus (\n          <b>updated association</b>)\n        </span>,\n      ],\n    },\n  },\n  '02022018': {\n    news: [\n      <span>\n        Addition of a new gene: KLF5 (\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.ncbi.nlm.nih.gov/pubmed/28963353\"\n        >\n          Zhang et al., Cancer Discovery, 2017\n        </a>\n        ).\n      </span>,\n      <span>\n        Addition of new alterations and updates to existing alterations.\n      </span>,\n    ],\n    updatedImplicationInOldFormat: {\n      '1': [\n        <span>\n          November 6, 2017:{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.fda.gov/NewsEvents/Newsroom/PressAnnouncements/ucm583931.htm\"\n          >\n            the FDA approved vemurafenib\n          </a>{' '}\n          for treatment of patients with Erdheim-Chester disease (histiocytosis)\n          who harbor BRAF V600 mutations.\n        </span>,\n      ],\n      '3': [\n        <span>\n          HRAS - Oncogenic Mutations - Head and Neck Squamous Cell Carcinoma -\n          Tipifarnib (<b>moved from 4 to 3A only for HNSCC</b>)\n        </span>,\n      ],\n    },\n  },\n  '10262017': {\n    news: [\n      <span>Updates to Levels of Evidence 3A and 4.</span>,\n      <span>\n        Mutation frequency plots are now calculated based on{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.cbioportal.org/study?id=msk_impact_2017#summary\"\n        >\n          {MSK_IMPACT_TM} Clinical Sequencing Cohort\n        </a>{' '}\n        (\n        <a\n          href=\"https://www.ncbi.nlm.nih.gov/pubmed/28481359\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Zehir et al., Nature Medicine, 2017\n        </a>\n        ).\n      </span>,\n    ],\n  },\n  '08172017': {\n    news: [\n      <span>\n        August 1, 2017:{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.fda.gov/Drugs/InformationOnDrugs/ApprovedDrugs/ucm569366.htm\"\n        >\n          the FDA approved nivolumab\n        </a>{' '}\n        for treatment of patients with mismatch repair deficient (MMR-D) and{' '}\n        <MSILink /> metastatic colorectal cancer that has progressed following\n        treatment with a fluoropyrimidine, oxaliplatin and irinotecan.\n      </span>,\n      <span>\n        August 1, 2017:{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.fda.gov/Drugs/InformationOnDrugs/ApprovedDrugs/ucm569482.htm\"\n        >\n          the FDA approved enasidenib\n        </a>{' '}\n        for treatment of patients with relapsed or refractory\n        <GenePageLink hugoSymbol={'IDH2'}>IDH2-mutant</GenePageLink> Acute\n        Myeloid Leukemia (AML).\n      </span>,\n      <span>\n        June 22, 2017:{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.fda.gov/Drugs/InformationOnDrugs/ApprovedDrugs/ucm564331.htm\"\n        >\n          the FDA approved combination dabrafenib + trametinib\n        </a>{' '}\n        for treatment of patients with{' '}\n        <AlterationPageLink\n          hugoSymbol={'BRAF'}\n          alteration={'V600E'}\n          showGene={true}\n        />{' '}\n        mutant metastatic NSCLC.\n      </span>,\n      <span>\n        May 23, 2017:{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.fda.gov/Drugs/InformationOnDrugs/ApprovedDrugs/ucm560040.htm\"\n        >\n          the FDA approved pembrolizumab\n        </a>{' '}\n        for treatment of patients with unresectable or metastatic, <MSILink />{' '}\n        or mismatch repair deficient (MMR-D) solid tumors.\n      </span>,\n    ],\n  },\n  '08022017': {\n    news: [\n      <span>\n        Introduced a curated list of{' '}\n        <Link to={PAGE_ROUTE.CANCER_GENES}>cancer genes</Link>.\n      </span>,\n      <span>\n        Addition of gene-alterations pages with alteration level annotation.{' '}\n        <AlterationPageLink hugoSymbol={'BRAF'} alteration={'V600E'}>\n          e.g. BRAF V600E\n        </AlterationPageLink>\n        .\n      </span>,\n      <>\n        <span style={{ marginLeft: '-0.25rem' }}>\n          Improved search box that queries genes and alterations.\n        </span>\n        <br />\n        <Row>\n          <Col lg={6} md={8} xs={12}>\n            <OptimizedImage src={SearchOneImg} />\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={6} md={8} xs={12}>\n            <OptimizedImage className=\"md-auto\" src={SearchTwoImg} />\n          </Col>\n        </Row>\n      </>,\n    ],\n  },\n  '05152017': {\n    news: [\n      <span>\n        Brigatinib FDA-approval in ALK-positive NSCLC added as a new Level 1\n        association.\n      </span>,\n      <span>\n        Amplification events for most Oncogenes and Deletions or Truncating\n        mutations for most Tumor Suppressor have been annotated/updated.\n      </span>,\n      <span>Inclusion of literature from AACR 2017.</span>,\n      <span>\n        Addition of new alterations and updates to existing alteration\n        annotations.\n      </span>,\n    ],\n  },\n  '04052017': {\n    priorityNews: [\n      <span>Curation of 58 additional genes.</span>,\n      <>\n        <span style={{ marginLeft: '-0.25rem' }}>\n          Gene alias information added to gene page and search box.\n        </span>\n        <br />\n        <Row>\n          <Col xs={12} md={8} xl={6}>\n            <OptimizedImage src={ERBBImg} />\n          </Col>\n        </Row>\n      </>,\n      <span>API updates.</span>,\n    ],\n    updatedImplicationInOldFormat: {\n      '1': [\n        <span>\n          BRCA1/2 - Oncogenic Mutations - Ovarian Cancer - Niraparib FDA\n          approval added\n        </span>,\n        <span>\n          BRCA1/2 - Oncogenic Mutations - Ovarian Cancer - Rucaparib (\n          <b>new publication added</b>)\n        </span>,\n        <span>\n          Updated alterations for KIT - Gastrointestinal Stromal Tumor -\n          Imatinib, Sunitinib, Regorafenib\n        </span>,\n      ],\n      '2': [\n        <span>\n          Updated alterations for KIT - Gastrointestinal Stromal Tumor -\n          Nilotinib, Dasatinib, Sorafenib\n        </span>,\n        <span>\n          Updated alterations for KIT - Thymic cancer - Sunitinib, Sorafenib\n        </span>,\n      ],\n      '3': [\n        <span>\n          BRAF V600 - Colorectal Cancer - Encorafenib + Binimetinib + Cetuximab\n          (<b>new association</b>)\n        </span>,\n        <span>\n          FGFR1 - Amplification - Lung Squamous Cell Carcinoma - AZD4547,\n          Debio1347 (<b>new abstract added</b>)\n        </span>,\n        <span>\n          FGFR2 - Fusions - Cholangiocarcinoma - BGJ398, Debio1347 (\n          <b>new abstract added</b>)\n        </span>,\n        <span>\n          Updated alterations for FGFR3 - Bladder cancer - JNJ-42756493,\n          Debio1347\n        </span>,\n        <span>\n          PIK3CA - Oncogenic Mutations - Breast cancer - Updated treatments and\n          evidence\n        </span>,\n      ],\n      '4': [\n        <span>\n          BRAF V600 - Colorectal Cancer - Radiation + Trametinib + Fluorouracil\n          (<b>new association</b>)\n        </span>,\n        <span>Updated alterations for FGFR3 - Breast cancer - Debio1347</span>,\n        <span>KRAS - Wildtype - Updated treatments and evidence</span>,\n        <span>\n          KRAS - Oncogenic Mutations - Updated treatments and evidence\n        </span>,\n        <span>\n          PIK3CA - Oncogenic Mutations - Breast cancer - Updated treatments and\n          evidence\n        </span>,\n        <span>\n          PTEN - Oncogenic Mutations - Breast cancer - Updated treatments and\n          evidence\n        </span>,\n      ],\n    },\n  },\n  '03072017': {\n    priorityNews: [\n      <span>\n        Expanded selection of genes with Oncogene or Tumor Suppressor\n        annotation.\n      </span>,\n      <span>\n        Level 4 actionable genes are now accessible from the home page.\n      </span>,\n    ],\n    updatedImplicationInOldFormat: {\n      '1': [\n        <span>\n          Updated alterations for EGFR - Non-Small Cell Lung Cancer - EGFR TKIs\n        </span>,\n        <span>\n          Updated alterations for KIT - Gastrointestinal Stromal Tumor -\n          Imatinib, Sunitinib, Regorafenib\n        </span>,\n      ],\n      '2': [\n        <span>\n          CDK4 - Amplification - Well-Differentiated\n          Liposarcoma/Dedifferentiated Liposarcoma - Palbociclib, Abemaciclib (\n          <b>disease changed from Soft Tissue Sarcoma and Abemaciclib added</b>)\n        </span>,\n        <span>\n          TSC1 - Renal Cell Carcinoma - Everolimus (<b>new association</b>)\n        </span>,\n      ],\n      '3': [\n        <span>\n          ESR1 - Oncogenic Mutations - AZD9496, Fulvestrant (\n          <b>new association</b>)\n        </span>,\n        <span>\n          FGFR1 - Amplification - Breast Cancer - Dovitinib (<b>removed</b>)\n        </span>,\n        <span>\n          FGFR1 - Amplification - Lung Squamous Cell Carcinoma - Debio1347 (\n          <b>new association</b>)\n        </span>,\n        <span>\n          FGFR2 - Amplification - Breast Cancer - Dovitinib (<b>removed</b>)\n        </span>,\n        <span>\n          FGFR2/3 - Fusions - Various cancer types - Debio1347 (\n          <b>new association</b>)\n        </span>,\n        <span>\n          FGFR3 - Hotspots - Bladder Cancer - Debio1347, JNJ-42756493 (\n          <b>new association</b>)\n        </span>,\n        <span>\n          KRAS - Oncogenic Mutations - Colorectal Cancer -\n          Atezolizumab+Cobimetinib (<b>moved from 4 to 3A only in CRC</b>)\n        </span>,\n        <span>\n          MDM2 - Amplification - Liposarcoma - DS-3032b and RG7112 (\n          <b>new association</b>)\n        </span>,\n        <span>\n          PIK3CA - Oncogenic Mutations - Breast Cancer - Alpelisib+Fulvestrant,\n          Buparlisib+Fulvestrant, Copanlisib, GDC0077, Serabelisib,\n          Fulvestrant+Taselisib (<b>new drugs added</b>)\n        </span>,\n      ],\n      '4': [\n        <span>\n          EGFR alterations - Glioma - Erlotinib (<b>removed</b>)\n        </span>,\n        <span>\n          MDM2 - Amplification - Liposarcoma - DS-3032b (<b>moved to 3A</b>)\n        </span>,\n        <span>\n          PIK3CA - Oncogenic Mutations - Breast Cancer - Alpelisib+Fulvestrant (\n          <b>moved to 3A</b>)\n        </span>,\n        <span>\n          IDH1 - R132 alterations - Chondrosarcoma - AG-120 (\n          <b>moved from 3A to 4</b>)\n        </span>,\n      ],\n    },\n  },\n  '12292016': {\n    news: [\n      <span>\n        Level 3 and 4 alterations supported by data from conference proceedings\n        are now included in the Actionable Genes tab.\n      </span>,\n    ],\n  },\n  '11222016': {\n    news: [\n      <span>\n        All {ONCOKB_TM} alterations and their annotations can now be{' '}\n        <Link to={PAGE_ROUTE.API_ACCESS}>\n          {' '}\n          batch downloaded or accessed programmatically via our API.\n        </Link>\n      </span>,\n      <span>\n        Oncogene and tumor suppressor gene annotations have been added.\n      </span>,\n      <span>\n        Alterations with inconclusive supporting data have now been included.\n      </span>,\n    ],\n  },\n  '10242016': {\n    news: [\n      <span>\n        Inclusion of a selection of Level 4 associations in the Actionable Genes\n        tab.\n      </span>,\n      <span>\n        KRAS activating mutations are no longer considered Level 3A based on the\n        completion of the SELECT-1 trial. Despite promising initial results,\n        selumetinib did not have a significant effect on survival, and therefore\n        activating KRAS mutations are now considered Level 4.\n      </span>,\n    ],\n  },\n  '09162016': {\n    news: [<span>Updated Actionable Genes.</span>],\n  },\n  '08102016': {\n    news: [\n      <>\n        <span style={{ marginLeft: '-0.25rem' }}>\n          Improved visualization of {ONCOKB_TM} in cBioPortal:\n        </span>\n        <br />\n        <Row>\n          <Col xs={12} md={8} xl={6}>\n            <OptimizedImage src={ClinicalImg} />\n          </Col>\n          <Col xs={12} md={8} xl={6}>\n            <OptimizedImage src={BiologicalImg} />\n          </Col>\n        </Row>\n      </>,\n      <span>\n        Updated genes and alterations in the tables of Levels 1, 2 and 3\n        Actionable Genes.\n      </span>,\n      <span>Updated Levels of Evidence.</span>,\n    ],\n  },\n  '07062016': {\n    news: [\n      <span>\n        Annotations for Level 1, 2 and 3 genes now include key updates from ASCO\n        2016.\n      </span>,\n      <span>\n        The Levels of Evidence system now includes Level R1, comprising of\n        alterations that are NCCN-compendium listed as a biomarker of resistance\n        to an FDA-approved drug.\n      </span>,\n    ],\n  },\n};\n","import { UPDATED_IMPLICATION_COLUMNS } from 'app/pages/newsPage/NewsPageContent';\nimport { SimpleTable, SimpleTableRow } from 'app/components/SimpleTable';\nimport { Row } from 'react-bootstrap';\nimport React from 'react';\nimport pluralize from 'pluralize';\nimport { convertGeneInputToLinks, linkableMutationName } from './Util';\nimport { AlterationPageLink } from 'app/shared/utils/UrlUtils';\n\nexport const UpdatedTxImplListItem = (props: {\n  title?: string;\n  data: SimpleTableRow[];\n  numOfAssociationsInUpdatedImplication?: number;\n}) => {\n  const numOFAssociations = props.numOfAssociationsInUpdatedImplication\n    ? props.numOfAssociationsInUpdatedImplication\n    : props.data.length;\n  const defaultTitle = `Updated therapeutic implications - ${numOFAssociations} new ${pluralize(\n    'association',\n    numOFAssociations\n  )}`;\n\n  const geneColumnIndex = 1;\n  const mutationColumnIndex = 2;\n\n  if (mutationColumnIndex > -1 && geneColumnIndex > -1) {\n    // transform the gene and mutation input to a link, ignore the inputs with comma, pipe or slash\n    props.data.forEach(row => {\n      const geneInput = row.content[geneColumnIndex].content;\n      const mutationInput = row.content[mutationColumnIndex].content;\n      if (typeof geneInput === 'string' && typeof mutationInput === 'string') {\n        if (linkableMutationName(geneInput, mutationInput)) {\n          row.content[mutationColumnIndex].content = (\n            <AlterationPageLink\n              hugoSymbol={geneInput}\n              alteration={mutationInput}\n            />\n          );\n        }\n      }\n    });\n  }\n\n  // transform the gene input to a link\n  props.data.forEach(row => {\n    const geneInput = row.content[geneColumnIndex].content;\n    if (typeof geneInput === 'string') {\n      row.content[geneColumnIndex].content = convertGeneInputToLinks(geneInput);\n    }\n  });\n\n  return (\n    <li>\n      {props.title ? props.title : defaultTitle}\n      <Row className={'overflow-auto'}>\n        <SimpleTable columns={UPDATED_IMPLICATION_COLUMNS} rows={props.data} />\n      </Row>\n    </li>\n  );\n};\n","import { UPDATED_IMPLICATION_OLD_FORMAT_COLUMNS } from 'app/pages/newsPage/NewsPageContent';\nimport {\n  SimpleTable,\n  ElementType,\n  SimpleTableRows,\n  SimpleTableCell,\n  SimpleTableRow,\n} from 'app/components/SimpleTable';\nimport { Row } from 'react-bootstrap';\nimport React from 'react';\nimport pluralize from 'pluralize';\nimport * as _ from 'lodash';\n\nexport const UpdatedTxImplOldFormatListItem = (props: {\n  data: { [level: string]: ElementType[] };\n  key: string;\n}) => {\n  const rows = _.reduce(\n    props.data,\n    (acc, next, key) => {\n      const level = ['2', '3'].includes(key) ? `${key}A` : key;\n      acc.push({\n        key: `${key}-${level}-row`,\n        content: [\n          {\n            key: `${key}-level-${level}`,\n            content: level,\n          },\n          {\n            key: `${key}-level-${level}-list`,\n            content: (\n              <ul key={level}>\n                {next.map((cell: ElementType, index) => (\n                  <li key={`${key}-${level}-list-${index}`}>{cell}</li>\n                ))}\n              </ul>\n            ),\n          },\n        ],\n      });\n      return acc;\n    },\n    [] as SimpleTableRows\n  );\n  return (\n    <li>\n      Updated therapeutic {pluralize('implication', rows.length)}\n      <Row className={'overflow-auto'}>\n        <SimpleTable\n          columns={UPDATED_IMPLICATION_OLD_FORMAT_COLUMNS}\n          rows={rows}\n        />\n      </Row>\n    </li>\n  );\n};\n","import React from 'react';\nimport { observable } from 'mobx';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { scrollWidthOffset } from 'app/shared/utils/Utils';\n\nexport default class HashLink extends React.Component<{\n  path: string;\n  hash: string;\n  show: boolean;\n}> {\n  @observable hide = true;\n\n  render() {\n    return (\n      <span\n        className={'ml-2'}\n        style={{\n          display: this.props.show ? 'inline-block' : 'none',\n        }}\n      >\n        <Link\n          to={{\n            pathname: this.props.path,\n            hash: this.props.hash,\n          }}\n          scroll={scrollWidthOffset}\n        >\n          #\n        </Link>\n      </span>\n    );\n  }\n}\n","import { NEWS_BY_DATE, NewsData } from 'app/pages/newsPage/NewsPageContent';\nimport moment from 'moment';\nimport React from 'react';\nimport { UpdatedTxImplListItem } from 'app/pages/newsPage/UpdatedTxImplListItem';\nimport {\n  NewlyAddedGenesListItem,\n  NewlyAddedGenesListItemProps,\n} from 'app/pages/newsPage/NewlyAddedGenesListItem';\nimport { ChangedAnnotationListItem } from 'app/pages/newsPage/ChangedAnnotatonListItem';\nimport { UpdatedTxImplOldFormatListItem } from 'app/pages/newsPage/UpdatedTxImplOldFormatListItem';\nimport { ElementType, SimpleTableCell } from 'app/components/SimpleTable';\nimport {\n  DATA_RELEASES,\n  NEWS_DATE_FORMAT,\n  NEWS_TITLE_DATE_FORMAT,\n  PAGE_ROUTE,\n} from 'app/config/constants';\nimport HashLink from 'app/shared/links/HashLink';\nimport { RouterStore } from 'mobx-react-router';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\n\nexport type NewsListProps = {\n  date: string;\n  routing?: RouterStore;\n};\n\nexport const getNewsTitle = (date: string) => {\n  return moment(date, NEWS_DATE_FORMAT).format(NEWS_TITLE_DATE_FORMAT);\n};\n\nconst getNewsList = (data: SimpleTableCell[]) => {\n  return data.map((element: SimpleTableCell) => (\n    <li key={element.key}>{element.content}</li>\n  ));\n};\n\nexport const getNews = (news: {\n  key: string;\n  content: ElementType[] | undefined;\n}) => {\n  const data =\n    news && news.content\n      ? news.content.map((newsItem, index) => {\n          return {\n            key: `${news.key}-${index}`,\n            content: newsItem,\n          };\n        })\n      : [];\n  return getNewsList(data);\n};\n\n@observer\nexport default class NewsList extends React.Component<NewsListProps> {\n  @observable showAnchor = false;\n  getNewlyAddGeneSection = (newsData: NewsData) => {\n    if (newsData.newlyAddedGenes) {\n      const componentProps: NewlyAddedGenesListItemProps = {\n        genes: newsData.newlyAddedGenes,\n      };\n      if (newsData.newlyAddedGenesTypes) {\n        componentProps.geneTypes = newsData.newlyAddedGenesTypes;\n      }\n      return (\n        <li>\n          <NewlyAddedGenesListItem {...componentProps} />\n        </li>\n      );\n    } else {\n      return undefined;\n    }\n  };\n\n  render() {\n    const date = this.props.date;\n    const newsData: NewsData = NEWS_BY_DATE[date];\n    return (\n      <>\n        <h3\n          id={date}\n          onMouseEnter={() => (this.showAnchor = true)}\n          onMouseLeave={() => (this.showAnchor = false)}\n        >\n          {getNewsTitle(date)}\n          {DATA_RELEASES.filter(item => item.date === date).length > 0 && (\n            <span\n              className={'ml-2'}\n              style={{\n                fontSize: '0.6em',\n              }}\n            >\n              Data version:{' '}\n              {DATA_RELEASES.filter(item => item.date === date)[0].version}\n            </span>\n          )}\n          <HashLink path={PAGE_ROUTE.NEWS} hash={date} show={this.showAnchor} />\n        </h3>\n        <div className={'mb-3'}>\n          {this.props.children ? (\n            this.props.children\n          ) : newsData ? (\n            <ul>\n              {getNews({\n                key: `priority-news-${date}`,\n                content: newsData.priorityNews,\n              })}\n              {newsData.updatedImplication ? (\n                <UpdatedTxImplListItem\n                  title={newsData.updatedImplicationTitle}\n                  data={newsData.updatedImplication.map((item, index) => {\n                    return {\n                      key: `updatedImplication-${date}-${index}`,\n                      content: item.map((subItem, subIndex) => {\n                        return {\n                          key: `updatedImplication-${date}-${index}-${subIndex}`,\n                          content: subItem,\n                        };\n                      }),\n                    };\n                  })}\n                  numOfAssociationsInUpdatedImplication={\n                    newsData.numOfAssociationsInUpdatedImplication\n                  }\n                />\n              ) : undefined}\n              {newsData.updatedImplicationInOldFormat ? (\n                <UpdatedTxImplOldFormatListItem\n                  data={newsData.updatedImplicationInOldFormat}\n                  key={`UpdatedTxImplOldFormatListItem-${date}`}\n                />\n              ) : undefined}\n              {newsData.changedAnnotations\n                ? newsData.changedAnnotations.map(annotation => {\n                    return (\n                      <ChangedAnnotationListItem\n                        title={annotation.title}\n                        columnHeaderType={annotation.columnHeaderType}\n                        data={\n                          annotation.content\n                            ? annotation.content.map((item, index) => {\n                                return {\n                                  key: `changedAnnotation-${date}-${index}`,\n                                  content: item.map((subItem, subIndex) => {\n                                    return {\n                                      key: `changedAnnotation-${date}-${index}-${subIndex}`,\n                                      content: subItem,\n                                    };\n                                  }),\n                                };\n                              })\n                            : []\n                        }\n                      />\n                    );\n                  })\n                : undefined}\n              {getNews({\n                key: `news-${date}`,\n                content: newsData.news ? newsData.news : [],\n              })}\n              {this.getNewlyAddGeneSection(newsData)}\n            </ul>\n          ) : undefined}\n        </div>\n      </>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"content/loe-change.png\";","export default __webpack_public_path__ + \"content/level_AAC.png\";","import * as React from 'react';\nimport { CitationText } from 'app/components/CitationText';\nimport NewsList, { getNews, getNewsTitle } from 'app/pages/newsPage/NewsList';\nimport {\n  DRUGS_ADDED_TO_ONCOKB,\n  DRUGS_CURRENTLY_IN_ONCOKB,\n  NEWS_BY_DATE,\n} from 'app/pages/newsPage/NewsPageContent';\nimport {\n  FAQ_LINK,\n  IMG_MAX_WIDTH,\n  LEVEL_TYPES,\n  ONCOKB_CONTACT_EMAIL,\n  ONCOKB_NEWS_GROUP_SUBSCRIPTION_LINK,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n  PAGE_TITLE,\n  SOP_LINK,\n} from 'app/config/constants';\nimport { Link } from 'react-router-dom';\nimport DocumentTitle from 'react-document-title';\nimport LevelChange from 'content/images/loe-change.png';\nimport AAC_IMAGE from 'content/images/level_AAC.png';\nimport { Linkout } from 'app/shared/links/Linkout';\nimport { RouterStore } from 'mobx-react-router';\nimport { getPageTitle, scrollWidthOffset } from 'app/shared/utils/Utils';\nimport { inject, observer } from 'mobx-react';\nimport { Version } from 'app/pages/LevelOfEvidencePage';\nimport OptimizedImage from 'app/shared/image/OptimizedImage';\nimport { NewlyAddedGenesListItem } from 'app/pages/newsPage/NewlyAddedGenesListItem';\nimport { GenePageLink, SopPageLink } from 'app/shared/utils/UrlUtils';\nimport { Row } from 'react-bootstrap';\nimport { FdaApprovalLink } from 'app/pages/newsPage/Links';\nimport { LevelOfEvidencePageLink } from 'app/shared/links/LevelOfEvidencePageLink';\n\n@inject('routing')\n@observer\nexport default class NewsPage extends React.Component<{\n  routing: RouterStore;\n}> {\n  componentDidMount(): void {\n    // We have to add an offset when the page has a fix header\n    // https://github.com/rafrex/react-router-hash-link/issues/13\n    if (this.props.routing.location.hash) {\n      setTimeout(() => {\n        const id = this.props.routing.location.hash.slice(1);\n        const element = document.getElementById(id);\n        scrollWidthOffset(element);\n      }, 500);\n    }\n  }\n\n  render() {\n    return (\n      <DocumentTitle title={getPageTitle(PAGE_TITLE.NEWS)}>\n        <div className=\"news\">\n          <div>\n            <p>\n              While we aim to keep the information up to date and correct, there\n              will inevitably be gaps or mistakes. Please help us to identify\n              any issues by <b>sending an email to</b>{' '}\n              <a\n                href={`mailto:${ONCOKB_CONTACT_EMAIL}?subject=${ONCOKB_TM} Feedback`}\n              >\n                {ONCOKB_CONTACT_EMAIL}\n              </a>\n              , or use the feedback button that appears next to alterations in\n              cBioPortal.\n            </p>\n            <p>\n              <b>Stay tuned</b> for future data updates (improved annotations,\n              new alterations), as well as new features. You can follow us on\n              Twitter (\n              <a\n                href=\"https://twitter.com/OncoKB\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                @OncoKB\n              </a>\n              ) or subscribe to our{' '}\n              <b>\n                <Linkout link={ONCOKB_NEWS_GROUP_SUBSCRIPTION_LINK}>\n                  low-volume email list\n                </Linkout>\n              </b>{' '}\n              for updates.\n            </p>\n            <CitationText />\n          </div>\n          <div className=\"mt-2\">\n            <NewsList date={'10022023'} />\n            <NewsList date={'09012023'} />\n            <NewsList date={'07282023'} />\n            <NewsList date={'07122023'} />\n            <NewsList date={'05192023'} />\n            <NewsList date={'04122023'} />\n            <NewsList date={'03222023'} />\n            <NewsList date={'02102023'} />\n            <NewsList date={'02012023'}>\n              <ul>\n                <li>\n                  <NewlyAddedGenesListItem\n                    sort\n                    genes={['ALDH2', 'ADHFE1', 'BTG2', 'MAP4K4', 'PRPF8']}\n                  />\n                </li>\n                <li>\n                  <span>\n                    To better align with the FDA drug label, all KIT oncogenic\n                    mutations in GIST are now level 1 in association with\n                    Imatinib, Sunitinib, Ripretinib, and Regorafenib.\n                    Previously, only known sensitizing KIT exon 9, 11, 13, 14,\n                    17 and 18 alterations were considered level 1 in this\n                    indication.\n                  </span>\n                </li>\n                <li>\n                  <span>\n                    With the recent FDA approval of Tucatinib + Trastuzumab for\n                    patients with RAS wildtype, HER2-positive colorectal cancer\n                    the following OncoKB changes have been made:\n                  </span>\n                  <ul>\n                    <li>\n                      <span>\n                        Changed annotation\n                        <Row className={'overflow-auto'}>\n                          <table className=\"table\">\n                            <thead>\n                              <tr>\n                                <th>Gene</th>\n                                <th>Mutation</th>\n                                <th>Cancer Type</th>\n                                <th>Drug(s)</th>\n                                <th>Previous Level</th>\n                                <th>Current Level</th>\n                                <th>Evidence</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr>\n                                <td>\n                                  <GenePageLink hugoSymbol={'ERBB2'} />\n                                </td>\n                                <td>Amplification</td>\n                                <td>Colorectal Cancer</td>\n                                <td>Tucatinib + Trastuzumab</td>\n                                <td>2</td>\n                                <td>1</td>\n                                <td>\n                                  <FdaApprovalLink\n                                    approval={\n                                      'tucatinib + trastuzumab in colorectal cancer'\n                                    }\n                                    link={\n                                      'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-grants-accelerated-approval-tucatinib-trastuzumab-colorectal-cancer'\n                                    }\n                                  />\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </Row>\n                      </span>\n                    </li>\n                    <li>\n                      <span>\n                        Updated therapeutic implications - addition of therapies\n                        for variants with a level of evidence\n                        <Row className={'overflow-auto'}>\n                          <table className=\"table\">\n                            <thead>\n                              <tr>\n                                <th>Gene</th>\n                                <th>Mutation</th>\n                                <th>Cancer Type</th>\n                                <th>Current Level of Evidence</th>\n                                <th>{DRUGS_CURRENTLY_IN_ONCOKB}</th>\n                                <th>{DRUGS_ADDED_TO_ONCOKB}</th>\n                                <th>Evidence</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr>\n                                <td>\n                                  <GenePageLink hugoSymbol={'KRAS'} />\n                                  {', '}\n                                  <GenePageLink hugoSymbol={'NRAS'} />\n                                </td>\n                                <td>Oncogenic Mutations</td>\n                                <td>Colorectal Cancer</td>\n                                <td>R1</td>\n                                <td>Cetuximab, Panitumumab</td>\n                                <td>Tucatinib + Trastuzumab</td>\n                                <td>\n                                  <FdaApprovalLink\n                                    link={\n                                      'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-grants-accelerated-approval-tucatinib-trastuzumab-colorectal-cancer'\n                                    }\n                                    approval={\n                                      'tucatinib + trastuzumab in colorectal cancer'\n                                    }\n                                  />\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </Row>\n                      </span>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </NewsList>\n            <NewsList date={'01052023'} />\n            <NewsList date={'12222022'} />\n            <NewsList date={'12132022'} />\n            <NewsList date={'11302022'}>\n              <ul>\n                <li>\n                  <NewlyAddedGenesListItem\n                    title={'Addition of 15 new genes - a total of 711 to date!'}\n                    sort\n                    genes={[\n                      'ATRIP',\n                      'BAALC',\n                      'CHTF8',\n                      'EIF2B1',\n                      'FZR1',\n                      'LGR5',\n                      'MLLT3',\n                      'MYBL1',\n                      'PSMB2',\n                      'RAD17',\n                      'REV3L',\n                      'RNAseH2A',\n                      'RNAseH2B',\n                      'SET',\n                      'SQSTM1',\n                    ]}\n                  />\n                </li>\n                <li>\n                  In addition to monthly data releases, OncoKB will now release\n                  data following any relevant new or updated FDA-approvals or\n                  changes to tumor-type specific NCCN Guidelines (in accordance\n                  with the procedures outlined in the{' '}\n                  <SopPageLink version={2.2} />\n                  ). This ensures the most relevant clinical implications are\n                  incorporated into the API as soon as possible.\n                </li>\n              </ul>\n            </NewsList>\n            <NewsList date={'10282022'} />\n            <NewsList date={'09062022'} />\n            <NewsList date={'07252022'} />\n            <NewsList date={'06062022'} />\n            <NewsList date={'05052022'} />\n            <NewsList date={'03292022'} />\n            <NewsList date={'02282022'} />\n            <NewsList date={'01072022'} />\n            <NewsList date={'11292021'} />\n            <NewsList date={'10262021'} />\n            <NewsList date={'10072021'} />\n            <NewsList date={'09292021'} />\n            <NewsList date={'08312021'} />\n            <NewsList date={'07162021'} />\n            <NewsList date={'06172021'} />\n            <NewsList date={'04142021'} />\n            <NewsList date={'03122021'} />\n            <NewsList date={'02102021'} />\n            <NewsList date={'01142021'} />\n            <NewsList date={'12172020'} />\n            <NewsList date={'11132020'} />\n            <NewsList date={'09172020'} />\n            <NewsList date={'08282020'} />\n            <NewsList date={'07232020'} />\n            <NewsList date={'07092020'} />\n            <NewsList date={'06092020'} />\n            <NewsList date={'05112020'} />\n            <NewsList date={'04242020'}>\n              <ul>\n                <li>\n                  We have introduced an{' '}\n                  <Linkout link={FAQ_LINK}>FAQ page</Linkout> where you can find\n                  answers to several frequently asked questions.\n                </li>\n              </ul>\n            </NewsList>\n            <NewsList date={'04232020'} />\n            <NewsList date={'04162020'}>\n              <ul>\n                <li>\n                  An updated version of the {ONCOKB_TM} Curation Standard\n                  Operating Procedure, v1.1, has been released. See the{' '}\n                  {ONCOKB_TM} <Link to={PAGE_ROUTE.ABOUT}>About</Link> page or{' '}\n                  <Linkout link={SOP_LINK}>{SOP_LINK}</Linkout>.\n                </li>\n                <li>\n                  We now show a comparison between the {ONCOKB_TM} and\n                  AMP/ASCO/CAP Levels of Evidence on the{' '}\n                  <LevelOfEvidencePageLink\n                    levelType={LEVEL_TYPES.TX}\n                    version={Version.AAC}\n                  >\n                    Levels of Evidence\n                  </LevelOfEvidencePageLink>{' '}\n                  page.\n                </li>\n                <OptimizedImage\n                  className=\"md-auto\"\n                  style={{ maxWidth: IMG_MAX_WIDTH }}\n                  src={AAC_IMAGE}\n                />\n              </ul>\n            </NewsList>\n            <NewsList date={'02122020'} />\n            <NewsList date={'12202019'}>\n              <div>Introducing Simplified {ONCOKB_TM} Levels of Evidence:</div>\n              <ul>\n                <li>\n                  <b>New Level 2</b>, defined as \"Standard care biomarker\n                  recommended by the NCCN or other expert panels predictive of\n                  response to an FDA-approved drug in this indication\" (formerly\n                  Level 2A).\n                </li>\n                <li>\n                  <b>Unified Level 3B</b>, defined as \"Standard care or\n                  investigational biomarker predictive of response to an\n                  FDA-approved or investigational drug in another indication\"\n                  (combination of previous Levels 2B and 3B).\n                </li>\n              </ul>\n              <OptimizedImage className=\"md-auto\" src={LevelChange} />\n              <div>\n                We have implemented these changes for 2 reasons:\n                <ol>\n                  <li>\n                    To be consistent with the{' '}\n                    <Linkout link=\"https://www.sciencedirect.com/science/article/pii/S1525157816302239?via%3Dihub\">\n                      Joint Consensus Recommendation by AMP, ASCO and CAP\n                    </Linkout>{' '}\n                    and the{' '}\n                    <Linkout link=\"https://academic.oup.com/annonc/article/29/9/1895/5076792?searchresult=1\">\n                      ESMO Scale for Clinical Actionability of molecular Targets\n                      (ESCAT)\n                    </Linkout>\n                  </li>\n                  <li>\n                    To reflect the clinical data that demonstrates patients with\n                    investigational predictive biomarkers for a specific tumor\n                    type based on compelling clinical evidence (currently Level\n                    3A) are more likely to experience clinical benefit compared\n                    to patients with predictive biomarkers that are considered\n                    standard care in a different cancer type (previously Level\n                    2B, now combined into Level 3B).\n                  </li>\n                </ol>\n              </div>\n            </NewsList>\n            <NewsList date={'12122019'} />\n            <NewsList date={'12092019'}>\n              <span>\n                We now require user logins for access to downloadable data files\n                and API. {ONCOKB_TM} will continue to be accessible for no fee\n                for research use in an academic setting, but a license will be\n                required to use {ONCOKB_TM} for commercial and/or clinical\n                purposes. Fees will be used to support future development and\n                maintenance of {ONCOKB_TM}. Please visit the{' '}\n                <Link to={PAGE_ROUTE.REGISTER}>registration page</Link>.\n              </span>\n            </NewsList>\n            <NewsList date={'08282019'} />\n            <NewsList date={'08042019'} />\n            <NewsList date={'06212019'} />\n            <NewsList date={'05092019'} />\n            <NewsList date={'01242019'} />\n            <NewsList date={'12142018'} />\n            <NewsList date={'11022018'} />\n            <NewsList date={'10262018'} />\n            <NewsList date={'10012018'} />\n            <NewsList date={'08202018'} />\n            <NewsList date={'07122018'} />\n            <NewsList date={'02022018'} />\n            <NewsList date={'10262017'} />\n\n            <h3>{getNewsTitle('08172017')}</h3>\n            <div>\n              <b>\n                The following FDA-approvals have been incorporated into the\n                Actionable Genes table:\n              </b>\n              <ul>\n                {getNews({\n                  key: 'news-08172017',\n                  content: NEWS_BY_DATE['08172017'].news,\n                })}\n              </ul>\n            </div>\n\n            <NewsList date={'08022017'} />\n            <NewsList date={'05152017'} />\n            <NewsList date={'04052017'} />\n            <NewsList date={'03072017'} />\n            <NewsList date={'12292016'} />\n            <NewsList date={'11222016'} />\n            <NewsList date={'10242016'} />\n            <NewsList date={'09162016'} />\n            <NewsList date={'08102016'} />\n            <NewsList date={'07062016'} />\n\n            <h3>{getNewsTitle('07062016')}</h3>\n            <div>\n              <b>Improved clinical annotations:</b>\n              <ul>\n                {getNews({\n                  key: 'news-07062016',\n                  content: NEWS_BY_DATE['07062016'].news,\n                })}\n              </ul>\n            </div>\n          </div>\n          <h3>Jun 6, 2016</h3>\n          <div>\n            <p>\n              We are happy to announce the <b>first release of {ONCOKB_TM}</b>,\n              a knowledge base for precision medicine. Our goal is to\n              comprehensively annotate the oncogenic effect of mutations\n              observed in cancer, as well as their therapeutic implications.\n              This release contains information about almost 3,000 alterations\n              in 418 cancer genes. For each alteration, we categorize the\n              biological and clinical effect, along with citations of the source\n              of the information, and, when available, the therapeutic\n              implications of a alteration. We have focussed on FDA-approved\n              (Level 1) or guideline-listed (Level 2) biomarkers, as well as\n              biomarkers that with clinical evidence for sensitivity and for\n              which therapies are currently explored in clinical trials (Level\n              3). See the Levels of Evidence and Actionable Genes pages for more\n              information.\n            </p>\n            <p>\n              We have also{' '}\n              <b>\n                integrated information from {ONCOKB_TM} into the cBioPortal for\n                Cancer Genomics\n              </b>\n              . When exploring alterations in{' '}\n              <a\n                href=\"http://www.cbioportal.org/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                cbioportal.org\n              </a>\n              , you will see annotations from {ONCOKB_TM} when available.{' '}\n              <a\n                href=\"http://www.cbioportal.org/case.do?cancer_study_id=luad_tcga_pub&sample_id=TCGA-49-4494-01\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Example of a lung cancer case.\n              </a>\n            </p>\n          </div>\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n","import ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { RouteProps } from 'react-router-dom';\nimport { ContactLink } from '../links/ContactLink';\nimport AppStore from 'app/store/AppStore';\n\nexport interface IRecaptchaBoundaryRoute extends RouteProps {\n  isUserAuthenticated: boolean;\n  appStore: AppStore;\n}\n\n@observer\nexport class RecaptchaBoundaryRoute extends React.Component<\n  IRecaptchaBoundaryRoute\n> {\n  render() {\n    return <ErrorBoundaryRoute {...this.props} />;\n  }\n}\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { AnnotationStore, IAnnotationStore } from 'app/store/AnnotationStore';\nimport { computed, IReactionDisposer, observable, reaction } from 'mobx';\nimport AppStore from 'app/store/AppStore';\nimport { RouterStore } from 'mobx-react-router';\nimport DocumentTitle from 'react-document-title';\nimport { RouteComponentProps } from 'react-router';\nimport AnnotationPage, {\n  AnnotationType,\n} from 'app/pages/annotationPage/AnnotationPage';\nimport * as QueryString from 'query-string';\nimport {\n  ANNOTATION_PAGE_TAB_KEYS,\n  PAGE_ROUTE,\n  QUERY_SEPARATOR_FOR_QUERY_STRING,\n  REFERENCE_GENOME,\n} from 'app/config/constants';\nimport autobind from 'autobind-decorator';\nimport {\n  AlterationPageHashQueries,\n  AlterationPageSearchQueries,\n} from 'app/shared/route/types';\nimport WindowStore from 'app/store/WindowStore';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\n\ninterface MatchParams {\n  query: string;\n}\n\ninterface GenomicPageProps extends RouteComponentProps<MatchParams> {\n  appStore: AppStore;\n  routing: RouterStore;\n  windowStore: WindowStore;\n  authenticationStore: AuthenticationStore;\n}\n\n@inject('appStore', 'routing', 'windowStore', 'authenticationStore')\n@observer\nexport default class GenomicPage extends React.Component<GenomicPageProps> {\n  @observable tumorType = '';\n  @observable refGenome = REFERENCE_GENOME.GRCh37;\n\n  private readonly annotationType: AnnotationType;\n  private selectedTab: ANNOTATION_PAGE_TAB_KEYS;\n\n  private readonly store: AnnotationStore;\n  readonly reactions: IReactionDisposer[] = [];\n\n  constructor(props: any) {\n    super(props);\n\n    const lowerCasePathName = props.routing.location.pathname.toLowerCase();\n    if (lowerCasePathName.startsWith(PAGE_ROUTE.HGVSG)) {\n      this.annotationType = AnnotationType.HGVSG;\n    } else if (lowerCasePathName.startsWith(PAGE_ROUTE.GENOMIC_CHANGE)) {\n      this.annotationType = AnnotationType.GENOMIC_CHANGE;\n    }\n\n    if (props.match.params) {\n      const params: IAnnotationStore = {\n        type: AnnotationType.HGVSG,\n        tumorTypeQuery: this.tumorType,\n        referenceGenomeQuery: this.refGenome,\n      };\n      switch (this.annotationType) {\n        case AnnotationType.HGVSG:\n          params.type = AnnotationType.HGVSG;\n          params.hgsvgQuery = props.match.params.query;\n          break;\n        case AnnotationType.GENOMIC_CHANGE:\n          params.type = AnnotationType.GENOMIC_CHANGE;\n          params.genomicChangeQuery = props.match.params.query;\n          break;\n        default:\n          break;\n      }\n      this.store = new AnnotationStore(params);\n    }\n\n    this.props.appStore.toFdaRecognizedContent = false;\n\n    this.reactions.push(\n      reaction(\n        () => [props.routing.location.search],\n        ([search]) => {\n          const queryStrings = QueryString.parse(\n            search\n          ) as AlterationPageSearchQueries;\n          if (queryStrings.refGenome) {\n            this.refGenome = queryStrings.refGenome;\n            this.store.referenceGenomeQuery = this.refGenome;\n          }\n          if (queryStrings.tumorType) {\n            this.tumorType = queryStrings.tumorType;\n            this.store.tumorTypeQuery = this.tumorType;\n          }\n        },\n        { fireImmediately: true }\n      ),\n      reaction(\n        () => [props.routing.location.hash],\n        ([hash]) => {\n          const queryStrings = QueryString.parse(\n            hash\n          ) as AlterationPageHashQueries;\n          if (queryStrings.tab) {\n            this.selectedTab = queryStrings.tab;\n            if (queryStrings.tab === ANNOTATION_PAGE_TAB_KEYS.FDA) {\n              this.props.appStore.inFdaRecognizedContent = true;\n            }\n          }\n        },\n        true\n      ),\n      reaction(\n        () => this.searchQueries,\n        newHash => {\n          const parsedSearchQueryString = QueryString.stringify(newHash, {\n            arrayFormat: QUERY_SEPARATOR_FOR_QUERY_STRING,\n          });\n          window.location.search = `?${parsedSearchQueryString}`;\n        }\n      )\n    );\n  }\n\n  @computed\n  get searchQueries() {\n    const queryString: Partial<AlterationPageSearchQueries> = {};\n    if (this.refGenome) {\n      queryString.refGenome = this.refGenome;\n    }\n    if (this.tumorType) {\n      queryString.tumorType = this.tumorType;\n    }\n    return queryString;\n  }\n\n  componentWillUnmount() {\n    this.reactions.forEach(componentReaction => componentReaction());\n  }\n\n  @computed\n  get documentTitle() {\n    const content = [];\n    if (this.store.annotationData.isComplete) {\n      if (this.store.annotationData.result.query.hugoSymbol) {\n        content.push(this.store.annotationData.result.query.hugoSymbol);\n      }\n      if (this.store.annotationData.result.query.alteration) {\n        content.push(this.store.annotationData.result.query.alteration);\n      }\n      if (this.store.tumorTypeQuery) {\n        content.push(`in ${this.store.tumorTypeQuery}`);\n      }\n    }\n    return content.join(', ');\n  }\n\n  @autobind\n  onChangeTab(\n    selectedTabKey: ANNOTATION_PAGE_TAB_KEYS,\n    newTabKey: ANNOTATION_PAGE_TAB_KEYS\n  ) {\n    if (newTabKey === ANNOTATION_PAGE_TAB_KEYS.FDA) {\n      this.props.appStore.inFdaRecognizedContent = true;\n    }\n    if (\n      selectedTabKey === ANNOTATION_PAGE_TAB_KEYS.FDA &&\n      newTabKey !== ANNOTATION_PAGE_TAB_KEYS.FDA\n    ) {\n      this.props.appStore.showFdaModal = true;\n    } else {\n      const newHash: AlterationPageHashQueries = { tab: newTabKey };\n      window.location.hash = QueryString.stringify(newHash);\n    }\n    this.selectedTab = newTabKey;\n  }\n\n  render() {\n    return (\n      <DocumentTitle title={this.documentTitle}>\n        <AnnotationPage\n          appStore={this.props.appStore}\n          windowStore={this.props.windowStore}\n          routing={this.props.routing}\n          store={this.store}\n          authenticationStore={this.props.authenticationStore}\n          annotationType={this.annotationType}\n          onChangeTumorType={newTumorType => (this.tumorType = newTumorType)}\n          defaultSelectedTab={this.selectedTab}\n          onChangeTab={this.onChangeTab}\n        />\n      </DocumentTitle>\n    );\n  }\n}\n","import { Button, Modal, InputGroup, FormControl } from 'react-bootstrap';\nimport React from 'react';\nimport { TrialAccount } from 'app/shared/api/generated/API';\nimport { PAGE_ROUTE } from 'app/config/constants';\nimport { InfoRow } from 'app/pages/AccountPage';\nimport { CopyButton } from 'app/shared/button/CopyButton';\nimport { toAppTimestampFormat } from 'app/shared/utils/Utils';\n\nexport const TrialAccountModal: React.FunctionComponent<{\n  baseUrl: string;\n  trialAccount: TrialAccount;\n  show: boolean;\n  onClose?: () => void;\n}> = props => {\n  const onClose = (event?: any) => {\n    if (event) event.preventDefault();\n    if (props.onClose) props.onClose();\n  };\n\n  function getInitiationLink() {\n    if (props.trialAccount.activation?.key) {\n      return `${props.baseUrl}${PAGE_ROUTE.ACCOUNT_ACTIVE_TRIAL_FINISH}?key=${props.trialAccount.activation.key}`;\n    } else {\n      return 'Link is not available';\n    }\n  }\n\n  return (\n    <Modal show={props.show} onHide={() => onClose()}>\n      <Modal.Header closeButton>\n        <Modal.Title>Trial Account Info</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <InfoRow\n          title={<h6>Trial Account Initiation Link</h6>}\n          content={\n            <InputGroup size={'sm'}>\n              <FormControl\n                value={getInitiationLink()}\n                type={'text'}\n                contentEditable={false}\n                disabled={true}\n              />\n              <InputGroup.Append>\n                <CopyButton\n                  text={getInitiationLink()}\n                  disabled={!props.trialAccount?.activation?.key}\n                />\n              </InputGroup.Append>\n            </InputGroup>\n          }\n          direction={'vertical'}\n        />\n        <InfoRow\n          title={<h6>Trial Account Initiation Date</h6>}\n          content={toAppTimestampFormat(\n            props.trialAccount.activation.initiationDate\n          )}\n          direction={'vertical'}\n        />\n        <InfoRow\n          title={<h6>Trial Account Initiated By</h6>}\n          content={props.trialAccount.activation.initiatedBy}\n          direction={'vertical'}\n        />\n        <InfoRow\n          title={<h6>Trial Account Activation Key</h6>}\n          content={props.trialAccount.activation.key}\n          direction={'vertical'}\n        />\n        <InfoRow\n          title={<h6>Trial Account Activation Date</h6>}\n          content={toAppTimestampFormat(\n            props.trialAccount.activation.activationDate\n          )}\n          direction={'vertical'}\n        />\n        <InfoRow\n          title={<h6>License Agreement Assigned to</h6>}\n          content={props.trialAccount.licenseAgreement.name}\n          direction={'vertical'}\n        />\n        <InfoRow\n          title={<h6>License Agreement Version</h6>}\n          content={props.trialAccount.licenseAgreement.version}\n          direction={'vertical'}\n        />\n        <InfoRow\n          title={<h6>License Agreement Acceptance Date</h6>}\n          content={toAppTimestampFormat(\n            props.trialAccount.licenseAgreement.acceptanceDate\n          )}\n          direction={'vertical'}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={(event: any) => onClose(event)}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport {\n  getAccountInfoTitle,\n  getSectionClassName,\n} from 'app/pages/account/AccountUtils';\nimport { ButtonSelections } from 'app/components/LicenseSelection';\nimport {\n  AvCheckbox,\n  AvCheckboxGroup,\n  AvField,\n  AvForm,\n  AvRadio,\n  AvGroup,\n  AvRadioGroup,\n} from 'availity-reactstrap-validation';\nimport {\n  ACCOUNT_TITLES,\n  LicenseType,\n  NOT_CHANGEABLE_AUTHORITIES,\n  PAGE_ROUTE,\n  REDIRECT_TIMEOUT_MILLISECONDS,\n  THRESHOLD_TRIAL_TOKEN_VALID_DEFAULT,\n  USAGE_ALL_TIME_KEY,\n  USAGE_ALL_TIME_VALUE,\n  USAGE_DAY_DETAIL_TIME_KEY,\n  USAGE_DETAIL_TIME_KEY,\n  USER_AUTHORITIES,\n} from 'app/config/constants';\nimport {\n  ACCOUNT_TYPE_DEFAULT,\n  AccountType,\n} from 'app/components/newAccountForm/NewAccountForm';\nimport { Alert, Button, Col, Row } from 'react-bootstrap';\nimport WindowStore from 'app/store/WindowStore';\nimport {\n  AdditionalInfoDTO,\n  Token,\n  UserDTO,\n  UserMailsDTO,\n  UserUsage,\n  UserCompany,\n} from 'app/shared/api/generated/API';\nimport client from 'app/shared/api/clientInstance';\nimport { DefaultTooltip, remoteData } from 'cbioportal-frontend-commons';\nimport {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n  toJS,\n} from 'mobx';\nimport { Else, If, Then } from 'react-if';\nimport LoadingIndicator from 'app/components/loadingIndicator/LoadingIndicator';\nimport { RouteComponentProps } from 'react-router';\nimport autobind from 'autobind-decorator';\nimport InfoIcon from 'app/shared/icons/InfoIcon';\nimport { daysDiff, getPageTitle } from 'app/shared/utils/Utils';\nimport _ from 'lodash';\nimport { notifyError, notifySuccess } from 'app/shared/utils/NotificationUtils';\nimport TokenInputGroups from 'app/components/tokenInputGroups/TokenInputGroups';\nimport { EmailTable } from 'app/shared/table/EmailTable';\nimport { PromiseStatus } from 'app/shared/utils/PromiseUtils';\nimport { QuickToolButton } from 'app/pages/userPage/QuickToolButton';\nimport { TrialAccountModal } from './TrialAccountModal';\nimport { SimpleConfirmModal } from 'app/shared/modal/SimpleConfirmModal';\nimport DocumentTitle from 'react-document-title';\nimport { Link } from 'react-router-dom';\nimport { RouterStore } from 'mobx-react-router';\nimport { SHORT_TEXT_VAL, TEXT_VAL } from 'app/shared/utils/FormValidationUtils';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport ButtonWithTooltip from 'app/shared/button/ButtonWithTooltip';\nimport {\n  ToggleValue,\n  UsageRecord,\n} from 'app/pages/usageAnalysisPage/UsageAnalysisPage';\nimport UserUsageDetailsTable from 'app/pages/usageAnalysisPage/UserUsageDetailsTable';\nimport { DateSelector } from 'app/components/dateSelector/DateSelector';\nimport { KeyInputGroups } from 'app/pages/userPage/KeyInputGroups';\nimport { Input, Label } from 'reactstrap';\nimport {\n  getAccountActivationLink,\n  getPasswordResetLink,\n} from 'app/shared/utils/UrlUtils';\n\nexport enum AccountStatus {\n  ACTIVATED = 'Activated',\n  INACTIVATED = 'Inactivated',\n}\n\nexport enum EmailVerifiedStatus {\n  VERIFIED = 'Verified',\n  UNVERIFIED = 'Unverified',\n}\n\ninterface MatchParams {\n  login: string;\n}\n\ninterface IUserPage extends RouteComponentProps<MatchParams> {\n  windowStore: WindowStore;\n  routing: RouterStore;\n  authenticationStore: AuthenticationStore;\n}\n\nconst BoldAccountTitle: React.FunctionComponent<{\n  title: ACCOUNT_TITLES;\n  licenseType?: LicenseType;\n}> = props => {\n  return (\n    <span className={'font-bold'}>\n      {getAccountInfoTitle(props.title, props.licenseType)}\n    </span>\n  );\n};\n\nenum SimpleConfirmModalType {\n  NA,\n  DELETE_ACCOUNT,\n  INITIATE_TRIAL,\n  DELETE_ACTIVATION_KEY,\n  DELETE_RESET_KEY,\n  GENERATE_RESET_KEY,\n}\n\n@inject('windowStore', 'routing', 'authenticationStore')\n@observer\nexport default class UserPage extends React.Component<IUserPage> {\n  @observable selectedLicense: LicenseType | undefined;\n  @observable selectedAccountType: AccountType | undefined;\n  @observable selectedEmailVerifiedStatus: EmailVerifiedStatus | undefined;\n  @observable userTokens: Token[] = [];\n  @observable user: UserDTO;\n  @observable userUsage: UserUsage;\n  @observable getUserStatus: PromiseStatus;\n  @observable showTrialAccountModal = false;\n  @observable showSimpleConfirmModal = false;\n  @observable simpleConfirmModalType: SimpleConfirmModalType =\n    SimpleConfirmModalType.NA;\n\n  private defaultPageSize = 5;\n\n  readonly reactions: IReactionDisposer[] = [];\n\n  constructor(props: IUserPage) {\n    super(props);\n    this.reactions.push(\n      reaction(\n        () => this.defaultSelectedAccountType,\n        newDefault => {\n          this.selectedAccountType = newDefault;\n        },\n        true\n      )\n    );\n    this.reactions.push(\n      reaction(\n        () => this.simpleConfirmModalType,\n        newDefault => {\n          this.showSimpleConfirmModal =\n            newDefault !== SimpleConfirmModalType.NA;\n        },\n        false\n      )\n    );\n    this.getUser();\n    this.getUserTokens();\n  }\n\n  componentWillUnmount() {\n    this.reactions.forEach(disposer => disposer());\n  }\n\n  readonly usageDetail = remoteData<Map<string, UsageRecord[]>>({\n    await: () => [],\n    invoke: async () => {\n      this.userUsage = await client.userUsageGetUsingGET({\n        userId: this.user.id,\n      });\n      const result = new Map<string, UsageRecord[]>();\n      if (this.userUsage.summary !== null) {\n        const yearSummary = this.userUsage.summary.year;\n        const yearUsage: UsageRecord[] = [];\n        Object.keys(yearSummary).forEach(resourceEntry => {\n          yearUsage.push({\n            resource: resourceEntry,\n            usage: yearSummary[resourceEntry],\n            time: USAGE_ALL_TIME_VALUE,\n          });\n        });\n        result.set(USAGE_ALL_TIME_KEY, yearUsage);\n\n        const monthSummary = this.userUsage.summary.month;\n        const detailSummary: UsageRecord[] = [];\n        Object.keys(monthSummary).forEach(month => {\n          const monthUsage = monthSummary[month];\n          Object.keys(monthUsage).forEach(resourceEntry => {\n            detailSummary.push({\n              resource: resourceEntry,\n              usage: monthUsage[resourceEntry],\n              time: month,\n            });\n          });\n        });\n        result.set(USAGE_DETAIL_TIME_KEY, detailSummary);\n\n        const daySummary = this.userUsage.summary.day;\n        const dayDetailSummary: UsageRecord[] = [];\n        Object.keys(daySummary).forEach(day => {\n          const dayUsage = daySummary[day];\n          Object.keys(dayUsage).forEach(resourceEntry => {\n            dayDetailSummary.push({\n              resource: resourceEntry,\n              usage: dayUsage[resourceEntry],\n              time: day,\n            });\n          });\n        });\n        result.set(USAGE_DAY_DETAIL_TIME_KEY, dayDetailSummary);\n      }\n      return Promise.resolve(result);\n    },\n    default: new Map(),\n  });\n\n  readonly usersUserMails = remoteData<UserMailsDTO[]>({\n    invoke: () => {\n      return client.getUsersUserMailsUsingGET({\n        login: this.props.match.params.login,\n      });\n    },\n    default: [],\n  });\n\n  @action\n  async getUserTokens() {\n    this.userTokens = await client.getUserTokensUsingGET({\n      login: this.props.match.params.login,\n    });\n  }\n\n  @computed\n  get defaultSelectedAccountType() {\n    return this.isTrialAccount ? AccountType.TRIAL : AccountType.REGULAR;\n  }\n\n  @computed\n  get defaultSelectedEmailVerifiedStatus() {\n    return this.user.emailVerified\n      ? EmailVerifiedStatus.VERIFIED\n      : EmailVerifiedStatus.UNVERIFIED;\n  }\n\n  @computed\n  get shortestToken() {\n    const tokens = _.sortBy(this.userTokens, token =>\n      daysDiff(token.expiration)\n    );\n    return tokens.length > 0 ? tokens[0] : undefined;\n  }\n\n  @action.bound\n  addNewToken() {\n    this.props.authenticationStore\n      .generateIdToken()\n      .then((token: Token) => {\n        this.getUserTokens();\n        notifySuccess('New token created.');\n      })\n      .catch(error => {\n        notifyError(error, 'Error generating token.');\n      });\n  }\n\n  @action.bound\n  deleteToken(token: Token) {\n    client\n      .deleteTokenUsingDELETE({ token })\n      .then(() => {\n        this.getUserTokens();\n        notifySuccess('Token is deleted');\n      })\n      .catch((error: Error) => {\n        notifyError(error);\n      });\n  }\n\n  @autobind\n  @action\n  changeTokenExpirationDate(\n    token: Token,\n    newDate: string,\n    notifyOnSuccess = true\n  ) {\n    client\n      .updateTokenUsingPUT({\n        token: {\n          ...token,\n          expiration: newDate,\n        },\n      })\n      .then(\n        () => {\n          if (notifyOnSuccess) notifySuccess('Updated Token');\n          this.getUserTokens();\n        },\n        (error: Error) => {\n          notifyError(error);\n        }\n      );\n  }\n\n  @autobind\n  @action\n  extendTrialAccess(newDate: string) {\n    Promise.all(\n      this.userTokens.map(token => {\n        this.changeTokenExpirationDate(token, newDate, false);\n      })\n    ).then(\n      () => notifySuccess(`Trial ended to ${newDate}`),\n      error => notifyError(error)\n    );\n  }\n\n  @autobind\n  updateUserUsingPUT(updatedUser: UserDTO, tokenValidDays?: number) {\n    client\n      .updateUserUsingPUT({\n        userDto: updatedUser,\n        sendEmail: false,\n        unlinkUser: false,\n      })\n      .then(\n        (updatedUserDTO: UserDTO) => {\n          const tokenIsRenewable =\n            this.selectedAccountType !== AccountType.TRIAL;\n          let updatedTokenValidDays: number | undefined;\n          if (tokenValidDays) {\n            updatedTokenValidDays = Number(tokenValidDays);\n          }\n          notifySuccess('Updated User');\n          this.user = updatedUserDTO;\n          this.getUserStatus = PromiseStatus.complete;\n          client\n            .getUserTokensUsingGET({\n              login: updatedUserDTO.login,\n            })\n            .then(\n              tokens => {\n                this.userTokens = tokens;\n                tokens.forEach(token => {\n                  if (\n                    token.renewable !== tokenIsRenewable ||\n                    updatedTokenValidDays !== undefined\n                  ) {\n                    const now = new Date(Date.now());\n                    if (updatedTokenValidDays) {\n                      now.setDate(now.getDate() + updatedTokenValidDays);\n                    }\n                    client\n                      .updateTokenUsingPUT({\n                        token: {\n                          ...token,\n                          renewable: tokenIsRenewable,\n                          expiration: tokenValidDays\n                            ? now.toISOString()\n                            : token.expiration,\n                        },\n                      })\n                      .then(\n                        () => {\n                          notifySuccess('Updated Token');\n                        },\n                        (error: Error) => {\n                          this.getUserStatus = PromiseStatus.error;\n                          notifyError(error);\n                        }\n                      );\n                  }\n                });\n              },\n              (error: Error) => {\n                this.getUserStatus = PromiseStatus.error;\n                notifyError(error);\n              }\n            );\n        },\n        (error: Error) => {\n          this.getUserStatus = PromiseStatus.error;\n          notifyError(error);\n        }\n      );\n  }\n\n  @autobind\n  @action\n  updateUser(event: any, values: any) {\n    if (this.user) {\n      const updatedUserCompany: UserCompany = {\n        ...this.user.additionalInfo?.userCompany,\n        useCase: values.additionalInfoUserCase,\n      };\n      const updatedAdditionalInfo: AdditionalInfoDTO = {\n        ...this.user.additionalInfo,\n        userCompany: updatedUserCompany,\n      };\n      const updatedUser: UserDTO = {\n        ...this.user,\n        firstName: values.firstName,\n        lastName: values.lastName,\n        licenseType: this.selectedLicense\n          ? this.selectedLicense\n          : this.user.licenseType,\n        authorities: values.authorities,\n        activated: values.accountStatus === AccountStatus.ACTIVATED,\n        jobTitle: values.jobTitle,\n        resetDate: values.resetDate,\n        companyName: this.user.company\n          ? this.user.company.name\n          : values.company,\n        additionalInfo: updatedAdditionalInfo,\n        city: values.city,\n        country: values.country,\n      };\n      this.getUserStatus = PromiseStatus.pending;\n      this.updateUserUsingPUT(updatedUser, values.tokenValidDays);\n    }\n  }\n\n  @action\n  getUser() {\n    this.getUserStatus = PromiseStatus.pending;\n    client\n      .getUserUsingGET({\n        login: this.props.match.params.login,\n      })\n      .then(\n        user => {\n          this.user = user;\n          if (this.user) {\n            this.selectedLicense = this.user.licenseType as LicenseType;\n          }\n          this.getUserStatus = PromiseStatus.complete;\n        },\n        (error: Error) => {\n          this.getUserStatus = PromiseStatus.error;\n          notifyError(error);\n        }\n      );\n  }\n\n  @autobind\n  @action\n  generateResetKey() {\n    client\n      .generateResetKeyUsingPOST({\n        login: this.props.match.params.login,\n      })\n      .then(\n        updatedUser => {\n          this.user = updatedUser;\n          notifySuccess('Updated User');\n        },\n        (error: Error) => notifyError(error)\n      );\n  }\n\n  @autobind\n  @action\n  generateTrialActivationKey() {\n    client\n      .initiateTrialAccountActivationUsingPOST({\n        login: this.user.login,\n      })\n      .then(\n        updatedUser => {\n          this.user = updatedUser;\n          notifySuccess('Initiated trial account');\n          this.showTrialAccountModal = true;\n        },\n        (error: Error) => notifyError(error)\n      );\n  }\n\n  @autobind\n  onClickTrialAccountButton() {\n    if (this.trialInitiated) {\n      this.showTrialAccountModal = true;\n    } else {\n      this.simpleConfirmModalType = SimpleConfirmModalType.INITIATE_TRIAL;\n    }\n  }\n\n  @autobind\n  onConfirmSimpleConfirmModal() {\n    switch (this.simpleConfirmModalType) {\n      case SimpleConfirmModalType.INITIATE_TRIAL:\n        this.onConfirmInitiateTrialAccountButton();\n        break;\n      case SimpleConfirmModalType.DELETE_ACCOUNT:\n        this.onConfirmDeleteAccountButton();\n        break;\n      case SimpleConfirmModalType.DELETE_ACTIVATION_KEY:\n        delete this.user.activationKey;\n        this.updateUserUsingPUT(this.user);\n        break;\n      case SimpleConfirmModalType.DELETE_RESET_KEY:\n        delete this.user.resetKey;\n        delete this.user.resetDate;\n        this.updateUserUsingPUT(this.user);\n        break;\n      case SimpleConfirmModalType.GENERATE_RESET_KEY:\n        this.generateResetKey();\n        break;\n      case SimpleConfirmModalType.NA:\n      default:\n        break;\n    }\n    this.simpleConfirmModalType = SimpleConfirmModalType.NA;\n  }\n\n  @autobind\n  onConfirmInitiateTrialAccountButton() {\n    this.generateTrialActivationKey();\n  }\n\n  @autobind\n  onConfirmDeleteAccountButton() {\n    client.deleteUserUsingDELETE({ login: this.user.login }).then(\n      deletedUser => {\n        notifySuccess(\n          'Deleted account, we will redirect you to the users page.'\n        );\n        setTimeout(() => {\n          this.props.routing.history.push(PAGE_ROUTE.ADMIN_USER_DETAILS);\n        }, REDIRECT_TIMEOUT_MILLISECONDS);\n      },\n      (error: Error) => notifyError(error)\n    );\n  }\n\n  @computed\n  get isTrialAccount() {\n    return (\n      this.userTokens.length > 0 &&\n      this.userTokens.filter(token => token.renewable).length < 1\n    );\n  }\n\n  @computed\n  get trialInitiated() {\n    return !!this.user.additionalInfo?.trialAccount?.activation?.initiationDate;\n  }\n\n  @computed\n  get trialAccountButtonText() {\n    return this.trialInitiated\n      ? 'Show Trial Activation Info'\n      : 'Generate Trial Activation Link';\n  }\n\n  generateActivationKeyInfoOverlay() {\n    return (\n      <>\n        <b>Account Activation Link</b>\n        <div>\n          {this.props.windowStore.baseUrl}\n          {getAccountActivationLink(this.user.activationKey, this.user.login)}\n        </div>\n      </>\n    );\n  }\n\n  generateResetKeyInfoOverlay() {\n    return (\n      <>\n        <b>Password Reset Link</b>\n        <div>\n          {this.props.windowStore.baseUrl}\n          {getPasswordResetLink(this.user.resetKey)}\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <If condition={this.getUserStatus === PromiseStatus.pending}>\n        <Then>\n          <LoadingIndicator isLoading={true} />\n        </Then>\n        <Else>\n          <If condition={this.getUserStatus === PromiseStatus.error}>\n            <Then>\n              <Alert variant={'danger'}>Error loading user information</Alert>\n            </Then>\n            <Else>\n              {this.user !== undefined && (\n                <DocumentTitle\n                  title={getPageTitle(\n                    `${this.user.firstName} ${this.user.lastName}`\n                  )}\n                >\n                  <AvForm onValidSubmit={this.updateUser} model={this.user}>\n                    <div>\n                      <Row className={getSectionClassName()}>\n                        <Col>\n                          <div>Quick Tools</div>\n                          <div>\n                            <QuickToolButton\n                              onClick={this.onClickTrialAccountButton}\n                            >\n                              {this.trialAccountButtonText}\n                            </QuickToolButton>\n                            {this.isTrialAccount && this.shortestToken && (\n                              <DefaultTooltip\n                                overlay={\n                                  <DateSelector\n                                    currentDate={this.shortestToken.expiration}\n                                    afterChangeDate={this.extendTrialAccess}\n                                  />\n                                }\n                              >\n                                <QuickToolButton>\n                                  Extend Trial Access\n                                </QuickToolButton>\n                              </DefaultTooltip>\n                            )}\n                            <QuickToolButton\n                              onClick={() =>\n                                this.props.routing.history.push(\n                                  `${PAGE_ROUTE.ADMIN_SEND_EMAILS}?to=${this.user.email}`\n                                )\n                              }\n                            >\n                              Send Email\n                            </QuickToolButton>\n                            {this.user.additionalInfo?.trialAccount ? (\n                              <TrialAccountModal\n                                baseUrl={this.props.windowStore.baseUrl}\n                                trialAccount={\n                                  this.user.additionalInfo?.trialAccount\n                                }\n                                show={this.showTrialAccountModal}\n                                onClose={() =>\n                                  (this.showTrialAccountModal = false)\n                                }\n                              />\n                            ) : null}\n                          </div>\n                        </Col>\n                      </Row>\n                      <Row className={getSectionClassName()}>\n                        <Col>\n                          <AvField\n                            name=\"id\"\n                            value={this.user.id}\n                            label={\n                              <BoldAccountTitle title={ACCOUNT_TITLES.ID} />\n                            }\n                            disabled\n                          />\n                          <AvField\n                            name=\"email\"\n                            value={this.user.email}\n                            label={\n                              <BoldAccountTitle\n                                title={ACCOUNT_TITLES.EMAIL}\n                                licenseType={this.selectedLicense}\n                              />\n                            }\n                            disabled\n                          />\n                          <AvGroup>\n                            <div className={'mb-2 font-bold'}>\n                              Email Verified\n                            </div>\n                            <AvRadioGroup\n                              inline\n                              name=\"emailVerified\"\n                              label=\"\"\n                              value={this.defaultSelectedEmailVerifiedStatus}\n                              onChange={(event: any, value: any) => {\n                                if (value) {\n                                  this.selectedEmailVerifiedStatus = value;\n                                } else {\n                                  this.selectedEmailVerifiedStatus = this.defaultSelectedEmailVerifiedStatus;\n                                }\n                              }}\n                              required\n                            >\n                              <AvRadio\n                                label={EmailVerifiedStatus.VERIFIED}\n                                value={EmailVerifiedStatus.VERIFIED}\n                              />\n                              <AvRadio\n                                label={EmailVerifiedStatus.UNVERIFIED}\n                                value={EmailVerifiedStatus.UNVERIFIED}\n                                disabled={this.user.emailVerified}\n                              />\n                            </AvRadioGroup>\n                          </AvGroup>\n                          <AvField\n                            name=\"firstName\"\n                            label={\n                              <BoldAccountTitle\n                                title={ACCOUNT_TITLES.FIRST_NAME}\n                                licenseType={this.selectedLicense}\n                              />\n                            }\n                            value={this.user.firstName}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: 'First name is required',\n                              },\n                              ...SHORT_TEXT_VAL,\n                            }}\n                          />\n                          <AvField\n                            name=\"lastName\"\n                            label={\n                              <BoldAccountTitle\n                                title={ACCOUNT_TITLES.LAST_NAME}\n                                licenseType={this.selectedLicense}\n                              />\n                            }\n                            value={this.user.lastName}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: 'Last name is required',\n                              },\n                              ...SHORT_TEXT_VAL,\n                            }}\n                          />\n                          <AvField\n                            name=\"createdDate\"\n                            label={<b>Created Date</b>}\n                            value={this.user.createdDate}\n                            disabled\n                          />\n                          <AvField\n                            name=\"lastModifiedBy\"\n                            label={<b>Last Modified By</b>}\n                            value={this.user.lastModifiedBy}\n                            disabled\n                          />\n                          <AvField\n                            name=\"lastModifiedDate\"\n                            label={<b>Last Modified Date</b>}\n                            value={this.user.lastModifiedDate}\n                            disabled\n                          />\n                          <Label>\n                            <b>Activation Key</b>\n                          </Label>\n                          <KeyInputGroups\n                            keyVal={this.user.activationKey}\n                            infoOverlay={this.generateActivationKeyInfoOverlay()}\n                            onDelete={() => {\n                              this.simpleConfirmModalType =\n                                SimpleConfirmModalType.DELETE_ACTIVATION_KEY;\n                            }}\n                          />\n                          <Label>\n                            <b>Reset Key</b>\n                          </Label>\n                          <KeyInputGroups\n                            keyVal={this.user.resetKey}\n                            infoOverlay={this.generateResetKeyInfoOverlay()}\n                            onCreate={() => {\n                              this.simpleConfirmModalType =\n                                SimpleConfirmModalType.GENERATE_RESET_KEY;\n                            }}\n                            onDelete={() => {\n                              this.simpleConfirmModalType =\n                                SimpleConfirmModalType.DELETE_RESET_KEY;\n                            }}\n                          />\n                          <AvField\n                            name=\"resetDate\"\n                            label={<b>Reset Date</b>}\n                            value={this.user.resetDate || ''}\n                            disabled\n                          />\n                        </Col>\n                      </Row>\n                      <Row className={getSectionClassName(false)}>\n                        <Col>\n                          <TokenInputGroups\n                            changeTokenExpirationDate={true}\n                            tokens={this.userTokens}\n                            onDeleteToken={this.deleteToken}\n                            extendExpirationDate={\n                              this.changeTokenExpirationDate\n                            }\n                          />\n                          <div className=\"mt-2 d-flex flex-row-reverse\">\n                            <ButtonWithTooltip\n                              tooltipProps={{\n                                placement: 'top',\n                                overlay:\n                                  this.userTokens.length > 1\n                                    ? 'Cannot generate token when there is more than one token associated with user.'\n                                    : \"Create new token. User's old token will expire in 7 days if expiration is longer than 7 days.\",\n                              }}\n                              buttonProps={{\n                                variant: 'primary',\n                                size: 'sm',\n                                onClick: () => this.addNewToken(),\n                                disabled: this.userTokens.length > 1,\n                              }}\n                              buttonContent={'New Token'}\n                            />\n                          </div>\n                        </Col>\n                      </Row>\n                      <Row className={getSectionClassName(false)}>\n                        <Col>\n                          <div>\n                            <div className={'mb-2 mt-1 font-weight-bold'}>\n                              <span className={'font-bold'}>License Type</span>\n                              {!this.user.company ? null : (\n                                <InfoIcon\n                                  className={'ml-2'}\n                                  overlay={`User is associated with a company. The license type should match with the company's license.`}\n                                />\n                              )}\n                            </div>\n                            <If condition={!!this.user.company}>\n                              <Then>\n                                <AvField\n                                  name=\"selectedLicense\"\n                                  value={this.selectedLicense}\n                                  disabled\n                                />\n                              </Then>\n                              <Else>\n                                <ButtonSelections\n                                  isLargeScreen={\n                                    this.props.windowStore.isLargeScreen\n                                  }\n                                  selectedButton={\n                                    this.selectedLicense as LicenseType\n                                  }\n                                  onSelectLicense={selectedLicense =>\n                                    (this.selectedLicense = selectedLicense)\n                                  }\n                                />\n                              </Else>\n                            </If>\n                          </div>\n                          <AvField\n                            name=\"jobTitle\"\n                            label={\n                              <BoldAccountTitle\n                                title={ACCOUNT_TITLES.POSITION}\n                                licenseType={this.selectedLicense}\n                              />\n                            }\n                            validate={SHORT_TEXT_VAL}\n                            value={this.user.jobTitle}\n                          />\n                          <AvField\n                            name=\"company\"\n                            label={\n                              <>\n                                <BoldAccountTitle\n                                  title={ACCOUNT_TITLES.COMPANY}\n                                  licenseType={this.selectedLicense}\n                                />\n                                {this.user.company ? (\n                                  <Link\n                                    to={`/companies/${this.user.company.id}`}\n                                  >\n                                    <i className=\"ml-2 fa fa-pencil-square-o\" />\n                                  </Link>\n                                ) : null}\n                              </>\n                            }\n                            validate={SHORT_TEXT_VAL}\n                            value={\n                              this.user.company\n                                ? this.user.company.name\n                                : this.user.companyName\n                            }\n                            disabled={this.user.company != null}\n                          />\n                          <AvField\n                            name=\"additionalInfoUserCase\"\n                            label={\n                              <BoldAccountTitle\n                                title={ACCOUNT_TITLES.ADDITIONAL_INFO_USER_CASE}\n                                licenseType={this.selectedLicense}\n                              />\n                            }\n                            value={\n                              this.user.additionalInfo?.userCompany?.useCase\n                            }\n                            validate={TEXT_VAL}\n                          />\n                          <AvField\n                            name=\"city\"\n                            label={\n                              <BoldAccountTitle\n                                title={ACCOUNT_TITLES.CITY}\n                                licenseType={this.selectedLicense}\n                              />\n                            }\n                            value={this.user.city}\n                            validate={SHORT_TEXT_VAL}\n                          />\n                          <AvField\n                            name=\"country\"\n                            label={\n                              <BoldAccountTitle\n                                title={ACCOUNT_TITLES.COUNTRY}\n                                licenseType={this.selectedLicense}\n                              />\n                            }\n                            value={this.user.country}\n                            validate={SHORT_TEXT_VAL}\n                          />\n                          <div className={'mb-2 font-weight-bold'}>\n                            Account Type\n                          </div>\n                          <AvRadioGroup\n                            inline\n                            name=\"accountType\"\n                            label=\"\"\n                            required\n                            value={this.defaultSelectedAccountType}\n                            onChange={(event: any, value: any) => {\n                              if (value) {\n                                this.selectedAccountType = value;\n                              } else {\n                                this.selectedAccountType = ACCOUNT_TYPE_DEFAULT;\n                              }\n                            }}\n                          >\n                            <AvRadio\n                              label={AccountType.REGULAR}\n                              value={AccountType.REGULAR}\n                            />\n                            <AvRadio\n                              label={AccountType.TRIAL}\n                              value={AccountType.TRIAL}\n                            />\n                          </AvRadioGroup>\n                          {this.selectedAccountType === AccountType.TRIAL ? (\n                            <div className={'mt-2'}>\n                              <AvField\n                                name=\"tokenValidDays\"\n                                label={<b>Account Expires in Days</b>}\n                                required\n                                value={\n                                  this.shortestToken\n                                    ? daysDiff(this.shortestToken.expiration)\n                                    : THRESHOLD_TRIAL_TOKEN_VALID_DEFAULT\n                                }\n                                validate={{ number: true }}\n                              />\n                            </div>\n                          ) : null}\n                          <div className={'mb-2 mt-1 font-weight-bold'}>\n                            <span>Account Status</span>\n                            <InfoIcon\n                              className={'ml-2'}\n                              overlay={\n                                'Update here will not notify user. If you want to notify user, please update user status in the users table'\n                              }\n                            />\n                          </div>\n                          <AvRadioGroup\n                            inline\n                            name=\"accountStatus\"\n                            label=\"\"\n                            required\n                            value={\n                              this.user.activated\n                                ? AccountStatus.ACTIVATED\n                                : AccountStatus.INACTIVATED\n                            }\n                          >\n                            <AvRadio\n                              label={AccountStatus.ACTIVATED}\n                              value={AccountStatus.ACTIVATED}\n                            />\n                            <AvRadio\n                              label={AccountStatus.INACTIVATED}\n                              value={AccountStatus.INACTIVATED}\n                            />\n                          </AvRadioGroup>\n                          <div className={'my-2 font-weight-bold'}>\n                            User Authorities\n                          </div>\n                          <AvCheckboxGroup\n                            inline\n                            name=\"authorities\"\n                            label=\"\"\n                            value={toJS(this.user.authorities)}\n                            required\n                          >\n                            {USER_AUTHORITIES.map(authority => (\n                              <AvCheckbox\n                                key={authority}\n                                label={authority}\n                                value={authority}\n                                disabled={NOT_CHANGEABLE_AUTHORITIES.includes(\n                                  authority\n                                )}\n                              />\n                            ))}\n                          </AvCheckboxGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col className={getSectionClassName()}>\n                          <Button\n                            id=\"update-user\"\n                            variant=\"primary\"\n                            type=\"submit\"\n                          >\n                            Update\n                          </Button>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col className={getSectionClassName()}>\n                          <div className={'my-2 font-weight-bold'}>\n                            Data usage\n                          </div>\n                          <UserUsageDetailsTable\n                            data={this.usageDetail.result}\n                            loadedData={this.usageDetail.isComplete}\n                            defaultResourcesType={ToggleValue.CUMULATIVE_USAGE}\n                            defaultTimeType={ToggleValue.RESULTS_BY_MONTH}\n                            defaultPageSize={this.defaultPageSize}\n                          />\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col className={getSectionClassName()}>\n                          <div className={'my-2 font-weight-bold'}>\n                            Email history\n                          </div>\n                          <EmailTable\n                            data={this.usersUserMails.result}\n                            defaultPageSize={this.defaultPageSize}\n                          />\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col className={getSectionClassName()}>\n                          <div className={'my-2 text-danger'}>Danger Zone</div>\n                          <div>\n                            <Button\n                              variant=\"danger\"\n                              onClick={() => {\n                                this.simpleConfirmModalType =\n                                  SimpleConfirmModalType.DELETE_ACCOUNT;\n                              }}\n                            >\n                              Delete Account\n                            </Button>\n                            <SimpleConfirmModal\n                              key={'user-page-simple-confirm-modal'}\n                              show={this.showSimpleConfirmModal}\n                              onCancel={() =>\n                                (this.simpleConfirmModalType =\n                                  SimpleConfirmModalType.NA)\n                              }\n                              onConfirm={this.onConfirmSimpleConfirmModal}\n                            />\n                          </div>\n                        </Col>\n                      </Row>\n                    </div>\n                  </AvForm>\n                </DocumentTitle>\n              )}\n            </Else>\n          </If>\n        </Else>\n      </If>\n    );\n  }\n}\n","import React from 'react';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport { DefaultTooltipProps } from 'cbioportal-frontend-commons/dist/components/defaultTooltip/DefaultTooltip';\nimport { Button, ButtonProps } from 'react-bootstrap';\n\n/**\n * Disabled elements need to be wrapped in a div or span, otherwise the tooltip\n * will not show because mouse events are not triggered on disabled elements.\n * See https://getbootstrap.com/docs/3.4/javascript/#tooltips\n * Also https://github.com/react-component/tooltip/issues/18 highlights some issues\n * related to tooltip.\n */\n\nconst ButtonWithTooltip: React.FunctionComponent<{\n  tooltipProps: DefaultTooltipProps;\n  buttonProps: ButtonProps;\n  buttonContent: string | JSX.Element;\n}> = props => {\n  const { tooltipProps, buttonProps, buttonContent } = props;\n  const button = (\n    <Button\n      style={buttonProps.disabled ? { pointerEvents: 'none' } : {}}\n      {...buttonProps}\n    >\n      {buttonContent}\n    </Button>\n  );\n  return (\n    <DefaultTooltip {...tooltipProps}>\n      {buttonProps.disabled ? (\n        <span\n          style={{\n            cursor: `${buttonProps.disabled ? 'not-allowed' : 'pointer'}`,\n          }}\n        >\n          {button}\n        </span>\n      ) : (\n        button\n      )}\n    </DefaultTooltip>\n  );\n};\n\nexport default ButtonWithTooltip;\n","import React from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { DefaultTooltip } from 'cbioportal-frontend-commons';\nimport InfoIcon from 'app/shared/icons/InfoIcon';\nimport ButtonWithTooltip from 'app/shared/button/ButtonWithTooltip';\n\ntype KeyInputGroupsProps = {\n  keyVal?: string;\n  onCreate?: () => void;\n  onDelete?: () => void;\n  infoOverlay?:\n    | (() => React.ReactChild)\n    | React.ReactChild\n    | React.ReactFragment\n    | React.ReactPortal;\n};\n\nexport const KeyInputGroups: React.FunctionComponent<KeyInputGroupsProps> = props => {\n  return (\n    <div key={props.keyVal} className={'mb-2'}>\n      <InputGroup>\n        <FormControl\n          value={props.keyVal || ''}\n          type={'text'}\n          contentEditable={false}\n          disabled={true}\n        />\n        {!props.keyVal && props.onCreate && (\n          <InputGroup.Append>\n            <ButtonWithTooltip\n              tooltipProps={{\n                placement: 'top',\n                overlay: 'Create a new key',\n              }}\n              buttonProps={{\n                onClick: props.onCreate,\n              }}\n              buttonContent={<i className={'fa fa-refresh'}></i>}\n            />\n          </InputGroup.Append>\n        )}\n        {!!props.keyVal && (\n          <>\n            {props.infoOverlay && (\n              <InputGroup.Append>\n                <DefaultTooltip placement={'top'} overlay={props.infoOverlay}>\n                  <InputGroup.Text>\n                    <InfoIcon />\n                  </InputGroup.Text>\n                </DefaultTooltip>\n              </InputGroup.Append>\n            )}\n            {props.onDelete && (\n              <InputGroup.Append>\n                <ButtonWithTooltip\n                  tooltipProps={{\n                    placement: 'top',\n                    overlay: 'Delete the key',\n                  }}\n                  buttonProps={{\n                    onClick: props.onDelete,\n                  }}\n                  buttonContent={<i className={'fa fa-trash'}></i>}\n                />\n              </InputGroup.Append>\n            )}\n          </>\n        )}\n      </InputGroup>\n    </div>\n  );\n};\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { RouteComponentProps } from 'react-router';\nimport { Row, Col, Button, Alert, Tab, Tabs, Form } from 'react-bootstrap';\nimport { getSectionClassName } from './account/AccountUtils';\nimport { action, observable } from 'mobx';\nimport { CompanyDTO, ManagedUserVM } from 'app/shared/api/generated/API';\nimport client from 'app/shared/api/clientInstance';\nimport { AvField, AvForm } from 'availity-reactstrap-validation';\nimport { Else, If, Then } from 'react-if';\nimport {\n  fieldRequiredValidation,\n  SHORT_TEXT_VAL,\n} from 'app/shared/utils/FormValidationUtils';\nimport _ from 'lodash';\nimport { DefaultTooltip, remoteData } from 'cbioportal-frontend-commons';\nimport LoadingIndicator from 'app/components/loadingIndicator/LoadingIndicator';\nimport { LicenseStatus } from 'app/config/constants';\nimport { PromiseStatus } from 'app/shared/utils/PromiseUtils';\nimport { Link } from 'react-router-dom';\nimport { getErrorMessage } from 'app/shared/alert/ErrorAlertUtils';\nimport { COLOR_LIGHT_GREY } from 'app/config/theme';\n\ninterface MatchParams {\n  id: string;\n}\n\nenum CreateUserMode {\n  SINGLE = 'Single',\n  BATCH = 'Batch',\n}\n\nenum CreationStatus {\n  EDIT,\n  ERROR,\n  SUCCESS,\n}\n\ntype UserInfoType = {\n  creationStatus: {\n    status: CreationStatus;\n    error?: Error;\n  };\n  email: string;\n  firstName: string;\n  lastName: string;\n  city: string;\n  country: string;\n  needsMskRocReview: boolean;\n};\n\nconst emptyUserInfo: UserInfoType = {\n  creationStatus: {\n    status: CreationStatus.EDIT,\n  },\n  email: '',\n  firstName: '',\n  lastName: '',\n  city: '',\n  country: '',\n  needsMskRocReview: false,\n};\n\nconst batchUserInputFormatText = `Enter the user information (one user per line) using the format: email, first name, last name, city, country \\nie) user@email.com,Sample,User,City,Country\n  \\nYou can use commas or tabs to seperate each field`;\n\n/* The number of users that can be created at a time */\nconst userLimit = 10;\n\n@observer\nexport class CreateCompanyUsersPage extends React.Component<\n  RouteComponentProps<MatchParams>\n> {\n  @observable userInfos: UserInfoType[] = [emptyUserInfo];\n  @observable createdUsers: UserInfoType[] = [];\n  @observable createUserMode = CreateUserMode.SINGLE;\n  @observable usersInputText = '';\n  @observable createUserStatus = PromiseStatus.complete;\n\n  readonly company = remoteData<CompanyDTO>({\n    invoke: () => {\n      return client.getCompanyUsingGET({\n        id: parseInt(this.props.match.params.id, 10),\n      });\n    },\n  });\n\n  @action.bound\n  switchToBatch() {\n    this.usersInputText = '';\n    this.userInfos = [];\n    this.createUserMode = CreateUserMode.BATCH;\n  }\n\n  @action.bound\n  switchToSingle() {\n    this.userInfos = [emptyUserInfo];\n    this.createUserMode = CreateUserMode.SINGLE;\n  }\n\n  // This is to allow admin to press the TAB key while in textarea\n  @action.bound\n  onTabKey(event: any) {\n    if (event.which === 9) {\n      // tab key code\n      event.preventDefault();\n      const { selectionStart, selectionEnd } = event.target;\n      this.usersInputText =\n        this.usersInputText.substring(0, selectionStart) +\n        '\\t' +\n        this.usersInputText.substring(selectionEnd);\n    }\n  }\n\n  @action.bound\n  onValidSubmit(event: any, values: any) {\n    this.createUserStatus = PromiseStatus.pending;\n    const managedUserVMs: ManagedUserVM[] = this.userInfos.map(userInfo => {\n      return {\n        firstName: userInfo.firstName,\n        lastName: userInfo.lastName,\n        email: userInfo.email,\n        login: userInfo.email,\n        city: userInfo.city,\n        country: userInfo.country,\n        password: 'test',\n        licenseType: this.company.result?.licenseType,\n        tokenIsRenewable:\n          this.company.result?.licenseStatus !== LicenseStatus.TRIAL,\n        company: this.company.result,\n        companyName: this.company.result?.name,\n        notifyUserOnTrialCreation:\n          this.company.result?.licenseStatus === LicenseStatus.TRIAL,\n        needsMskRocReview: userInfo.needsMskRocReview,\n      } as ManagedUserVM;\n    });\n\n    Promise.all(\n      managedUserVMs\n        .map((managedUserVm: ManagedUserVM, idx: number) => {\n          return client\n            .createUserUsingPOST({ managedUserVm })\n            .then(() => {\n              this.userInfos[idx].creationStatus = {\n                status: CreationStatus.SUCCESS,\n              };\n            })\n            .catch((error: Error) => {\n              this.userInfos[idx].creationStatus = {\n                status: CreationStatus.ERROR,\n                error,\n              };\n            });\n        })\n        .map(promise => promise.catch((error: Error) => error))\n    ).then(() => {\n      const [created, notCreated] = _.partition(\n        this.userInfos,\n        userInfo => userInfo.creationStatus.status === CreationStatus.SUCCESS\n      );\n      this.createdUsers = this.createdUsers.concat(created);\n      this.userInfos = notCreated;\n      if (this.createUserMode === CreateUserMode.SINGLE) {\n        if (this.userInfos.length === 0) {\n          this.userInfos.push(emptyUserInfo);\n        }\n      } else {\n        this.usersInputText = this.userInfos.reduce((prev, curr) => {\n          const { creationStatus, ...userDetails } = curr;\n          return prev + Object.values(userDetails).join(',');\n        }, '');\n      }\n      this.createUserStatus = PromiseStatus.complete;\n    });\n  }\n\n  @action.bound\n  duplicateEmailValidation(\n    value: any,\n    context: any,\n    input: any,\n    cb: (isValid: boolean | string) => void\n  ) {\n    if (this.userInfos.filter(info => info.email === value.trim()).length > 1) {\n      cb('This email has already been entered.');\n    } else {\n      cb(true);\n    }\n  }\n\n  @action.bound\n  parseUserInfoText() {\n    this.userInfos = [];\n    if (this.usersInputText.length === 0) {\n      return;\n    }\n    const status = CreationStatus.EDIT;\n    const users: string[] = this.usersInputText.split(/[\\r\\n]/g);\n    users.every(user => {\n      if (this.userInfos.length < userLimit) {\n        const userInfoFields = user.includes(',')\n          ? user.split(/\\s*[,]\\s*/g)\n          : user.split(/[\\t]+/g);\n        this.userInfos.push({\n          email: userInfoFields[0] || '',\n          firstName: userInfoFields[1] || '',\n          lastName: userInfoFields[2] || '',\n          city: userInfoFields[3] || '',\n          country: userInfoFields[4] || '',\n          creationStatus: { status },\n          needsMskRocReview: false,\n        });\n        return true;\n      }\n      return false;\n    });\n  }\n\n  getErrorMessages() {\n    const failedUsers = this.userInfos.filter(\n      userInfo => userInfo.creationStatus.status === CreationStatus.ERROR\n    );\n    if (failedUsers.length !== 0) {\n      return (\n        <Alert variant=\"danger\">\n          <div>\n            The following user(s) could not be created. Please review the\n            information and try again.\n          </div>\n          {failedUsers.map(userInfo => (\n            <div>\n              {userInfo.email}:{' '}\n              {getErrorMessage(\n                userInfo.creationStatus.error || new Error('error')\n              )}\n            </div>\n          ))}\n        </Alert>\n      );\n    }\n  }\n\n  getCreateUserModeTabs(): JSX.Element[] {\n    return Object.keys(CreateUserMode).map((mode: CreateUserMode) => {\n      return (\n        <Tab\n          className=\"mt-2\"\n          eventKey={CreateUserMode[mode]}\n          title={CreateUserMode[mode]}\n        >\n          <h5>In Progress</h5>\n          {this.getErrorMessages()}\n          {this.createUserMode === CreateUserMode.BATCH && (\n            <AvField\n              name={'userList'}\n              label={'Users'}\n              type={'textarea'}\n              rows={5}\n              value={this.usersInputText}\n              placeholder={batchUserInputFormatText}\n              onChange={(event: any) => {\n                this.usersInputText = event.target.value;\n                this.parseUserInfoText();\n              }}\n              onKeyDown={this.onTabKey}\n            />\n          )}\n\n          {this.userInfos.map((info, idx) => (\n            <Row\n              key={`${idx}`}\n              className={'d-flex justify-content-center align-items-center'}\n            >\n              <Col>\n                <AvField\n                  name={`email${idx}`}\n                  label={`Email ${idx + 1}`}\n                  value={this.userInfos[idx].email}\n                  onChange={(event: any) => {\n                    this.userInfos[idx].email = event.target.value;\n                  }}\n                  validate={{\n                    ...fieldRequiredValidation('email'),\n                    email: true,\n                    duplicateEmailValidation: this.duplicateEmailValidation,\n                  }}\n                  disabled={CreateUserMode[mode] === CreateUserMode.BATCH}\n                />\n              </Col>\n              <Col>\n                <AvField\n                  name={`firstName${idx}`}\n                  label={'First Name'}\n                  value={this.userInfos[idx].firstName}\n                  onChange={(event: any) => {\n                    this.userInfos[idx].firstName = event.target.value;\n                  }}\n                  validate={{\n                    ...fieldRequiredValidation('first name'),\n                    ...SHORT_TEXT_VAL,\n                  }}\n                  disabled={CreateUserMode[mode] === CreateUserMode.BATCH}\n                />\n              </Col>\n              <Col>\n                <AvField\n                  name={`lastName${idx}`}\n                  label={'Last Name'}\n                  value={this.userInfos[idx].lastName}\n                  onChange={(event: any) => {\n                    this.userInfos[idx].lastName = event.target.value;\n                  }}\n                  validate={{\n                    ...fieldRequiredValidation('last name'),\n                    ...SHORT_TEXT_VAL,\n                  }}\n                  disabled={CreateUserMode[mode] === CreateUserMode.BATCH}\n                />\n              </Col>\n              <Col>\n                <AvField\n                  name={`city${idx}`}\n                  label={'City'}\n                  value={this.userInfos[idx].city}\n                  onChange={(event: any) => {\n                    this.userInfos[idx].city = event.target.value;\n                  }}\n                  validate={{\n                    ...fieldRequiredValidation('city'),\n                    ...SHORT_TEXT_VAL,\n                  }}\n                  disabled={CreateUserMode[mode] === CreateUserMode.BATCH}\n                />\n              </Col>\n              <Col>\n                <AvField\n                  name={`country${idx}`}\n                  label={'Country'}\n                  value={this.userInfos[idx].country}\n                  onChange={(event: any) => {\n                    this.userInfos[idx].country = event.target.value;\n                  }}\n                  validate={{\n                    ...fieldRequiredValidation('country'),\n                    ...SHORT_TEXT_VAL,\n                  }}\n                  disabled={CreateUserMode[mode] === CreateUserMode.BATCH}\n                />\n              </Col>\n              <Col>\n                <Form.Check\n                  inline\n                  onClick={() =>\n                    (this.userInfos[idx].needsMskRocReview = !this.userInfos[\n                      idx\n                    ].needsMskRocReview)\n                  }\n                  checked={this.userInfos[idx].needsMskRocReview}\n                  label={'Send to MSK ROC review'}\n                  type={'checkbox'}\n                  key={`needsMskRocReview${idx}`}\n                  id={`needsMskRocReview${idx}`}\n                />\n              </Col>\n              {CreateUserMode[mode] === CreateUserMode.SINGLE && (\n                <i\n                  style={\n                    this.userInfos.length <= 1\n                      ? { color: COLOR_LIGHT_GREY }\n                      : { cursor: 'pointer' }\n                  }\n                  className=\"fa fa-times-circle ml-2 fa-lg\"\n                  onClick={() => {\n                    if (this.userInfos.length > 1) {\n                      this.userInfos.splice(idx, 1);\n                    }\n                  }}\n                />\n              )}\n            </Row>\n          ))}\n          {this.createUserMode === CreateUserMode.SINGLE && (\n            <div>\n              <DefaultTooltip placement={'right'} overlay={'Add new user'}>\n                <i\n                  className=\"fa fa-plus-circle fa-lg mb-3\"\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => {\n                    if (this.userInfos.length < userLimit) {\n                      this.userInfos.push(emptyUserInfo);\n                    }\n                  }}\n                />\n              </DefaultTooltip>\n            </div>\n          )}\n          <Button variant=\"primary\" type=\"submit\">\n            Create Users\n          </Button>\n        </Tab>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <If\n        condition={\n          this.company.isPending ||\n          this.createUserStatus === PromiseStatus.pending\n        }\n      >\n        <Then>\n          <LoadingIndicator isLoading={true} />\n        </Then>\n        <Else>\n          <If condition={this.company.isError}>\n            <Then>\n              {' '}\n              <Alert variant={'danger'}>\n                Error loading company information\n              </Alert>\n            </Then>\n            <Else>\n              <Row className={getSectionClassName(true)}>\n                <Col>\n                  <h2>Create {this.company.result?.name} Users</h2>\n                  <Link to={`/companies/${this.company.result?.id}`}>\n                    Return to Company Page\n                  </Link>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <div className={'alert alert-warning'}>\n                    Only send to MSK ROC review when user resides outside of\n                    United States\n                  </div>\n                </Col>\n              </Row>\n              <Row className={getSectionClassName(true)}>\n                <Col>\n                  <AvForm onValidSubmit={this.onValidSubmit}>\n                    <Tabs\n                      defaultActiveKey={this.createUserMode}\n                      id=\"create-user-mode-tabs\"\n                      onSelect={tabKey =>\n                        tabKey === CreateUserMode.SINGLE\n                          ? this.switchToSingle()\n                          : this.switchToBatch()\n                      }\n                    >\n                      {this.getCreateUserModeTabs()}\n                    </Tabs>\n                  </AvForm>\n                </Col>\n              </Row>\n              {this.createdUsers.length > 0 ? (\n                <Row className={getSectionClassName()}>\n                  <Col>\n                    <h5>Successfully Created Users</h5>\n                    {this.createdUsers.map((info, idx) => (\n                      <Row key={`created-user-${idx}`}>\n                        <Col>\n                          {this.createdUsers[idx].email} (\n                          {this.createdUsers[idx].firstName}{' '}\n                          {this.createdUsers[idx].lastName}\n                          {', '}\n                          {this.createdUsers[idx].city}\n                          {', '}\n                          {this.createdUsers[idx].country})\n                        </Col>\n                      </Row>\n                    ))}\n                  </Col>\n                </Row>\n              ) : null}\n            </Else>\n          </If>\n        </Else>\n      </If>\n    );\n  }\n}\n","import React from 'react';\nimport styles from '../../licenseAgreement.module.scss';\nimport { ONCOKB_TM } from 'app/config/constants';\n\nexport const LicenseAgreement = () => {\n  return (\n    <div>\n      <h3>{ONCOKB_TM} KnowledgeBase Free Trial Access Terms and Conditions</h3>\n      <h5 className={'text-center'}>(\"Terms and Conditions\")</h5>\n      <p>\n        These Terms and Conditions describe the rights granted by Memorial Sloan\n        Kettering Cancer Center, a New York not-for-profit corporation with its\n        principal place of business at 1275 York Avenue, New York, New York\n        10065 (\"<b>MSKCC</b>\" or \"<b>Licensor</b>\") to you (\"<b>Licensee</b>\" or\n        \"<b>you</b>\") to access the {ONCOKB_TM} KnowledgeBase provided by MSKCC\n        as part of its free trial program.\n      </p>\n      <p>\n        BY ACCESSING OR USING ONCOKB KNOWLEDGEBASE OR CREATING AN ACCOUNT,\n        LICENSEE AGREES TO BE BOUND BY THE TERMS AND CONDITIONS SET FORTH\n        HEREIN.\n      </p>\n      <ol className={styles.orderedList}>\n        <li>\n          <u>Conditional License Grant</u>. Subject to these Terms and\n          Conditions, MSKCC hereby grants Licensee a temporary, limited,\n          non-exclusive, non-sublicensable, and non-transferable license for a\n          term of three (3) months (the \"<b>Term</b>\") to access {ONCOKB_TM}\n          KnowledgeBase through the {ONCOKB_TM} API, commencing on the date\n          LICENSEE is first granted access to the {ONCOKB_TM} KnowledgeBase.\n        </li>\n        <li>\n          <u>Use Restrictions</u>. Licensee shall not disclose, release,\n          distribute, or deliver the content of {ONCOKB_TM} KnowledgeBase, or\n          any portion thereof, to any third party without MSKCC's prior written\n          consent. Licensee shall not upload or otherwise transmit to{' '}\n          {ONCOKB_TM}\n          KnowledgeBase or the {ONCOKB_TM} API any material containing software\n          viruses or other computer code, files or programs designed to\n          interrupt, destroy or limit the functionality of any software or\n          hardware or to affect the integrity or availability of {ONCOKB_TM}.\n          Notwithstanding any other provision of these Terms and Conditions, if\n          the Licensee causes undue technical stress to {ONCOKB_TM}{' '}\n          KnowledgeBase or the {ONCOKB_TM} API, MSKCC reserves the right to\n          block access by Licensee.\n        </li>\n        <li>\n          <u>Attribution</u>. Licensee shall not use the MSKCC name, nor any\n          adaptation thereof in any public materials or media, sales literature,\n          or published works without prior written consent of MSKCC.{' '}\n        </li>\n        <li>\n          <u>Confidential Information; Additional Compliance Provisions</u>.\n          <ol style={{ listStyleType: 'lower-alpha' }}>\n            <li>\n              <u>Confidential Information</u> From time to time during the Term,\n              MSKCC may disclose or make available to Licensee Confidential\n              Information. Licensee shall not disclose MSKCC’s Confidential\n              Information to any person or entity, except to Licensee's\n              employees who have a need to know the Confidential Information for\n              Licensee to exercise its rights or perform its obligations\n              hereunder. Notwithstanding the foregoing, Licensee may disclose\n              Confidential Information to the limited extent required in order\n              to comply with the order of a court or other governmental body, or\n              as otherwise necessary to comply with applicable laws, provided\n              that Licensee shall first have given written notice to MSKCC and\n              made a reasonable effort to obtain a protective order\n            </li>\n            <li>\n              <u>{ONCOKB_TM} KnowledgeBase Security</u>. Licensee shall use all\n              procedures required under applicable laws or as otherwise\n              consistent with industry standards to safeguard and ensure the\n              security of {ONCOKB_TM} KnowledgeBase and MSKCC’s other\n              Confidential Information and to protect them from unauthorized\n              access or disclosure, and such measures and procedures shall in no\n              event be any less protective than the measures and procedures used\n              by Licensee to protect its own Confidential Information.\n            </li>\n          </ol>\n        </li>\n        <li>\n          <u>Intellectual Property Ownership</u>. Licensee acknowledges that, as\n          between Licensee and MSKCC, MSKCC owns all right, title, and interest,\n          including all intellectual property rights, in and to {ONCOKB_TM}\n          KnowledgeBase and the {ONCOKB_TM} API. Licensee further acknowledges\n          that: (i) {ONCOKB_TM} KnowledgeBase is an original compilation\n          protected by United States copyright laws; (ii) MSKCC has dedicated\n          substantial resources to collect, manage, and compile {ONCOKB_TM}{' '}\n          KnowledgeBase; and (iii) the content of {ONCOKB_TM} KnowledgeBase\n          includes works of authorship protected by United States copyright laws\n          and trade secrets of MSKCC.{' '}\n        </li>\n        <li>\n          <u>Limitations of Liability</u>. IN NO EVENT WILL MSKCC BE LIABLE\n          UNDER OR IN CONNECTION WITH THESE TERMS AND CONDITIONS UNDER ANY LEGAL\n          OR EQUITABLE THEORY, INCLUDING BREACH OF CONTRACT, TORT (INCLUDING\n          NEGLIGENCE), STRICT LIABILITY, AND OTHERWISE, FOR ANY (a)\n          CONSEQUENTIAL, INCIDENTAL, INDIRECT, EXEMPLARY, SPECIAL, ENHANCED, OR\n          PUNITIVE DAMAGES; (b) INCREASED COSTS, DIMINUTION IN VALUE, OR LOST\n          BUSINESS, PRODUCTION, REVENUES, OR PROFITS; (c) LOSS OF GOODWILL OR\n          REPUTATION; (d) USE, INABILITY TO USE, LOSS, INTERRUPTION, DELAY, OR\n          RECOVERY OF ANY DATA OR BREACH OF DATA OR SYSTEM SECURITY; OR (e) COST\n          OF REPLACEMENT GOODS OR SERVICES, IN EACH CASE REGARDLESS OF WHETHER\n          MSKCC WAS ADVISED OF THE POSSIBILITY OF SUCH LOSSES OR DAMAGES OR SUCH\n          LOSSES OR DAMAGES WERE OTHERWISE FORESEEABLE.{' '}\n        </li>\n        <li>\n          <u>Termination</u>. MSKCC may terminate this agreement, effective on\n          written notice to Licensee, if Licensee breaches any of the terms set\n          forth herein.\n        </li>\n        <li>\n          <u>Survival</u>. Any rights, obligations, or required performance of\n          the Parties in the Agreement which, by their express terms or nature\n          and context are intended to survive termination or expiration of the\n          Agreement, will survive any such termination or expiration.\n        </li>\n        <li>\n          <u>Definitions</u>. All capitalized terms not otherwise defined in the\n          Agreement shall have the meanings set forth below:\n          <ol style={{ listStyleType: 'lower-alpha' }}>\n            <li>\n              <b>Confidential Information</b> means information about its\n              business affairs, products, confidential intellectual property,\n              trade secrets, third-party confidential information, and other\n              sensitive or proprietary information (i) in written or electronic\n              form or media that is marked, designated, or otherwise identified\n              as \"confidential,\" (ii) if disclosed orally, is identified as\n              being confidential at the time of disclosure and, within two weeks\n              thereafter, is summarized, appropriately labelled and provided in\n              tangible form, or (iii) by the nature of the information is of a\n              type that is reasonably considered to be confidential and/or\n              proprietary Confidential Information does not include information\n              that, at the time of disclosure is: (A) in the public domain; (B)\n              known to the receiving Party at the time of disclosure; (C)\n              rightfully obtained by the receiving Party on a non-confidential\n              basis from a third party; or (D) independently developed by the\n              receiving Party. Notwithstanding anything to the contrary,{' '}\n              {ONCOKB_TM}\n              KnowledgeBase and the {ONCOKB_TM} API will be deemed Confidential\n              Information of MSKCC.\n            </li>\n            <li>\n              <b>{ONCOKB_TM} KnowledgeBase</b> means MSKCC’s precision oncology\n              knowledgebase, including the content therein.\n            </li>\n            <li>\n              <b>{ONCOKB_TM} API</b> means MSKCC’s web services-based\n              application programming interface, as modified from time to time\n              in MSKCC’s sole discretion.\n            </li>\n          </ol>\n        </li>\n      </ol>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"content/license_agreement.pdf\";","import React from 'react';\nimport { RouterStore } from 'mobx-react-router';\nimport { PAGE_ROUTE } from 'app/config/constants';\nimport { inject, observer } from 'mobx-react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport SmallPageContainer from '../SmallPageContainer';\nimport {\n  AvForm,\n  AvCheckboxGroup,\n  AvCheckbox,\n} from 'availity-reactstrap-validation';\nimport { LicenseAgreement } from 'app/components/licenseAgreement/trialAccount/v1/LicenseAgreement';\nimport client from 'app/shared/api/clientInstance';\nimport * as QueryString from 'query-string';\nimport { notifyError } from 'app/shared/utils/NotificationUtils';\nimport LoadingIndicator from 'app/components/loadingIndicator/LoadingIndicator';\nimport { observable } from 'mobx';\nimport { Else, Then, If } from 'react-if';\nimport { UserDTO } from 'app/shared/api/generated/API';\nimport { Redirect } from 'react-router';\nimport { DownloadButton } from 'app/components/downloadButton/DownloadButton';\nimport agreementPdf from 'app/components/licenseAgreement/trialAccount/v1/license_agreement.pdf';\n\n@inject('routing')\n@observer\nexport default class ActivateTrialFinish extends React.Component<{\n  routing: RouterStore;\n}> {\n  @observable loadingActivationInfo = true;\n  @observable user: UserDTO;\n  private activateKey: string;\n  @observable infoMessage: string | JSX.Element;\n\n  constructor(props: Readonly<{ routing: RouterStore }>) {\n    super(props);\n    const queryStrings = QueryString.parse(props.routing.location.search);\n    if (queryStrings.key) {\n      this.activateKey = queryStrings.key as string;\n    }\n  }\n\n  handleValidSubmit = (event: any, values: any) => {\n    client\n      .finishTrialAccountActivationUsingPOST({\n        keyAndTermsVm: {\n          key: this.activateKey,\n          readAndAgreeWithTheTerms: true,\n        },\n      })\n      .then(\n        user => {\n          this.infoMessage = `Your trial account has been activated. ${\n            user.resetKey\n              ? 'Please reset your password before logging in.'\n              : 'You will be redirected to the login page.'\n          }`;\n          setTimeout(() => {\n            if (user.resetKey) {\n              this.infoMessage = (\n                <Redirect\n                  to={`${PAGE_ROUTE.ACCOUNT_PASSWORD_RESET_FINISH}?key=${user.resetKey}`}\n                />\n              );\n            } else {\n              this.infoMessage = <Redirect to={PAGE_ROUTE.LOGIN} />;\n            }\n          }, 3000);\n        },\n        (error: Error) => {\n          notifyError(error);\n        }\n      );\n  };\n\n  componentDidMount() {\n    client\n      .getTrialAccountActivationInfoUsingGET({\n        key: this.activateKey,\n      })\n      .then(\n        user => {\n          this.user = user;\n        },\n        (error: Error) => {\n          this.infoMessage =\n            'This activation key is invalid. The key is either incorrect, or the license has already been activated.';\n        }\n      )\n      .finally(() => {\n        this.loadingActivationInfo = false;\n      });\n  }\n\n  render() {\n    return (\n      <If condition={this.loadingActivationInfo}>\n        <Then>\n          <LoadingIndicator isLoading />\n        </Then>\n        <Else>\n          <If condition={this.infoMessage === undefined}>\n            <Then>\n              <>\n                <Row>\n                  <Col>\n                    <DownloadButton\n                      className=\"float-right btn-sm\"\n                      href={agreementPdf}\n                    >\n                      Download PDF\n                    </DownloadButton>\n                  </Col>\n                </Row>\n\n                <SmallPageContainer size={'lg'}>\n                  <AvForm onValidSubmit={this.handleValidSubmit}>\n                    <Row>\n                      <Col sm={12}>\n                        <LicenseAgreement />\n                      </Col>\n                    </Row>\n                    <Row className=\"mt-2\">\n                      <Col>\n                        <AvCheckboxGroup\n                          name={'acceptTheAgreement'}\n                          required\n                          key={'acceptTheAgreement'}\n                          errorMessage={\n                            'You have to accept the terms to activate your license.'\n                          }\n                        >\n                          <AvCheckbox\n                            label={`I, ${this.user?.firstName} ${this.user?.lastName}, have read and agree with the terms and conditions above.`}\n                            value={true}\n                          />\n                        </AvCheckboxGroup>\n                      </Col>\n                    </Row>\n                    <Row className=\"mt-2\">\n                      <Col>\n                        <Button color=\"success\" type=\"submit\">\n                          Confirm\n                        </Button>\n                      </Col>\n                    </Row>\n                  </AvForm>\n                </SmallPageContainer>\n              </>\n            </Then>\n            <Else>\n              <SmallPageContainer>{this.infoMessage}</SmallPageContainer>\n            </Else>\n          </If>\n        </Else>\n      </If>\n    );\n  }\n}\n","import OncoKBTable, {\n  SearchColumn,\n} from 'app/components/oncokbTable/OncoKBTable';\nimport React from 'react';\nimport { Token, UserDTO } from 'app/shared/api/generated/API';\nimport { defaultSortMethod } from 'app/shared/utils/ReactTableUtils';\nimport { filterByKeyword, toAppLocalDateFormat } from 'app/shared/utils/Utils';\nimport { Link } from 'react-router-dom';\nimport { COLOR_PRIMARY } from 'app/config/theme';\nimport _ from 'lodash';\nimport client from '../api/clientInstance';\nimport { notifyError, notifySuccess } from '../utils/NotificationUtils';\nimport { Button } from 'react-bootstrap';\nimport { action, observable } from 'mobx';\nimport { LicenseStatus } from 'app/config/constants';\nimport InfoIcon from '../icons/InfoIcon';\nimport { UserStatusModal } from '../modal/UserStatusModal';\nimport { observer } from 'mobx-react';\n\ntype IUserTableProps = {\n  data: UserDTO[];\n  usersTokens: Token[];\n  onRemoveUser: (userToRemove: UserDTO) => void;\n  onUpdateUser: (updatedUser: UserDTO) => void;\n  onVerifyUserEmail: (user: UserDTO) => void;\n  loading?: boolean;\n  licenseStatus?: LicenseStatus;\n};\n\n@observer\nexport class UserTable extends React.Component<IUserTableProps> {\n  @observable showUserStatusModal = false;\n  @observable currentSelectedUser: UserDTO | undefined = undefined;\n\n  @action.bound\n  async updateUser(\n    userToUpdate: UserDTO,\n    sendEmail = false,\n    unlinkUser = false,\n    updateCallback: (updatedUser: UserDTO) => void\n  ) {\n    try {\n      const updatedUser = await client.updateUserUsingPUT({\n        userDto: userToUpdate,\n        sendEmail,\n        unlinkUser,\n      });\n      updateCallback(updatedUser);\n      notifySuccess('User updated!');\n    } catch (error) {\n      notifyError(error, 'Error updating user!');\n    }\n  }\n\n  @action.bound\n  unlinkUserFromCompany(user: UserDTO) {\n    const userToUpdate: UserDTO = { ...user };\n    this.updateUser(userToUpdate, false, true, (updatedUser: UserDTO) =>\n      this.props.onRemoveUser(updatedUser)\n    );\n  }\n\n  @action.bound\n  alignUserLicenseStatus(user: UserDTO) {\n    if (user.licenseType !== user.company.licenseType) {\n      const userToUpdate: UserDTO = {\n        ...user,\n        licenseType: user.company.licenseType,\n      };\n      this.updateUser(userToUpdate, false, false, this.props.onUpdateUser);\n    }\n  }\n\n  @action\n  updateActiveStatus(sendEmail = true) {\n    if (this.currentSelectedUser) {\n      const userToUpdate: UserDTO = {\n        ...this.currentSelectedUser,\n        activated: !this.currentSelectedUser.activated,\n      };\n      this.updateUser(userToUpdate, sendEmail, false, this.props.onUpdateUser);\n    } else {\n      notifyError(new Error('No user specified'));\n    }\n    this.showUserStatusModal = false;\n  }\n\n  @action.bound\n  cancelUpdateActiveStatus() {\n    this.showUserStatusModal = false;\n    this.currentSelectedUser = undefined;\n  }\n\n  private getAccountStatus(user: UserDTO) {\n    let status = '';\n    if (this.props.licenseStatus === LicenseStatus.TRIAL) {\n      if (\n        !user.additionalInfo?.trialAccount?.activation?.activationDate &&\n        user.additionalInfo?.trialAccount?.activation?.key\n      ) {\n        status += ' (Pending)';\n      } else if (\n        this.props.usersTokens.some(\n          token => token.user.id === user.id && token.renewable\n        )\n      ) {\n        status += ' (Regular)';\n      } else {\n        status += ' (Trial)';\n      }\n    }\n    return status;\n  }\n\n  private columns: SearchColumn<UserDTO>[] = [\n    {\n      id: 'createdDate',\n      Header: <span>Created Date</span>,\n      maxWidth: 100,\n      onFilter: (data: UserDTO, keyword) =>\n        data.createdDate\n          ? filterByKeyword(toAppLocalDateFormat(data.createdDate), keyword)\n          : false,\n      accessor: 'createdDate',\n      Cell(props: { original: UserDTO }): any {\n        return <div>{toAppLocalDateFormat(props.original.createdDate)}</div>;\n      },\n    },\n    {\n      id: 'userName',\n      Header: <span>User Name</span>,\n      onFilter: (data: UserDTO, keyword) =>\n        data.firstName + data.lastName\n          ? filterByKeyword(data.firstName + data.lastName, keyword)\n          : false,\n      Cell(props: { original: UserDTO }) {\n        return (\n          <span>{`${props.original.firstName} ${props.original.lastName}`}</span>\n        );\n      },\n    },\n    {\n      id: 'jobTitle',\n      Header: <span>Job Title</span>,\n      onFilter: (data: UserDTO, keyword) =>\n        data.jobTitle ? filterByKeyword(data.jobTitle, keyword) : false,\n      accessor: 'jobTitle',\n    },\n    {\n      id: 'email',\n      Header: <span>Email</span>,\n      accessor: 'email',\n      minWidth: 150,\n      defaultSortDesc: false,\n      sortMethod: defaultSortMethod,\n      onFilter: (data: UserDTO, keyword) =>\n        filterByKeyword(data.email, keyword),\n      Cell(props: { original: UserDTO }) {\n        return <span>{props.original.email}</span>;\n      },\n    },\n    {\n      id: 'activated',\n      Header: (\n        <>\n          <span>Status</span>\n          {this.props.licenseStatus === LicenseStatus.TRIAL && (\n            <InfoIcon\n              placement={'top'}\n              overlay={\n                <>\n                  <div>\n                    <strong>Trial:</strong> User has activated their trial\n                    license.\n                  </div>\n                  <div>\n                    <strong>Pending:</strong> Waiting for user to activate\n                    trial.\n                  </div>\n                  <div>\n                    <strong>Regular:</strong> User is on a regular license.\n                  </div>\n                </>\n              }\n              className={'ml-2'}\n            />\n          )}\n        </>\n      ),\n      accessor: 'activated',\n      defaultSortDesc: false,\n      className: 'justify-content-center',\n      sortMethod: defaultSortMethod,\n      Cell: (props: { original: UserDTO }) => {\n        if (props.original.emailVerified) {\n          return (\n            <>\n              <Button\n                variant={props.original.activated ? 'success' : 'danger'}\n                onClick={() => {\n                  this.currentSelectedUser = props.original;\n                  this.showUserStatusModal = true;\n                }}\n              >\n                {props.original.activated ? 'Activated' : 'Inactivated'}\n              </Button>\n              <span>{this.getAccountStatus(props.original)}</span>\n            </>\n          );\n        } else {\n          return (\n            <>\n              <div>Email hasn&apos;t been verified yet</div>\n              <Button\n                onClick={() => this.props.onVerifyUserEmail(props.original)}\n              >\n                Verify\n              </Button>\n            </>\n          );\n        }\n      },\n    },\n    {\n      id: 'authorities',\n      Header: <span>Profiles</span>,\n      accessor: 'authorities',\n      defaultSortDesc: false,\n      sortMethod: defaultSortMethod,\n      onFilter: (data: UserDTO, keyword) =>\n        _.some(data.authorities, authority =>\n          filterByKeyword(authority, keyword)\n        ),\n      Cell(props: { original: UserDTO }) {\n        return (\n          <div className={'d-flex flex-column'}>\n            {props.original.authorities.map(authority => (\n              <div key={authority}>{authority}</div>\n            ))}\n          </div>\n        );\n      },\n    },\n    {\n      id: 'licenseType',\n      Header: <span>License Type</span>,\n      onFilter: (data: UserDTO, keyword) =>\n        data.licenseType ? filterByKeyword(data.licenseType, keyword) : false,\n      accessor: 'licenseType',\n      Cell: (props: { original: UserDTO }) => {\n        if (props.original.licenseType !== props.original.company.licenseType) {\n          return (\n            <Button\n              variant={'danger'}\n              onClick={() => this.alignUserLicenseStatus(props.original)}\n            >\n              {props.original.licenseType}\n            </Button>\n          );\n        }\n        return <span>{props.original.licenseType}</span>;\n      },\n    },\n    {\n      id: 'edit',\n      Header: <span>Edit</span>,\n      maxWidth: 60,\n      sortable: false,\n      className: 'justify-content-center',\n      Cell(props: { original: UserDTO }) {\n        return (\n          <span>\n            <Link to={`/users/${props.original.login}`}>\n              <i className=\"fa fa-pencil-square-o\"></i>\n            </Link>\n          </span>\n        );\n      },\n    },\n    {\n      id: 'unlink',\n      Header: <span>Unlink</span>,\n      maxWidth: 60,\n      sortable: false,\n      className: 'justify-content-center',\n      Cell: (props: { original: UserDTO }) => {\n        return (\n          <span\n            style={{ color: COLOR_PRIMARY, cursor: 'pointer' }}\n            onClick={() => this.unlinkUserFromCompany(props.original)}\n          >\n            <i className=\"fa fa-user-times\"></i>\n          </span>\n        );\n      },\n    },\n  ];\n\n  render() {\n    return (\n      <>\n        <OncoKBTable\n          defaultSorted={[\n            {\n              id: 'createdDate',\n              desc: true,\n            },\n          ]}\n          data={this.props.data}\n          columns={this.columns}\n          showPagination={true}\n          minRows={1}\n          defaultPageSize={5}\n          loading={this.props.loading}\n        />\n        <UserStatusModal\n          show={this.showUserStatusModal}\n          user={this.currentSelectedUser}\n          onCancel={this.cancelUpdateActiveStatus}\n          onConfirm={(sendEmail: boolean) => this.updateActiveStatus(sendEmail)}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { getSectionClassName } from 'app/pages/account/AccountUtils';\nimport { AvField, AvForm } from 'availity-reactstrap-validation';\nimport {\n  COMPANY_TYPE_TITLES,\n  LICENSE_MODEL_TITLES,\n  LICENSE_STATUS_TITLES,\n  LICENSE_TITLES,\n  LicenseModel,\n  LicenseStatus,\n  PAGE_ROUTE,\n} from 'app/config/constants';\nimport { Alert, Button, Col, Row } from 'react-bootstrap';\nimport {\n  CompanyDTO,\n  CompanyVM,\n  Token,\n  UserDTO,\n  UserOverviewUsage,\n} from 'app/shared/api/generated/API';\nimport client from 'app/shared/api/clientInstance';\nimport { action, computed, observable } from 'mobx';\nimport { Else, If, Then } from 'react-if';\nimport LoadingIndicator from 'app/components/loadingIndicator/LoadingIndicator';\nimport { RouteComponentProps } from 'react-router';\nimport { parseInt } from 'lodash';\nimport { notifyError, notifySuccess } from 'app/shared/utils/NotificationUtils';\nimport { PromiseStatus } from 'app/shared/utils/PromiseUtils';\nimport { FormTextAreaField } from 'app/shared/textarea/FormTextAreaField';\nimport { FormSelectWithLabelField } from 'app/shared/select/FormSelectWithLabelField';\nimport { COMPANY_FORM_OPTIONS } from 'app/components/newCompanyForm/NewCompanyForm';\nimport { FormListField } from 'app/shared/list/FormListField';\nimport { UserTable } from 'app/shared/table/UserTable';\nimport Select from 'react-select';\nimport DocumentTitle from 'react-document-title';\nimport { DefaultTooltip, remoteData } from 'cbioportal-frontend-commons';\nimport { AdditionalInfoSelect } from 'app/shared/dropdown/AdditionalInfoSelect';\nimport {\n  debouncedCompanyNameValidator,\n  fieldRequiredValidation,\n  textValidation,\n} from 'app/shared/utils/FormValidationUtils';\nimport { Link } from 'react-router-dom';\nimport { QuickToolButton } from '../userPage/QuickToolButton';\nimport { SimpleConfirmModal } from 'app/shared/modal/SimpleConfirmModal';\nimport {\n  convertObjectArrayToDelimitedString,\n  filterByKeyword,\n  getPageTitle,\n  toAppLocalDateFormat,\n} from 'app/shared/utils/Utils';\nimport { UsageToggleGroup } from 'app/pages/usageAnalysisPage/UsageToggleGroup';\nimport OncoKBTable from 'app/components/oncokbTable/OncoKBTable';\nimport {\n  getUsageTableColumnDefinition,\n  ToggleValue,\n  UsageTableColumnKey,\n} from 'app/pages/usageAnalysisPage/UsageAnalysisPage';\nimport autobind from 'autobind-decorator';\nimport {\n  emailHeader,\n  endpointHeader,\n  noPrivateEndpointHeader,\n  usageHeader,\n} from 'app/components/oncokbTable/HeaderConstants';\nimport UsageText from 'app/shared/texts/UsageText';\nimport { DateSelector } from 'app/components/dateSelector/DateSelector';\nimport { DownloadButton } from 'app/components/downloadButton/DownloadButton';\n\ninterface MatchParams {\n  id: string;\n}\n\ntype SelectOptionType = {\n  label: string;\n  value: string;\n};\n\nconst LICENSE_STATUS_UPDATE_MESSAGES = {\n  REGULAR: {\n    TRIAL: `All users will be sent a trial activation email.`,\n    EXPIRED: 'All accounts will be terminated immediately.',\n  },\n  TRIAL: {\n    REGULAR: 'All accounts will be converted to a regular license.',\n    TRIAL_EXPIRED: 'All trial accounts will be terminated immediately.',\n    EXPIRED: 'All trial accounts will be terminated immediately',\n  },\n  TRIAL_EXPIRED: {\n    TRIAL: 'All accounts can be reactivated using the activation email.',\n    REGULAR: 'All account will be converted to a regular license.',\n  },\n  EXPIRED: {\n    TRIAL: 'All account will be sent a trial activation email.',\n    REGULAR: 'All accounts will be approved automatically.',\n  },\n};\n\n@observer\nexport default class CompanyPage extends React.Component<\n  RouteComponentProps<MatchParams>\n> {\n  @observable getCompanyStatus = PromiseStatus.pending;\n  @observable getCompanyUsersStatus = PromiseStatus.pending;\n  @observable getDropdownUsersStatus = PromiseStatus.pending;\n\n  @observable selectedLicenseStatus: LicenseStatus;\n  @observable conflictingDomains: string[] = [];\n\n  @observable showLicenseChangeModal = false;\n  @observable confirmLicenseChangeModalText = '';\n  @observable formValues: any;\n\n  @observable company: CompanyDTO;\n  @observable companyUsers: UserDTO[] = [];\n  @observable companyUserTokens: Token[] = [];\n  @observable dropDownUsers: SelectOptionType[] = [];\n  @observable selectedUsersOptions: SelectOptionType[] = [];\n\n  @observable resourcesTypeToggleValue: ToggleValue =\n    ToggleValue.PUBLIC_RESOURCES;\n\n  constructor(props: RouteComponentProps<MatchParams>) {\n    super(props);\n    this.getCompany();\n    this.getDropdownUsers();\n  }\n\n  @action\n  getCompany() {\n    client\n      .getCompanyUsingGET({\n        id: parseInt(this.props.match.params.id, 10),\n      })\n      .then(company => {\n        this.company = company;\n        this.selectedLicenseStatus = company.licenseStatus as LicenseStatus;\n        this.verifyCompanyDomains();\n        this.getCompanyUserInfo();\n        this.getCompanyStatus = PromiseStatus.complete;\n      })\n      .catch(() => (this.getCompanyStatus = PromiseStatus.error));\n  }\n\n  @action.bound\n  getCompanyUserTokens() {\n    return client.getUsersTokensUsingPOST({\n      logins: this.companyUsers.map(user => user.login),\n    });\n  }\n  @action\n  getCompanyUserInfo() {\n    client\n      .getCompanyUsersUsingGET({\n        id: this.company.id,\n      })\n      .then((users: UserDTO[]) => {\n        this.companyUsers = users;\n        this.getCompanyUserTokens()\n          .then((tokens: Token[]) => {\n            this.companyUserTokens = tokens;\n            this.getCompanyUsersStatus = PromiseStatus.complete;\n          })\n          .catch(() => (this.getCompanyUsersStatus = PromiseStatus.error));\n      })\n      .catch(() => (this.getCompanyUsersStatus = PromiseStatus.error));\n  }\n\n  @action\n  getDropdownUsers() {\n    client\n      .getNonCompanyUserEmailsUsingGET({})\n      .then(users => {\n        this.dropDownUsers = users.map(email => ({\n          label: email,\n          value: email,\n        }));\n        this.getDropdownUsersStatus = PromiseStatus.complete;\n      })\n      .catch(() => (this.getDropdownUsersStatus = PromiseStatus.error));\n  }\n\n  @action.bound\n  updateCompany() {\n    this.showLicenseChangeModal = false;\n    this.getCompanyStatus = PromiseStatus.pending;\n    this.getCompanyUsersStatus = PromiseStatus.pending;\n    this.getDropdownUsersStatus = PromiseStatus.pending;\n    const newCompanyUserEmails = this.selectedUsersOptions.map(\n      selection => selection.value\n    );\n    const updatedCompany: CompanyVM = {\n      ...this.company,\n      licenseStatus: this.selectedLicenseStatus,\n      name: this.formValues.companyName,\n      companyDomains: this.company.companyDomains,\n      businessContact: this.formValues.businessContact,\n      legalContact: this.formValues.legalContact,\n      companyUserEmails: newCompanyUserEmails,\n    };\n    client\n      .updateCompanyUsingPUT({ companyVm: updatedCompany })\n      .then((updatedCompanyDTO: CompanyDTO) => {\n        this.company = updatedCompanyDTO;\n        this.selectedLicenseStatus = updatedCompanyDTO.licenseStatus as LicenseStatus;\n        this.selectedUsersOptions = [];\n        this.conflictingDomains = [];\n        this.verifyCompanyDomains();\n        this.getCompanyUserInfo();\n        this.getDropdownUsers();\n        this.getCompanyStatus = PromiseStatus.complete;\n        notifySuccess('Company successfully updated');\n      })\n      .catch((error: Error) => {\n        this.getCompanyStatus = PromiseStatus.error;\n        notifyError(error);\n      });\n  }\n\n  @action.bound\n  async verifyUserEmail(user: UserDTO) {\n    try {\n      const activated = await client.activateAccountUsingGET({\n        key: user.activationKey,\n        login: user.login,\n      });\n      const updatedUser = {\n        ...user,\n        activated,\n        activationKey: '',\n        emailVerified: true,\n      };\n      const oldUserIndex = this.companyUsers.findIndex(u => u.id === user.id);\n      this.companyUsers.splice(oldUserIndex, 1, updatedUser);\n      notifySuccess('User email verified');\n    } catch (error) {\n      return notifyError(error);\n    }\n  }\n\n  @action.bound\n  showConfirmModal(event: any, value: any) {\n    this.formValues = value;\n    // Show warnings when license status is being changed and there are company users\n    if (\n      this.company.licenseStatus !== this.selectedLicenseStatus &&\n      this.companyUsers.length > 0\n    ) {\n      this.showLicenseChangeModal = true;\n      this.confirmLicenseChangeModalText =\n        LICENSE_STATUS_UPDATE_MESSAGES[this.company.licenseStatus][\n          this.selectedLicenseStatus\n        ];\n    } else {\n      this.updateCompany();\n    }\n  }\n\n  @action.bound\n  selectRelatedUsers() {\n    this.selectedUsersOptions = [];\n    this.selectedUsersOptions = this.dropDownUsers.filter(user =>\n      this.company.companyDomains.includes(user.label.split('@').pop() || '')\n    );\n  }\n\n  @action.bound\n  removeUserFromCompany(userToRemove: UserDTO) {\n    this.companyUsers = this.companyUsers.filter(\n      user => user.email !== userToRemove.email\n    );\n    this.dropDownUsers.push({\n      label: userToRemove.email,\n      value: userToRemove.email,\n    });\n  }\n\n  @action.bound\n  updateCompanyUser(updatedUser: UserDTO) {\n    this.companyUsers[\n      this.companyUsers.findIndex(u => u.id === updatedUser.id)\n    ] = updatedUser;\n  }\n\n  @action\n  verifyCompanyDomains() {\n    if (this.company.licenseModel !== LicenseModel.FULL) {\n      this.conflictingDomains = [];\n      return;\n    }\n    client\n      .verifyCompanyDomainUsingPOST({\n        names: Array.from(this.company.companyDomains),\n        companyId: this.company.id,\n      })\n      .then(\n        conflictingDomains =>\n          (this.conflictingDomains = conflictingDomains.map(\n            domainDTO => domainDTO.name\n          ))\n      )\n      .catch((error: Error) => notifyError(error));\n  }\n\n  @computed\n  // Certain license status changes are not valid, so we hide those options\n  get licenseStatusOptions() {\n    const hideOptions = [LicenseStatus.UNKNOWN]; // For now, we are hiding the UNKNOWN status\n    switch (this.company.licenseStatus) {\n      case LicenseStatus.REGULAR:\n        hideOptions.push(LicenseStatus.TRIAL_EXPIRED);\n        break;\n      case LicenseStatus.TRIAL_EXPIRED:\n        hideOptions.push(LicenseStatus.EXPIRED);\n        break;\n      case LicenseStatus.EXPIRED:\n        hideOptions.push(LicenseStatus.TRIAL_EXPIRED);\n        break;\n      default:\n    }\n    return COMPANY_FORM_OPTIONS.licenseStatus.filter(\n      option => !hideOptions.includes(option.value)\n    );\n  }\n\n  @computed\n  get licenseChangeModalBody() {\n    return (\n      <>\n        <div>\n          Are you sure you want to change the company's license status from{' '}\n          <span className=\"font-weight-bold\">{this.company.licenseStatus}</span>{' '}\n          to{' '}\n          <span className=\"font-weight-bold\">{this.selectedLicenseStatus}</span>\n          ?\n        </div>\n        <Alert variant={'warning'} style={{ marginTop: '20px' }}>\n          Warning: {this.confirmLicenseChangeModalText}\n        </Alert>\n      </>\n    );\n  }\n\n  @computed\n  get companyUserDownloadData() {\n    const userData = this.companyUsers.map(\n      ({\n        createdDate,\n        email,\n        jobTitle,\n        firstName,\n        lastName,\n        activated,\n        authorities,\n      }) => ({\n        createdDate: toAppLocalDateFormat(createdDate),\n        firstName,\n        lastName,\n        jobTitle,\n        email,\n        status: activated ? 'Activated' : 'Inactivated',\n        profiles: authorities,\n      })\n    );\n    const blob = new Blob([convertObjectArrayToDelimitedString(userData)]);\n    return blob;\n  }\n\n  readonly users = remoteData<UserOverviewUsage[]>({\n    await: () => [],\n    invoke: async () => {\n      return await client.userOverviewUsageGetUsingGET({\n        companyId: this.company.id,\n      });\n    },\n    default: [],\n  });\n\n  @autobind\n  @action\n  handleResourcesTypeToggleChange(value: ToggleValue) {\n    this.resourcesTypeToggleValue = value;\n  }\n\n  @action.bound\n  extendTrialAccess(newDate: string) {\n    Promise.all(\n      this.trialTokens.map(token => {\n        client\n          .updateTokenUsingPUT({\n            token: {\n              ...token,\n              expiration: newDate,\n            },\n          })\n          .then(\n            () => {},\n            (error: Error) => {\n              notifyError(error);\n            }\n          );\n      })\n    ).then(\n      () => {\n        this.getCompanyUserTokens().then(\n          tokens => {\n            this.companyUserTokens = tokens;\n            notifySuccess(`Extended all users' trial access to ${newDate}`);\n          },\n          error => notifyError(error)\n        );\n      },\n      error => notifyError(error)\n    );\n  }\n\n  @computed\n  get trialTokens() {\n    return this.companyUserTokens.filter(token => !token.renewable);\n  }\n\n  @computed\n  get companyHasTrialUsers() {\n    return this.trialTokens.length > 0;\n  }\n\n  render() {\n    return (\n      <If condition={this.getCompanyStatus === PromiseStatus.pending}>\n        <Then>\n          <LoadingIndicator isLoading={true} />\n        </Then>\n        <Else>\n          <If condition={this.getCompanyStatus === PromiseStatus.error}>\n            <Then>\n              <Alert variant={'danger'}>\n                Error loading company information.\n              </Alert>\n            </Then>\n            <Else>\n              {this.getCompanyStatus === PromiseStatus.complete && (\n                <DocumentTitle title={getPageTitle(this.company.name)}>\n                  <>\n                    <Row className={getSectionClassName()}>\n                      <Col>\n                        <div>Quick Tools</div>\n                        <div>\n                          <QuickToolButton>\n                            <Link\n                              to={`/companies/${this.company.id}/create-users`}\n                            >\n                              Create Company Users\n                            </Link>\n                          </QuickToolButton>\n                          {this.companyHasTrialUsers && (\n                            <DefaultTooltip\n                              overlay={\n                                <DateSelector\n                                  afterChangeDate={this.extendTrialAccess}\n                                />\n                              }\n                            >\n                              <QuickToolButton>\n                                Extend Trial Access\n                              </QuickToolButton>\n                            </DefaultTooltip>\n                          )}\n                        </div>\n                      </Col>\n                    </Row>\n                    <AvForm\n                      onValidSubmit={this.showConfirmModal}\n                      onKeyPress={(event: any) => {\n                        if (event.which === 13) {\n                          event.preventDefault();\n                        }\n                      }}\n                    >\n                      <Row className={getSectionClassName()}>\n                        <Col>\n                          <AvField\n                            name=\"companyId\"\n                            value={this.company.id}\n                            label={\n                              <span className=\"font-weight-bold\">\n                                Company ID\n                              </span>\n                            }\n                            disabled\n                          />\n                          <AvField\n                            name=\"companyName\"\n                            value={this.company.name}\n                            label={\n                              <span className=\"font-weight-bold\">\n                                Company Name\n                              </span>\n                            }\n                            validate={{\n                              ...fieldRequiredValidation('company name'),\n                              ...textValidation(1, 100),\n                              async: (\n                                value: string,\n                                ctx: any,\n                                input: any,\n                                cb: (isValid: boolean | string) => void\n                              ) => {\n                                if (this.company.name !== value) {\n                                  debouncedCompanyNameValidator(\n                                    value,\n                                    ctx,\n                                    input,\n                                    cb,\n                                    this.company.id\n                                  );\n                                } else {\n                                  cb(true);\n                                }\n                              },\n                            }}\n                          />\n                          <FormTextAreaField\n                            label=\"Company Description\"\n                            value={this.company.description}\n                            onTextAreaChange={(event: any) =>\n                              (this.company.description = event.target.value)\n                            }\n                            boldLabel\n                          />\n                          <FormSelectWithLabelField\n                            labelText={'Company Type'}\n                            name={'companyType'}\n                            defaultValue={{\n                              value: this.company.companyType,\n                              label:\n                                COMPANY_TYPE_TITLES[this.company.companyType],\n                            }}\n                            options={COMPANY_FORM_OPTIONS.companyType}\n                            onSelection={(selectedOption: any) =>\n                              (this.company.companyType = selectedOption.value)\n                            }\n                            boldLabel\n                          />\n                        </Col>\n                      </Row>\n                      <Row className={getSectionClassName()}>\n                        <Col>\n                          <AvField\n                            name=\"businessContact\"\n                            value={this.company.businessContact}\n                            label={\n                              <span className=\"font-weight-bold\">\n                                Business Contact\n                              </span>\n                            }\n                            validate={{ ...textValidation(0, 255) }}\n                          />\n                          <AvField\n                            name=\"legalContact\"\n                            value={this.company.legalContact}\n                            label={\n                              <span className=\"font-weight-bold\">\n                                Legal Contact\n                              </span>\n                            }\n                            validate={{ ...textValidation(0, 255) }}\n                          />\n                          <div className=\"form-group\">\n                            <div className={'font-weight-bold'}>\n                              License Model\n                            </div>\n                            <AdditionalInfoSelect\n                              name={'licenseModel'}\n                              defaultValue={{\n                                value: this.company.licenseModel,\n                                label:\n                                  LICENSE_MODEL_TITLES[\n                                    this.company.licenseModel\n                                  ],\n                              }}\n                              options={COMPANY_FORM_OPTIONS.licenseModel}\n                              onSelection={(selectedOption: any) => {\n                                this.company.licenseModel =\n                                  selectedOption.value;\n                              }}\n                            />\n                          </div>\n                          <FormSelectWithLabelField\n                            labelText={'License Type'}\n                            name={'licenseType'}\n                            defaultValue={{\n                              value: this.company.licenseType,\n                              label: LICENSE_TITLES[this.company.licenseType],\n                            }}\n                            options={COMPANY_FORM_OPTIONS.licenseType}\n                            onSelection={(selectedOption: any) =>\n                              (this.company.licenseType = selectedOption.value)\n                            }\n                            boldLabel\n                          />\n                          <FormSelectWithLabelField\n                            labelText={'License Status'}\n                            name={'licenseStatus'}\n                            defaultValue={{\n                              value: this.selectedLicenseStatus,\n                              label:\n                                LICENSE_STATUS_TITLES[\n                                  this.selectedLicenseStatus\n                                ],\n                            }}\n                            options={this.licenseStatusOptions}\n                            onSelection={(selectedOption: any) =>\n                              (this.selectedLicenseStatus =\n                                selectedOption.value)\n                            }\n                            boldLabel\n                          />\n                        </Col>\n                      </Row>\n                      <Row className={getSectionClassName()}>\n                        <Col>\n                          <div className=\"form-group\">\n                            <div>\n                              <span className={'font-weight-bold'}>\n                                Company Users\n                              </span>\n                              {this.companyUsers.length > 0 ? (\n                                <DownloadButton\n                                  className={'ml-2 btn-sm'}\n                                  href={window.URL.createObjectURL(\n                                    this.companyUserDownloadData\n                                  )}\n                                  download={`${this.company.name\n                                    .toLowerCase()\n                                    .split(' ')\n                                    .join('_')}_users.tsv`}\n                                >\n                                  Users\n                                </DownloadButton>\n                              ) : undefined}\n                            </div>\n                            <UserTable\n                              data={this.companyUsers}\n                              usersTokens={this.companyUserTokens}\n                              onRemoveUser={this.removeUserFromCompany}\n                              onUpdateUser={this.updateCompanyUser}\n                              onVerifyUserEmail={this.verifyUserEmail}\n                              licenseStatus={\n                                this.company.licenseStatus as LicenseStatus\n                              }\n                              loading={\n                                this.getCompanyUsersStatus !==\n                                PromiseStatus.complete\n                              }\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <div className={'mb-2 font-weight-bold'}>\n                              License Model\n                            </div>\n                            <AdditionalInfoSelect\n                              name={'licenseModel'}\n                              defaultValue={{\n                                value: this.company.licenseModel,\n                                label:\n                                  LICENSE_MODEL_TITLES[\n                                    this.company.licenseModel\n                                  ],\n                              }}\n                              options={COMPANY_FORM_OPTIONS.licenseModel}\n                              onSelection={(selectedOption: any) => {\n                                this.company.licenseModel =\n                                  selectedOption.value;\n                                this.verifyCompanyDomains();\n                              }}\n                            />\n                          </div>\n                          <FormListField\n                            list={this.company.companyDomains}\n                            addItem={(domain: string) => {\n                              this.company.companyDomains.push(domain);\n                              this.verifyCompanyDomains();\n                            }}\n                            deleteItem={(domain: string) => {\n                              this.company.companyDomains = this.company.companyDomains.filter(\n                                domainName => domainName !== domain\n                              );\n                              this.conflictingDomains = this.conflictingDomains.filter(\n                                domainName => domainName !== domain\n                              );\n                            }}\n                            labelText={'Company Domains'}\n                            placeholder={\n                              'Include at least one domain. ie) oncokb.org'\n                            }\n                            conflictingItems={this.conflictingDomains}\n                            boldLabel\n                          />\n                          {this.conflictingDomains.length > 0 ? (\n                            <Alert variant=\"warning\">\n                              <i\n                                className={'mr-2 fa fa-exclamation-triangle'}\n                              />\n                              <span>\n                                The domains highlighted in yellow are associated\n                                with another regular tiered company.\n                              </span>\n                            </Alert>\n                          ) : null}\n                          <div className=\"form-group\">\n                            <div className={'font-weight-bold mb-2'}>\n                              Add Users to Company\n                            </div>\n                            <div style={{ display: 'flex' }}>\n                              <div style={{ flex: '1' }}>\n                                <Select\n                                  isMulti\n                                  closeMenuOnSelect={false}\n                                  hideSelectedOptions\n                                  value={this.selectedUsersOptions.map(u => u)}\n                                  options={this.dropDownUsers.map(u => u)}\n                                  onChange={(selectedOptions: any) => {\n                                    this.selectedUsersOptions = selectedOptions\n                                      ? selectedOptions\n                                      : [];\n                                  }}\n                                  maxMenuHeight={200}\n                                  isLoading={\n                                    this.getDropdownUsersStatus !==\n                                    PromiseStatus.complete\n                                  }\n                                />\n                              </div>\n                              <div\n                                style={{\n                                  display: 'flex',\n                                  justifyContent: 'center',\n                                  alignItems: 'center',\n                                  margin: '0 20px',\n                                }}\n                                className=\"font-weight-bold\"\n                              >\n                                or\n                              </div>\n                              <div>\n                                <DefaultTooltip\n                                  placement={'top'}\n                                  overlay={`Select all users whose email addresses matches the company's domain(s).`}\n                                >\n                                  <Button onClick={this.selectRelatedUsers}>\n                                    Add All Related Users\n                                  </Button>\n                                </DefaultTooltip>\n                              </div>\n                            </div>\n                          </div>\n                        </Col>\n                      </Row>\n                      <Row className={getSectionClassName()}>\n                        <Col>\n                          <div className={'font-weight-bold'}>\n                            Company Data Usage\n                          </div>\n                          <div className=\"mt-2\">\n                            <OncoKBTable\n                              data={this.users.result}\n                              columns={[\n                                {\n                                  id: 'userEmail',\n                                  Header: emailHeader,\n                                  accessor: 'userEmail',\n                                  minWidth: 200,\n                                  onFilter: (\n                                    data: UserOverviewUsage,\n                                    keyword\n                                  ) => filterByKeyword(data.userEmail, keyword),\n                                },\n                                {\n                                  id: 'totalUsage',\n                                  Header: usageHeader,\n                                  minWidth: 100,\n                                  accessor: 'totalUsage',\n                                  Cell(props: { original: UserOverviewUsage }) {\n                                    return (\n                                      <UsageText\n                                        usage={props.original.totalUsage}\n                                      />\n                                    );\n                                  },\n                                },\n                                this.resourcesTypeToggleValue ===\n                                ToggleValue.ALL_RESOURCES\n                                  ? {\n                                      id: 'endpoint',\n                                      Header: endpointHeader,\n                                      minWidth: 200,\n                                      accessor: 'endpoint',\n                                      onFilter: (\n                                        data: UserOverviewUsage,\n                                        keyword\n                                      ) =>\n                                        filterByKeyword(data.endpoint, keyword),\n                                    }\n                                  : {\n                                      id: 'noPrivateEndpoint',\n                                      Header: noPrivateEndpointHeader,\n                                      minWidth: 200,\n                                      accessor: 'noPrivateEndpoint',\n                                      onFilter: (\n                                        data: UserOverviewUsage,\n                                        keyword\n                                      ) =>\n                                        filterByKeyword(\n                                          data.noPrivateEndpoint,\n                                          keyword\n                                        ),\n                                    },\n                                {\n                                  ...getUsageTableColumnDefinition(\n                                    UsageTableColumnKey.OPERATION\n                                  ),\n                                  sortable: false,\n                                  className: 'd-flex justify-content-center',\n                                  Cell(props: { original: UserOverviewUsage }) {\n                                    return (\n                                      <Link\n                                        to={`${PAGE_ROUTE.ADMIN_USER_USAGE_DETAILS_LINK}${props.original.userId}`}\n                                      >\n                                        <i className=\"fa fa-info-circle\"></i>\n                                      </Link>\n                                    );\n                                  },\n                                },\n                              ]}\n                              loading={this.users.isPending}\n                              defaultSorted={[\n                                {\n                                  id: 'totalUsage',\n                                  desc: true,\n                                },\n                              ]}\n                              showPagination={true}\n                              minRows={1}\n                              defaultPageSize={5}\n                              filters={() => {\n                                return (\n                                  <Row>\n                                    <UsageToggleGroup\n                                      defaultValue={\n                                        this.resourcesTypeToggleValue\n                                      }\n                                      toggleValues={[\n                                        ToggleValue.ALL_RESOURCES,\n                                        ToggleValue.PUBLIC_RESOURCES,\n                                      ]}\n                                      handleToggle={\n                                        this.handleResourcesTypeToggleChange\n                                      }\n                                    />\n                                  </Row>\n                                );\n                              }}\n                            />\n                          </div>\n                        </Col>\n                      </Row>\n                      <Row className={getSectionClassName()}>\n                        <Col>\n                          <Button\n                            id=\"update-company\"\n                            variant=\"primary\"\n                            type=\"submit\"\n                          >\n                            Update Company\n                          </Button>\n                        </Col>\n                      </Row>\n                    </AvForm>\n                    <SimpleConfirmModal\n                      show={this.showLicenseChangeModal}\n                      title={'Review Company Changes'}\n                      body={this.licenseChangeModalBody}\n                      onCancel={() => (this.showLicenseChangeModal = false)}\n                      onConfirm={this.updateCompany}\n                    />\n                  </>\n                </DocumentTitle>\n              )}\n            </Else>\n          </If>\n        </Else>\n      </If>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport processImg from 'content/images/process.png';\nimport AppStore from 'app/store/AppStore';\nimport { inject, observer } from 'mobx-react';\nimport { CitationText } from 'app/components/CitationText';\nimport { Link } from 'react-router-dom';\nimport {\n  BILIBILI_VIDEO_IDS,\n  LEVEL_TYPES,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n  PAGE_TITLE,\n  YOUTUBE_VIDEO_IDS,\n} from 'app/config/constants';\nimport DocumentTitle from 'react-document-title';\nimport { IReactionDisposer, observable } from 'mobx';\nimport Tabs from 'react-responsive-tabs';\nimport Iframe from 'react-iframe';\nimport { RouterStore } from 'mobx-react-router';\nimport {\n  getBilibiliLink,\n  getPageTitle,\n  getYouTubeLink,\n} from 'app/shared/utils/Utils';\nimport OptimizedImage from 'app/shared/image/OptimizedImage';\nimport { LevelOfEvidencePageLink } from 'app/shared/links/LevelOfEvidencePageLink';\n\ntype AboutPageProps = { appStore: AppStore; routing: RouterStore };\n\nenum VIDEO_TAB_EKY {\n  INTRO = 'INTRO',\n  DEMO = 'DEMO',\n  TUTORIALS = 'TUTORIALS',\n}\n\n@inject('appStore', 'routing')\n@observer\nexport class AboutPage extends React.Component<AboutPageProps> {\n  @observable selectedVideoTabKey: VIDEO_TAB_EKY = VIDEO_TAB_EKY.INTRO;\n\n  readonly reactions: IReactionDisposer[] = [];\n\n  constructor(props: AboutPageProps) {\n    super(props);\n  }\n\n  componentWillUnmount() {\n    this.reactions.forEach(componentReaction => componentReaction());\n  }\n\n  private getTabIframe = (link: string) => (\n    <Iframe\n      width=\"100%\"\n      height=\"300\"\n      url={link}\n      frameBorder={0}\n      allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n    ></Iframe>\n  );\n\n  private getTutorialTabs = (links: { youTube: string; bilibili: string }) => [\n    {\n      title: 'YouTube.com',\n      getContent: () => this.getTabIframe(links.youTube),\n      key: 'youtube',\n    },\n    {\n      title: 'bilibili.com',\n      getContent: () => this.getTabIframe(links.bilibili),\n      key: 'bilibili',\n    },\n  ];\n\n  getVideoTabs = () => [\n    {\n      title: 'Intro',\n      getContent: () =>\n        this.getTabIframe(getYouTubeLink('embed', YOUTUBE_VIDEO_IDS.INTRO)),\n      key: VIDEO_TAB_EKY.INTRO,\n    },\n    {\n      title: 'Demo',\n      getContent: () =>\n        this.getTabIframe(\n          getYouTubeLink('embed', YOUTUBE_VIDEO_IDS.INTRO_LONG)\n        ),\n      key: VIDEO_TAB_EKY.DEMO,\n    },\n    {\n      title: 'Tutorials',\n      getContent: () => {\n        return (\n          <div>\n            <h5>Webinar #1: Introduction to {ONCOKB_TM}</h5>\n            <Tabs\n              items={this.getTutorialTabs({\n                youTube: getYouTubeLink(\n                  'embed',\n                  YOUTUBE_VIDEO_IDS.WEBINAR_INTRO\n                ),\n                bilibili: getBilibiliLink(BILIBILI_VIDEO_IDS.WEBINAR_INTRO),\n              })}\n              transform={false}\n            />\n\n            <h5 className={'mt-3'}>\n              Webinar #2: Introduction to {ONCOKB_TM} Web API\n            </h5>\n            <Tabs\n              items={this.getTutorialTabs({\n                youTube: getYouTubeLink('embed', YOUTUBE_VIDEO_IDS.WEBINAR_API),\n                bilibili: getBilibiliLink(BILIBILI_VIDEO_IDS.WEBINAR_API),\n              })}\n              transform={false}\n            />\n          </div>\n        );\n      },\n      key: VIDEO_TAB_EKY.TUTORIALS,\n    },\n  ];\n\n  render() {\n    return (\n      <DocumentTitle title={getPageTitle(PAGE_TITLE.ABOUT)}>\n        <>\n          <Row>\n            <Col md={6} xs={12}>\n              <h2 className={'mt-1'}>About {ONCOKB_TM}</h2>\n              <p className={'mt-3'}>\n                {ONCOKB_TM} is a precision oncology knowledge base developed at\n                Memorial Sloan Kettering Cancer Center that contains biological\n                and clinical information about genomic alterations in cancer.\n              </p>\n              <p>\n                Alteration- and tumor type-specific therapeutic implications are\n                classified using the{' '}\n                <LevelOfEvidencePageLink levelType={LEVEL_TYPES.TX}>\n                  {ONCOKB_TM} Levels of Evidence\n                </LevelOfEvidencePageLink>{' '}\n                system, which assigns clinical actionability to individual\n                mutational events.\n              </p>\n              <p>\n                For additional details about the {ONCOKB_TM} curation process,\n                please refer to the version-controlled{' '}\n                <Link to={PAGE_ROUTE.SOP}>\n                  {ONCOKB_TM} Curation Standard Operating Procedure\n                </Link>\n                . <CitationText />\n              </p>\n            </Col>\n            <Col md={6} xs={12}>\n              <Tabs\n                transform={false}\n                items={this.getVideoTabs()}\n                selectedTabKey={this.selectedVideoTabKey}\n                onChange={(tabKey: VIDEO_TAB_EKY) => {\n                  this.selectedVideoTabKey = tabKey;\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div className={'mt-2'}>\n                <OptimizedImage src={processImg} style={{ width: '100%' }} />\n                <div className={'text-center'}>\n                  <h5>Overview of {ONCOKB_TM} Process</h5>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </>\n      </DocumentTitle>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"content/process.png\";","import React from 'react';\nimport { COILinkout } from 'app/pages/teamPage/COILinkout';\n\nexport enum TITLE {\n  MD = 'MD',\n  PHD = 'PhD',\n  MSC = 'MSc',\n  MPA = 'MPA',\n  FACP = 'FACP',\n  FRCPC = 'FRCPC',\n  BSC = 'BSc',\n  BA = 'BA',\n  MPH = 'MPH',\n}\n\nexport enum INSTITUTION {\n  MDANDERSON = 'MD Anderson Cancer Center',\n  DFCI = 'Dana-Farber Cancer Institute',\n  PRINCE = 'Princess Margaret Cancer Centre',\n  JH = 'Johns Hopkins University',\n}\n\nexport type ITeamMember = {\n  lastName: string;\n  middleName?: string;\n  firstName: string;\n  institution?: string;\n  faculty?: boolean;\n  showCOI?: boolean;\n  title?: TITLE[];\n};\n\nexport enum MEMBER_TYPE {\n  CORE = 'core',\n  CURATOR = 'curator',\n  CGAC = 'cgac',\n  EAB = 'eab',\n}\n\nexport type IPastMember = { type: MEMBER_TYPE } & {\n  lastName: string;\n  middleName?: string;\n  firstName: string;\n  institution?: string;\n  faculty?: boolean;\n  showCOI?: boolean;\n  title?: TITLE[];\n};\nexport const TeamMember: React.FunctionComponent<ITeamMember> = props => {\n  let name = `${props.firstName} ${\n    props.middleName ? `${props.middleName[0].toUpperCase()}. ` : ''\n  }${props.lastName}`;\n  if (props.title) {\n    name = `${name}, ${props.title.join(', ')}`;\n  }\n  return (\n    <div>\n      <div>\n        {name}{' '}\n        {props.showCOI ? (\n          <>\n            {' '}\n            <COILinkout\n              lastName={props.lastName}\n              firstName={props.firstName}\n              faculty={props.faculty}\n            />\n          </>\n        ) : null}\n      </div>\n      {props.institution ? (\n        <div className={'mb-2'} style={{ fontSize: '0.9rem' }}>\n          <i>{props.institution}</i>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Linkout } from 'app/shared/links/Linkout';\nimport {\n  FACULTY_COI_WEBSITE_LINK,\n  NONE_FACULTY_COI_WEBSITE_LINK,\n} from 'app/config/constants';\n\nexport const COILinkout: React.FunctionComponent<{\n  firstName: string;\n  lastName: string;\n  faculty?: boolean;\n}> = props => {\n  const link = props.faculty\n    ? `${FACULTY_COI_WEBSITE_LINK}?title=${props.lastName}, ${props.firstName}`\n    : NONE_FACULTY_COI_WEBSITE_LINK;\n  return (\n    <Linkout link={link}>\n      <span style={{ fontSize: '0.7rem' }}>\n        <i>COIs</i>\n        <i className={'fa fa-external-link ml-1'}></i>\n      </span>\n    </Linkout>\n  );\n};\n","import * as React from 'react';\nimport { Row, Col, Tab, Nav } from 'react-bootstrap';\nimport AppStore from 'app/store/AppStore';\nimport { inject, observer } from 'mobx-react';\nimport { ONCOKB_TM, PAGE_ROUTE, PAGE_TITLE } from 'app/config/constants';\nimport { observable, IReactionDisposer, reaction, computed } from 'mobx';\nimport { RouterStore } from 'mobx-react-router';\nimport { AboutPage } from 'app/pages/AboutPage';\nimport { TeamPage } from 'app/pages/teamPage/TeamPage';\nimport Iframe from 'react-iframe';\nimport FdaRecognitionPage from 'app/pages/aboutGroup/FdaRecognitionPage';\nimport { YearEndSummaryPage } from 'app/pages/yearEndSummaryPage/YearEndSummaryPage';\nimport { LocationDescriptorObject } from 'history';\nimport classnames from 'classnames';\nimport DocumentTitle from 'react-document-title';\nimport { getPageTitle } from 'app/shared/utils/Utils';\n\ntype AboutPageNavTabProps = { appStore: AppStore; routing: RouterStore };\n\nexport enum TabKey {\n  ABOUT = PAGE_ROUTE.ABOUT,\n  TEAM = PAGE_ROUTE.TEAM,\n  FDA_RECOGNITION = PAGE_ROUTE.FDA_RECOGNITION,\n  SOP = PAGE_ROUTE.SOP,\n  YEAR_END_SUMMARY = PAGE_ROUTE.YEAR_END_SUMMARY,\n}\n\nexport const YEAR_END_SUMMARY_RANGE = ['2022'] as const;\nconst YEAR_END_SUMMARY_KEY_DIVIDER = '+';\n\n@inject('appStore', 'routing')\n@observer\nexport class AboutPageNavTab extends React.Component<AboutPageNavTabProps> {\n  readonly reactions: IReactionDisposer[] = [];\n\n  @observable selectedTab: string = TabKey.ABOUT.toString();\n\n  constructor(props: AboutPageNavTabProps) {\n    super(props);\n    reaction(\n      () => this.selectedTab,\n      newSelectedTab => {\n        this.props.routing.history.push(\n          this.getHistoryBySelectedTab(newSelectedTab)\n        );\n      }\n    ),\n      reaction(\n        () => [props.routing.location.pathname],\n        ([pathName]) => {\n          const lowerCasePathName = pathName.toLowerCase();\n          if (\n            lowerCasePathName.startsWith(PAGE_ROUTE.YEAR_END_SUMMARY) &&\n            props.routing.location.hash\n          ) {\n            const year = props.routing.location.hash.slice(1);\n            this.selectedTab = this.getYearEndSummaryEventKey(year);\n          } else if (Object.keys(TabKey).includes(lowerCasePathName)) {\n            this.selectedTab = lowerCasePathName;\n          }\n        },\n        { fireImmediately: true }\n      );\n  }\n\n  @computed\n  get inYearEndSummarySection() {\n    return this.selectedTab.startsWith(PAGE_ROUTE.YEAR_END_SUMMARY);\n  }\n\n  getHistoryBySelectedTab(newSelectedTab: string): LocationDescriptorObject {\n    if (newSelectedTab.startsWith(PAGE_ROUTE.YEAR_END_SUMMARY)) {\n      const location: LocationDescriptorObject = {\n        pathname: PAGE_ROUTE.YEAR_END_SUMMARY,\n      };\n      const year = this.parseYearEndSummaryEventKey(newSelectedTab);\n      if (year !== undefined) {\n        location.hash = `#${year}`;\n      }\n      return location;\n    } else {\n      return {\n        pathname: newSelectedTab,\n      };\n    }\n  }\n\n  getYearEndSummaryEventKey(year: string | undefined) {\n    return `${TabKey.YEAR_END_SUMMARY}${\n      year ? YEAR_END_SUMMARY_KEY_DIVIDER + year : ''\n    }`;\n  }\n\n  parseYearEndSummaryEventKey(eventKey: string): string | undefined {\n    const components = eventKey.split(YEAR_END_SUMMARY_KEY_DIVIDER);\n    if (components.length <= 1) {\n      return undefined;\n    } else {\n      return components[1];\n    }\n  }\n\n  componentWillUnmount() {\n    this.reactions.forEach(componentReaction => componentReaction());\n  }\n\n  render() {\n    return (\n      <>\n        <Tab.Container\n          id=\"about-page-nav-tabs\"\n          activeKey={this.selectedTab}\n          unmountOnExit\n          onSelect={(selectedTab: string) => {\n            this.selectedTab = selectedTab as any;\n          }}\n        >\n          <Row>\n            <Col sm={2}>\n              <Nav\n                variant=\"pills\"\n                className={classnames(\n                  'flex-column',\n                  'sticky-top',\n                  'sticky-panel-relevant-to-header'\n                )}\n              >\n                <Nav.Item>\n                  <Nav.Link eventKey={TabKey.ABOUT}>About</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={TabKey.TEAM}>Team</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={TabKey.FDA_RECOGNITION}>\n                    FDA Recognition\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={TabKey.SOP}>SOP</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={TabKey.YEAR_END_SUMMARY}>\n                    {PAGE_TITLE.YEAR_END_SUMMARY}\n                  </Nav.Link>\n                </Nav.Item>\n                {this.inYearEndSummarySection &&\n                  YEAR_END_SUMMARY_RANGE.map(year => {\n                    const key = this.getYearEndSummaryEventKey(year);\n                    return (\n                      <Nav.Item key={key}>\n                        <Nav.Link eventKey={key}>{year}</Nav.Link>\n                      </Nav.Item>\n                    );\n                  })}\n              </Nav>\n            </Col>\n            <Col sm={10}>\n              <Tab.Content>\n                <Tab.Pane eventKey={TabKey.ABOUT}>\n                  <AboutPage\n                    appStore={this.props.appStore}\n                    routing={this.props.routing}\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey={TabKey.TEAM}>\n                  <TeamPage />\n                </Tab.Pane>\n                <Tab.Pane eventKey={TabKey.FDA_RECOGNITION}>\n                  <FdaRecognitionPage />\n                </Tab.Pane>\n                <Tab.Pane eventKey={TabKey.SOP}>\n                  <DocumentTitle title={getPageTitle(PAGE_TITLE.SOP)}>\n                    <div>\n                      <div style={{ marginTop: '-5px' }}>\n                        <Iframe\n                          width=\"100%\"\n                          height=\"1000px\"\n                          url=\"https://sop.oncokb.org\"\n                          frameBorder={0}\n                          allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n                          allowFullScreen\n                        />\n                      </div>\n                      <h2 style={{ position: 'absolute', top: 0 }}>\n                        {ONCOKB_TM} Standard Operating Procedure\n                      </h2>\n                    </div>\n                  </DocumentTitle>\n                </Tab.Pane>\n                <Tab.Pane\n                  eventKey={TabKey.YEAR_END_SUMMARY}\n                  key={TabKey.YEAR_END_SUMMARY}\n                  unmountOnExit\n                >\n                  <YearEndSummaryPage />\n                </Tab.Pane>\n                {this.inYearEndSummarySection &&\n                  YEAR_END_SUMMARY_RANGE.map(year => {\n                    const key = this.getYearEndSummaryEventKey(year);\n                    return (\n                      <Tab.Pane eventKey={key} key={key} unmountOnExit>\n                        <YearEndSummaryPage selectedYear={year} />\n                      </Tab.Pane>\n                    );\n                  })}\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport DocumentTitle from 'react-document-title';\nimport _, { memoize } from 'lodash';\nimport { PAGE_TITLE, ONCOKB_TM } from 'app/config/constants';\nimport {\n  INSTITUTION,\n  IPastMember,\n  ITeamMember,\n  MEMBER_TYPE,\n  TeamMember,\n  TITLE,\n} from 'app/pages/teamPage/TeamMember';\nimport { getPageTitle } from 'app/shared/utils/Utils';\nimport { useState } from 'react';\nimport Select from 'react-select';\n\nexport const TeamPage = () => {\n  const teamMembers: ITeamMember[] = [\n    {\n      firstName: 'Debyani',\n      lastName: 'Chakravarty',\n      title: [TITLE.PHD],\n      faculty: true,\n      showCOI: true,\n    },\n    {\n      firstName: 'Sarah',\n      lastName: 'Suehnholz',\n      title: [TITLE.PHD],\n      faculty: false,\n      showCOI: true,\n    },\n    {\n      firstName: 'Hongxin',\n      lastName: 'Zhang',\n      title: [TITLE.MSC],\n      faculty: false,\n      showCOI: true,\n    },\n    {\n      firstName: 'Ritika',\n      lastName: 'Kundra',\n      title: [TITLE.MSC],\n      faculty: false,\n      showCOI: true,\n    },\n    {\n      firstName: 'Moriah',\n      lastName: 'Nissan',\n      title: [TITLE.PHD],\n      faculty: false,\n      showCOI: true,\n    },\n    {\n      firstName: 'Calvin',\n      lastName: 'Lu',\n      title: [TITLE.BSC],\n      faculty: false,\n      showCOI: true,\n    },\n    {\n      firstName: 'Amanda',\n      lastName: 'Dhaneshwar',\n      title: [TITLE.PHD],\n      faculty: false,\n      showCOI: true,\n    },\n    {\n      firstName: 'Nicole',\n      lastName: 'Fernandez',\n      title: [TITLE.MSC],\n      faculty: false,\n      showCOI: true,\n    },\n    {\n      firstName: 'Benjamin',\n      lastName: 'Xu',\n    },\n    {\n      firstName: 'Ederlinda',\n      lastName: 'Paraiso',\n      title: [TITLE.MPA],\n      faculty: false,\n      showCOI: true,\n    },\n    {\n      firstName: 'Julia',\n      lastName: 'Rudolph',\n      title: [TITLE.MPA],\n      faculty: false,\n      showCOI: true,\n    },\n    {\n      firstName: 'David',\n      middleName: 'B',\n      lastName: 'Solit',\n      title: [TITLE.MD],\n      faculty: true,\n      showCOI: true,\n    },\n    {\n      firstName: 'Paul',\n      lastName: 'Sabbatini',\n      title: [TITLE.MD],\n      faculty: true,\n      showCOI: true,\n    },\n    {\n      firstName: 'Nikolaus',\n      lastName: 'Schultz',\n      title: [TITLE.PHD],\n      faculty: true,\n      showCOI: true,\n    },\n  ];\n  const curators: ITeamMember[] = [];\n  const cgac: ITeamMember[] = _.sortBy(\n    [\n      {\n        firstName: 'Lisa',\n        middleName: 'M',\n        lastName: 'DeAngelis',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Marc',\n        lastName: 'Ladanyi',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Ross',\n        middleName: 'L',\n        lastName: 'Levine',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Michael',\n        middleName: 'F',\n        lastName: 'Berger',\n        title: [TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Maria',\n        middleName: 'E',\n        lastName: 'Arcila',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Ahmet',\n        lastName: 'Dogan',\n        title: [TITLE.MD, TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Sarat',\n        lastName: 'Chandarlapaty',\n        title: [TITLE.MD, TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Ping',\n        lastName: 'Chi',\n        title: [TITLE.MD, TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Rona',\n        lastName: 'Yaeger',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Wassim',\n        lastName: 'Abida',\n        title: [TITLE.MD, TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Alexander',\n        lastName: 'Drilon',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Diana',\n        lastName: 'Mandelker',\n        title: [TITLE.MD, TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Alison',\n        lastName: 'Schram',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Santosha',\n        lastName: 'Vardhana',\n        title: [TITLE.MD, TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Carol',\n        lastName: 'Aghajanian',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Daniel',\n        middleName: 'C',\n        lastName: 'Danila',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Eli',\n        middleName: 'L',\n        lastName: 'Diamond',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'James',\n        middleName: 'A',\n        lastName: 'Fagin',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Alan',\n        middleName: 'L',\n        lastName: 'Ho',\n        title: [TITLE.MD, TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Gopa',\n        lastName: 'Iyer',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Komal',\n        lastName: 'Jhaveri',\n        title: [TITLE.MD, TITLE.FACP],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Andrew',\n        lastName: 'Kung',\n        title: [TITLE.MD, TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Kenneth',\n        lastName: 'Offit',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Paul',\n        middleName: 'K',\n        lastName: 'Paik',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'David',\n        middleName: 'G',\n        lastName: 'Pfister',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Jonathan',\n        middleName: 'E',\n        lastName: 'Rosenberg',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Gregory',\n        middleName: 'J',\n        lastName: 'Riely',\n        title: [TITLE.MD, TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Mark',\n        middleName: 'E',\n        lastName: 'Robson',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Leonard',\n        lastName: 'Saltz',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Sohrab',\n        lastName: 'Shah',\n        title: [TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Alexander',\n        middleName: 'N',\n        lastName: 'Shoushtari',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Neerav',\n        middleName: 'N',\n        lastName: 'Shukla',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Zsofia',\n        middleName: 'K',\n        lastName: 'Stadler',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'William',\n        middleName: 'D',\n        lastName: 'Tap',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Martin',\n        middleName: 'H',\n        lastName: 'Voss',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Steven',\n        lastName: 'Maron',\n        title: [TITLE.MD, TITLE.MSC],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'James',\n        middleName: 'J',\n        lastName: 'Harding',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Anna',\n        middleName: 'M',\n        lastName: 'Varghese',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Tejus',\n        middleName: 'A',\n        lastName: 'Bale',\n        title: [TITLE.MD, TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Adrienne',\n        middleName: 'A',\n        lastName: 'Boire',\n        title: [TITLE.MD, TITLE.PHD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Thomas',\n        middleName: 'J',\n        lastName: 'Kaley',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Bob',\n        middleName: 'T',\n        lastName: 'Li',\n        title: [TITLE.MD, TITLE.PHD, TITLE.MPH],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Eileen',\n        middleName: 'M',\n        lastName: \"O'Reilly\",\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n      {\n        firstName: 'Eric',\n        middleName: 'J',\n        lastName: 'Sherman',\n        title: [TITLE.MD],\n        faculty: true,\n        showCOI: true,\n      },\n    ],\n    member => member.lastName\n  );\n  const eab: ITeamMember[] = [\n    {\n      firstName: 'Alexander',\n      middleName: 'J',\n      lastName: 'Lazar',\n      title: [TITLE.MD, TITLE.PHD],\n      institution: INSTITUTION.MDANDERSON,\n      showCOI: true,\n    },\n    {\n      firstName: 'Lillian',\n      middleName: 'L',\n      lastName: 'Siu',\n      title: [TITLE.MD, TITLE.FRCPC],\n      institution: INSTITUTION.PRINCE,\n      showCOI: true,\n    },\n    {\n      firstName: 'Eliezer',\n      lastName: 'Van Allen',\n      title: [TITLE.MD],\n      institution: INSTITUTION.DFCI,\n      showCOI: true,\n    },\n    {\n      firstName: 'Victor',\n      middleName: 'E',\n      lastName: 'Velculescu',\n      title: [TITLE.MD, TITLE.PHD],\n      institution: INSTITUTION.JH,\n      showCOI: true,\n    },\n  ];\n  const pastContributors: IPastMember[] = [\n    {\n      firstName: 'Tripti',\n      lastName: 'Shrestha Bhattarai',\n      title: [TITLE.PHD],\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Fiona',\n      lastName: 'Brown',\n      title: [TITLE.PHD],\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Margaret',\n      lastName: 'Callahan',\n      title: [TITLE.MD, TITLE.PHD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Timothy',\n      middleName: 'A',\n      lastName: 'Chan',\n      title: [TITLE.MD, TITLE.PHD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Luis Alberto',\n      lastName: 'Diaz Jr.',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Renzo',\n      lastName: 'DiNatale',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Mrinal M.',\n      lastName: 'Gounder',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Aphrothiti',\n      lastName: 'Hanrahan',\n      title: [TITLE.PHD],\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Matthew',\n      middleName: 'D',\n      lastName: 'Hellmann',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Anton',\n      lastName: 'Henssen',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'David',\n      lastName: 'Hyman',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Edgar',\n      middleName: 'A',\n      lastName: 'Jaimes',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Phillip',\n      lastName: 'Jonsson',\n      title: [TITLE.PHD],\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'David',\n      lastName: 'Knorr',\n      title: [TITLE.MD, TITLE.PHD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Iñigo',\n      lastName: 'Landa-Lopez',\n      title: [TITLE.PHD],\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'C. Ola',\n      lastName: 'Landgren',\n      title: [TITLE.MD, TITLE.PHD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Dana',\n      middleName: 'E',\n      lastName: 'Rathkopf',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Howard',\n      middleName: 'I',\n      lastName: 'Scher',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Neel',\n      lastName: 'Shah',\n      title: [TITLE.PHD],\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Tara',\n      lastName: 'Soumerai',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Jing',\n      lastName: 'Su',\n      title: [TITLE.MSC],\n      type: MEMBER_TYPE.CORE,\n    },\n    {\n      firstName: 'William',\n      middleName: 'D',\n      lastName: 'Tap',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Barry',\n      middleName: 'S',\n      lastName: 'Taylor',\n      title: [TITLE.PHD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Eneda',\n      lastName: 'Toska',\n      title: [TITLE.PHD],\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Tiffany',\n      middleName: 'A',\n      lastName: 'Traina',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Jiaojiao',\n      lastName: 'Wang',\n      title: [TITLE.MSC],\n      type: MEMBER_TYPE.CORE,\n    },\n    {\n      firstName: 'Hannah',\n      lastName: 'Wise',\n      title: [TITLE.PHD],\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Anas',\n      lastName: 'Younes',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Emiliano',\n      lastName: 'Cocco',\n      title: [TITLE.PHD],\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Maurizio',\n      lastName: 'Scaltriti',\n      title: [TITLE.MD],\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Yifu',\n      lastName: 'Yao',\n      title: [TITLE.MSC],\n      type: MEMBER_TYPE.CORE,\n    },\n    {\n      firstName: 'Kinisha',\n      lastName: 'Gala',\n      title: [TITLE.PHD],\n      faculty: false,\n      showCOI: true,\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Lindsay',\n      middleName: 'M',\n      lastName: 'LaFave',\n      title: [TITLE.PHD],\n      faculty: false,\n      showCOI: true,\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Linde',\n      middleName: 'A',\n      lastName: 'Miles',\n      title: [TITLE.PHD],\n      faculty: false,\n      showCOI: true,\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'David',\n      middleName: 'S',\n      lastName: 'Klimstra',\n      title: [TITLE.MD],\n      faculty: true,\n      showCOI: true,\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Philip',\n      lastName: 'Kantoff',\n      title: [TITLE.MD],\n      faculty: true,\n      showCOI: true,\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Ingo',\n      middleName: 'K',\n      lastName: 'Mellinghoff',\n      title: [TITLE.MD, TITLE.FACP],\n      faculty: true,\n      showCOI: true,\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Jedd',\n      middleName: 'D',\n      lastName: 'Wolchok',\n      title: [TITLE.MD, TITLE.PHD],\n      faculty: true,\n      showCOI: true,\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Jianjiong',\n      lastName: 'Gao',\n      title: [TITLE.PHD],\n      faculty: true,\n      showCOI: true,\n      type: MEMBER_TYPE.CORE,\n    },\n    {\n      firstName: 'Stephanie',\n      lastName: 'Carrero',\n      title: [TITLE.BA],\n      faculty: false,\n      showCOI: true,\n      type: MEMBER_TYPE.CORE,\n    },\n    {\n      firstName: 'Katja',\n      lastName: 'Srpan',\n      title: [TITLE.PHD],\n      faculty: false,\n      showCOI: true,\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Alvaro',\n      lastName: 'Quintanal-Villalonga',\n      title: [TITLE.PHD],\n      faculty: false,\n      showCOI: true,\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Katelyn',\n      lastName: 'Mullen',\n      title: [TITLE.BSC],\n      faculty: false,\n      showCOI: true,\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Thinh',\n      lastName: 'Tran',\n      title: [TITLE.MSC],\n      faculty: false,\n      showCOI: true,\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Yan',\n      lastName: 'Li',\n      title: [TITLE.MD, TITLE.PHD],\n      faculty: false,\n      showCOI: true,\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Francesco',\n      lastName: 'Cambuli',\n      title: [TITLE.PHD],\n      faculty: false,\n      showCOI: true,\n      type: MEMBER_TYPE.CURATOR,\n    },\n    {\n      firstName: 'Kamal',\n      lastName: 'Menghrajani',\n      title: [TITLE.MD],\n      faculty: true,\n      showCOI: true,\n      type: MEMBER_TYPE.CGAC,\n    },\n    {\n      firstName: 'Neal',\n      lastName: 'Rosen',\n      title: [TITLE.MD, TITLE.PHD],\n      faculty: true,\n      showCOI: true,\n      type: MEMBER_TYPE.CGAC,\n    },\n  ];\n\n  const [selectedPcType, setSelectedPcType] = useState('');\n\n  return (\n    <DocumentTitle title={getPageTitle(PAGE_TITLE.TEAM)}>\n      <div className=\"team\">\n        <Row>\n          <Col>\n            <h2>{ONCOKB_TM} Team</h2>\n            <p>\n              {ONCOKB_TM} is developed and maintained by the Knowledge Systems\n              group in the{' '}\n              <a href=\"https://www.mskcc.org/research-areas/programs-centers/molecular-oncology\">\n                Marie Josée and Henry R. Kravis Center for Molecular Oncology\n              </a>{' '}\n              at Memorial Sloan Kettering Cancer Center.\n            </p>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={6} md>\n            <h5>Design &amp; Development</h5>\n            <ul>\n              {teamMembers.map(member => (\n                <li key={`${member.lastName}-${member.firstName}`}>\n                  <TeamMember {...member} />\n                </li>\n              ))}\n            </ul>\n            {/*<h5>Current Curators</h5>*/}\n            {/*<ul>*/}\n            {/*  {_.sortBy(curators, member => member.lastName).map(member => (*/}\n            {/*    <li key={`${member.lastName}-${member.firstName}`}>*/}\n            {/*      <TeamMember {...member} />*/}\n            {/*    </li>*/}\n            {/*  ))}*/}\n            {/*</ul>*/}\n            <h5>External Advisory Board</h5>\n            <ul>\n              {_.sortBy(eab, member => member.lastName).map(member => (\n                <li key={`${member.lastName}-${member.firstName}`}>\n                  <TeamMember {...member} />\n                </li>\n              ))}\n            </ul>\n          </Col>\n          <Col sm={6} md>\n            <h5>Clinical Genomics Annotation Committee</h5>\n            <ul>\n              {cgac.slice(0, 25).map(member => (\n                <li key={`${member.lastName}-${member.firstName}`}>\n                  <TeamMember {...member} />\n                </li>\n              ))}\n            </ul>\n          </Col>\n          <Col sm={6} md>\n            <h5>Clinical Genomics Annotation Committee (Continued)</h5>\n            <ul>\n              {cgac.slice(25).map(member => (\n                <li key={`${member.lastName}-${member.firstName}`}>\n                  <TeamMember {...member} />\n                </li>\n              ))}\n            </ul>\n            <h5>Past Contributors *</h5>\n            <Select\n              placeholder={'Select Team'}\n              options={[\n                {\n                  value: MEMBER_TYPE.CORE,\n                  label: 'Past design & development member',\n                },\n                {\n                  value: MEMBER_TYPE.CGAC,\n                  label: 'Past CGAC member',\n                },\n                {\n                  value: MEMBER_TYPE.CURATOR,\n                  label: 'Past curator',\n                },\n              ]}\n              isClearable\n              onChange={(option: any) =>\n                setSelectedPcType(option ? option.value : '')\n              }\n            />\n            {selectedPcType && (\n              <>\n                <ul className={'mt-2'}>\n                  {_.chain(pastContributors)\n                    .filter(member => member.type === selectedPcType)\n                    .sortBy(member => member.lastName)\n                    .map(member => (\n                      <li key={`${member.lastName}-${member.firstName}`}>\n                        <TeamMember\n                          {...member}\n                          faculty={false}\n                          showCOI={false}\n                        />\n                      </li>\n                    ))\n                    .value()}\n                </ul>\n                <div>* We do not track their conflicts of interest.</div>\n              </>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </DocumentTitle>\n  );\n};\n","import {\n  FdaRecognitionDisclaimer,\n  LEVEL_TYPES,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n  PAGE_TITLE,\n} from 'app/config/constants';\nimport React from 'react';\nimport DocumentTitle from 'react-document-title';\nimport { Col, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Linkout } from 'app/shared/links/Linkout';\nimport {\n  getActionableGenesPageLink,\n  SopPageLink,\n} from 'app/shared/utils/UrlUtils';\nimport { getPageTitle } from 'app/shared/utils/Utils';\nimport { LevelOfEvidencePageLink } from 'app/shared/links/LevelOfEvidencePageLink';\nimport { Version } from 'app/pages/LevelOfEvidencePage';\n\nconst FdaRecognitionPage = () => {\n  return (\n    <DocumentTitle title={getPageTitle(PAGE_TITLE.FDA_RECOGNITION)}>\n      <div className=\"fda-recognition\">\n        <Row>\n          <Col>\n            <h4>{PAGE_TITLE.FDA_RECOGNITION}</h4>\n            <p>\n              <i>\n                <FdaRecognitionDisclaimer enableLink={false} />\n              </i>\n            </p>\n            <p>\n              In October 2021, {ONCOKB_TM} became the first somatic human\n              variant database to be recognized by the FDA. FDA recognition of{' '}\n              {ONCOKB_TM} is \"partial\" and is limited to the information\n              provided in the \"FDA-Recognized Content\" tab which can be found on\n              the{' '}\n              <Link to={getActionableGenesPageLink(undefined, LEVEL_TYPES.FDA)}>\n                Actionable Genes\n              </Link>{' '}\n              page and on each individual gene page within {ONCOKB_TM}.\n            </p>\n            <p>\n              As background, in April 2018, the FDA announced their regulatory\n              approach for the{' '}\n              <Linkout link={'https://www.fda.gov/media/99200/download'}>\n                Use of Public Human Genetic Variant Database\n              </Linkout>{' '}\n              to support the Agency's precision medicine initiatives. \"The goal\n              of this effort is to help ensure patients receive accurate,\n              reliable, and clinically meaningful test results, while promoting\n              innovation in test development\".\n            </p>\n            <p>\n              Data and assertions within an FDA-recognized database are\n              considered valid scientific evidence that can be used to\n              streamline the next generation sequencing (NGS)-based tumor\n              profiling test development and validation processes. FDA\n              recognition also incentivizes human variant data-sharing by\n              recognizing the importance of transparency and peer-review for\n              accurate human variant interpretation and pathogenicity\n              classification. Thus, all data in an FDA-recognized human variant\n              database is expected to be publicly accessible, including the\n              variant curation and interpretation processes as well as the\n              curated evidence to support the final variant classifications.\n            </p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={5}>\n            <h5>Important Database Links</h5>\n            <ul>\n              <li>\n                <SopPageLink version={2.0} />\n              </li>\n              <li>\n                <LevelOfEvidencePageLink\n                  levelType={LEVEL_TYPES.TX}\n                  version={Version.FDA}\n                >\n                  Mapping to the FDA Levels of Evidence\n                </LevelOfEvidencePageLink>\n              </li>\n              <li>\n                <Link to={PAGE_ROUTE.FAQ_ACCESS}>\n                  FAQs about FDA Recognition\n                </Link>\n              </li>\n              <li>\n                For a full list of FDA recognized variants in {ONCOKB_TM} please\n                see the{' '}\n                <Link\n                  to={getActionableGenesPageLink(undefined, LEVEL_TYPES.FDA)}\n                >\n                  Actionable Genes\n                </Link>{' '}\n                page\n              </li>\n            </ul>\n            <h5>{ONCOKB_TM} Application Links</h5>\n            <ul>\n              <li>\n                <Linkout\n                  link={`content/files/fdaRecognition/OncoKB_FDA_Recognition_Recognition_Letter.pdf`}\n                >\n                  FDA Recognition Letter\n                </Linkout>\n              </li>\n              <li>\n                <Linkout link={`https://www.fda.gov/media/152847/download`}>\n                  FDA Decision Summary for {ONCOKB_TM}\n                </Linkout>\n              </li>\n            </ul>\n            <h5>Press Releases</h5>\n            <ul>\n              <li>\n                <Linkout\n                  link={\n                    'https://www.fda.gov/drugs/resources-information-approved-drugs/fda-recognizes-memorial-sloan-kettering-database-molecular-tumor-marker-information'\n                  }\n                >\n                  FDA Recognition Announcement\n                </Linkout>\n              </li>\n              <li>\n                <Linkout\n                  link={\n                    'https://www.mskcc.org/news-releases/fda-grants-partial-recognition-status-mskcc-precision-oncology-knowledge-database'\n                  }\n                >\n                  MSK Press Release\n                </Linkout>\n              </li>\n              <li>\n                <Linkout\n                  link={\n                    'https://ascopost.com/news/october-2021/fda-recognizes-memorial-sloan-kettering-database-of-molecular-tumor-marker-information'\n                  }\n                >\n                  ASCO Post Update\n                </Linkout>\n              </li>\n            </ul>\n          </Col>\n          <Col md={7}>\n            <h5>Scope of {ONCOKB_TM} Recognition</h5>\n            <p>\n              The FDA has reviewed all {ONCOKB_TM} processes documented in the{' '}\n              <SopPageLink version={2.0} />, which include the following:\n            </p>\n            <ol>\n              <li>\n                Part of the {ONCOKB_TM} annotation content: Annotation of\n                variants curated in {ONCOKB_TM} with an FDA level of evidence.\n                FDA-recognized content is clearly marked on the website and a\n                pop-up message will appear when the user exits an FDA-recognized\n                portion of the\n                {ONCOKB_TM} website.\n              </li>\n              <li>\n                Mapping of {ONCOKB_TM} levels of evidence to the FDA levels of\n                evidence.\n              </li>\n              <li>\n                {ONCOKB_TM}'s processes and validation studies for variant\n                evaluation and assertion, data integrity and security, and\n                transparency of all evidence.\n              </li>\n              <li>\n                {ONCOKB_TM}'s administration policies for hiring, training and\n                continuing the education of its curators and Scientific Content\n                Management Team who evaluate and approve inclusion of variants\n                into the database.\n              </li>\n              <li>{ONCOKB_TM}'s policies of oversight and governance.</li>\n              <li>\n                {ONCOKB_TM}'s processes for ensuring its members' conflicts of\n                interest are minimized and transparent.\n              </li>\n            </ol>\n          </Col>\n        </Row>\n      </div>\n    </DocumentTitle>\n  );\n};\nexport default FdaRecognitionPage;\n","import {\n  ElementType,\n  SimpleTable,\n  SimpleTableColumn,\n} from 'app/components/SimpleTable';\nimport { Col, Row } from 'react-bootstrap';\nimport React from 'react';\nimport styles from './main.module.scss';\nimport { LEVEL_PRIORITY, LEVELS } from 'app/config/constants';\nimport OncoKBTable from 'app/components/oncokbTable/OncoKBTable';\n\nconst COLUMNS = [\n  { name: 'Molecular Biomarker' },\n  { name: 'Cancer Type' },\n  { name: 'Drug' },\n  {\n    name: 'Significance (Reason for inclusion in OncoKB)',\n    content: (\n      <div style={{ minWidth: 300 }}>\n        <div>Significance</div>\n        <div>(Reason for inclusion in OncoKB)</div>\n      </div>\n    ),\n  },\n];\n\nconst TABLE_TITLE: { [level in LEVELS]?: string } = {\n  [LEVELS.Tx1]:\n    'Biomarkers listed in the tumor type specific “Indications and Usage” section of the FDA-drug label',\n  [LEVELS.Tx2]:\n    'Biomarkers listed in the treatment recommendations section of a tumor type specific National Comprehensive Cancer Network (NCCN) guideline',\n  [LEVELS.Tx3]:\n    'Biomarkers predictive of response to targeted agents as demonstrated by phase III clinical evidence, compelling phase I/II trial data',\n  [LEVELS.Tx4]:\n    'Biomarkers predictive of response to targeted agents as demonstrated by compelling biological evidence',\n};\n\nexport type TableData = { [level in LEVELS]?: (string | ElementType)[][] };\nexport const BiomarkerTable = (props: {\n  tableKey: string;\n  year: string;\n  data: TableData;\n}) => {\n  return (\n    <>\n      {LEVEL_PRIORITY.filter(level => !!props.data[level])\n        .reverse()\n        .map(level => (\n          <div key={`biomarker-table-div-${level}`}>\n            {TABLE_TITLE[level] && (\n              <b\n                style={{ fontWeight: 500 }}\n              >{`Level ${level}: ${TABLE_TITLE[level]} in ${props.year}`}</b>\n            )}\n            <Row className={'overflow-auto'}>\n              <Col>\n                <SimpleTable\n                  theadClassName={styles.header}\n                  columns={COLUMNS}\n                  rows={props.data[level]!.map(\n                    (item: ElementType[], index: number) => {\n                      return {\n                        key: `biomarker-table-${props.tableKey}-${index}`,\n                        content: item.map((subItem, subIndex) => {\n                          return {\n                            key: `changedAnnotation-${props.tableKey}-${index}-${subIndex}`,\n                            content: subItem,\n                          };\n                        }),\n                      };\n                    }\n                  )}\n                />\n              </Col>\n            </Row>\n          </div>\n        ))}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { YEAR_END_SUMMARY_RANGE } from 'app/pages/aboutGroup/AboutPageNavTab';\nimport { TableData } from 'app/pages/yearEndSummaryPage/BiomarkerTable';\nimport { LEVELS } from 'app/config/constants';\n\ntype DataKey = typeof YEAR_END_SUMMARY_RANGE[number];\nexport const DATA: { [key in DataKey]: TableData } = {\n  '2022': {\n    [LEVELS.Tx1]: [\n      [\n        'BRAF V600E',\n        'All Solid Tumors (except Colorectal Cancer)',\n        'Dabrafenib + Trametinib',\n        'Novel tumor-agnostic biomarker',\n      ],\n      [\n        'RET Fusions',\n        'All Solid Tumor',\n        'Selpercatinib',\n        'Novel tumor-agnostic biomarker',\n      ],\n      [\n        'ERBB2 Oncogenic Mutations',\n        'Non-Small Cell Lung Cancer',\n        'Trastuzumab Deruxtecan',\n        'Novel clinically actionable biomarker',\n      ],\n      [\n        'FGFR2 Fusions',\n        'Cholangiocarcinoma',\n        'Futibatinib',\n        'Addition of a novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'FGFR1 Fusions',\n        'Myeloid/Lymphoid Neoplasms with FGFR1 Rearrangement',\n        'Pemigatinib',\n        'Novel clinically actionable  biomarker',\n      ],\n      [\n        'ALK Fusions',\n        'Inflammatory Myofibroblastic Tumor',\n        'Crizotinib',\n        'Novel clinically actionable biomarker in this cancer type ',\n      ],\n      [\n        'KRAS G12C',\n        'Non-Small Cell Lung Cancer',\n        'Adagrasib',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'IDH1 R132 C/H/L/G/S',\n        'Acute Myeloid Leukemia',\n        'Olutasidenib',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n    ],\n    [LEVELS.Tx2]: [\n      [\n        'BRCA2 Oncogenic Mutations',\n        'Uterine Sarcoma',\n        'Olaparib, Rucaparib, Niraparib',\n        'Novel clinically actionable biomarker in this cancer type ',\n      ],\n      [\n        'PALB2 Oncogenic Mutations',\n        'Pancreatic Cancer',\n        'Rucaparib',\n        'Novel clinically actionable biomarker in this cancer type ',\n      ],\n      [\n        'BRCA1/2 Oncogenic Mutations',\n        'Pancreatic Cancer',\n        'Rucaparib',\n        'Novel clinically actionable biomarker in this cancer type ',\n      ],\n      [\n        'EGFR S768I, L861Q, G719',\n        'Non-Small Cell Lung Cancer',\n        'Osimertinib ',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'ROS1 Fusions',\n        'Non-Small Cell Lung Cancer',\n        'Ceritinib',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'ROS1 Fusions',\n        'Non-Small Cell Lung Cancer',\n        'Lorlatinib',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'MET Amplification',\n        'Non-Small Cell Lung Cancer',\n        'Capmatinib',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'MET Amplification',\n        'Non-Small Cell Lung Cancer',\n        'Tepotinib',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'ALK Fusions',\n        'Inflammatory Myofibroblastic Tumors',\n        'Lorlatinib',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n    ],\n    [LEVELS.Tx3]: [\n      [\n        'KRAS G12C',\n        'Gastrointestinal cancers ',\n        'Adagrasib',\n        'Novel clinically actionable biomarker in this cancer type ',\n      ],\n      [\n        'KRAS G12C',\n        'Pancreatic cancer',\n        'Sotorasib',\n        'Novel clinically actionable biomarker in this cancer type ',\n      ],\n      [\n        'TP53 Y220C',\n        'Solid tumors',\n        'PC14586',\n        'Novel clinically actionable biomarker',\n      ],\n      [\n        'NRG1 Fusions',\n        'Non-Small Cell Lung Cancer',\n        'Seribantumab',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'ROS1 Fusions',\n        'Non-Small Cell Lung Cancer',\n        'Repotrectinib',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'NTRK1/2/3 Fusions',\n        'All Solid Tumors',\n        'Repotrectinib',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'EGFR L858R, exon 19 deletions & insertions, G719, L861Q, S768I',\n        'Non-Small Cell Lung Cancer',\n        'Patritumab Deruxtecan',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'EGFR Exon 20 insertions',\n        'Non-Small Cell Lung Cancer',\n        'CLN-081',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'ERBB2 Oncogenic Mutations',\n        'Non-Small Cell Lung Cancer',\n        'Trastuzumab + Pertuzumab + Docetaxel',\n        'Addition of novel drug to an existing clinically actionable biomarker',\n      ],\n      [\n        'KMT2A Fusions',\n        'B-Lymphoblastic Leukemia/Lymphoma, Acute Myeloid Leukemia',\n        'SNDX-5613 ',\n        'Novel clinically actionable biomarker',\n      ],\n      [\n        'NPM1 Oncogenic Mutations',\n        'Acute Myeloid Leukemia',\n        'SNDX-5613 ',\n        'Novel clinically actionable biomarker',\n      ],\n    ],\n    [LEVELS.Tx4]: [\n      [\n        'PIK3CA Oncogenic Mutations',\n        <div style={{ minWidth: 150 }}>All Solid Tumors</div>,\n        'RLY-2608',\n        'Novel clinically actionable biomarker in this cancer type ',\n      ],\n      [\n        'PIK3CA H1047R',\n        'All Solid Tumors',\n        'LOXO-783',\n        'Novel clinically actionable biomarker in this cancer type',\n      ],\n      [\n        'CCNE1 Amplification',\n        'All Solid Tumors',\n        'RP-6306 BLU-222',\n        'Novel clinically actionable biomarker',\n      ],\n      [\n        'KRAS G12D',\n        'All Solid Tumors',\n        'RMC-6236',\n        'Novel clinically actionable biomarker',\n      ],\n    ],\n  },\n};\n","import * as React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport DocumentTitle from 'react-document-title';\nimport {\n  PAGE_TITLE,\n  PAGE_ROUTE,\n  YEAR_END_SUMMARY_TITLE_DATE_FORMAT,\n  YEAR_END_SUMMARY_DATE_FORMAT,\n} from 'app/config/constants';\nimport HashLink from 'app/shared/links/HashLink';\nimport { useEffect, useState } from 'react';\nimport moment from 'moment/moment';\nimport { BiomarkerTable } from 'app/pages/yearEndSummaryPage/BiomarkerTable';\nimport { YEAR_END_SUMMARY_RANGE } from 'app/pages/aboutGroup/AboutPageNavTab';\nimport { DATA } from 'app/pages/yearEndSummaryPage/BiomarkerTableData';\nimport { getPageTitle, scrollWidthOffset } from 'app/shared/utils/Utils';\n\nconst getTitle = (date: string) => {\n  return moment(date, YEAR_END_SUMMARY_DATE_FORMAT).format(\n    YEAR_END_SUMMARY_TITLE_DATE_FORMAT\n  );\n};\n\nexport const YearEndSummaryPage: React.FunctionComponent<{\n  selectedYear?: string;\n}> = props => {\n  const [showAnchor, setShowAnchor] = useState(false);\n\n  useEffect(() => {\n    // let the element prints before scrolling\n    setTimeout(() => {\n      if (props.selectedYear) {\n        const element = document.getElementById(props.selectedYear);\n        scrollWidthOffset(element);\n      } else {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      }\n    }, 200);\n  }, [props.selectedYear]);\n\n  return (\n    <DocumentTitle\n      title={getPageTitle(\n        `${props.selectedYear ? `${props.selectedYear} ` : ''}${\n          PAGE_TITLE.YEAR_END_SUMMARY\n        }`\n      )}\n    >\n      <div>\n        <Row>\n          <Col>\n            <h4>Year End Summary</h4>\n          </Col>\n        </Row>\n        {YEAR_END_SUMMARY_RANGE.map(year => (\n          <Row key={`year-end-summary-row-${year}`}>\n            <Col>\n              <h5\n                id={year}\n                onMouseEnter={() => setShowAnchor(true)}\n                onMouseLeave={() => setShowAnchor(false)}\n              >\n                {getTitle(year)}\n                <HashLink\n                  path={PAGE_ROUTE.YEAR_END_SUMMARY}\n                  hash={year}\n                  show={showAnchor}\n                />\n              </h5>\n              <div className={'mb-3'}>\n                <BiomarkerTable\n                  tableKey={`biomarker-table-${year}`}\n                  year={year}\n                  data={DATA['2022']}\n                />\n              </div>\n            </Col>\n          </Row>\n        ))}\n      </div>\n    </DocumentTitle>\n  );\n};\n","import * as React from 'react';\nimport { Row, Col, Tabs, Tab } from 'react-bootstrap';\nimport './TermsPage.scss';\nimport { Link } from 'react-router-dom';\nimport {\n  ONCOKB_CONTACT_EMAIL,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n} from 'app/config/constants';\nimport { OncoKBLink } from 'app/shared/links/OncoKBLink';\nimport { ContactLink } from 'app/shared/links/ContactLink';\n\nenum TabKey {\n  ACADEMIC = 'ACADEMIC',\n  COMMERCIAL = 'COMMERCIAL',\n}\nexport const TermsPage = () => {\n  return (\n    <div className=\"terms\">\n      <Row>\n        <Col>\n          <Tabs defaultActiveKey={TabKey.ACADEMIC} id=\"terms-tabs\">\n            <Tab eventKey={TabKey.ACADEMIC} title={'Academic Research'}>\n              <div className={'mt-2'}>\n                <p>\n                  {ONCOKB_TM} is a precision oncology knowledge base maintained\n                  by Memorial Sloan Kettering Cancer Center (MSK). MSK may, from\n                  time to time, update the content on <OncoKBLink />{' '}\n                  (\"Content\"). MSK makes no warranties or representations,\n                  express or implied, with respect to any of the Content,\n                  including as to the present accuracy, completeness,\n                  timeliness, adequacy, or usefulness of any of the Content. By\n                  using this website, you agree that MSK will not be liable for\n                  any losses or damages arising from your use of or reliance on\n                  the Content, or other websites or information to which this\n                  website may be linked. The Content is not intended as a\n                  substitute for professional medical help, judgment or advice.\n                  A physician or other qualified health provider should always\n                  be consulted for any health problem or medical condition.\n                  Inquiries about the Content should be directed to{' '}\n                  <a href={`mailto:${ONCOKB_CONTACT_EMAIL}`} target=\"_top\">\n                    {ONCOKB_CONTACT_EMAIL}\n                  </a>\n                  .\n                </p>\n                <p>\n                  You may view the Content solely for your own personal\n                  reference or use for research in an academic setting, provided\n                  that all academic research use of the Content must credit{' '}\n                  {ONCOKB_TM} as the source of the Content and reference these\n                  Terms of Use; outside of scientific publication, you may not\n                  otherwise redistribute or share the Content with any third\n                  party, in part or in whole, for any purpose, without the\n                  express permission of MSK.\n                </p>\n                <div>\n                  Unless you have signed a license agreement with MSK, you may\n                  not use any part of the Content for any other purpose,\n                  including:\n                </div>\n                <ol>\n                  <li>\n                    use or incorporation into a commercial product or towards\n                    performance of a commercial service;\n                  </li>\n                  <li>research use in a commercial setting;</li>\n                  <li>use for patient services; or</li>\n                  <li>\n                    generation of reports in a hospital or other patient care\n                    setting.\n                  </li>\n                </ol>\n                <p>\n                  You may not copy, transfer, reproduce, modify or create\n                  derivative works of {ONCOKB_TM} for any commercial purpose\n                  without the express permission of MSK. If you seek to use{' '}\n                  {ONCOKB_TM} for such purposes, please visit the{' '}\n                  <Link to={PAGE_ROUTE.REGISTER}>registration page</Link> and\n                  request the license which best describes your anticipated use\n                  of {ONCOKB_TM}.\n                </p>\n              </div>\n            </Tab>\n            <Tab eventKey={TabKey.COMMERCIAL} title={'Commercial'}>\n              <p className={'m-2'}>\n                Please visit the{' '}\n                <Link to={PAGE_ROUTE.REGISTER}>registration page</Link> and\n                request the license which best describes your anticipated use of{' '}\n                {ONCOKB_TM}. You can also send us an email with your use case at{' '}\n                <ContactLink\n                  emailSubject={`Request for ${ONCOKB_TM} Commercial License`}\n                />\n                . We will help you to find the most suitable license.\n              </p>\n            </Tab>\n          </Tabs>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React from 'react';\nimport { PAGE_ROUTE } from 'app/config/constants';\n\nexport const SwaggerApiLink: React.FunctionComponent<{}> = props => {\n  return (\n    <a href={PAGE_ROUTE.SWAGGER_UI} target=\"_blank\" rel=\"noopener noreferrer\">\n      {props.children}\n    </a>\n  );\n};\n","import * as React from 'react';\nimport oncokbClient from 'app/shared/api/oncokbClientInstance';\nimport { CitationText } from 'app/components/CitationText';\nimport { AuthDownloadButton } from 'app/components/authDownloadButton/AuthDownloadButton';\nimport {\n  API_DOCUMENT_LINK,\n  DATA_RELEASES,\n  DataRelease,\n  DEFAULT_MARGIN_BOTTOM_LG,\n  DEMO_WEBSITE_LINK,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n  PAGE_TITLE,\n  USER_AUTHORITY,\n} from 'app/config/constants';\nimport { RouterStore } from 'mobx-react-router';\nimport { inject, observer } from 'mobx-react';\nimport { SwaggerApiLink } from 'app/shared/links/SwaggerApiLink';\nimport { remoteData } from 'cbioportal-frontend-commons';\nimport oncokbPrivateClient from 'app/shared/api/oncokbPrivateClientInstance';\nimport { DownloadAvailability } from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport _ from 'lodash';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { getNewsTitle } from 'app/pages/newsPage/NewsList';\nimport { LICENSE_HASH_KEY } from 'app/pages/RegisterPage';\nimport { action, computed, observable } from 'mobx';\nimport WindowStore from 'app/store/WindowStore';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport DocumentTitle from 'react-document-title';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport { Linkout } from 'app/shared/links/Linkout';\nimport { If, Then, Else } from 'react-if';\nimport { getPageTitle } from 'app/shared/utils/Utils';\n\ntype DownloadAvailabilityWithDate = DataRelease & DownloadAvailability;\n\nconst getDataTitle = (date: string, version: string) => {\n  return `${getNewsTitle(date)} (${version})`;\n};\n\nconst BUTTON_CLASS_NAME = 'mr-2 my-1';\nconst DownloadButtonGroups: React.FunctionComponent<{\n  data: DownloadAvailabilityWithDate;\n}> = props => {\n  return (\n    <>\n      {props.data.hasAllCuratedGenes ? (\n        <AuthDownloadButton\n          className={BUTTON_CLASS_NAME}\n          fileName={`all_curated_genes_${props.data.version}.tsv`}\n          getDownloadData={() =>\n            oncokbClient.utilsAllCuratedGenesTxtGetUsingGET({\n              version: props.data.version,\n            })\n          }\n          buttonText=\"All Curated Genes\"\n        />\n      ) : null}\n      {props.data.hasCancerGeneList ? (\n        <AuthDownloadButton\n          className={BUTTON_CLASS_NAME}\n          fileName={`cancer_gene_list_${props.data.version}.tsv`}\n          getDownloadData={() =>\n            oncokbClient.utilsCancerGeneListTxtGetUsingGET({\n              version: props.data.version,\n            })\n          }\n          buttonText=\"Cancer Gene List\"\n        />\n      ) : null}\n      {props.data.hasAllActionableVariants ? (\n        <AuthDownloadButton\n          className={BUTTON_CLASS_NAME}\n          fileName={`oncokb_${props.data.version.replace('.', '_')}.sql.gz`}\n          getDownloadData={async () => {\n            const data = await oncokbPrivateClient.utilDataSqlDumpGetUsingGET({\n              version: props.data.version,\n            });\n            return data;\n          }}\n          buttonText=\"Data Dump\"\n        />\n      ) : null}\n    </>\n  );\n};\n\n@inject('routing', 'windowStore', 'authenticationStore')\n@observer\nexport default class APIAccessPage extends React.Component<{\n  routing: RouterStore;\n  windowStore: WindowStore;\n  authenticationStore: AuthenticationStore;\n}> {\n  @observable selectedVersion: {\n    label: string;\n    value: string;\n  };\n  readonly dataAvailability = remoteData<DownloadAvailabilityWithDate[]>({\n    async invoke() {\n      const result = await oncokbPrivateClient.utilDataAvailabilityGetUsingGET(\n        {}\n      );\n      const availableVersions = _.reduce(\n        result,\n        (acc, next) => {\n          acc[next.version] = next;\n          return acc;\n        },\n        {} as { [key: string]: DownloadAvailability }\n      );\n      // do not provide data on version 1\n      return _.reduce(\n        DATA_RELEASES.filter(\n          release =>\n            _.has(availableVersions, release.version) &&\n            !release.version.startsWith('v1')\n        ),\n        (acc, next) => {\n          const currentVersionData: DownloadAvailability =\n            availableVersions[next.version];\n          if (\n            currentVersionData.hasAllActionableVariants ||\n            currentVersionData.hasAllAnnotatedVariants ||\n            currentVersionData.hasAllCuratedGenes ||\n            currentVersionData.hasCancerGeneList\n          ) {\n            acc.push({\n              ...availableVersions[next.version],\n              date: next.date,\n            });\n          }\n          return acc;\n        },\n        [] as DownloadAvailabilityWithDate[]\n      );\n    },\n    default: [],\n  });\n\n  @action\n  onApplyForLicense = () => {\n    this.props.routing.history.push(PAGE_ROUTE.REGISTER);\n  };\n\n  @computed\n  get selectedData() {\n    if (this.selectedVersion) {\n      return _.chain(this.dataAvailability.result)\n        .filter(item => item.version === this.selectedVersion.value)\n        .first()\n        .value();\n    } else {\n      return undefined;\n    }\n  }\n\n  render() {\n    return (\n      <DocumentTitle title={getPageTitle(PAGE_TITLE.API_ACCESS)}>\n        <>\n          <If condition={this.props.authenticationStore.account !== undefined}>\n            <Then>\n              <Row>\n                <Col>\n                  <div className={'mb-3'}>\n                    <h5 className=\"title\">Annotating Your Files</h5>\n                    <div>\n                      You can annotate your data files (mutations, copy number\n                      alterations, fusions, and clinical data) with{' '}\n                      <a\n                        href=\"https://github.com/oncokb/oncokb-annotator\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {ONCOKB_TM} Annotator\n                      </a>\n                      .\n                    </div>\n                  </div>\n                  <div className={'mb-3'}>\n                    <h5 className=\"title\">Web API</h5>\n                    <div>\n                      You can programmatically access the {ONCOKB_TM} data via\n                      its <SwaggerApiLink>web API</SwaggerApiLink>.\n                      <div>\n                        Please specify your API token in the request header with{' '}\n                        <code>Authorization: Bearer [your token]</code>.\n                      </div>\n                      <div>\n                        Your token is available in your{' '}\n                        <Link to={PAGE_ROUTE.ACCOUNT_SETTINGS}>\n                          Account Settings\n                        </Link>\n                        .\n                      </div>\n                      <div>\n                        Example:{' '}\n                        <code>\n                          curl -H &quot;Authorization: Bearer [your token]&quot;\n                          https://www.oncokb.org/api/v1/utils/allCuratedGenes\n                        </code>\n                      </div>\n                      <div className={'mt-2'}>\n                        Please see our detailed{' '}\n                        <Linkout link={API_DOCUMENT_LINK}>\n                          API documentation\n                        </Linkout>{' '}\n                        for more information.\n                      </div>\n                    </div>\n                  </div>\n                  {this.props.authenticationStore.account &&\n                  this.props.authenticationStore.account.authorities.includes(\n                    USER_AUTHORITY.ROLE_DATA_DOWNLOAD\n                  ) ? (\n                    <>\n                      <div className={'mb-3'}>\n                        <h5 className=\"title\">Data Download</h5>\n                      </div>\n                      {this.dataAvailability.isComplete &&\n                      this.dataAvailability.result.length > 0 ? (\n                        <>\n                          <h6 className=\"title\">\n                            {getDataTitle(\n                              this.dataAvailability.result[0].date,\n                              this.dataAvailability.result[0].version\n                            )}\n                            , the latest\n                          </h6>\n                          <DownloadButtonGroups\n                            data={this.dataAvailability.result[0]}\n                          />\n\n                          {this.dataAvailability.result.length > 1 ? (\n                            <>\n                              <hr />\n                              <Row className={'mb-3'}>\n                                <Col lg={4} xs={12}>\n                                  <Select\n                                    value={this.selectedVersion}\n                                    placeholder={'Select previous version'}\n                                    options={this.dataAvailability.result\n                                      .slice(1)\n                                      .map(data => {\n                                        return {\n                                          value: data.version,\n                                          label: getDataTitle(\n                                            data.date,\n                                            data.version\n                                          ),\n                                        };\n                                      })}\n                                    onChange={(selectedOption: any) =>\n                                      (this.selectedVersion = selectedOption)\n                                    }\n                                    isClearable={true}\n                                  />\n                                </Col>\n                              </Row>\n\n                              {this.selectedData !== undefined ? (\n                                <>\n                                  <Row className={DEFAULT_MARGIN_BOTTOM_LG}>\n                                    <Col>\n                                      <DownloadButtonGroups\n                                        data={this.selectedData}\n                                      />\n                                    </Col>\n                                  </Row>\n                                </>\n                              ) : null}\n                            </>\n                          ) : null}\n                        </>\n                      ) : null}\n                    </>\n                  ) : null}\n                </Col>\n              </Row>\n            </Then>\n            <Else>\n              <Row>\n                <Col>\n                  <p>\n                    Programmatic access to {ONCOKB_TM} via its API requires a\n                    license. Research licenses in an academic setting are free,\n                    all other uses require a fee. Please review the{' '}\n                    <Link to={PAGE_ROUTE.TERMS}>terms of use</Link> before\n                    proceeding. <CitationText /> Please visit the{' '}\n                    <Link to={PAGE_ROUTE.REGISTER}>registration page</Link> to\n                    apply for a license.\n                  </p>\n                  <p>\n                    You can also use our{' '}\n                    <Linkout link={DEMO_WEBSITE_LINK}>demo website</Linkout>,{' '}\n                    which includes the full data of BRAF, TP53 and ROS1, before\n                    committing to our license.\n                  </p>\n\n                  <p>\n                    Once registered and logged in, you will have access to the\n                    following:\n                  </p>\n                  <div>\n                    <h5 className=\"title\">File Annotator</h5>\n                    <p>\n                      You can annotate your data files (mutations, copy number\n                      alterations, fusions, and clinical data) with{' '}\n                      <a\n                        href=\"https://github.com/oncokb/oncokb-annotator\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {ONCOKB_TM} Annotator\n                      </a>\n                      .\n                    </p>\n                  </div>\n                  <div>\n                    <h5 className=\"title\">Web API</h5>\n                    <p>\n                      You can programmatically access the {ONCOKB_TM} data via\n                      its <SwaggerApiLink>web API</SwaggerApiLink>, using a\n                      token available in your{' '}\n                      <Link to={PAGE_ROUTE.ACCOUNT_SETTINGS}>\n                        Account Settings\n                      </Link>\n                      . Please see our detailed{' '}\n                      <Linkout link={API_DOCUMENT_LINK}>\n                        API documentation\n                      </Linkout>{' '}\n                      for more information.\n                    </p>\n                  </div>\n                </Col>\n              </Row>\n            </Else>\n          </If>\n        </>\n      </DocumentTitle>\n    );\n  }\n}\n","import { PAGE_ROUTE } from 'app/config/constants';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const OncoKBLink: React.FunctionComponent<{}> = () => {\n  return <Link to={PAGE_ROUTE.HOME}>https://www.oncokb.org</Link>;\n};\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n} from 'mobx';\nimport autobind from 'autobind-decorator';\nimport { Redirect } from 'react-router-dom';\nimport client from 'app/shared/api/clientInstance';\nimport { ManagedUserVM } from 'app/shared/api/generated/API';\nimport {\n  LicenseType,\n  ONCOKB_TM,\n  PAGE_ROUTE,\n  QUERY_SEPARATOR_FOR_QUERY_STRING,\n} from 'app/config/constants';\nimport { Alert } from 'react-bootstrap';\nimport { RouterStore } from 'mobx-react-router';\nimport * as QueryString from 'query-string';\nimport WindowStore from 'app/store/WindowStore';\nimport SmallPageContainer from 'app/components/SmallPageContainer';\nimport MessageToContact from 'app/shared/texts/MessageToContact';\nimport { ErrorAlert } from 'app/shared/alert/ErrorAlert';\nimport {\n  FormSection,\n  NewAccountForm,\n} from 'app/components/newAccountForm/NewAccountForm';\nimport { getErrorMessage, OncoKBError } from 'app/shared/alert/ErrorAlertUtils';\nimport { LicenseInquireLink } from 'app/shared/links/LicenseInquireLink';\nimport _ from 'lodash';\nimport ReCAPTCHA from 'app/shared/recaptcha/recaptcha';\nimport { setRecaptchaToken } from 'app/indexUtils';\n\nexport type NewUserRequiredFields = {\n  username: string;\n  password: string;\n  email: string;\n  jobTitle?: string;\n};\n\nenum RegisterStatus {\n  REGISTERED,\n  NOT_SUCCESS,\n  NA,\n  READY_REDIRECT,\n}\n\nexport type IRegisterProps = {\n  routing: RouterStore;\n  windowStore: WindowStore;\n};\n\nexport const LICENSE_HASH_KEY = 'license';\nexport const SHOW_HASH_KEY = 'show';\n\n@inject('routing', 'windowStore')\n@observer\nexport class RegisterPage extends React.Component<IRegisterProps> {\n  @observable registerStatus: RegisterStatus = RegisterStatus.NA;\n  @observable registerError: OncoKBError;\n  @observable selectedLicense: LicenseType | undefined;\n  @observable visibleSections: FormSection[] | undefined;\n\n  readonly reactions: IReactionDisposer[] = [];\n\n  recaptcha = new ReCAPTCHA();\n\n  constructor(props: Readonly<IRegisterProps>) {\n    super(props);\n    this.reactions.push(\n      reaction(\n        () => [props.routing.location.hash],\n        ([hash]) => {\n          const queryStrings = QueryString.parse(hash, {\n            arrayFormat: QUERY_SEPARATOR_FOR_QUERY_STRING,\n          });\n          if (queryStrings[LICENSE_HASH_KEY]) {\n            let urlLicense = queryStrings[LICENSE_HASH_KEY];\n            if (typeof urlLicense === 'string') {\n              urlLicense = urlLicense.toUpperCase();\n              this.selectedLicense = urlLicense as LicenseType;\n            }\n          }\n          if (queryStrings[LICENSE_HASH_KEY]) {\n            const showStr = queryStrings[SHOW_HASH_KEY];\n            switch (typeof showStr) {\n              case 'string':\n                if (showStr) {\n                  this.visibleSections = [\n                    showStr.toUpperCase(),\n                  ] as FormSection[];\n                }\n                break;\n              case 'object':\n                if (_.isArray(showStr)) {\n                  this.visibleSections = showStr.map(str =>\n                    str.toUpperCase()\n                  ) as FormSection[];\n                }\n                break;\n              default:\n                break;\n            }\n          }\n        },\n        { fireImmediately: true }\n      ),\n      reaction(\n        () => this.selectedLicense,\n        newSelection => {\n          const parsedHashQueryString = QueryString.stringify(\n            {\n              [LICENSE_HASH_KEY]: newSelection,\n            },\n            { arrayFormat: QUERY_SEPARATOR_FOR_QUERY_STRING }\n          );\n          window.location.hash = parsedHashQueryString;\n        }\n      )\n    );\n  }\n\n  componentWillUnmount(): void {\n    this.reactions.forEach(componentReaction => componentReaction());\n  }\n\n  @autobind\n  @action\n  async handleValidSubmit(newAccount: Partial<ManagedUserVM>) {\n    const token: string = await this.recaptcha.getToken();\n    setRecaptchaToken(token);\n    client\n      .registerAccountUsingPOST({\n        managedUserVm: newAccount as ManagedUserVM,\n      })\n      .then(this.successToRegistered, this.failedToRegistered);\n  }\n\n  @action.bound\n  redirectToAccountPage() {\n    this.registerStatus = RegisterStatus.READY_REDIRECT;\n  }\n\n  @action.bound\n  successToRegistered() {\n    this.registerStatus = RegisterStatus.REGISTERED;\n    // setTimeout(this.redirectToAccountPage, REDIRECT_TIMEOUT_MILLISECONDS);\n  }\n\n  @action.bound\n  failedToRegistered(error: OncoKBError) {\n    this.registerStatus = RegisterStatus.NOT_SUCCESS;\n    this.registerError = error;\n    window.scrollTo(0, 0);\n  }\n\n  getErrorMessage(additionalInfo = '') {\n    return (\n      (additionalInfo ? `${additionalInfo}, w` : 'W') +\n      'e were not able to create an account for you.'\n    );\n  }\n\n  @computed\n  get errorRegisterMessage() {\n    return this.getErrorMessage(getErrorMessage(this.registerError));\n  }\n\n  @autobind\n  @action\n  onSelectLicense(license: LicenseType | undefined) {\n    this.selectedLicense = license;\n  }\n\n  getRegisteredMessage(licenseType: LicenseType | undefined) {\n    if (licenseType === undefined) {\n      return '';\n    }\n    const companyName =\n      licenseType === LicenseType.HOSPITAL ? 'hospital' : 'company';\n    return (\n      <>\n        <p>\n          Thank you for creating an {ONCOKB_TM} account. We have sent you an\n          email to verify your email address. Please follow the instructions in\n          the email to complete registration.\n        </p>\n        <p>\n          After validating your email address, please allow 1-2 business days\n          for us to review your request.{' '}\n          {licenseType === LicenseType.ACADEMIC ? (\n            ''\n          ) : (\n            <span>\n              If your {companyName} already has a license, we will grant you\n              access soon. If your {companyName} does not yet have a license, we\n              will contact you with terms. Please reach out to{' '}\n              <LicenseInquireLink /> with any questions.\n            </span>\n          )}\n        </p>\n      </>\n    );\n  }\n\n  render() {\n    if (this.registerStatus === RegisterStatus.READY_REDIRECT) {\n      return <Redirect to={PAGE_ROUTE.HOME} />;\n    }\n\n    if (this.registerStatus === RegisterStatus.REGISTERED) {\n      return (\n        <SmallPageContainer>\n          <div>\n            <Alert variant=\"info\">\n              {this.getRegisteredMessage(this.selectedLicense)}\n            </Alert>\n          </div>\n        </SmallPageContainer>\n      );\n    }\n\n    return (\n      <div>\n        {this.registerError ? <ErrorAlert error={this.registerError} /> : null}\n        <NewAccountForm\n          isLargeScreen={this.props.windowStore.isLargeScreen}\n          defaultLicense={this.selectedLicense}\n          onSubmit={this.handleValidSubmit}\n          visibleSections={this.visibleSections}\n          byAdmin={false}\n          onSelectLicense={this.onSelectLicense}\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Row, Col, Tab, Nav } from 'react-bootstrap';\nimport AppStore from 'app/store/AppStore';\nimport { inject, observer } from 'mobx-react';\nimport { PAGE_ROUTE, PAGE_TITLE } from 'app/config/constants';\nimport { observable, IReactionDisposer, reaction, computed } from 'mobx';\nimport { RouterStore } from 'mobx-react-router';\nimport APIAccessPage from 'app/pages/apiAccessGroup/APIAccessPage';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport { TermsPage } from 'app/pages/apiAccessGroup/TermsPage';\nimport WindowStore from 'app/store/WindowStore';\nimport { RegisterPage } from 'app/pages/RegisterPage';\nimport ReadOnlyMode from 'app/shared/readonly/ReadOnlyMode';\n\ntype ApiAccessPageNavTabProps = {\n  appStore: AppStore;\n  routing: RouterStore;\n  authenticationStore: AuthenticationStore;\n  windowStore: WindowStore;\n};\n\nexport enum TabKey {\n  API_ACCESS = PAGE_ROUTE.API_ACCESS,\n  TERMS = PAGE_ROUTE.TERMS,\n  REGISTER = PAGE_ROUTE.REGISTER,\n}\n\nconst TAB_TITLES: { [key in TabKey]: string } = {\n  [TabKey.TERMS]: PAGE_TITLE.TERMS,\n  [TabKey.REGISTER]: 'Apply for a license',\n  [TabKey.API_ACCESS]: 'API Access',\n};\n\n// Wrap the register page with the ReadOnlyMode HOC, so it is disabled\n// when application is in read only mode.\nconst ReadOnlyRegisterPage = ReadOnlyMode(RegisterPage);\n\n@inject('appStore', 'routing', 'authenticationStore', 'windowStore')\n@observer\nexport class ApiAccessPageNavTab extends React.Component<\n  ApiAccessPageNavTabProps\n> {\n  readonly reactions: IReactionDisposer[] = [];\n  private tabKeys = [TabKey.API_ACCESS, TabKey.TERMS, TabKey.REGISTER];\n\n  @observable selectedTab: TabKey = TabKey.API_ACCESS;\n\n  constructor(props: ApiAccessPageNavTabProps) {\n    super(props);\n    reaction(\n      () => this.selectedTab,\n      newSelectedTab => {\n        this.props.routing.history.push({\n          pathname: newSelectedTab as any,\n          hash: this.props.routing.location.hash,\n        });\n      }\n    ),\n      reaction(\n        () => [props.routing.location.pathname],\n        ([pathName]) => {\n          if (Object.keys(TabKey).includes(pathName)) {\n            this.selectedTab = (pathName as unknown) as TabKey;\n          }\n        },\n        { fireImmediately: true }\n      );\n  }\n\n  componentWillUnmount() {\n    this.reactions.forEach(componentReaction => componentReaction());\n  }\n\n  getTabPane(tabKey: TabKey) {\n    switch (tabKey) {\n      case TabKey.API_ACCESS:\n        return (\n          <APIAccessPage\n            routing={this.props.routing}\n            windowStore={this.props.windowStore}\n            authenticationStore={this.props.authenticationStore}\n          />\n        );\n      case TabKey.TERMS:\n        return <TermsPage />;\n      case TabKey.REGISTER:\n        return (\n          <ReadOnlyRegisterPage\n            routing={this.props.routing}\n            windowStore={this.props.windowStore}\n          />\n        );\n      default:\n        return <></>;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Tab.Container\n          id=\"license-page-nav-tabs\"\n          activeKey={this.selectedTab}\n          onSelect={(selectedTab: string) => {\n            this.selectedTab = selectedTab as any;\n          }}\n        >\n          <Row>\n            <Col sm={2}>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                {this.tabKeys.map(tabKey => (\n                  <Nav.Item key={tabKey}>\n                    <Nav.Link eventKey={tabKey}>{TAB_TITLES[tabKey]}</Nav.Link>\n                  </Nav.Item>\n                ))}\n              </Nav>\n            </Col>\n            <Col sm={10}>\n              <Tab.Content>\n                {this.tabKeys.map(tabKey => (\n                  <Tab.Pane eventKey={tabKey} key={tabKey}>\n                    {this.getTabPane(tabKey)}\n                  </Tab.Pane>\n                ))}\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n      </>\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport OncoKBTable, {\n  SearchColumn,\n} from 'app/components/oncokbTable/OncoKBTable';\nimport poTxs from 'content/files/precisionOncologyTherapies/precision_oncology_therapies.json';\nimport poTxsExcel from 'content/files/precisionOncologyTherapies/precision_oncology_therapies.xlsx';\nimport {\n  COMPONENT_PADDING,\n  LG_TABLE_FIXED_HEIGHT,\n  ONCOKB_TM,\n} from 'app/config/constants';\nimport { filterByKeyword } from 'app/shared/utils/Utils';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport Select from 'react-select';\nimport _ from 'lodash';\nimport { Input } from 'reactstrap';\nimport { DownloadButton } from 'app/components/downloadButton/DownloadButton';\nimport WithSeparator from 'react-with-separator';\nimport InfoIcon from 'app/shared/icons/InfoIcon';\nimport ShowHideText from 'app/shared/texts/ShowHideText';\nimport { Linkout } from 'app/shared/links/Linkout';\n\ntype PrecisionOncologyTherapy = {\n  year: string;\n  tx: string;\n  biomarker: string;\n  biomarkerDetection: string;\n  drugClassification: string;\n};\ntype SelectOption = {\n  value: string;\n  label: string;\n};\n\nenum DRUG_CLASSIFICATION {\n  FIRST_IN_CLASS = 'First-in-class',\n  MECHANISTICALLY_DISTINCT = 'Mechanistically-distinct',\n  FOLLOW_ON = 'Follow-on',\n  RESISTANCE = 'Resistance',\n  NA = 'NA',\n}\n\nconst sortAndUniqByValue = (\n  txs: PrecisionOncologyTherapy[],\n  key: keyof PrecisionOncologyTherapy,\n  separators?: string[]\n) => {\n  return _.chain(txs)\n    .reduce((acc, tx: PrecisionOncologyTherapy) => {\n      const methods =\n        (separators || []).length > 0\n          ? tx[key]\n              .split(new RegExp(`${separators?.join('|')}`))\n              .map(method => method.trim())\n          : [tx[key]];\n      const options = methods.map((method: string) => {\n        return {\n          value: method,\n          label: method,\n        };\n      });\n      acc.push(...options);\n      return acc;\n    }, [] as SelectOption[])\n    .uniqBy('value')\n    .sortBy('value')\n    .value();\n};\nconst footnotes = {\n  a:\n    'The first year the drug received FDA-approval in any indication, irrespective of whether the biomarker was included in the FDA-drug at that time',\n  b:\n    'Includes pathognomonic and indication-specific biomarkers, that while not specifically listed in the Indications and Usage section of the FDA drug label, are targeted by the precision oncology drug (ex KIT D816 in systemic mastocytosis [avapritinib] and SMARCB1 deletion in epithelioid sarcoma [tazemetostat])',\n  c:\n    'If there is a corresponding FDA-cleared or -approved companion diagnostic device for biomarker identification, the detection method associated with this device is listed; if the biomarker can be detected by a DNA/NGS-based detection method this is listed first',\n  d:\n    'Only drugs with an FDA-specified biomarker that can be detected by a DNA/NGS-based detection method are classified',\n  e:\n    'Pembrolizumab in combination with lenvatinib is FDA-approved approved for endometrial cancer that is pMMR',\n  '*':\n    'The exact year of the drug’s first FDA-approval could not be determined due to absent or ambiguous data on FDA.gov website',\n  naDetectionMethod:\n    'Only precision oncology drugs in which the biomarker can be identified by a DNA/NGS detection method are further classified as first-in-class, mechanically distinct, follow-on, or resistance drugs.',\n};\n\nconst DefinitionTooltip: React.FunctionComponent<{\n  footnoteKey: keyof typeof footnotes;\n}> = props => {\n  return (\n    <InfoIcon\n      className={'ml-2'}\n      overlay={<span>{footnotes[props.footnoteKey]}</span>}\n    />\n  );\n};\nconst PrecisionOncologyTherapiesPage: React.FunctionComponent<{}> = props => {\n  const [showDefinition, setShowDefinition] = useState(false);\n  const [hasFilter, setHasFilter] = useState(false);\n  const [biomarkerSearch, setBiomarkerSearch] = useState('');\n  const [therapySearch, setTherapySearch] = useState('');\n  const [selectedDetectionMethods, setSelectedDetectionMethods] = useState<\n    SelectOption[]\n  >([]);\n  const [\n    selectedDrugClassifications,\n    setSelectedDrugClassifications,\n  ] = useState<SelectOption[]>([]);\n  const [filteredPoTxs, setFilteredPoTxs] = useState<\n    PrecisionOncologyTherapy[]\n  >(poTxs);\n  const [drugClassificationStats, setDrugClassificationStats] = useState<{\n    [key: string]: PrecisionOncologyTherapy[];\n  }>({});\n\n  useEffect(() => {\n    if (\n      biomarkerSearch ||\n      therapySearch ||\n      selectedDetectionMethods.length > 0 ||\n      selectedDrugClassifications.length > 0\n    ) {\n      setHasFilter(true);\n    } else {\n      setHasFilter(false);\n    }\n    setFilteredPoTxs([\n      ...poTxs.filter((tx: PrecisionOncologyTherapy) => {\n        if (\n          selectedDetectionMethods.length > 0 &&\n          selectedDetectionMethods.filter(selectedDetectionMethod =>\n            tx.biomarkerDetection.includes(selectedDetectionMethod.value)\n          ).length === 0\n        ) {\n          return false;\n        }\n        if (\n          selectedDrugClassifications.length > 0 &&\n          !selectedDrugClassifications\n            .map(dc => dc.value)\n            .includes(tx.drugClassification)\n        ) {\n          return false;\n        }\n        if (\n          therapySearch &&\n          tx.tx &&\n          !tx.tx.toLowerCase().includes(therapySearch.toLowerCase())\n        ) {\n          return false;\n        }\n        if (\n          biomarkerSearch &&\n          tx.biomarker &&\n          !tx.biomarker.toLowerCase().includes(biomarkerSearch.toLowerCase())\n        ) {\n          return false;\n        }\n        return true;\n      }),\n    ]);\n  }, [\n    biomarkerSearch,\n    therapySearch,\n    selectedDetectionMethods.length,\n    selectedDrugClassifications.length,\n  ]);\n\n  useEffect(() => {\n    setDrugClassificationStats(\n      _.groupBy(filteredPoTxs, tx => tx.drugClassification)\n    );\n  }, [filteredPoTxs]);\n\n  const clearFilters = () => {\n    setBiomarkerSearch('');\n    setTherapySearch('');\n    setSelectedDetectionMethods([]);\n    setSelectedDrugClassifications([]);\n  };\n\n  const columns: SearchColumn<PrecisionOncologyTherapy>[] = [\n    {\n      accessor: 'tx',\n      Header: <span>Precision oncology therapy</span>,\n      onFilter: (data: PrecisionOncologyTherapy, keyword) =>\n        filterByKeyword(data.tx, keyword),\n    },\n    {\n      accessor: 'biomarker',\n      Header: (\n        <span>\n          FDA-recognized biomarker(s)\n          <DefinitionTooltip footnoteKey={'b'} />\n        </span>\n      ),\n      onFilter: (data: PrecisionOncologyTherapy, keyword) =>\n        filterByKeyword(data.biomarker, keyword),\n    },\n    {\n      accessor: 'biomarkerDetection',\n      Header: (\n        <span>\n          Method of biomarker detection\n          <DefinitionTooltip footnoteKey={'c'} />\n        </span>\n      ),\n      onFilter: (data: PrecisionOncologyTherapy, keyword) =>\n        filterByKeyword(data.biomarkerDetection, keyword),\n    },\n    {\n      accessor: 'drugClassification',\n      Header: (\n        <span>\n          Drug classification\n          <DefinitionTooltip footnoteKey={'d'} />\n        </span>\n      ),\n      Cell(tableProps: { original: PrecisionOncologyTherapy }): JSX.Element {\n        return (\n          <span>\n            {tableProps.original.drugClassification}\n            {'NA' === tableProps.original.drugClassification && (\n              <DefinitionTooltip footnoteKey={'naDetectionMethod'} />\n            )}\n          </span>\n        );\n      },\n      onFilter: (data: PrecisionOncologyTherapy, keyword) =>\n        filterByKeyword(data.drugClassification, keyword),\n    },\n    {\n      accessor: 'year',\n      Header: (\n        <span>\n          Year of drug’s first FDA-approval\n          <DefinitionTooltip footnoteKey={'a'} />\n        </span>\n      ),\n      Cell(tableProps: { original: PrecisionOncologyTherapy }) {\n        if (tableProps.original.year.endsWith('*')) {\n          return (\n            <span>\n              {tableProps.original.year.slice(\n                0,\n                tableProps.original.year.length - 1\n              )}\n              <DefinitionTooltip footnoteKey={'*'} />\n            </span>\n          );\n        } else {\n          return tableProps.original.year;\n        }\n      },\n      onFilter: (data: PrecisionOncologyTherapy, keyword) =>\n        filterByKeyword(data.year, keyword),\n    },\n  ];\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <h2 className={'mb-3'}>FDA-Approved Precision Oncology Therapies</h2>\n          <div>\n            The following US Food and Drug Administration (FDA)-approved\n            therapies are considered precision oncology therapies by {ONCOKB_TM}{' '}\n            and are further classified as either first-in-class,\n            mechanistically-distinct, follow-on, or resistance based on{' '}\n            <Linkout link=\"https://aacrjournals.org/cancerdiscovery/article/doi/10.1158/2159-8290.CD-23-0467/729589/Quantifying-the-Expanding-Landscape-of-Clinical\">\n              Suehnholz et al., Cancer Discovery 2023\n            </Linkout>{' '}\n            (also refer to definitions below).\n            <ShowHideText\n              className={'my-2'}\n              show={showDefinition}\n              title={'definitions'}\n              content={\n                <ol type={'a'}>\n                  <li>\n                    <b>Precision oncology therapy</b>: A drug that is most\n                    effective in a molecularly defined subset of patients and\n                    for which pre-treatment molecular profiling is required for\n                    optimal patient selection\n                  </li>\n                  <li>\n                    <b>First-in-class precision oncology therapy</b>: A\n                    precision oncology therapy targeting an alteration\n                    previously classified as not actionable\n                  </li>\n                  <li>\n                    <b>Mechanistically-distinct precision oncology therapy</b>:\n                    A precision oncology therapy targeting a previously\n                    actionable genomic alteration via a distinct\n                    mechanisms-of-action, or with significantly different\n                    selectivity versus older drugs\n                  </li>\n                  <li>\n                    <b>Follow-on precision oncology therapy</b>: A precision\n                    oncology therapy with a mechanism of action largely similar\n                    to a previously FDA-approved first-in-class precision\n                    oncology drug\n                  </li>\n                  <li>\n                    <b>Resistance precision oncology therapy</b>: A precision\n                    oncology therapy with a mechanism of action largely similar\n                    to an FDA-approved first-in-class precision oncology drug,\n                    but with an expanded mutation profile that targets mutations\n                    that arise in the context of resistance to the\n                    first-in-class drug\n                  </li>\n                </ol>\n              }\n              onClick={() => setShowDefinition(!showDefinition)}\n            />\n          </div>\n        </Col>\n      </Row>\n      <Row\n        style={{ paddingLeft: '0.5rem', paddingRight: '0.5rem' }}\n        className={'mb-2'}\n      >\n        <Col className={classnames(...COMPONENT_PADDING)} lg={2} md={6} xs={12}>\n          <Input\n            style={{ height: 38 }}\n            placeholder={'Search Therapy'}\n            value={therapySearch}\n            onChange={event => setTherapySearch(event.target.value)}\n          />\n        </Col>\n        <Col className={classnames(...COMPONENT_PADDING)} lg={2} md={6} xs={12}>\n          <Input\n            style={{ height: 38 }}\n            placeholder={'Search Biomarker'}\n            value={biomarkerSearch}\n            onChange={event => setBiomarkerSearch(event.target.value)}\n          />\n        </Col>\n        <Col className={classnames(...COMPONENT_PADDING)} lg={4} md={6} xs={12}>\n          <Select\n            placeholder={'Select Detection Method'}\n            options={sortAndUniqByValue(poTxs, 'biomarkerDetection', [\n              'or',\n              ',',\n            ])}\n            isClearable={true}\n            value={selectedDetectionMethods}\n            isMulti\n            closeMenuOnSelect={false}\n            onChange={(selectedOptions: any[]) => {\n              setSelectedDetectionMethods(selectedOptions || []);\n            }}\n          />\n        </Col>\n        <Col className={classnames(...COMPONENT_PADDING)} lg={4} md={6} xs={12}>\n          <Select\n            placeholder={'Select Drug Classification'}\n            options={sortAndUniqByValue(poTxs, 'drugClassification')}\n            isClearable={true}\n            value={selectedDrugClassifications}\n            isMulti\n            closeMenuOnSelect={false}\n            onChange={(selectedOptions: any[]) => {\n              setSelectedDrugClassifications(selectedOptions || []);\n            }}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col className={'d-flex justify-content-between align-items-center'}>\n          <div>\n            <b>\n              Showing {_.uniq(filteredPoTxs.map(tx => tx.tx)).length} therapies\n            </b>\n            : (\n            <WithSeparator separator={', '}>\n              {[\n                DRUG_CLASSIFICATION.FIRST_IN_CLASS,\n                DRUG_CLASSIFICATION.MECHANISTICALLY_DISTINCT,\n                DRUG_CLASSIFICATION.FOLLOW_ON,\n                DRUG_CLASSIFICATION.RESISTANCE,\n                DRUG_CLASSIFICATION.NA,\n              ].map(classification => (\n                <span key={classification}>\n                  {drugClassificationStats[classification]\n                    ? _.uniq(\n                        drugClassificationStats[classification].map(\n                          row => row.tx\n                        )\n                      ).length\n                    : 0}{' '}\n                  {classification}\n                </span>\n              ))}\n            </WithSeparator>\n            )\n            {hasFilter ? (\n              <Button\n                variant=\"outline-primary\"\n                className={'ml-2'}\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={clearFilters}\n                size={'sm'}\n              >\n                <span className={'fa fa-times mr-1'}></span>\n                Reset filters\n              </Button>\n            ) : undefined}\n          </div>\n          <DownloadButton className={'ml-2'} href={poTxsExcel} size={'sm'}>\n            Download Table\n          </DownloadButton>\n        </Col>\n      </Row>\n      <Row>\n        <Col className={'mt-2'}>\n          <OncoKBTable\n            className={'po-tx-table'}\n            columns={columns}\n            data={filteredPoTxs}\n            pageSize={filteredPoTxs.length < 10 ? 10 : filteredPoTxs.length}\n            disableSearch\n            defaultSorted={[\n              {\n                id: 'year',\n                desc: true,\n              },\n            ]}\n            style={{\n              height: LG_TABLE_FIXED_HEIGHT,\n            }}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\nexport default PrecisionOncologyTherapiesPage;\n","import * as React from 'react';\nimport Iframe from 'react-iframe';\nimport { inject } from 'mobx-react';\nimport DocumentTitle from 'react-document-title';\nimport { PAGE_TITLE } from 'app/config/constants';\nimport { getPageTitle } from 'app/shared/utils/Utils';\n\nconst FAQPageContent: React.FunctionComponent<{\n  userMessageBannerEnabled: boolean;\n}> = props => {\n  return (\n    <DocumentTitle title={getPageTitle(PAGE_TITLE.FAQ)}>\n      <Iframe\n        url=\"https://faq.oncokb.org\"\n        className={\n          props.userMessageBannerEnabled ? 'faq-iframe-high-top' : 'faq-iframe'\n        }\n      />\n    </DocumentTitle>\n  );\n};\nconst FAQPage = inject((stores: any) => ({\n  userMessageBannerEnabled: stores.appStore.userMessageBannerEnabled,\n}))(FAQPageContent);\nexport default FAQPage;\n","export default __webpack_public_path__ + \"content/precision_oncology_therapies.xlsx\";","import { Redirect, Route, Switch } from 'react-router-dom';\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\nimport Login from 'app/components/login/LoginPage';\nimport { Logout } from 'app/components/login/logout';\nimport { PrivateRoute } from 'app/shared/auth/private-route';\nimport { AUTHORITIES, PAGE_ROUTE } from 'app/config/constants';\nimport HomePage from 'app/pages/HomePage';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport CancerGenesPage from 'app/pages/CancerGenesPage';\nimport ActionableGenesPage from 'app/pages/actionableGenesPage/ActionableGenesPage';\nimport { RouterStore } from 'mobx-react-router';\nimport GenePage from 'app/pages/genePage/GenePage';\nimport AlterationPage from 'app/pages/alterationPage/AlterationPage';\nimport { AccountPage } from 'app/pages/AccountPage';\nimport ActivateAccount from 'app/components/account/ActivateAccount';\nimport { PasswordResetInit } from 'app/components/account/PasswordResetInit';\nimport PasswordResetFinish from 'app/components/account/PasswordResetFinish';\nimport PageNotFound from 'app/shared/error/page-not-found';\nimport AccountPassword from 'app/components/account/AccountPassword';\nimport AdminRoutes from 'app/routes/AdminRoutes';\nimport PageContainer from 'app/components/PageContainer';\nimport React from 'react';\nimport LevelOfEvidencePage, { Version } from 'app/pages/LevelOfEvidencePage';\nimport NewsPage from 'app/pages/newsPage/NewsPage';\nimport { RecaptchaBoundaryRoute } from '../shared/auth/RecaptchaBoundaryRoute';\nimport GenomicPage from 'app/pages/genomicPage/GenomicPage';\nimport UserPage from 'app/pages/userPage/UserPage';\nimport AppStore from 'app/store/AppStore';\nimport ActivateTrialFinish from 'app/components/account/ActivateTrialFinish';\nimport CompanyPage from 'app/pages/companyPage/CompanyPage';\nimport { CreateCompanyUsersPage } from 'app/pages/CreateCompanyUsersPage';\nimport { AboutPageNavTab } from 'app/pages/aboutGroup/AboutPageNavTab';\nimport { ApiAccessPageNavTab } from 'app/pages/apiAccessGroup/ApiAccessPageNavTab';\nimport FAQPage from 'app/pages/FAQPage';\nimport ReadOnlyMode from 'app/shared/readonly/ReadOnlyMode';\nimport * as QueryString from 'query-string';\nimport PrecisionOncologyTherapiesPage from 'app/pages/precisionOncologyTherapiesPage/precisionOncologyTherapiesPage';\n\nconst getOldLevelsRedirectRoute = (hash: string) => {\n  const queryStrings = QueryString.parse(hash) as {\n    version: Version;\n  };\n  const redirectPath = {\n    pathname: PAGE_ROUTE.V2,\n    hash: '',\n  };\n  if (queryStrings.version) {\n    switch (queryStrings.version) {\n      case Version.DX:\n        redirectPath.pathname = PAGE_ROUTE.DX;\n        break;\n      case Version.PX:\n        redirectPath.pathname = PAGE_ROUTE.PX;\n        break;\n      case Version.FDA_NGS:\n        redirectPath.pathname = PAGE_ROUTE.FDA_NGS;\n        break;\n      default:\n        redirectPath.hash = window.location.hash;\n        break;\n    }\n  }\n  return <Redirect to={redirectPath} />;\n};\n\nconst AppRouts = (props: {\n  authenticationStore: AuthenticationStore;\n  appStore: AppStore;\n  routing: RouterStore;\n}) => {\n  // Redirect needs to be defined first\n  return (\n    <Switch>\n      <Route exact path={PAGE_ROUTE.HOME} component={HomePage} />\n      <Redirect exact from={'/updates'} to={PAGE_ROUTE.NEWS} />\n      <Redirect exact from={'/genes'} to={PAGE_ROUTE.CANCER_GENES} />\n      <Redirect\n        from={PAGE_ROUTE.LEGACY_ACTIONABLE_GENE}\n        to={{\n          pathname: PAGE_ROUTE.ACTIONABLE_GENE,\n          search: props.routing.location.search,\n          hash: props.routing.location.hash,\n        }}\n      />\n      <Redirect\n        exact\n        from={PAGE_ROUTE.LEGACY_API_ACCESS}\n        to={PAGE_ROUTE.API_ACCESS}\n      />\n      <Redirect\n        exact\n        from={PAGE_ROUTE.LEGACY_DATA_ACCESS}\n        to={PAGE_ROUTE.API_ACCESS}\n      />\n      <Redirect\n        exact\n        from={PAGE_ROUTE.LEGACY_CANCER_GENES}\n        to={PAGE_ROUTE.CANCER_GENES}\n      />\n      <Redirect\n        exact\n        from={'/gene/:hugoSymbol/alteration/:alteration'}\n        to={PAGE_ROUTE.ALTERATION}\n      />\n      <Redirect\n        exact\n        from={'/gene/:hugoSymbol/variant/:alteration'}\n        to={PAGE_ROUTE.ALTERATION}\n      />\n      <PageContainer>\n        <Switch>\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.LOGIN}\n            component={Login}\n          />\n          <ErrorBoundaryRoute\n            exact\n            path={PAGE_ROUTE.LOGOUT}\n            component={Logout}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.REGISTER}\n            component={ApiAccessPageNavTab}\n          />\n          <ErrorBoundaryRoute\n            exact\n            path={PAGE_ROUTE.API_ACCESS}\n            component={ApiAccessPageNavTab}\n          />\n          <ErrorBoundaryRoute\n            exact\n            path={PAGE_ROUTE.FAQ_ACCESS}\n            component={FAQPage}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.CANCER_GENES}\n            component={CancerGenesPage}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.ACTIONABLE_GENE}\n            component={ActionableGenesPage}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.PO_TX}\n            component={PrecisionOncologyTherapiesPage}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.GENE}\n            component={GenePage}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.ALTERATION}\n            component={AlterationPage}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.HGVSG_WITH_QUERY}\n            component={GenomicPage}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.GENOMIC_CHANGE_WITH_QUERY}\n            component={GenomicPage}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.ALTERATION_TUMOR_TYPE}\n            component={AlterationPage}\n          />\n          <Route exact path={PAGE_ROUTE.ABOUT} component={AboutPageNavTab} />\n          <Route exact path={PAGE_ROUTE.TEAM} component={AboutPageNavTab} />\n          <Route exact path={PAGE_ROUTE.SOP} component={AboutPageNavTab} />\n          <Route\n            exact\n            path={PAGE_ROUTE.YEAR_END_SUMMARY}\n            component={AboutPageNavTab}\n          />\n          <Route exact path={PAGE_ROUTE.NEWS} component={NewsPage} />\n          <Route\n            exact\n            path={PAGE_ROUTE.FDA_RECOGNITION}\n            component={AboutPageNavTab}\n          />\n          <Route\n            exact\n            path={PAGE_ROUTE.TERMS}\n            component={ApiAccessPageNavTab}\n          />\n          <Route exact path={PAGE_ROUTE.LEVELS}>\n            {getOldLevelsRedirectRoute(window.location.hash)}\n          </Route>\n          <Route exact path={PAGE_ROUTE.DX} component={LevelOfEvidencePage} />\n          <Route exact path={PAGE_ROUTE.PX} component={LevelOfEvidencePage} />\n          <Route exact path={PAGE_ROUTE.V2} component={LevelOfEvidencePage} />\n          <Route\n            exact\n            path={PAGE_ROUTE.FDA_NGS}\n            component={LevelOfEvidencePage}\n          />\n\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.ACCOUNT_VERIFY}\n            render={ReadOnlyMode(ActivateAccount)}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.ACCOUNT_PASSWORD_RESET_REQUEST}\n            render={ReadOnlyMode(PasswordResetInit)}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={props.authenticationStore.isUserAuthenticated}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.ACCOUNT_PASSWORD_RESET_FINISH}\n            render={ReadOnlyMode(PasswordResetFinish)}\n          />\n          <RecaptchaBoundaryRoute\n            exact\n            isUserAuthenticated={false}\n            appStore={props.appStore}\n            path={PAGE_ROUTE.ACCOUNT_ACTIVE_TRIAL_FINISH}\n            render={ReadOnlyMode(ActivateTrialFinish)}\n          />\n          <PrivateRoute\n            authenticationStore={props.authenticationStore}\n            routing={props.routing}\n            path={PAGE_ROUTE.ADMIN}\n            component={AdminRoutes}\n            hasAnyAuthorities={[AUTHORITIES.ADMIN]}\n          />\n          <PrivateRoute\n            exact\n            authenticationStore={props.authenticationStore}\n            routing={props.routing}\n            path={PAGE_ROUTE.ACCOUNT_PASSWORD}\n            render={ReadOnlyMode(AccountPassword)}\n            hasAnyAuthorities={[AUTHORITIES.ADMIN, AUTHORITIES.USER]}\n          />\n          <PrivateRoute\n            exact\n            path={PAGE_ROUTE.ACCOUNT_SETTINGS}\n            authenticationStore={props.authenticationStore}\n            routing={props.routing}\n            component={AccountPage}\n            hasAnyAuthorities={[AUTHORITIES.ADMIN, AUTHORITIES.USER]}\n          />\n          <PrivateRoute\n            exact\n            path={PAGE_ROUTE.USER}\n            authenticationStore={props.authenticationStore}\n            routing={props.routing}\n            render={ReadOnlyMode(UserPage, true)}\n            hasAnyAuthorities={[AUTHORITIES.ADMIN]}\n          />\n          <PrivateRoute\n            exact\n            path={PAGE_ROUTE.COMPANY}\n            authenticationStore={props.authenticationStore}\n            routing={props.routing}\n            render={ReadOnlyMode(CompanyPage, true)}\n            hasAnyAuthorities={[AUTHORITIES.ADMIN]}\n          />\n          <PrivateRoute\n            exact\n            path={PAGE_ROUTE.CREATE_COMPANY_USERS}\n            authenticationStore={props.authenticationStore}\n            routing={props.routing}\n            render={ReadOnlyMode(CreateCompanyUsersPage)}\n            hasAnyAuthorities={[AUTHORITIES.ADMIN]}\n          />\n          <ErrorBoundaryRoute component={PageNotFound} />\n        </Switch>\n      </PageContainer>\n    </Switch>\n  );\n};\nexport default AppRouts;\n","import React, { useState } from 'react';\nimport { If, Then, Else } from 'react-if';\nimport {\n  Feedback,\n  FeedbackContent,\n  FeedbackType,\n} from 'app/components/feedback/types';\nimport {\n  FeedbackForm,\n  getAnnotationString,\n} from 'app/components/feedback/FeedbackForm';\nimport { Modal } from 'react-bootstrap';\nimport client from 'app/shared/api/clientInstance';\nimport { notifyError, notifySuccess } from 'app/shared/utils/NotificationUtils';\nimport LoadingIndicator from 'app/components/loadingIndicator/LoadingIndicator';\nimport { ONCOKB_TM } from 'app/config/constants';\n\nexport const FeedbackModal: React.FunctionComponent<{\n  showModal: boolean;\n  onHideModal: () => void;\n  feedback: Feedback;\n}> = props => {\n  const [sendingFeedback, setSendingFeedback] = useState(false);\n  const [sentFeedback, setSentFeedback] = useState(false);\n\n  function getFeedbackTitle() {\n    let modalTitle = '';\n    switch (props.feedback.type) {\n      case FeedbackType.ANNOTATION:\n        modalTitle = `Annotation suggestion for ${getAnnotationString(\n          props.feedback.annotation\n        )}`;\n        break;\n      case FeedbackType.GENERAL:\n        modalTitle = 'Feedback';\n        break;\n      default:\n        break;\n    }\n    return modalTitle;\n  }\n\n  const modalTitle = getFeedbackTitle();\n\n  function getFeedbackEmailBody(description?: string) {\n    let body = description ? description : '';\n    switch (props.feedback.type) {\n      case FeedbackType.ANNOTATION:\n        body = 'Justification (including references):\\n\\n' + body;\n        break;\n      default:\n        break;\n    }\n    return body;\n  }\n\n  function onSubmit(content: FeedbackContent) {\n    setSendingFeedback(true);\n    client\n      .sendFeedbackMailsUsingPOST({\n        from: content.email!,\n        subject: getFeedbackTitle(),\n        description: getFeedbackEmailBody(content.description),\n        userName: content.name!,\n      })\n      .then(() => {\n        setSentFeedback(true);\n      })\n      .catch(e => {\n        notifyError(e);\n      })\n      .finally(() => {\n        setSendingFeedback(false);\n      });\n  }\n\n  function onHideModal() {\n    setSendingFeedback(false);\n    setSentFeedback(false);\n    props.onHideModal();\n  }\n\n  return (\n    <Modal show={props.showModal} onHide={onHideModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>{modalTitle}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <If condition={sendingFeedback}>\n          <Then>\n            <LoadingIndicator isLoading={true} />\n          </Then>\n          <Else>\n            <If condition={sentFeedback}>\n              <Then>\n                Thank you. We have sent your feedback to the {ONCOKB_TM} team.\n              </Then>\n              <Else>\n                Thank you for using the feedback feature. Please provide the\n                following information\n                <FeedbackForm {...props.feedback} onSubmit={onSubmit} />\n              </Else>\n            </If>\n          </Else>\n        </If>\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { Location } from 'history';\nimport { RouterStore } from 'mobx-react-router';\n\nexport interface IFdaModal {\n  routing: RouterStore;\n  show: boolean;\n  onHide: () => void;\n  lastLocation: Location;\n}\n\nconst LEAVING_PAGE_MESSAGE =\n  'You are now leaving the FDA-recognized portion of this page.';\n\nexport const FdaModal: React.FunctionComponent<IFdaModal> = props => {\n  function confirmLeavingFdaTab() {\n    if (props.lastLocation) {\n      props.routing.history.push(\n        props.lastLocation.pathname + props.lastLocation.hash\n      );\n    }\n    if (props.onHide) {\n      props.onHide();\n    }\n  }\n\n  return (\n    <Modal show={props.show} onHide={confirmLeavingFdaTab}>\n      <Modal.Body>{LEAVING_PAGE_MESSAGE}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={confirmLeavingFdaTab}>\n          OK\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport { observer } from 'mobx-react';\nimport AppRouts from 'app/routes/routes';\nimport { isAuthorized } from 'app/shared/auth/AuthUtils';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport { Stores } from 'app/App';\nimport { Prompt, withRouter } from 'react-router';\nimport {\n  AUTHORITIES,\n  DEFAULT_FEEDBACK_ANNOTATION,\n  NOTIFICATION_TIMEOUT_MILLISECONDS,\n  PAGE_ROUTE,\n} from 'app/config/constants';\nimport { ToastContainer } from 'react-toastify';\nimport { computed } from 'mobx';\nimport { FeedbackModal } from './components/feedback/FeedbackModal';\nimport { FdaModal } from 'app/components/fdaModal/FdaModal';\nimport { Location } from 'history';\nimport autobind from 'autobind-decorator';\n\nexport type IMainPage = Stores;\n\n// @ts-ignore\n@withRouter\n@observer\nclass Main extends React.Component<IMainPage> {\n  @computed get feedbackAnnotation() {\n    const annotation = DEFAULT_FEEDBACK_ANNOTATION;\n    if (this.props.authenticationStore.account) {\n      annotation.email = this.props.authenticationStore.account.email;\n      annotation.name = `${this.props.authenticationStore.account.firstName} ${this.props.authenticationStore.account.lastName}`;\n    }\n    return {\n      ...annotation,\n      ...this.props.appStore.feedbackAnnotation,\n    };\n  }\n\n  private FOOTER_ROUTE_EXCLUSION = [PAGE_ROUTE.FAQ_ACCESS];\n\n  @computed\n  get showFooter() {\n    return !this.FOOTER_ROUTE_EXCLUSION.includes(\n      this.props.routing.location.pathname as PAGE_ROUTE\n    );\n  }\n\n  @autobind\n  handleBlockedNavigation(nextLocation: Location): boolean {\n    // The clause of includes FDA is very broad. This is used for the Link component.\n    if (\n      this.props.appStore.inFdaRecognizedContent &&\n      !(\n        this.props.appStore.toFdaRecognizedContent ||\n        (nextLocation.hash || '').includes('FDA')\n      )\n    ) {\n      this.props.appStore.showFdaModal = true;\n    }\n    return true;\n  }\n\n  @autobind\n  afterConfirm() {\n    this.props.appStore.showFdaModal = false;\n    this.props.appStore.inFdaRecognizedContent = false;\n    this.props.appStore.toFdaRecognizedContent = false;\n  }\n\n  public render() {\n    return (\n      <div className=\"Main\">\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={NOTIFICATION_TIMEOUT_MILLISECONDS}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <Header\n          isUserAuthenticated={\n            this.props.authenticationStore.isUserAuthenticated\n          }\n          isAdmin={\n            this.props.authenticationStore.isUserAuthenticated &&\n            isAuthorized(\n              this.props.authenticationStore.account\n                ? this.props.authenticationStore.account.authorities\n                : [],\n              [AUTHORITIES.ADMIN]\n            )\n          }\n          ribbonEnv={''}\n          isInProduction={false}\n          isSwaggerEnabled\n          windowStore={this.props.windowStore}\n          authStore={this.props.authenticationStore}\n          routing={this.props.routing}\n          appStore={this.props.appStore}\n        />\n        <div className={'view-wrapper'}>\n          <Container fluid={!this.props.windowStore.isXLscreen}>\n            <AppRouts\n              authenticationStore={this.props.authenticationStore}\n              appStore={this.props.appStore}\n              routing={this.props.routing}\n            />\n          </Container>\n        </div>\n        <FeedbackModal\n          showModal={this.props.appStore.showFeedbackFormModal}\n          feedback={this.feedbackAnnotation}\n          onHideModal={() => {\n            this.props.appStore.showFeedbackFormModal = false;\n            this.props.appStore.feedbackAnnotation = undefined;\n          }}\n        />\n        <Prompt\n          when={this.props.appStore.inFdaRecognizedContent}\n          message={this.handleBlockedNavigation}\n        />\n        <FdaModal\n          routing={this.props.routing}\n          show={this.props.appStore.showFdaModal}\n          onHide={this.afterConfirm}\n          lastLocation={this.props.appStore.fdaRedirectLastLocation}\n        />\n        {this.showFooter && (\n          <Footer\n            lastDataUpdate={this.props.appStore.appInfo.result.dataVersion.date}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import { action, observable } from 'mobx';\nimport { remoteData } from 'cbioportal-frontend-commons';\nimport apiClient from 'app/shared/api/oncokbClientInstance';\nimport { OncoKBInfo } from 'app/shared/api/generated/OncoKbAPI';\nimport { MainNumber } from 'app/shared/api/generated/OncoKbPrivateAPI';\nimport oncokbPrivateClient from 'app/shared/api/oncokbPrivateClientInstance';\nimport {\n  DEFAULT_FEEDBACK_ANNOTATION,\n  DEFAULT_MAIN_NUMBERS,\n  DEFAULT_ONCOKB_INFO,\n} from 'app/config/constants';\nimport { Feedback } from 'app/components/feedback/types';\nimport autobind from 'autobind-decorator';\nimport { Location } from 'history';\n\nexport interface IAppConfig {\n  ribbonEnv: string;\n  inProduction: boolean;\n  isSwaggerEnabled: boolean;\n}\n\nclass AppStore {\n  @observable ribbonEnv = '';\n  @observable userMessageBannerEnabled = false;\n  @observable inProduction = true;\n  @observable isSwaggerEnabled = false;\n  @observable recaptchaVerified = false;\n  @observable showFeedbackFormModal = false;\n  @observable inFdaRecognizedContent = false;\n  @observable toFdaRecognizedContent = false;\n  @observable showFdaModal = false;\n  @observable fdaRedirectLastLocation: Location;\n  @observable feedbackAnnotation: Feedback | undefined;\n\n  readonly appInfo = remoteData<OncoKBInfo>({\n    invoke: () => apiClient.infoGetUsingGET({}),\n    default: DEFAULT_ONCOKB_INFO,\n  });\n\n  readonly mainNumbers = remoteData<MainNumber>({\n    await: () => [],\n    async invoke() {\n      return oncokbPrivateClient.utilsNumbersMainGetUsingGET({});\n    },\n    default: DEFAULT_MAIN_NUMBERS,\n  });\n\n  constructor(props?: IAppConfig) {\n    if (props) {\n      this.ribbonEnv = props.ribbonEnv;\n      this.inProduction = props.inProduction;\n      this.isSwaggerEnabled = props.isSwaggerEnabled;\n    }\n  }\n}\n\nexport default AppStore;\n","import { action, observable, computed } from 'mobx';\nimport _ from 'lodash';\nimport autobind from 'autobind-decorator';\nimport { GRID_BREAKPOINTS, PAGE_ROUTE } from 'app/config/constants';\nimport React from 'react';\n\nexport interface IWindowSize {\n  width: number;\n  height: number;\n}\n\nclass WindowStore {\n  @observable size: IWindowSize;\n  private handleWindowResize = _.debounce(this.setWindowSize, 200);\n  private windowObj: any;\n  private onClickEvents: { (event: any): void }[] = [];\n\n  constructor() {\n    this.windowObj = window;\n    this.setWindowSize();\n    this.windowObj.addEventListener('resize', this.handleWindowResize);\n    this.windowObj.addEventListener('click', (event: any) => {\n      this.onClickEvents.forEach(item => item(event));\n    });\n  }\n\n  public registerOnClickEvent(func: { (event: any): void }) {\n    this.onClickEvents.push(func);\n  }\n\n  @autobind\n  @action\n  private setWindowSize() {\n    this.size = {\n      width: this.windowObj.innerWidth,\n      height: this.windowObj.innerHeight,\n    };\n  }\n\n  @computed\n  get isXLscreen() {\n    return this.size.width >= GRID_BREAKPOINTS.XL;\n  }\n\n  @computed\n  get isLargeScreen() {\n    return this.size.width >= GRID_BREAKPOINTS.LG;\n  }\n\n  @computed\n  get isMDScreen() {\n    return this.size.width >= GRID_BREAKPOINTS.MD;\n  }\n\n  @computed\n  get isSMScreen() {\n    return this.size.width >= GRID_BREAKPOINTS.SM;\n  }\n\n  @computed\n  get baseUrl() {\n    return window.location.origin;\n  }\n}\n\nexport default WindowStore;\n","import * as React from 'react';\nimport ReactGA from 'react-ga4';\n\nimport Main from './Main';\nimport AppStore, { IAppConfig } from 'app/store/AppStore';\nimport AuthenticationStore from 'app/store/AuthenticationStore';\nimport { Provider, observer } from 'mobx-react';\nimport WindowStore from 'app/store/WindowStore';\nimport { RouterStore, SynchronizedHistory } from 'mobx-react-router';\nimport { Router } from 'react-router';\nimport { syncHistoryWithStore } from 'mobx-react-router';\nimport { createBrowserHistory } from 'history';\nimport DocumentTitle from 'react-document-title';\nimport { PAGE_TITLE, PAGE_ROUTE } from 'app/config/constants';\nimport { action } from 'mobx';\nimport autobind from 'autobind-decorator';\nimport { getPageTitle } from 'app/shared/utils/Utils';\nimport { setRecaptchaToken } from './indexUtils';\nimport { AppConfig } from 'app/appConfig';\n\nexport type Stores = {\n  appStore: AppStore;\n  authenticationStore: AuthenticationStore;\n  windowStore: WindowStore;\n  routing: RouterStore;\n};\n\n@observer\nclass App extends React.Component {\n  readonly stores: Stores = {\n    appStore: new AppStore(),\n    authenticationStore: new AuthenticationStore(),\n    windowStore: new WindowStore(),\n    routing: new RouterStore(),\n  };\n  public recaptchaRef: any = React.createRef();\n  public recaptchaRendered = false;\n  public recaptchaToken: string;\n\n  constructor(props: IAppConfig) {\n    super(props);\n    this.stores.windowStore.registerOnClickEvent(this.executeRecaptcha);\n  }\n\n  @autobind\n  @action\n  public executeRecaptcha() {\n    if (\n      !this.stores.appStore.recaptchaVerified &&\n      !this.stores.authenticationStore.isUserAuthenticated &&\n      this.stores.routing.location.pathname !== PAGE_ROUTE.HOME &&\n      this.recaptchaRef &&\n      this.recaptchaRendered\n    ) {\n      this.recaptchaRef.current.execute();\n    }\n  }\n\n  @autobind\n  @action\n  onRecaptchaVerify(value: string) {\n    const response = this.recaptchaRef.current.getResponse();\n    response.then((token: string) => {\n      setRecaptchaToken(token);\n      this.recaptchaToken = token;\n    });\n    this.stores.appStore.recaptchaVerified = true;\n  }\n\n  @autobind\n  @action\n  onRecaptchaRender() {\n    this.recaptchaRendered = true;\n    this.executeRecaptcha();\n  }\n\n  componentWillUnmount(): void {\n    this.stores.authenticationStore.destroy();\n  }\n\n  // We need to deal with old links that use hash sign before each page\n  checkHash(history: SynchronizedHistory) {\n    if (\n      history.location.hash &&\n      history.location.hash.startsWith('#/') &&\n      history.location.pathname === '/'\n    ) {\n      history.replace(history.location.hash.substring(2));\n    }\n  }\n\n  public render() {\n    const browserHistory = createBrowserHistory();\n    const history = syncHistoryWithStore(browserHistory, this.stores.routing);\n\n    this.checkHash(history);\n\n    // Install Google Analytics 4 if GA project id is configured on server side\n    if (AppConfig.serverConfig?.googleAnalyticsProjectId) {\n      ReactGA.initialize(AppConfig.serverConfig.googleAnalyticsProjectId);\n    }\n\n    return (\n      <DocumentTitle title={getPageTitle(PAGE_TITLE.HOME, false)}>\n        <>\n          {\n            <Provider {...this.stores}>\n              <Router history={history}>\n                <Main {...this.stores} />\n              </Router>\n            </Provider>\n          }\n        </>\n      </DocumentTitle>\n    );\n  }\n}\n\nexport default App;\n","import 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport 'typeface-open-sans';\nimport * as superagent from 'superagent';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport * as Sentry from '@sentry/react';\n\nimport 'font-awesome/css/font-awesome.css';\nimport './index.scss';\nimport 'react-table/react-table.css';\nimport 'oncokb-styles/dist/oncokb.css';\nimport 'cbioportal-frontend-commons/dist/styles.css';\nimport 'react-responsive-tabs/styles.css';\nimport 'react-mutation-mapper/dist/styles.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  assignPublicToken,\n  getStoredToken,\n  getPublicWebsiteToken,\n  getStoredRecaptchaToken,\n} from 'app/indexUtils';\nimport { UNAUTHORIZED_ALLOWED_PATH } from 'app/config/constants';\nimport _ from 'lodash';\nimport { AppConfig, AppProfile } from 'app/appConfig';\n\nassignPublicToken();\n\n// Manually attach token to\n// @ts-ignore\nconst query = superagent.Request.prototype.query;\n// @ts-ignore\nconst end = superagent.Request.prototype.end;\n\nconst WEBSITE_RELOAD_TIMES_KEY = 'oncokb-website-reload-times';\nconst WEBSITE_RELOAD_TIMES_THRESHOLD = 10;\n\n// @ts-ignore\nsuperagent.Request.prototype.query = function (queryParameters: any) {\n  const token = getStoredToken();\n  if (token) {\n    this.set('Authorization', `Bearer ${token}`);\n    if (this.url.endsWith('sqlDump')) {\n      this.responseType('blob');\n    }\n  }\n  const recaptchaToken = getStoredRecaptchaToken();\n  if (recaptchaToken) {\n    this.set('g-recaptcha-response', `${recaptchaToken}`);\n  }\n\n  return query.call(this, queryParameters);\n};\n\n// @ts-ignore\nsuperagent.Request.prototype.end = function (callback) {\n  return end.call(this, (error: any, response: any) => {\n    // the swagger coden only returns response body\n    // But in the case of the text/plain, the response should come from the response.text\n    if (\n      response &&\n      response.statusCode === 200 &&\n      response.headers &&\n      response.headers['content-type'] &&\n      ['text/plain'].some(item =>\n        response.headers['content-type'].includes(item)\n      )\n    ) {\n      response.body = response.text;\n    }\n\n    // If the code is 401, which means the token has expired, we need to refresh the page\n    // But in certain pages, 401 is a valid response\n    if (\n      response &&\n      response.statusCode === 401 &&\n      AppConfig.serverConfig.token &&\n      AppConfig.serverConfig.appProfile === AppProfile.PROD &&\n      response.req &&\n      !_.some(UNAUTHORIZED_ALLOWED_PATH, path =>\n        window.location.pathname.endsWith(path)\n      )\n    ) {\n      const currentDate = new Date();\n\n      const STORAGE_KEY = `${WEBSITE_RELOAD_TIMES_KEY}-${currentDate.getFullYear()}-${currentDate.getMonth()}-${currentDate.getDay()}-${currentDate.getHours()}`;\n      if (localStorage.getItem(STORAGE_KEY) == null) {\n        localStorage.setItem(STORAGE_KEY, '0');\n      }\n      if (\n        Number(localStorage.getItem(STORAGE_KEY)) <=\n        WEBSITE_RELOAD_TIMES_THRESHOLD\n      ) {\n        const newIncrement = Number(localStorage.getItem(STORAGE_KEY)) + 1;\n        localStorage.setItem(STORAGE_KEY, `${newIncrement}`);\n        window.location.reload();\n      } else {\n        if (AppConfig.serverConfig?.sentryProjectId) {\n          // Send an error to sentry\n          Sentry.captureException(\n            new Error(\n              `The user cannot reload the page with the newest public website token. The website has retried ${WEBSITE_RELOAD_TIMES_THRESHOLD} time(s). The token currently used is ${getPublicWebsiteToken()}`\n            )\n          );\n        }\n      }\n    }\n    callback(error, response);\n  });\n};\n\nif (AppConfig.serverConfig?.sentryProjectId) {\n  Sentry.init({\n    // Adjust tracesSampleRate for production.\n    // For more information, please see https://docs.sentry.io/platforms/javascript/guides/react/configuration/options/#tracing-options\n    dsn: AppConfig.serverConfig.sentryProjectId,\n    integrations: [new Sentry.Replay()],\n    environment: 'production',\n    tracesSampleRate: 0.5,\n    replaysOnErrorSampleRate: 1.0,\n    ignoreErrors: [\n      // the following errors are for this project only\n      'ResizeObserver loop limit exceeded',\n      'Request has been terminated',\n      'Failed to fetch all transcripts',\n      'Non-Error promise rejection captured',\n\n      // the following are suggested ignores by the community coming from https://gist.github.com/Chocksy/e9b2cdd4afc2aadc7989762c4b8b495a\n      // Random plugins/extensions\n      'top.GLOBALS',\n      // See: http://blog.errorception.com/2012/03/tale-of-unfindable-js-error.html\n      'originalCreateNotification',\n      'canvas.contentDocument',\n      'MyApp_RemoveAllHighlights',\n      'http://tt.epicplay.com',\n      \"Can't find variable: ZiteReader\",\n      'jigsaw is not defined',\n      'ComboSearch is not defined',\n      'http://loading.retry.widdit.com/',\n      'atomicFindClose',\n      // Facebook borked\n      'fb_xd_fragment',\n      // ISP \"optimizing\" proxy - `Cache-Control: no-transform` seems to reduce this. (thanks @acdha)\n      // See http://stackoverflow.com/questions/4113268/how-to-stop-javascript-injection-from-vodafone-proxy\n      'bmi_SafeAddOnload',\n      'EBCallBackMessageReceived',\n      // See http://toolbar.conduit.com/Developer/HtmlAndGadget/Methods/JSInjection.aspx\n      'conduitPage',\n      // Generic error code from errors outside the security sandbox\n      // You can delete this if using raven.js > 1.0, which ignores these automatically.\n      'Script error.',\n      // Avast extension error\n      '_avast_submit',\n    ],\n    // Skip the common browser extension ad 3rd party script. List from https://gist.github.com/Chocksy/e9b2cdd4afc2aadc7989762c4b8b495a\n    denyUrls: [\n      new RegExp('.*localhost.*'),\n      // Google Adsense\n      /pagead\\/js/i,\n      // Facebook flakiness\n      /graph\\.facebook\\.com/i,\n      // Facebook blocked\n      /connect\\.facebook\\.net\\/en_US\\/all\\.js/i,\n      // Woopra flakiness\n      /eatdifferent\\.com\\.woopra-ns\\.com/i,\n      /static\\.woopra\\.com\\/js\\/woopra\\.js/i,\n      // Chrome extensions\n      /extensions\\//i,\n      /^chrome:\\/\\//i,\n      // Other plugins\n      /127\\.0\\.0\\.1:4001\\/isrunning/i, // Cacaoweb\n      /webappstoolbarba\\.texthelp\\.com\\//i,\n      /metrics\\.itunes\\.apple\\.com\\.edgesuite\\.net\\//i,\n    ],\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\n// registerServiceWorker();\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../../node_modules/stripcomment-loader/index.js!./listGroupItem.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./SearchOption.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./CompanyDetailsPage.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../node_modules/stripcomment-loader/index.js!./citationListGroupItem.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./GenePage.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./styles.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./main.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./LevelButton.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../node_modules/stripcomment-loader/index.js!./Footer.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./HighlightLinkButton.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./DividerWithInfo.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./AlterationPage.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./styles.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./styles.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./styles.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./DownloadButton.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./index.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../../node_modules/stripcomment-loader/index.js!./main.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./index.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./licenseAgreement.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-1!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--10-3!../../../../../../node_modules/stripcomment-loader/index.js!./main.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".styles-module__centered__3vHdw{position:fixed;left:50%;top:50%;z-index:10000;text-align:center;transform:translate(-50%, -50%);animation:styles-module__fadein__2FPY8 1s;border-radius:10px}.hiddenByPosition .styles-module__centered__3vHdw{display:none !important}.styles-module__centered__3vHdw>.sk-spinner{background:#0968c3;padding:15px;border-radius:50%;height:115px;width:115px}.styles-module__centered__3vHdw .styles-module__color__2Wf98>div{color:#fff !important}@keyframes styles-module__fadein__2FPY8{from{opacity:0}to{opacity:1}}.styles-module__centered-with-children__2ag18{width:600px}.styles-module__color__2Wf98>div{color:#0968c3 !important}.styles-module__small__r-4QJ>div{width:3px !important;margin:0 2px !important;height:12px !important}.styles-module__extraSmall__39KDU>div{width:1px !important;margin:0 2px !important;height:10px !important}.styles-module__big__wUrJa>div{height:75px !important;width:6px !important;margin:4px !important}.styles-module__progressUI__2VBTV{position:absolute;top:140px;left:50%;transform:translateX(-50%);background:#fff;border-radius:20px;padding:15px}.styles-module__progressUI__2VBTV:empty{display:none}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"centered\": \"styles-module__centered__3vHdw\",\n\t\"fadein\": \"styles-module__fadein__2FPY8\",\n\t\"color\": \"styles-module__color__2Wf98\",\n\t\"centered-with-children\": \"styles-module__centered-with-children__2ag18\",\n\t\"small\": \"styles-module__small__r-4QJ\",\n\t\"extraSmall\": \"styles-module__extraSmall__39KDU\",\n\t\"big\": \"styles-module__big__wUrJa\",\n\t\"progressUI\": \"styles-module__progressUI__2VBTV\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".Footer-module__footer__ZY65W{width:100%;padding:10px 0;color:#fff;background-color:#064785;position:absolute;bottom:0}.Footer-module__footer__ZY65W a{color:white}.Footer-module__footer__ZY65W a:hover{color:white}.Footer-module__footerAList__8tWHj>a{color:white;border-right:0.5px solid #fff;padding:0 5px}.Footer-module__footerAList__8tWHj>a:last-child{border:0}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"footer\": \"Footer-module__footer__ZY65W\",\n\t\"footerAList\": \"Footer-module__footerAList__8tWHj\"\n};\nmodule.exports = exports;\n"],"sourceRoot":""}